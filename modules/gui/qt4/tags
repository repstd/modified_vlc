!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABOUT_H	ui/about.h	12;"	d
ABS	remoteControlServer.cpp	2103;"	d	file:
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/ylwang\/msvc\/vlc-2.0.6\/autotools\/missing aclocal-1.14$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACTION_ALWAYS_ENABLED	menus.hpp	/^        ACTION_ALWAYS_ENABLED = 0x1,$/;"	e	enum:VLCMenuBar::actionflag
ACTION_DELETE_ON_REBUILD	menus.hpp	/^        ACTION_DELETE_ON_REBUILD = 0x8$/;"	e	enum:VLCMenuBar::actionflag
ACTION_MANAGED	menus.hpp	/^        ACTION_MANAGED = 0x2, \/* managed using EnableStatic(bool)? *\/$/;"	e	enum:VLCMenuBar::actionflag
ACTION_NONE	menus.hpp	/^        ACTION_NONE = 0x0,$/;"	e	enum:VLCMenuBar::actionflag
ACTION_NO_CLEANUP	menus.hpp	/^        ACTION_NO_CLEANUP = 0x4,$/;"	e	enum:VLCMenuBar::actionflag
ACTION_STATIC	menus.hpp	/^        ACTION_STATIC = 0x6, \/* legacy shortcut *\/$/;"	e	enum:VLCMenuBar::actionflag
ADDMEDIATYPES	dialogs/vlm.cpp	72;"	d	file:
ADDMEDIATYPES	dialogs/vlm.cpp	76;"	d	file:
ADD_ACODEC	components/sout/profile_selector.cpp	282;"	d	file:
ADD_ACODEC	components/sout/profile_selector.cpp	292;"	d	file:
ADD_ACTION	components/playlist/selector.hpp	/^    ADD_ACTION,$/;"	e	enum:ItemAction
ADD_CATEGORY	components/simple_preferences.cpp	72;"	d	file:
ADD_CATEGORY	components/simple_preferences.cpp	99;"	d	file:
ADD_EXT_FILTER	dialogs_provider.hpp	47;"	d
ADD_ICON	components/playlist/playlist_model.cpp	80;"	d	file:
ADD_ICON	components/playlist/playlist_model.cpp	90;"	d	file:
ADD_META	components/info_panels.cpp	166;"	d	file:
ADD_META	components/info_panels.cpp	74;"	d	file:
ADD_SAMPLERATE	components/sout/profile_selector.cpp	305;"	d	file:
ADD_SAMPLERATE	components/sout/profile_selector.cpp	311;"	d	file:
ADD_SCALING	components/sout/profile_selector.cpp	294;"	d	file:
ADD_SCALING	components/sout/profile_selector.cpp	303;"	d	file:
ADD_SCODEC	components/sout/profile_selector.cpp	313;"	d	file:
ADD_SCODEC	components/sout/profile_selector.cpp	316;"	d	file:
ADD_VCODEC	components/sout/profile_selector.cpp	265;"	d	file:
ADD_VCODEC	components/sout/profile_selector.cpp	280;"	d	file:
ADVANCED_CONTROLLER	components/controller.hpp	/^    ADVANCED_CONTROLLER,$/;"	e	enum:buttonType_e
ADVANCED_OPTIONS_LONGTEXT	qt4.cpp	123;"	d	file:
ADVANCED_OPTIONS_TEXT	qt4.cpp	122;"	d	file:
ADVANCED_PREFS_LONGTEXT	qt4.cpp	94;"	d	file:
ADVANCED_PREFS_TEXT	qt4.cpp	93;"	d	file:
ADV_TB_DEFAULT	components/controller.hpp	39;"	d
ALBUM_ART_ALL	dialogs/firstrun.cpp	45;"	d	file:
ALBUM_ART_WHEN_ASKED	dialogs/firstrun.cpp	44;"	d	file:
ALIASES	Makefile	/^ALIASES =  cvlc rvlc svlc qvlc$/;"	m
ALSA_CFLAGS	Makefile	/^ALSA_CFLAGS = $/;"	m
ALSA_LIBS	Makefile	/^ALSA_LIBS = $/;"	m
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CFLAGS	Makefile	/^AM_CFLAGS = $/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = -DMODULE_NAME=$(MODULE_NAME) \\$/;"	m
AM_CXXFLAGS	Makefile	/^AM_CXXFLAGS = $/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_LDFLAGS	Makefile	/^AM_LDFLAGS = -rpath '$(libvlcdir)' \\$/;"	m
AM_LIBADD	Makefile	/^AM_LIBADD = $(LTLIBVLCCORE) $(top_builddir)\/compat\/libcompat.la $(LIBS_plugin)$/;"	m
AM_OBJCFLAGS	Makefile	/^AM_OBJCFLAGS = $/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CXX	Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXXLD	Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
APPCOMMAND_BASS_BOOST	main_interface_win32.cpp	44;"	d	file:
APPCOMMAND_BASS_DOWN	main_interface_win32.cpp	43;"	d	file:
APPCOMMAND_BASS_UP	main_interface_win32.cpp	45;"	d	file:
APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE	main_interface_win32.cpp	51;"	d	file:
APPCOMMAND_LAUNCH_MEDIA_SELECT	main_interface_win32.cpp	42;"	d	file:
APPCOMMAND_MEDIA_CHANNEL_DOWN	main_interface_win32.cpp	59;"	d	file:
APPCOMMAND_MEDIA_CHANNEL_UP	main_interface_win32.cpp	58;"	d	file:
APPCOMMAND_MEDIA_FAST_FORWARD	main_interface_win32.cpp	56;"	d	file:
APPCOMMAND_MEDIA_NEXTTRACK	main_interface_win32.cpp	38;"	d	file:
APPCOMMAND_MEDIA_PAUSE	main_interface_win32.cpp	54;"	d	file:
APPCOMMAND_MEDIA_PLAY	main_interface_win32.cpp	53;"	d	file:
APPCOMMAND_MEDIA_PLAY_PAUSE	main_interface_win32.cpp	41;"	d	file:
APPCOMMAND_MEDIA_PREVIOUSTRACK	main_interface_win32.cpp	39;"	d	file:
APPCOMMAND_MEDIA_RECORD	main_interface_win32.cpp	55;"	d	file:
APPCOMMAND_MEDIA_REWIND	main_interface_win32.cpp	57;"	d	file:
APPCOMMAND_MEDIA_STOP	main_interface_win32.cpp	40;"	d	file:
APPCOMMAND_MICROPHONE_VOLUME_DOWN	main_interface_win32.cpp	49;"	d	file:
APPCOMMAND_MICROPHONE_VOLUME_MUTE	main_interface_win32.cpp	48;"	d	file:
APPCOMMAND_MICROPHONE_VOLUME_UP	main_interface_win32.cpp	50;"	d	file:
APPCOMMAND_MIC_ON_OFF_TOGGLE	main_interface_win32.cpp	52;"	d	file:
APPCOMMAND_TREBLE_DOWN	main_interface_win32.cpp	46;"	d	file:
APPCOMMAND_TREBLE_UP	main_interface_win32.cpp	47;"	d	file:
APPCOMMAND_VOLUME_DOWN	main_interface_win32.cpp	36;"	d	file:
APPCOMMAND_VOLUME_MUTE	main_interface_win32.cpp	35;"	d	file:
APPCOMMAND_VOLUME_UP	main_interface_win32.cpp	37;"	d	file:
AR	Makefile	/^AR = i586-mingw32msvc-ar$/;"	m
ARCH	Makefile	/^ARCH = i586$/;"	m
ART_RADIUS	components/playlist/views.cpp	40;"	d	file:
AS	Makefile	/^AS = i586-mingw32msvc-as$/;"	m
ASFMux	ui/profiles.h	/^    QRadioButton *ASFMux;$/;"	m	class:Ui_Profiles
ASM	Makefile	/^ASM = $/;"	m
ASPECT_RATIO_COMBOBOX	components/controller.hpp	/^    ASPECT_RATIO_COMBOBOX,$/;"	e	enum:buttonType_e
ATOB_ACTION	actions_manager.hpp	/^    ATOB_ACTION,$/;"	e	enum:actionType_e
ATOB_BUTTON	components/controller.hpp	/^    ATOB_BUTTON,$/;"	e	enum:buttonType_e
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/ylwang\/msvc\/vlc-2.0.6\/autotools\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/ylwang\/msvc\/vlc-2.0.6\/autotools\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/ylwang\/msvc\/vlc-2.0.6\/autotools\/missing automake-1.14$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = subdir-objects$/;"	m
AVCODEC_CFLAGS	Makefile	/^AVCODEC_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
AVCODEC_LIBS	Makefile	/^AVCODEC_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lavcodec -lvpx -lopenjpeg -lmp3lame -lgsm -lz -lpsapi -lshell32 -lavutil -lm  $/;"	m
AVFORMAT_CFLAGS	Makefile	/^AVFORMAT_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
AVFORMAT_LIBS	Makefile	/^AVFORMAT_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lavformat -lavcodec -lvpx -lopenjpeg -lmp3lame -lgsm -lz -lpsapi -lshell32 -lavutil -lm  $/;"	m
AVIMux	ui/profiles.h	/^    QRadioButton *AVIMux;$/;"	m	class:Ui_Profiles
AVSpin	components/extended_panels.hpp	/^    SyncWidget *AVSpin;$/;"	m	class:SyncControls
AWK	Makefile	/^AWK = mawk$/;"	m
Abort	qt4.cpp	/^static void Abort( void *obj )$/;"	f	file:
AboutDialog	dialogs/help.cpp	/^AboutDialog::AboutDialog( intf_thread_t *_p_intf)$/;"	f	class:AboutDialog
AboutDialog	dialogs/help.hpp	/^class AboutDialog : public QVLCDialog, public Singleton<AboutDialog>$/;"	c
AbstractController	components/controller.cpp	/^AbstractController::AbstractController( intf_thread_t * _p_i, QWidget *_parent )$/;"	f	class:AbstractController
AbstractController	components/controller.hpp	/^class AbstractController : public QFrame$/;"	c
AbstractPlViewItemDelegate	components/playlist/views.hpp	/^    AbstractPlViewItemDelegate( QWidget * parent = 0 ) : QStyledItemDelegate(parent) {}$/;"	f	class:AbstractPlViewItemDelegate
AbstractPlViewItemDelegate	components/playlist/views.hpp	/^class AbstractPlViewItemDelegate : public QStyledItemDelegate$/;"	c
ActionsManager	actions_manager.cpp	/^ActionsManager::ActionsManager( intf_thread_t * _p_i, QObject *_parent )$/;"	f	class:ActionsManager
ActionsManager	actions_manager.hpp	/^class ActionsManager : public QObject$/;"	c
AddBroadcast	dialogs/vlm.cpp	/^void VLMWrapper::AddBroadcast( const QString& name, const QString& input,$/;"	f	class:VLMWrapper
AddItemToPlaylist	components/playlist/ml_model.cpp	/^static void AddItemToPlaylist( int i_media_id, bool bPlay, media_library_t* p_ml,$/;"	f	file:
AddSchedule	dialogs/vlm.cpp	/^void VLMWrapper::AddSchedule( const QString& name, const QString& input,$/;"	f	class:VLMWrapper
AddVod	dialogs/vlm.cpp	/^void VLMWrapper::AddVod( const QString& name, const QString& input,$/;"	f	class:VLMWrapper
AdvControlsWidget	components/controller.cpp	/^AdvControlsWidget::AdvControlsWidget( intf_thread_t *_p_i, QWidget *_parent ) :$/;"	f	class:AdvControlsWidget
AdvControlsWidget	components/controller.hpp	/^class AdvControlsWidget : public AbstractController$/;"	c
AdvPrefsPanel	components/complete_preferences.cpp	/^AdvPrefsPanel::AdvPrefsPanel( QWidget *_parent ) : QWidget( _parent )$/;"	f	class:AdvPrefsPanel
AdvPrefsPanel	components/complete_preferences.cpp	/^AdvPrefsPanel::AdvPrefsPanel( intf_thread_t *_p_intf, QWidget *_parent,$/;"	f	class:AdvPrefsPanel
AdvPrefsPanel	components/complete_preferences.hpp	/^class AdvPrefsPanel : public QWidget$/;"	c
AnimatedIcon	util/customwidgets.cpp	/^AnimatedIcon::AnimatedIcon( QWidget *parent )$/;"	f	class:AnimatedIcon
AnimatedIcon	util/customwidgets.hpp	/^class AnimatedIcon : public QLabel$/;"	c
AspectRatioComboBox	components/controller_widget.hpp	/^    AspectRatioComboBox( intf_thread_t* _p_intf ) : p_intf( _p_intf )$/;"	f	class:AspectRatioComboBox
AspectRatioComboBox	components/controller_widget.hpp	/^class AspectRatioComboBox : public QComboBox$/;"	c
AtoBLoop	input_manager.cpp	/^void InputManager::AtoBLoop( float, int64_t i_time, int )$/;"	f	class:InputManager
AtoB_Button	components/controller_widget.hpp	/^class AtoB_Button : public QToolButton$/;"	c
AtoBchanged	input_manager.moc.cpp	/^void InputManager::AtoBchanged(bool _t1, bool _t2)$/;"	f	class:InputManager
AudioAutoMenuBuilder	menus.cpp	/^static int AudioAutoMenuBuilder( audio_output_t *p_object,$/;"	f	file:
AudioCommand	remoteControlServer.cpp	/^AudioCommand::AudioCommand(RCInvokerImpl* invoker) {$/;"	f	class:AudioCommand
AudioCommand	remoteControlServer.hpp	/^class AudioCommand: public RCCommandImpl {$/;"	c
AudioConfig	remoteControlServer.cpp	/^int AudioCommand::AudioConfig(intf_thread_t* p_intf,const char *psz_cmd,rc_value_t& newval, char* p_data) {$/;"	f	class:AudioCommand
AudioDown	actions_manager.cpp	/^void ActionsManager::AudioDown()$/;"	f	class:ActionsManager
AudioMenu	menus.cpp	/^QMenu *VLCMenuBar::AudioMenu( intf_thread_t *p_intf, QMenu * current )$/;"	f	class:VLCMenuBar
AudioMenu	menus.hpp	/^    static QMenu *AudioMenu( intf_thread_t *p_intf, QWidget *parent ) {$/;"	f	class:VLCMenuBar
AudioPopupMenu	menus.cpp	/^void VLCMenuBar::AudioPopupMenu( intf_thread_t *p_intf, bool show )$/;"	f	class:VLCMenuBar
AudioUp	actions_manager.cpp	/^void ActionsManager::AudioUp()$/;"	f	class:ActionsManager
AviRepair	ui/sprefs_input.h	/^    QComboBox *AviRepair;$/;"	m	class:Ui_SPrefsInputAndCodecs
BANDS	components/extended_panels.hpp	39;"	d
BAR_DADD	menus.cpp	1097;"	d	file:
BAR_DADD	menus.cpp	270;"	d	file:
BI	components/complete_preferences.cpp	66;"	d	file:
BI	components/complete_preferences.cpp	74;"	d	file:
BLURAY_CFLAGS	Makefile	/^BLURAY_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
BLURAY_LIBS	Makefile	/^BLURAY_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lbluray  $/;"	m
BONJOUR_CFLAGS	Makefile	/^BONJOUR_CFLAGS = $/;"	m
BONJOUR_LIBS	Makefile	/^BONJOUR_LIBS = $/;"	m
BRD	components/open_panels.hpp	/^        BRD$/;"	e	enum:DiscOpenPanel::DiscType
BROWSEBUTTON_H	util/buttons/BrowseButton.hpp	23;"	d
BUF_SIZE	ini/main.c	11;"	d	file:
BUILT_SOURCES	Makefile	/^BUILT_SOURCES = $(nodist_SOURCES_qt4)$/;"	m
BUTTONACT	qt4.hpp	97;"	d
BUTTON_MAX	components/controller.hpp	/^    BUTTON_MAX,$/;"	e	enum:buttonType_e
BUTTON_SET	qt4.hpp	99;"	d
BUTTON_SET_ACT	qt4.hpp	103;"	d
BUTTON_SET_ACT_I	qt4.hpp	111;"	d
BUTTON_SET_BAR	components/controller.cpp	205;"	d	file:
BUTTON_SET_BAR	components/controller.cpp	630;"	d	file:
BUTTON_SET_BAR2	components/controller.cpp	208;"	d	file:
BUTTON_SET_BAR2	components/controller.cpp	631;"	d	file:
BUTTON_SET_IMG	qt4.hpp	107;"	d
BackgroundWidget	components/interface_widgets.cpp	/^BackgroundWidget::BackgroundWidget( intf_thread_t *_p_i )$/;"	f	class:BackgroundWidget
BackgroundWidget	components/interface_widgets.hpp	/^class BackgroundWidget : public QWidget$/;"	c
Backward	util/buttons/BrowseButton.hpp	/^        Backward = 0,$/;"	e	enum:BrowseButton::Type
BasicCallbackImpl	remoteControlServer.hpp	/^        BasicCallbackImpl(){};$/;"	f	class:BasicCallbackImpl
BasicCallbackImpl	remoteControlServer.hpp	/^class BasicCallbackImpl {$/;"	c
BasicCommand	remoteControlServer.cpp	/^BasicCommand::BasicCommand(RCInvokerImpl* invoker) {$/;"	f	class:BasicCommand
BasicCommand	remoteControlServer.hpp	/^class BasicCommand:public RCCommandImpl {$/;"	c
BasicControl	remoteControlServer.cpp	/^int BasicCommand::BasicControl(intf_thread_t* p_intf, const char*psz_cmd, rc_value_t& newval, char* p_data) $/;"	f	class:BasicCommand
BlurredReflection	util/pictureflow.hpp	/^        BlurredReflection$/;"	e	enum:PictureFlow::ReflectionEffect
BookmarksChanged_Type	input_manager.hpp	/^    BookmarksChanged_Type,$/;"	e	enum:__anon1
BookmarksDialog	dialogs/bookmarks.cpp	/^BookmarksDialog::BookmarksDialog( intf_thread_t *_p_intf ):QVLCFrame( _p_intf )$/;"	f	class:BookmarksDialog
BookmarksDialog	dialogs/bookmarks.hpp	/^class BookmarksDialog : public QVLCFrame, public Singleton<BookmarksDialog>$/;"	c
BoolConfigControl	components/preferences_widgets.cpp	/^BoolConfigControl::BoolConfigControl( vlc_object_t *_p_this,$/;"	f	class:BoolConfigControl
BoolConfigControl	components/preferences_widgets.hpp	/^class BoolConfigControl : public VIntConfigControl$/;"	c
Both	components/interface_widgets.hpp	/^        Both$/;"	e	enum:TimeLabel::Display
BroadcastPanel	ui/streampanel.h	/^    class BroadcastPanel: public Ui_BroadcastPanel {};$/;"	c	namespace:Ui
BrowseButton	util/buttons/BrowseButton.cpp	/^BrowseButton::BrowseButton( QWidget* parent, BrowseButton::Type type )$/;"	f	class:BrowseButton
BrowseButton	util/buttons/BrowseButton.hpp	/^class BrowseButton : public RoundButton$/;"	c
BuildOldPanel	components/open_panels.cpp	/^inline void FileOpenPanel::BuildOldPanel()$/;"	f	class:FileOpenPanel
CACA_CFLAGS	Makefile	/^CACA_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
CACA_LIBS	Makefile	/^CACA_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lcaca  $/;"	m
CAP_SEARCH_ROLE	components/playlist/selector.hpp	/^    CAP_SEARCH_ROLE,$/;"	e	enum:__anon18
CATEGORY_TYPE	components/playlist/selector.hpp	/^    CATEGORY_TYPE,$/;"	e	enum:SelectorItemType
CB	dialogs/sout.cpp	116;"	d	file:
CB	dialogs/sout.cpp	88;"	d	file:
CC	Makefile	/^CC = i586-mingw32msvc-gcc -std=gnu99$/;"	m
CC	dialogs/sout.cpp	113;"	d	file:
CC	dialogs/sout.cpp	91;"	d	file:
CCAS	Makefile	/^CCAS = i586-mingw32msvc-gcc -std=gnu99$/;"	m
CCASDEPMODE	Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASFLAGS	Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CDROMDISK2_DRIVELETTERS	components/open_panels.cpp	414;"	d	file:
CFLAGS	Makefile	/^CFLAGS = -g -O2 -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include -mms-bitfields -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wmissing-prototypes -Wvolatile-register-var -Werror-implicit-function-declaration -pipe  -ffast-math -funroll-loops -fomit-frame-pointer -mtune=pentium2$/;"	m
CFLAGS_access_avio	Makefile	/^CFLAGS_access_avio =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_access_dv	Makefile	/^CFLAGS_access_dv = $/;"	m
CFLAGS_access_gnomevfs	Makefile	/^CFLAGS_access_gnomevfs = $/;"	m
CFLAGS_access_http	Makefile	/^CFLAGS_access_http = $/;"	m
CFLAGS_access_jack	Makefile	/^CFLAGS_access_jack = $/;"	m
CFLAGS_access_mtp	Makefile	/^CFLAGS_access_mtp = $/;"	m
CFLAGS_access_output_shout	Makefile	/^CFLAGS_access_output_shout =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_avcodec	Makefile	/^CFLAGS_avcodec =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
CFLAGS_avformat	Makefile	/^CFLAGS_avformat =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_bonjour	Makefile	/^CFLAGS_bonjour = $/;"	m
CFLAGS_caca	Makefile	/^CFLAGS_caca =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_cdda	Makefile	/^CFLAGS_cdda =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
CFLAGS_dbus	Makefile	/^CFLAGS_dbus = $/;"	m
CFLAGS_dc1394	Makefile	/^CFLAGS_dc1394 = $/;"	m
CFLAGS_deinterlace	Makefile	/^CFLAGS_deinterlace = $/;"	m
CFLAGS_dirac	Makefile	/^CFLAGS_dirac = $/;"	m
CFLAGS_dtstofloat32	Makefile	/^CFLAGS_dtstofloat32 =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/libdca   $/;"	m
CFLAGS_dvdnav	Makefile	/^CFLAGS_dvdnav =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
CFLAGS_dvdread	Makefile	/^CFLAGS_dvdread =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_flac	Makefile	/^CFLAGS_flac =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/FLAC -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_fluidsynth	Makefile	/^CFLAGS_fluidsynth =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_globalhotkeys	Makefile	/^CFLAGS_globalhotkeys = $/;"	m
CFLAGS_goom	Makefile	/^CFLAGS_goom =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_hildon	Makefile	/^CFLAGS_hildon = $/;"	m
CFLAGS_i420_yuy2_altivec	Makefile	/^CFLAGS_i420_yuy2_altivec = $/;"	m
CFLAGS_inhibit	Makefile	/^CFLAGS_inhibit = $/;"	m
CFLAGS_jack	Makefile	/^CFLAGS_jack = $/;"	m
CFLAGS_kate	Makefile	/^CFLAGS_kate =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_libass	Makefile	/^CFLAGS_libass =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/fribidi -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/freetype2  $/;"	m
CFLAGS_libbluray	Makefile	/^CFLAGS_libbluray =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_libmpeg2	Makefile	/^CFLAGS_libmpeg2 =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/mpeg2dec   $/;"	m
CFLAGS_libvlccore	Makefile	/^CFLAGS_libvlccore = $/;"	m
CFLAGS_linsys_sdi	Makefile	/^CFLAGS_linsys_sdi = $/;"	m
CFLAGS_lua	Makefile	/^CFLAGS_lua =  -I\/usr\/local\/include  $/;"	m
CFLAGS_memcpyaltivec	Makefile	/^CFLAGS_memcpyaltivec = $/;"	m
CFLAGS_motion	Makefile	/^CFLAGS_motion = $/;"	m
CFLAGS_mtp	Makefile	/^CFLAGS_mtp = $/;"	m
CFLAGS_mux_ogg	Makefile	/^CFLAGS_mux_ogg =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_ncurses	Makefile	/^CFLAGS_ncurses = $/;"	m
CFLAGS_notify	Makefile	/^CFLAGS_notify = $/;"	m
CFLAGS_ogg	Makefile	/^CFLAGS_ogg =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_opencv_example	Makefile	/^CFLAGS_opencv_example = $/;"	m
CFLAGS_opencv_wrapper	Makefile	/^CFLAGS_opencv_wrapper = $/;"	m
CFLAGS_opus	Makefile	/^CFLAGS_opus =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/opus   $/;"	m
CFLAGS_panoramix	Makefile	/^CFLAGS_panoramix = $/;"	m
CFLAGS_portaudio	Makefile	/^CFLAGS_portaudio =  -mthreads -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_postproc	Makefile	/^CFLAGS_postproc =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_samplerate	Makefile	/^CFLAGS_samplerate =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_schroedinger	Makefile	/^CFLAGS_schroedinger =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/schroedinger-1.0 -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/orc-0.4   $/;"	m
CFLAGS_sdl_image	Makefile	/^CFLAGS_sdl_image =  -D_GNU_SOURCE=1 -Dmain=SDL_main -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/SDL  $/;"	m
CFLAGS_sid	Makefile	/^CFLAGS_sid =  -DHAVE_UNIX -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
CFLAGS_speex	Makefile	/^CFLAGS_speex =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_sqlite	Makefile	/^CFLAGS_sqlite = $/;"	m
CFLAGS_stream_out_switcher	Makefile	/^CFLAGS_stream_out_switcher = $/;"	m
CFLAGS_svg	Makefile	/^CFLAGS_svg = $/;"	m
CFLAGS_swscale	Makefile	/^CFLAGS_swscale =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
CFLAGS_telepathy	Makefile	/^CFLAGS_telepathy = $/;"	m
CFLAGS_theora	Makefile	/^CFLAGS_theora =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_twolame	Makefile	/^CFLAGS_twolame =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_udev	Makefile	/^CFLAGS_udev = $/;"	m
CFLAGS_upnp	Makefile	/^CFLAGS_upnp =  -DPTW32_STATIC_LIB -DUPNP_STATIC_LIB -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/upnp   $/;"	m
CFLAGS_vcdx	Makefile	/^CFLAGS_vcdx = $/;"	m
CFLAGS_vorbis	Makefile	/^CFLAGS_vorbis =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   $/;"	m
CFLAGS_vout_ios	Makefile	/^CFLAGS_vout_ios = $/;"	m
CFLAGS_vout_sdl	Makefile	/^CFLAGS_vout_sdl =  -D_GNU_SOURCE=1 -Dmain=SDL_main -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/SDL  $/;"	m
CFLAGS_x264	Makefile	/^CFLAGS_x264 =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
CFLAGS_xcb_window	Makefile	/^CFLAGS_xcb_window = $/;"	m
CFLAGS_xml	Makefile	/^CFLAGS_xml =  -DLIBXML_STATIC -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/libxml2   $/;"	m
CFLAGS_xosd	Makefile	/^CFLAGS_xosd = $/;"	m
CFLAGS_zvbi	Makefile	/^CFLAGS_zvbi =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
CHAPTERSSPOTSIZE	util/input_slider.cpp	54;"	d	file:
CHECKMUX	components/sout/profile_selector.cpp	326;"	d	file:
CHECKMUX	components/sout/profile_selector.cpp	340;"	d	file:
CI	components/complete_preferences.cpp	115;"	d	file:
CI	components/complete_preferences.cpp	124;"	d	file:
CLEANFILES	Makefile	/^CLEANFILES = $(BUILT_SOURCES)$/;"	m
COLUMN_ALBUM	components/playlist/sorting.h	/^    COLUMN_ALBUM          = 0x0010,$/;"	e	enum:__anon15
COLUMN_ARTIST	components/playlist/sorting.h	/^    COLUMN_ARTIST         = 0x0004,$/;"	e	enum:__anon15
COLUMN_COVER	components/playlist/sorting.h	/^    COLUMN_COVER          = 0x0400,$/;"	e	enum:__anon15
COLUMN_DEFAULT	components/playlist/sorting.h	47;"	d
COLUMN_DESCRIPTION	components/playlist/sorting.h	/^    COLUMN_DESCRIPTION    = 0x0040,$/;"	e	enum:__anon15
COLUMN_DURATION	components/playlist/sorting.h	/^    COLUMN_DURATION       = 0x0002,$/;"	e	enum:__anon15
COLUMN_END	components/playlist/sorting.h	/^    COLUMN_END          = 0x0800$/;"	e	enum:__anon15
COLUMN_GENRE	components/playlist/sorting.h	/^    COLUMN_GENRE          = 0x0008,$/;"	e	enum:__anon15
COLUMN_NUMBER	components/playlist/sorting.h	/^    COLUMN_NUMBER         = 0x0100,$/;"	e	enum:__anon15
COLUMN_RATING	components/playlist/sorting.h	/^    COLUMN_RATING         = 0x0200,$/;"	e	enum:__anon15
COLUMN_TITLE	components/playlist/sorting.h	/^    COLUMN_TITLE          = 0x0001,$/;"	e	enum:__anon15
COLUMN_TRACK_NUMBER	components/playlist/sorting.h	/^    COLUMN_TRACK_NUMBER   = 0x0020,$/;"	e	enum:__anon15
COLUMN_URI	components/playlist/sorting.h	/^    COLUMN_URI            = 0x0080,$/;"	e	enum:__anon15
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPLETE	components/preferences_widgets.hpp	/^                 COMPLETE, \/\/ aka MPC$/;"	e	enum:InterfacePreviewWidget::enum_style
CONFIG_BOOL	components/simple_preferences.cpp	138;"	d	file:
CONFIG_BOOL	components/simple_preferences.cpp	734;"	d	file:
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_GENERIC	components/simple_preferences.cpp	125;"	d	file:
CONFIG_GENERIC	components/simple_preferences.cpp	733;"	d	file:
CONFIG_GENERIC_FILE	components/simple_preferences.cpp	173;"	d	file:
CONFIG_GENERIC_FILE	components/simple_preferences.cpp	730;"	d	file:
CONFIG_GENERIC_NO_BOOL	components/simple_preferences.cpp	164;"	d	file:
CONFIG_GENERIC_NO_BOOL	components/simple_preferences.cpp	731;"	d	file:
CONFIG_GENERIC_NO_UI	components/simple_preferences.cpp	149;"	d	file:
CONFIG_GENERIC_NO_UI	components/simple_preferences.cpp	732;"	d	file:
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONNECT	qt4.hpp	93;"	d
CONNECT_MAP	components/controller.cpp	200;"	d	file:
CONNECT_MAP	components/controller.cpp	627;"	d	file:
CONNECT_MAP_SET	components/controller.cpp	202;"	d	file:
CONNECT_MAP_SET	components/controller.cpp	629;"	d	file:
CONTRIB_DIR	Makefile	/^CONTRIB_DIR = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc$/;"	m
CONTROLS_ADVANCED	main_interface.hpp	/^    CONTROLS_ADVANCED = 0x4,$/;"	e	enum:__anon29
CONTROLS_HIDDEN	main_interface.hpp	/^    CONTROLS_HIDDEN   = 0x2,$/;"	e	enum:__anon29
CONTROLS_VISIBLE	main_interface.hpp	/^    CONTROLS_VISIBLE  = 0x1,$/;"	e	enum:__anon29
COPYRIGHT_MESSAGE	Makefile	/^COPYRIGHT_MESSAGE = Copyright © 1996-2013 VLC authors and VideoLAN$/;"	m
COPYRIGHT_YEARS	Makefile	/^COPYRIGHT_YEARS = 1996-2013$/;"	m
CPP	Makefile	/^CPP = i586-mingw32msvc-gcc -std=gnu99 -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = -I$(top_srcdir)\/include -I$(top_builddir)\/include  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include -D__USE_MINGW_ANSI_STDIO=1$/;"	m
CPPFLAGS_a52tofloat32	Makefile	/^CPPFLAGS_a52tofloat32 =  $/;"	m
CPPFLAGS_access_dv	Makefile	/^CPPFLAGS_access_dv = $/;"	m
CPPFLAGS_access_gnomevfs	Makefile	/^CPPFLAGS_access_gnomevfs = $/;"	m
CPPFLAGS_access_jack	Makefile	/^CPPFLAGS_access_jack = $/;"	m
CPPFLAGS_access_mtp	Makefile	/^CPPFLAGS_access_mtp = $/;"	m
CPPFLAGS_access_output_shout	Makefile	/^CPPFLAGS_access_output_shout = $/;"	m
CPPFLAGS_bonjour	Makefile	/^CPPFLAGS_bonjour = $/;"	m
CPPFLAGS_caca	Makefile	/^CPPFLAGS_caca = $/;"	m
CPPFLAGS_dc1394	Makefile	/^CPPFLAGS_dc1394 = $/;"	m
CPPFLAGS_decklink	Makefile	/^CPPFLAGS_decklink = $/;"	m
CPPFLAGS_dirac	Makefile	/^CPPFLAGS_dirac = $/;"	m
CPPFLAGS_directfb	Makefile	/^CPPFLAGS_directfb = $/;"	m
CPPFLAGS_dmo	Makefile	/^CPPFLAGS_dmo = $/;"	m
CPPFLAGS_dtstofloat32	Makefile	/^CPPFLAGS_dtstofloat32 = $/;"	m
CPPFLAGS_dvdread	Makefile	/^CPPFLAGS_dvdread = $/;"	m
CPPFLAGS_faad	Makefile	/^CPPFLAGS_faad = $/;"	m
CPPFLAGS_flac	Makefile	/^CPPFLAGS_flac = $/;"	m
CPPFLAGS_fluidsynth	Makefile	/^CPPFLAGS_fluidsynth = $/;"	m
CPPFLAGS_freetype	Makefile	/^CPPFLAGS_freetype =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/freetype2 -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/fribidi   -DHAVE_FRIBIDI$/;"	m
CPPFLAGS_goom	Makefile	/^CPPFLAGS_goom = $/;"	m
CPPFLAGS_jack	Makefile	/^CPPFLAGS_jack = $/;"	m
CPPFLAGS_kate	Makefile	/^CPPFLAGS_kate = $/;"	m
CPPFLAGS_libass	Makefile	/^CPPFLAGS_libass =  -DHAVE_FONTCONFIG$/;"	m
CPPFLAGS_libbluray	Makefile	/^CPPFLAGS_libbluray = $/;"	m
CPPFLAGS_libmpeg2	Makefile	/^CPPFLAGS_libmpeg2 = $/;"	m
CPPFLAGS_mpgatofixed32	Makefile	/^CPPFLAGS_mpgatofixed32 = $/;"	m
CPPFLAGS_mtp	Makefile	/^CPPFLAGS_mtp = $/;"	m
CPPFLAGS_mux_ogg	Makefile	/^CPPFLAGS_mux_ogg = $/;"	m
CPPFLAGS_notify	Makefile	/^CPPFLAGS_notify = $/;"	m
CPPFLAGS_ogg	Makefile	/^CPPFLAGS_ogg = $/;"	m
CPPFLAGS_opencv_example	Makefile	/^CPPFLAGS_opencv_example = $/;"	m
CPPFLAGS_opencv_wrapper	Makefile	/^CPPFLAGS_opencv_wrapper = $/;"	m
CPPFLAGS_opus	Makefile	/^CPPFLAGS_opus = $/;"	m
CPPFLAGS_portaudio	Makefile	/^CPPFLAGS_portaudio = $/;"	m
CPPFLAGS_qt4	Makefile	/^CPPFLAGS_qt4 = $/;"	m
CPPFLAGS_quicktime	Makefile	/^CPPFLAGS_quicktime = $/;"	m
CPPFLAGS_realvideo	Makefile	/^CPPFLAGS_realvideo = $/;"	m
CPPFLAGS_samplerate	Makefile	/^CPPFLAGS_samplerate = $/;"	m
CPPFLAGS_schroedinger	Makefile	/^CPPFLAGS_schroedinger = $/;"	m
CPPFLAGS_skins2	Makefile	/^CPPFLAGS_skins2 =  -I${top_srcdir}\/modules\/access\/zip\/unzip -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/freetype2 -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include   -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/fribidi   -DHAVE_FRIBIDI -U_OFF_T_ -U_off_t -Imodules\/gui\/skins2 -DWIN32_SKINS$/;"	m
CPPFLAGS_speex	Makefile	/^CPPFLAGS_speex = $/;"	m
CPPFLAGS_sqlite	Makefile	/^CPPFLAGS_sqlite = $/;"	m
CPPFLAGS_svg	Makefile	/^CPPFLAGS_svg = $/;"	m
CPPFLAGS_theora	Makefile	/^CPPFLAGS_theora = $/;"	m
CPPFLAGS_twolame	Makefile	/^CPPFLAGS_twolame =   -DLIBTWOLAME_STATIC$/;"	m
CPPFLAGS_udev	Makefile	/^CPPFLAGS_udev = $/;"	m
CPPFLAGS_upnp	Makefile	/^CPPFLAGS_upnp = $/;"	m
CPPFLAGS_vorbis	Makefile	/^CPPFLAGS_vorbis = $/;"	m
CPPFLAGS_x264	Makefile	/^CPPFLAGS_x264 = $/;"	m
CPPFLAGS_xml	Makefile	/^CPPFLAGS_xml = $/;"	m
CREATE_AND_ADD_TO_CAT	components/info_panels.cpp	513;"	d	file:
CREATE_AND_ADD_TO_CAT	components/info_panels.cpp	554;"	d	file:
CREATE_CATEGORY	components/info_panels.cpp	508;"	d	file:
CREATE_CATEGORY	components/info_panels.cpp	555;"	d	file:
CREATE_POPUP	menus.cpp	1095;"	d	file:
CREATE_POPUP	menus.cpp	774;"	d	file:
CREATE_TREE_ITEM	components/info_panels.cpp	503;"	d	file:
CREATE_TREE_ITEM	components/info_panels.cpp	556;"	d	file:
CS	components/sout/sout_widgets.cpp	465;"	d	file:
CS	components/sout/sout_widgets.cpp	84;"	d	file:
CS	dialogs/sout.cpp	114;"	d	file:
CS	dialogs/sout.cpp	90;"	d	file:
CT	components/sout/sout_widgets.cpp	466;"	d	file:
CT	components/sout/sout_widgets.cpp	83;"	d	file:
CT	dialogs/sout.cpp	115;"	d	file:
CT	dialogs/sout.cpp	89;"	d	file:
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CURTEXT	menus.cpp	1392;"	d	file:
CURTEXT	menus.cpp	1450;"	d	file:
CURVAL	menus.cpp	1391;"	d	file:
CURVAL	menus.cpp	1449;"	d	file:
CXX	Makefile	/^CXX = i586-mingw32msvc-g++$/;"	m
CXXCOMPILE	Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	Makefile	/^CXXCPP = i586-mingw32msvc-g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2 -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include -mms-bitfields -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wvolatile-register-var  -ffast-math -funroll-loops -fomit-frame-pointer$/;"	m
CXXFLAGS_dshow	Makefile	/^CXXFLAGS_dshow =  $/;"	m
CXXFLAGS_live555	Makefile	/^CXXFLAGS_live555 =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/liveMedia -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/groupsock -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/BasicUsageEnvironment -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/UsageEnvironment$/;"	m
CXXFLAGS_mkv	Makefile	/^CXXFLAGS_mkv =  $/;"	m
CXXFLAGS_mod	Makefile	/^CXXFLAGS_mod =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/libmodplug  $/;"	m
CXXFLAGS_projectm	Makefile	/^CXXFLAGS_projectm =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
CXXFLAGS_qt4	Makefile	/^CXXFLAGS_qt4 =  -DQT_NODLL -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/qt4 -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/qt4\/QtCore -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/qt4\/QtGui  $/;"	m
CXXFLAGS_skins2	Makefile	/^CXXFLAGS_skins2 =  -O2 -fno-rtti$/;"	m
CXXFLAGS_taglib	Makefile	/^CXXFLAGS_taglib = $/;"	m
CXXFLAGS_upnp	Makefile	/^CXXFLAGS_upnp =  -DPTW32_STATIC_LIB -DUPNP_STATIC_LIB -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/upnp  $/;"	m
CXXLD	Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CaC	components/simple_preferences.cpp	797;"	d	file:
CaC	components/simple_preferences.cpp	809;"	d	file:
CachingCustom	components/simple_preferences.hpp	/^    CachingCustom = 0,$/;"	e	enum:__anon20
CachingEvent_Type	input_manager.hpp	/^    CachingEvent_Type,$/;"	e	enum:__anon1
CachingHigh	components/simple_preferences.hpp	/^    CachingHigh   = 500,$/;"	e	enum:__anon20
CachingHigher	components/simple_preferences.hpp	/^    CachingHigher = 1000$/;"	e	enum:__anon20
CachingLow	components/simple_preferences.hpp	/^    CachingLow    = 200,$/;"	e	enum:__anon20
CachingLowest	components/simple_preferences.hpp	/^    CachingLowest = 100,$/;"	e	enum:__anon20
CachingNormal	components/simple_preferences.hpp	/^    CachingNormal = 300,$/;"	e	enum:__anon20
CaptureOpenPanel	components/open_panels.cpp	/^CaptureOpenPanel::CaptureOpenPanel( QWidget *_parent, intf_thread_t *_p_intf ) :$/;"	f	class:CaptureOpenPanel
CaptureOpenPanel	components/open_panels.hpp	/^class CaptureOpenPanel: public OpenPanel$/;"	c
Cdda	components/open_panels.hpp	/^        Cdda,$/;"	e	enum:DiscOpenPanel::DiscType
ChangeVFiltersString	components/extended_panels.cpp	/^static void ChangeVFiltersString( struct intf_thread_t *p_intf, const char *psz_name, bool b_add )$/;"	f	file:
CheckAndRun	dialogs/firstrun.hpp	/^        static void CheckAndRun( QWidget *_p, intf_thread_t *p_intf )$/;"	f	class:FirstRun
CheckMessage	remoteControlServer.cpp	/^char* CheckMessage(char* src) {$/;"	f
CheckTitle	menus.cpp	/^static bool CheckTitle( vlc_object_t *p_object, const char *psz_var )$/;"	f	file:
ClickLineEdit	util/searchlineedit.cpp	/^ClickLineEdit::ClickLineEdit( const QString &msg, QWidget *parent) : QLineEdit( parent )$/;"	f	class:ClickLineEdit
ClickLineEdit	util/searchlineedit.hpp	/^    ClickLineEdit( const QString &msg, QWidget *parent ) : QLineEdit( parent )$/;"	f	class:ClickLineEdit
ClickLineEdit	util/searchlineedit.hpp	/^class ClickLineEdit : public QLineEdit$/;"	c
Close	qt4.cpp	/^static void Close( vlc_object_t *p_this )$/;"	f	file:
ColorConfigControl	components/preferences_widgets.cpp	/^ColorConfigControl::ColorConfigControl( vlc_object_t *_p_this,$/;"	f	class:ColorConfigControl
ColorConfigControl	components/preferences_widgets.hpp	/^class ColorConfigControl : public VIntConfigControl$/;"	c
Compressor	components/extended_panels.cpp	/^Compressor::Compressor( intf_thread_t *_p_intf, QWidget *_parent )$/;"	f	class:Compressor
Compressor	components/extended_panels.hpp	/^class Compressor: public QWidget$/;"	c
ConfigControl	components/preferences_widgets.hpp	/^    ConfigControl( vlc_object_t *_p_this, module_config_t *_p_conf ) :$/;"	f	class:ConfigControl
ConfigControl	components/preferences_widgets.hpp	/^    ConfigControl( vlc_object_t *_p_this, module_config_t *_p_conf,$/;"	f	class:ConfigControl
ConfigControl	components/preferences_widgets.hpp	/^class ConfigControl : public QObject$/;"	c
ControlBroadcast	dialogs/vlm.cpp	/^void VLMWrapper::ControlBroadcast( const QString& name, int BroadcastStatus,$/;"	f	class:VLMWrapper
ControlBroadcastPause	dialogs/vlm.hpp	/^    ControlBroadcastPause,$/;"	e	enum:__anon7
ControlBroadcastPlay	dialogs/vlm.hpp	/^    ControlBroadcastPlay,$/;"	e	enum:__anon7
ControlBroadcastSeek	dialogs/vlm.hpp	/^    ControlBroadcastSeek$/;"	e	enum:__anon7
ControlBroadcastStop	dialogs/vlm.hpp	/^    ControlBroadcastStop,$/;"	e	enum:__anon7
ControlsWidget	components/controller.cpp	/^ControlsWidget::ControlsWidget( intf_thread_t *_p_i,$/;"	f	class:ControlsWidget
ControlsWidget	components/controller.hpp	/^class ControlsWidget : public AbstractController$/;"	c
ConvertDialog	dialogs/convert.cpp	/^ConvertDialog::ConvertDialog( QWidget *parent, intf_thread_t *_p_intf,$/;"	f	class:ConvertDialog
ConvertDialog	dialogs/convert.hpp	/^class ConvertDialog : public QVLCDialog$/;"	c
CoverArtLabel	components/interface_widgets.cpp	/^CoverArtLabel::CoverArtLabel( QWidget *parent, intf_thread_t *_p_i )$/;"	f	class:CoverArtLabel
CoverArtLabel	components/interface_widgets.hpp	/^class CoverArtLabel : public QLabel$/;"	c
CreateAndConnect	menus.cpp	/^void VLCMenuBar::CreateAndConnect( QMenu *menu, const char *psz_var,$/;"	f	class:VLCMenuBar
CreateChoicesMenu	menus.cpp	/^int VLCMenuBar::CreateChoicesMenu( QMenu *submenu, const char *psz_var,$/;"	f	class:VLCMenuBar
CreateExtDialog	dialogs/extensions.cpp	/^ExtensionDialog* ExtensionsDialogProvider::CreateExtDialog($/;"	f	class:ExtensionsDialogProvider
CreateWidget	dialogs/extensions.cpp	/^QWidget* ExtensionDialog::CreateWidget( extension_widget_t *p_widget )$/;"	f	class:ExtensionDialog
CuMRL	components/open_panels.cpp	1109;"	d	file:
CuMRL	components/open_panels.cpp	758;"	d	file:
DBUS_CFLAGS	Makefile	/^DBUS_CFLAGS = $/;"	m
DBUS_LIBS	Makefile	/^DBUS_LIBS = $/;"	m
DC1394_CFLAGS	Makefile	/^DC1394_CFLAGS = $/;"	m
DC1394_LIBS	Makefile	/^DC1394_LIBS = $/;"	m
DCA_CFLAGS	Makefile	/^DCA_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/libdca  $/;"	m
DCA_LIBS	Makefile	/^DCA_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ldca  $/;"	m
DCONNECT	qt4.hpp	95;"	d
DEBUG_QT	dialogs/open.cpp	38;"	d	file:
DECKBUTTONLAYOUT_H	util/buttons/DeckButtonsLayout.hpp	23;"	d
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_OPACITY	components/controller.hpp	246;"	d
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS_BIGENDIAN	Makefile	/^DEFS_BIGENDIAN = $/;"	m
DEFULLSCREEN_BUTTON	components/controller.hpp	/^    DEFULLSCREEN_BUTTON,$/;"	e	enum:buttonType_e
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPS_res	Makefile	/^DEPS_res = \\$/;"	m
DESKTOP_FILE_VALIDATE	Makefile	/^DESKTOP_FILE_VALIDATE = desktop-file-validate$/;"	m
DIRAC_CFLAGS	Makefile	/^DIRAC_CFLAGS = $/;"	m
DIRAC_LIBS	Makefile	/^DIRAC_LIBS = $/;"	m
DIRECTFB_CFLAGS	Makefile	/^DIRECTFB_CFLAGS = $/;"	m
DIRECTFB_CONFIG	Makefile	/^DIRECTFB_CONFIG = $/;"	m
DIRECTFB_LIBS	Makefile	/^DIRECTFB_LIBS = $/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(top_srcdir)\/modules\/common.am $(srcdir)\/Modules.am \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__libqt4_plugin_la_SOURCES_DIST)$/;"	m
DLLTOOL	Makefile	/^DLLTOOL = i586-mingw32msvc-dlltool$/;"	m
DSHOW_DEVICE	components/open_panels.hpp	/^    DSHOW_DEVICE,$/;"	e	enum:__anon14
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DTV_DEVICE	components/open_panels.hpp	/^    DTV_DEVICE,$/;"	e	enum:__anon14
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DVBPSI_CFLAGS	Makefile	/^DVBPSI_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
DVBPSI_LIBS	Makefile	/^DVBPSI_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ldvbpsi  $/;"	m
DVDDeviceComboBox	ui/sprefs_input.h	/^    QComboBox *DVDDeviceComboBox;$/;"	m	class:Ui_SPrefsInputAndCodecs
DVDLabel	ui/sprefs_input.h	/^    QLabel *DVDLabel;$/;"	m	class:Ui_SPrefsInputAndCodecs
DVDNAV_CFLAGS	Makefile	/^DVDNAV_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
DVDNAV_LIBS	Makefile	/^DVDNAV_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ldvdnav -ldvdread -ldvdcss  $/;"	m
DVDREAD_CFLAGS	Makefile	/^DVDREAD_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
DVDREAD_LIBS	Makefile	/^DVDREAD_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ldvdread -ldvdcss  $/;"	m
DV_CFLAGS	Makefile	/^DV_CFLAGS = $/;"	m
DV_LIBS	Makefile	/^DV_LIBS = $/;"	m
DeckButtonsLayout	util/buttons/DeckButtonsLayout.cpp	/^DeckButtonsLayout::DeckButtonsLayout( QWidget* parent )$/;"	f	class:DeckButtonsLayout
DeckButtonsLayout	util/buttons/DeckButtonsLayout.hpp	/^class DeckButtonsLayout : public QLayout$/;"	c
DeleteKey	util/registry.cpp	/^long QVLCRegistry::DeleteKey( const char *path, const char *keyName )$/;"	f	class:QVLCRegistry
DeleteNonStaticEntries	menus.cpp	/^inline int DeleteNonStaticEntries( QMenu *menu )$/;"	f
DeleteValue	util/registry.cpp	/^int QVLCRegistry::DeleteValue( const char *path, const char *valueName )$/;"	f	class:QVLCRegistry
DestroyExtDialog	dialogs/extensions.cpp	/^int ExtensionsDialogProvider::DestroyExtDialog( extension_dialog_t *p_dialog )$/;"	f	class:ExtensionsDialogProvider
DestroyWidget	dialogs/extensions.cpp	/^void ExtensionDialog::DestroyWidget( extension_widget_t *p_widget,$/;"	f	class:ExtensionDialog
DialogCallback	dialogs/extensions.cpp	/^static int DialogCallback( vlc_object_t *p_this, const char *psz_variable,$/;"	f	file:
DialogEvent	dialogs_provider.hpp	/^    DialogEvent( int _i_dialog, int _i_arg, intf_dialog_args_t *_p_arg ) :$/;"	f	class:DialogEvent
DialogEvent	dialogs_provider.hpp	/^class DialogEvent : public QEvent$/;"	c
DialogEventType	qt4.hpp	/^    DialogEventType = 0,$/;"	e	enum:__anon9
DialogEvent_Type	dialogs_provider.hpp	/^    DialogEvent_Type = QEvent::User + DialogEventType + 1,$/;"	e	enum:__anon27
DialogHandler	dialogs/external.cpp	/^DialogHandler::DialogHandler (intf_thread_t *intf, QObject *_parent)$/;"	f	class:DialogHandler
DialogHandler	dialogs/external.hpp	/^class DialogHandler : public QObject$/;"	c
DialogsProvider	dialogs_provider.cpp	/^DialogsProvider::DialogsProvider( intf_thread_t *_p_intf ) :$/;"	f	class:DialogsProvider
DialogsProvider	dialogs_provider.hpp	/^class DialogsProvider : public QObject$/;"	c
DirectoryConfigControl	components/preferences_widgets.cpp	/^DirectoryConfigControl::DirectoryConfigControl( vlc_object_t *_p_this,$/;"	f	class:DirectoryConfigControl
DirectoryConfigControl	components/preferences_widgets.hpp	/^class DirectoryConfigControl : public FileConfigControl$/;"	c
DiscOpenPanel	components/open_panels.cpp	/^DiscOpenPanel::DiscOpenPanel( QWidget *_parent, intf_thread_t *_p_intf ) :$/;"	f	class:DiscOpenPanel
DiscOpenPanel	components/open_panels.hpp	/^class DiscOpenPanel: public OpenPanel$/;"	c
DiscType	components/open_panels.hpp	/^    enum    DiscType$/;"	g	class:DiscOpenPanel
Display	components/interface_widgets.hpp	/^    enum Display$/;"	g	class:TimeLabel
DoAction	menus.cpp	/^void VLCMenuBar::DoAction( QObject *data )$/;"	f	class:VLCMenuBar
DroppingController	dialogs/toolbar.cpp	/^DroppingController::DroppingController( intf_thread_t *_p_intf,$/;"	f	class:DroppingController
DroppingController	dialogs/toolbar.hpp	/^class DroppingController: public AbstractController$/;"	c
Dvd	components/open_panels.hpp	/^        Dvd,$/;"	e	enum:DiscOpenPanel::DiscType
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGL_CFLAGS	Makefile	/^EGL_CFLAGS = $/;"	m
EGL_LIBS	Makefile	/^EGL_LIBS = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EMP	dialogs/mediainfo.hpp	/^    ExtraMetaPanel *EMP;$/;"	m	class:MediaInfoDialog
ENABLE_ON_INPUT	components/controller.cpp	216;"	d	file:
ENABLE_ON_INPUT	components/controller.cpp	633;"	d	file:
ENABLE_ON_VIDEO	components/controller.cpp	212;"	d	file:
ENABLE_ON_VIDEO	components/controller.cpp	632;"	d	file:
ENCODE_MSG	remoteControlServer.hpp	39;"	d
ENCODE_MSG_WITH_RETURN	remoteControlServer.hpp	45;"	d
END_SPREFS_CAT	components/simple_preferences.cpp	189;"	d	file:
END_SPREFS_CAT	components/simple_preferences.cpp	728;"	d	file:
EPGCHANNELS_HPP	components/epg/EPGChannels.hpp	24;"	d
EPGChannels	components/epg/EPGChannels.cpp	/^EPGChannels::EPGChannels( QWidget *parent, EPGView *m_epgView )$/;"	f	class:EPGChannels
EPGChannels	components/epg/EPGChannels.hpp	/^class EPGChannels : public QWidget$/;"	c
EPGEventByTimeQMap	components/epg/EPGView.hpp	/^typedef QMap<QDateTime, EPGItem *> EPGEventByTimeQMap;$/;"	t
EPGEvent_Type	input_manager.hpp	/^    EPGEvent_Type,$/;"	e	enum:__anon1
EPGGraphicsScene	components/epg/EPGView.cpp	/^EPGGraphicsScene::EPGGraphicsScene( QObject *parent ) : QGraphicsScene( parent )$/;"	f	class:EPGGraphicsScene
EPGGraphicsScene	components/epg/EPGView.hpp	/^class EPGGraphicsScene : public QGraphicsScene$/;"	c
EPGITEM_H	components/epg/EPGItem.hpp	25;"	d
EPGItem	components/epg/EPGItem.cpp	/^EPGItem::EPGItem( vlc_epg_event_t *data, EPGView *view )$/;"	f	class:EPGItem
EPGItem	components/epg/EPGItem.hpp	/^class EPGItem : public QGraphicsItem$/;"	c
EPGRULER_H	components/epg/EPGRuler.hpp	25;"	d
EPGRuler	components/epg/EPGRuler.cpp	/^EPGRuler::EPGRuler( QWidget* parent )$/;"	f	class:EPGRuler
EPGRuler	components/epg/EPGRuler.hpp	/^class EPGRuler : public QWidget$/;"	c
EPGTimeMapByChannelQMap	components/epg/EPGView.hpp	/^typedef QMap<QString, EPGEventByTimeQMap* > EPGTimeMapByChannelQMap;$/;"	t
EPGVIEW_H	components/epg/EPGView.hpp	25;"	d
EPGVIEW_WIDGET	components/epg/EPGWidget.cpp	/^    EPGVIEW_WIDGET = 0,$/;"	e	enum:__anon25	file:
EPGView	components/epg/EPGView.cpp	/^EPGView::EPGView( QWidget *parent ) : QGraphicsView( parent )$/;"	f	class:EPGView
EPGView	components/epg/EPGView.hpp	/^class EPGView : public QGraphicsView$/;"	c
EPGWIDGET_H	components/epg/EPGWidget.hpp	25;"	d
EPGWidget	components/epg/EPGWidget.cpp	/^EPGWidget::EPGWidget( QWidget *parent ) : QWidget( parent )$/;"	f	class:EPGWidget
EPGWidget	components/epg/EPGWidget.hpp	/^class EPGWidget : public QWidget$/;"	c
EQUALIZER_H	ui/equalizer.h	12;"	d
ERROR_TEXT	qt4.cpp	139;"	d	file:
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = .exe$/;"	m
EXTENDED_ACTION	actions_manager.hpp	/^    EXTENDED_ACTION,$/;"	e	enum:actionType_e
EXTENDED_BUTTON	components/controller.hpp	/^    EXTENDED_BUTTON,$/;"	e	enum:buttonType_e
EXTENSIONS_ALL	dialogs_provider.hpp	46;"	d
EXTENSIONS_HPP	dialogs/extensions.hpp	25;"	d
EXTENSIONS_MANAGER_HPP	extensions_manager.hpp	25;"	d
EXTRA_DIST	Makefile	/^EXTRA_DIST = Modules.am vlc.qrc ui\/equalizer.ui ui\/video_effects.ui \\$/;"	m
EXTRA_LTLIBRARIES	Makefile	/^EXTRA_LTLIBRARIES = libqt4_plugin.la$/;"	m
EXT_FILTER_AUDIO	dialogs_provider.hpp	/^    EXT_FILTER_AUDIO     =  0x04,$/;"	e	enum:__anon26
EXT_FILTER_MEDIA	dialogs_provider.hpp	/^    EXT_FILTER_MEDIA     =  0x01,$/;"	e	enum:__anon26
EXT_FILTER_PLAYLIST	dialogs_provider.hpp	/^    EXT_FILTER_PLAYLIST  =  0x08,$/;"	e	enum:__anon26
EXT_FILTER_SUBTITLE	dialogs_provider.hpp	/^    EXT_FILTER_SUBTITLE  =  0x10,$/;"	e	enum:__anon26
EXT_FILTER_VIDEO	dialogs_provider.hpp	/^    EXT_FILTER_VIDEO     =  0x02,$/;"	e	enum:__anon26
EditBroadcast	dialogs/vlm.cpp	/^void VLMWrapper::EditBroadcast( const QString& name, const QString& input,$/;"	f	class:VLMWrapper
EditSchedule	dialogs/vlm.cpp	/^void VLMWrapper::EditSchedule( const QString& name, const QString& input,$/;"	f	class:VLMWrapper
EditVod	dialogs/vlm.cpp	/^void VLMWrapper::EditVod( const QString& name, const QString& input,$/;"	f	class:VLMWrapper
Elapsed	components/interface_widgets.hpp	/^        Elapsed,$/;"	e	enum:TimeLabel::Display
EnableItem	dialogs/vlm.cpp	/^void VLMWrapper::EnableItem( const QString& name, bool b_enable )$/;"	f	class:VLMWrapper
EnableStaticEntries	menus.cpp	/^void VLCMenuBar::EnableStaticEntries( QMenu *menu, bool enable = true )$/;"	f	class:VLCMenuBar
EnqueueOneInterfaceMode	ui/sprefs_interface.h	/^    QCheckBox *EnqueueOneInterfaceMode;$/;"	m	class:Ui_SPrefsInterface
EpgDialog	dialogs/epg.cpp	/^EpgDialog::EpgDialog( intf_thread_t *_p_intf ): QVLCFrame( _p_intf )$/;"	f	class:EpgDialog
EpgDialog	dialogs/epg.hpp	/^class EpgDialog : public QVLCFrame, public Singleton<EpgDialog>$/;"	c
Equalizer	components/extended_panels.cpp	/^Equalizer::Equalizer( intf_thread_t *_p_intf, QWidget *_parent ) :$/;"	f	class:Equalizer
Equalizer	components/extended_panels.hpp	/^class Equalizer: public QWidget$/;"	c
EqualizerWidget	ui/equalizer.h	/^    class EqualizerWidget: public Ui_EqualizerWidget {};$/;"	c	namespace:Ui
ErrorsDialog	dialogs/errors.cpp	/^ErrorsDialog::ErrorsDialog( intf_thread_t *_p_intf )$/;"	f	class:ErrorsDialog
ErrorsDialog	dialogs/errors.hpp	/^class ErrorsDialog : public QVLCDialog, public Singleton<ErrorsDialog>$/;"	c
Execute	remoteControlServer.cpp	/^void AudioCommand::Execute() {$/;"	f	class:AudioCommand
Execute	remoteControlServer.cpp	/^void BasicCommand::Execute() {$/;"	f	class:BasicCommand
Execute	remoteControlServer.cpp	/^void PlayListCommand::Execute() {$/;"	f	class:PlayListCommand
ExtV4l2	components/extended_panels.cpp	/^ExtV4l2::ExtV4l2( intf_thread_t *_p_intf, QWidget *_parent )$/;"	f	class:ExtV4l2
ExtV4l2	components/extended_panels.hpp	/^class ExtV4l2 : public QWidget$/;"	c
ExtVideo	components/extended_panels.cpp	/^ExtVideo::ExtVideo( intf_thread_t *_p_intf, QTabWidget *_parent ) :$/;"	f	class:ExtVideo
ExtVideo	components/extended_panels.hpp	/^class ExtVideo: public QObject$/;"	c
ExtVideoWidget	ui/video_effects.h	/^    class ExtVideoWidget: public Ui_ExtVideoWidget {};$/;"	c	namespace:Ui
ExtendedDialog	dialogs/extended.cpp	/^ExtendedDialog::ExtendedDialog( intf_thread_t *_p_intf )$/;"	f	class:ExtendedDialog
ExtendedDialog	dialogs/extended.hpp	/^class ExtendedDialog : public QVLCDialog, public Singleton<ExtendedDialog>$/;"	c
ExtensionCopy	dialogs/plugins.cpp	/^    ExtensionCopy( extension_t *p_ext )$/;"	f	class:ExtensionCopy
ExtensionCopy	dialogs/plugins.cpp	/^class ExtensionCopy$/;"	c	file:
ExtensionDialog	dialogs/extensions.cpp	/^ExtensionDialog::ExtensionDialog( intf_thread_t *_p_intf,$/;"	f	class:ExtensionDialog
ExtensionDialog	dialogs/extensions.hpp	/^class ExtensionDialog : public QDialog$/;"	c
ExtensionInfoDialog	dialogs/plugins.cpp	/^ExtensionInfoDialog::ExtensionInfoDialog( const ExtensionCopy& extension,$/;"	f	class:ExtensionInfoDialog
ExtensionInfoDialog	dialogs/plugins.hpp	/^class ExtensionInfoDialog : public QVLCDialog$/;"	c
ExtensionItemDelegate	dialogs/plugins.cpp	/^ExtensionItemDelegate::ExtensionItemDelegate( intf_thread_t *p_intf,$/;"	f	class:ExtensionItemDelegate
ExtensionItemDelegate	dialogs/plugins.hpp	/^class ExtensionItemDelegate : public QStyledItemDelegate$/;"	c
ExtensionListModel	dialogs/plugins.cpp	/^ExtensionListModel::ExtensionListModel( QListView *view, intf_thread_t *intf )$/;"	f	class:ExtensionListModel
ExtensionListModel	dialogs/plugins.hpp	/^class ExtensionListModel : public QAbstractListModel$/;"	c
ExtensionTab	dialogs/plugins.cpp	/^ExtensionTab::ExtensionTab( intf_thread_t *p_intf_ )$/;"	f	class:ExtensionTab
ExtensionTab	dialogs/plugins.hpp	/^class ExtensionTab : public QVLCFrame$/;"	c
ExtensionsDialogProvider	dialogs/extensions.cpp	/^ExtensionsDialogProvider::ExtensionsDialogProvider( intf_thread_t *_p_intf,$/;"	f	class:ExtensionsDialogProvider
ExtensionsDialogProvider	dialogs/extensions.hpp	/^class ExtensionsDialogProvider : public QObject$/;"	c
ExtensionsManager	extensions_manager.cpp	/^ExtensionsManager::ExtensionsManager( intf_thread_t *_p_intf, QObject *parent )$/;"	f	class:ExtensionsManager
ExtensionsManager	extensions_manager.hpp	/^class ExtensionsManager : public QObject$/;"	c
ExtensionsMenu	menus.cpp	/^void VLCMenuBar::ExtensionsMenu( intf_thread_t *p_intf, QMenu *extMenu )$/;"	f	class:VLCMenuBar
ExtraMetaPanel	components/info_panels.cpp	/^ExtraMetaPanel::ExtraMetaPanel( QWidget *parent,$/;"	f	class:ExtraMetaPanel
ExtraMetaPanel	components/info_panels.hpp	/^class ExtraMetaPanel: public QWidget$/;"	c
FADEDURATION	util/input_slider.cpp	55;"	d	file:
FADEOUTDELAY	util/input_slider.cpp	56;"	d	file:
FAPPCOMMAND_KEY	main_interface_win32.cpp	62;"	d	file:
FAPPCOMMAND_MASK	main_interface_win32.cpp	64;"	d	file:
FAPPCOMMAND_MOUSE	main_interface_win32.cpp	61;"	d	file:
FAPPCOMMAND_OEM	main_interface_win32.cpp	63;"	d	file:
FASTER_ACTION	actions_manager.hpp	/^    FASTER_ACTION,$/;"	e	enum:actionType_e
FASTER_BUTTON	components/controller.hpp	/^    FASTER_BUTTON,$/;"	e	enum:buttonType_e
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FIELD	remoteControlServer.hpp	/^    enum FIELD {$/;"	g	struct:RCInputMRL
FILE_LIBVLCCORE_DLL	Makefile	/^FILE_LIBVLCCORE_DLL = $/;"	m
FILE_LIBVLC_DLL	Makefile	/^FILE_LIBVLC_DLL = $/;"	m
FLAC_CFLAGS	Makefile	/^FLAC_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/FLAC -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
FLAC_LIBS	Makefile	/^FLAC_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lFLAC -lm -logg  $/;"	m
FLUIDSYNTH_CFLAGS	Makefile	/^FLUIDSYNTH_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
FLUIDSYNTH_LIBS	Makefile	/^FLUIDSYNTH_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lfluidsynth -ldsound -lwinmm  $/;"	m
FLVMux	ui/profiles.h	/^    QRadioButton *FLVMux;$/;"	m	class:Ui_Profiles
FRAME_ACTION	actions_manager.hpp	/^    FRAME_ACTION,$/;"	e	enum:actionType_e
FRAME_BUTTON	components/controller.hpp	/^    FRAME_BUTTON,$/;"	e	enum:buttonType_e
FREETYPE_CFLAGS	Makefile	/^FREETYPE_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/freetype2 -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
FREETYPE_LIBS	Makefile	/^FREETYPE_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lfreetype  $/;"	m
FRIBIDI_CFLAGS	Makefile	/^FRIBIDI_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/fribidi  $/;"	m
FRIBIDI_LIBS	Makefile	/^FRIBIDI_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lfribidi  $/;"	m
FSC_HEIGHT	components/controller.hpp	251;"	d
FSC_TB_DEFAULT	components/controller.hpp	41;"	d
FSC_WIDTH	components/controller.hpp	249;"	d
FULL	remoteControlServer.hpp	/^        FULL$/;"	e	enum:RCInputMRL::FIELD
FULLSCREEN_ACTION	actions_manager.hpp	/^    FULLSCREEN_ACTION,$/;"	e	enum:actionType_e
FULLSCREEN_BUTTON	components/controller.hpp	/^    FULLSCREEN_BUTTON,$/;"	e	enum:buttonType_e
FULLSCREEN_NUMBER_LONGTEXT	qt4.cpp	174;"	d	file:
FULLSCREEN_NUMBER_TEXT	qt4.cpp	173;"	d	file:
FULLWIDTH_ACTION	actions_manager.hpp	/^    FULLWIDTH_ACTION,$/;"	e	enum:actionType_e
FULLWIDTH_BUTTON	components/controller.hpp	/^    FULLWIDTH_BUTTON,$/;"	e	enum:buttonType_e
FileConfigControl	components/preferences_widgets.cpp	/^FileConfigControl::FileConfigControl( vlc_object_t *_p_this,$/;"	f	class:FileConfigControl
FileConfigControl	components/preferences_widgets.hpp	/^class FileConfigControl : public VStringConfigControl$/;"	c
FileDestBox	components/sout/sout_widgets.cpp	/^FileDestBox::FileDestBox( QWidget *_parent ) : VirtualDestBox( _parent )$/;"	f	class:FileDestBox
FileDestBox	components/sout/sout_widgets.hpp	/^class FileDestBox: public VirtualDestBox$/;"	c
FileMenu	menus.cpp	/^QMenu *VLCMenuBar::FileMenu( intf_thread_t *p_intf, QWidget *parent, MainInterface *mi )$/;"	f	class:VLCMenuBar
FileOpenBox	components/open_panels.hpp	/^    FileOpenBox( QWidget *parent, const QString &caption,$/;"	f	class:FileOpenBox
FileOpenBox	components/open_panels.hpp	/^class FileOpenBox: public QFileDialog$/;"	c
FileOpenPanel	components/open_panels.cpp	/^FileOpenPanel::FileOpenPanel( QWidget *_parent, intf_thread_t *_p_intf ) :$/;"	f	class:FileOpenPanel
FileOpenPanel	components/open_panels.hpp	/^class FileOpenPanel: public OpenPanel$/;"	c
FillTree	dialogs/plugins.cpp	/^inline void PluginTab::FillTree()$/;"	f	class:PluginTab
FindActionWithVar	menus.cpp	/^static QAction * FindActionWithVar( QMenu *menu, const char *psz_var )$/;"	f	file:
FirstRun	dialogs/firstrun.cpp	/^FirstRun::FirstRun( QWidget *_p, intf_thread_t *_p_intf  )$/;"	f	class:FirstRun
FirstRun	dialogs/firstrun.hpp	/^class FirstRun : public QWidget$/;"	c
FloatConfigControl	components/preferences_widgets.cpp	/^FloatConfigControl::FloatConfigControl( vlc_object_t *_p_this,$/;"	f	class:FloatConfigControl
FloatConfigControl	components/preferences_widgets.hpp	/^class FloatConfigControl : public VFloatConfigControl$/;"	c
FloatRangeConfigControl	components/preferences_widgets.cpp	/^FloatRangeConfigControl::FloatRangeConfigControl( vlc_object_t *_p_this,$/;"	f	class:FloatRangeConfigControl
FloatRangeConfigControl	components/preferences_widgets.hpp	/^class FloatRangeConfigControl : public FloatConfigControl$/;"	c
FontConfigControl	components/preferences_widgets.cpp	/^FontConfigControl::FontConfigControl( vlc_object_t *_p_this,$/;"	f	class:FontConfigControl
FontConfigControl	components/preferences_widgets.hpp	/^class FontConfigControl : public VStringConfigControl$/;"	c
Forward	util/buttons/BrowseButton.hpp	/^        Forward = 1$/;"	e	enum:BrowseButton::Type
FullscreenControlHide_Type	input_manager.hpp	/^    FullscreenControlHide_Type,$/;"	e	enum:__anon1
FullscreenControlPlanHide_Type	input_manager.hpp	/^    FullscreenControlPlanHide_Type,$/;"	e	enum:__anon1
FullscreenControlShow_Type	input_manager.hpp	/^    FullscreenControlShow_Type,$/;"	e	enum:__anon1
FullscreenControlToggle_Type	input_manager.hpp	/^    FullscreenControlToggle_Type = QEvent::User + IMEventType + 20,$/;"	e	enum:__anon1
FullscreenControllerWidget	components/controller.cpp	/^FullscreenControllerWidget::FullscreenControllerWidget( intf_thread_t *_p_i, QWidget *_parent )$/;"	f	class:FullscreenControllerWidget
FullscreenControllerWidget	components/controller.hpp	/^class FullscreenControllerWidget : public AbstractController$/;"	c
FullscreenControllerWidgetFullscreenChanged	components/controller.cpp	/^static int FullscreenControllerWidgetFullscreenChanged( vlc_object_t *vlc_object,$/;"	f	file:
FullscreenControllerWidgetMouseMoved	components/controller.cpp	/^static int FullscreenControllerWidgetMouseMoved( vlc_object_t *vlc_object, const char *variable,$/;"	f	file:
GCRYPT_CFLAGS	Makefile	/^GCRYPT_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include$/;"	m
GCRYPT_LIBS	Makefile	/^GCRYPT_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lgcrypt -lgpg-error$/;"	m
GETTEXT_MACRO_VERSION	Makefile	/^GETTEXT_MACRO_VERSION = 0.18$/;"	m
GET_APPCOMMAND_LPARAM	main_interface_win32.cpp	66;"	d	file:
GET_DEVICE_LPARAM	main_interface_win32.cpp	67;"	d	file:
GET_FLAGS_LPARAM	main_interface_win32.cpp	69;"	d	file:
GET_KEYSTATE_LPARAM	main_interface_win32.cpp	70;"	d	file:
GET_MOUSEORKEY_LPARAM	main_interface_win32.cpp	68;"	d	file:
GL_CFLAGS	Makefile	/^GL_CFLAGS = $/;"	m
GL_LIBS	Makefile	/^GL_LIBS = -lGL$/;"	m
GMSGFMT	Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT_015	Makefile	/^GMSGFMT_015 = \/usr\/bin\/msgfmt$/;"	m
GNOMEVFS_CFLAGS	Makefile	/^GNOMEVFS_CFLAGS = $/;"	m
GNOMEVFS_LIBS	Makefile	/^GNOMEVFS_LIBS = $/;"	m
GNUGETOPT_LIBS	Makefile	/^GNUGETOPT_LIBS = $/;"	m
GNUTLS_CFLAGS	Makefile	/^GNUTLS_CFLAGS = $/;"	m
GNUTLS_LIBS	Makefile	/^GNUTLS_LIBS = $/;"	m
GOOM_CFLAGS	Makefile	/^GOOM_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
GOOM_LIBS	Makefile	/^GOOM_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lgoom2  $/;"	m
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GetPort	remoteControlServer.cpp	/^int RCServer::GetPort() {$/;"	f	class:RCServer
GotoTimeDialog	dialogs/gototime.cpp	/^GotoTimeDialog::GotoTimeDialog( intf_thread_t *_p_intf)$/;"	f	class:GotoTimeDialog
GotoTimeDialog	dialogs/gototime.hpp	/^class GotoTimeDialog : public QVLCDialog, public Singleton<GotoTimeDialog>$/;"	c
GuaranteeDisplayRatio	remoteControlServer.cpp	/^int BasicCommand::GuaranteeDisplayRatio(intf_thread_t* p_intf) {$/;"	f	class:BasicCommand
HAS_QT47	qt4.hpp	43;"	d
HAVE_TRANSPARENCY	components/controller.hpp	243;"	d
HEADERS	Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HILDON_CFLAGS	Makefile	/^HILDON_CFLAGS = $/;"	m
HILDON_FM_CFLAGS	Makefile	/^HILDON_FM_CFLAGS = $/;"	m
HILDON_FM_LIBS	Makefile	/^HILDON_FM_LIBS = $/;"	m
HILDON_LIBS	Makefile	/^HILDON_LIBS = $/;"	m
HTTPDestBox	components/sout/sout_widgets.cpp	/^HTTPDestBox::HTTPDestBox( QWidget *_parent ) : VirtualDestBox( _parent )$/;"	f	class:HTTPDestBox
HTTPDestBox	components/sout/sout_widgets.hpp	/^class HTTPDestBox: public VirtualDestBox$/;"	c
HTTPEdit	components/sout/sout_widgets.hpp	/^        QLineEdit *HTTPEdit;$/;"	m	class:HTTPDestBox
HTTPPort	components/sout/sout_widgets.hpp	/^        QSpinBox *HTTPPort;$/;"	m	class:HTTPDestBox
HelpDialog	dialogs/help.cpp	/^HelpDialog::HelpDialog( intf_thread_t *_p_intf ) : QVLCFrame( _p_intf )$/;"	f	class:HelpDialog
HelpDialog	dialogs/help.hpp	/^class HelpDialog : public QVLCFrame, public Singleton<HelpDialog>$/;"	c
HelpMenu	menus.cpp	/^QMenu *VLCMenuBar::HelpMenu( QWidget *parent )$/;"	f	class:VLCMenuBar
IANGLE_MASK	util/pictureflow.cpp	51;"	d	file:
IANGLE_MAX	util/pictureflow.cpp	50;"	d	file:
ICEDestBox	components/sout/sout_widgets.cpp	/^ICEDestBox::ICEDestBox( QWidget *_parent ) : VirtualDestBox( _parent )$/;"	f	class:ICEDestBox
ICEDestBox	components/sout/sout_widgets.hpp	/^class ICEDestBox: public VirtualDestBox$/;"	c
ICEEdit	components/sout/sout_widgets.hpp	/^        QLineEdit *ICEEdit;$/;"	m	class:ICEDestBox
ICEMountEdit	components/sout/sout_widgets.hpp	/^        QLineEdit *ICEMountEdit;$/;"	m	class:ICEDestBox
ICEPassEdit	components/sout/sout_widgets.hpp	/^        QLineEdit *ICEPassEdit;$/;"	m	class:ICEDestBox
ICEPort	components/sout/sout_widgets.hpp	/^        QSpinBox *ICEPort;$/;"	m	class:ICEDestBox
ICONCHANGE_LONGTEXT	qt4.cpp	202;"	d	file:
ICONCHANGE_TEXT	qt4.cpp	201;"	d	file:
ICON_HEIGHT	components/simple_preferences.cpp	50;"	d	file:
ICON_SCALER	components/playlist/views.cpp	39;"	d	file:
ICON_VIEW	components/playlist/standardpanel.hpp	/^    enum { ICON_VIEW = 0,$/;"	e	enum:StandardPLPanel::__anon16
ID	remoteControlServer.hpp	/^        ID=0,$/;"	e	enum:RCInputMRL::FIELD
IMEvent	input_manager.hpp	/^    IMEvent( int type, input_item_t *p_input = NULL )$/;"	f	class:IMEvent
IMEvent	input_manager.hpp	/^class IMEvent : public QEvent$/;"	c
IMEventType	qt4.hpp	/^    IMEventType     = 100,$/;"	e	enum:__anon9
INFO_ACTION	actions_manager.hpp	/^    INFO_ACTION,$/;"	e	enum:actionType_e
INFO_BUTTON	components/controller.hpp	/^    INFO_BUTTON,$/;"	e	enum:buttonType_e
INI_FILE_H_	ini/inifile.h	14;"	d
INPT_TB_DEFAULT	components/controller.hpp	40;"	d
INPUT_SLIDER	components/controller.hpp	/^    INPUT_SLIDER,$/;"	e	enum:buttonType_e
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INTLLIBS	Makefile	/^INTLLIBS = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/libintl.a \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/libiconv.a$/;"	m
INTL_MACOSX_LIBS	Makefile	/^INTL_MACOSX_LIBS = $/;"	m
IN_ITEM_ROLE	components/playlist/selector.hpp	/^    IN_ITEM_ROLE,        \/\/input_item_t->i_id$/;"	e	enum:__anon18
IOCTL_CDROMDISK2	components/open_panels.cpp	413;"	d	file:
IP	dialogs/mediainfo.hpp	/^    InfoPanel *IP;$/;"	m	class:MediaInfoDialog
ISP	dialogs/mediainfo.hpp	/^    InputStatsPanel *ISP;$/;"	m	class:MediaInfoDialog
IS_ML	components/playlist/selector.hpp	/^    IS_ML$/;"	e	enum:SpecialData
IS_PL	components/playlist/selector.hpp	/^    IS_PL,$/;"	e	enum:SpecialData
IS_PODCAST	components/playlist/selector.hpp	/^    IS_PODCAST = 1,$/;"	e	enum:SpecialData
ITEM_CHECK	menus.cpp	/^    ITEM_CHECK,  \/* Checkbox *\/$/;"	e	enum:__anon28	file:
ITEM_HEIGHT	components/complete_preferences.cpp	47;"	d	file:
ITEM_NORMAL	menus.cpp	/^    ITEM_NORMAL, \/* not a checkbox, nor a radio *\/$/;"	e	enum:__anon28	file:
ITEM_RADIO	menus.cpp	/^    ITEM_RADIO   \/* Radiobox *\/$/;"	e	enum:__anon28	file:
I_DEVICE_TOOLTIP	components/open_panels.cpp	56;"	d	file:
I_FILE_SLASH_DIR	components/sout/sout_widgets.cpp	38;"	d	file:
I_NEW_DIR	components/playlist/playlist_model.cpp	52;"	d	file:
I_NEW_DIR_NAME	components/playlist/playlist_model.cpp	54;"	d	file:
I_OP_DIR_WINTITLE	dialogs_provider.cpp	65;"	d	file:
I_PLAY_TOOLTIP	components/controller.hpp	43;"	d
InfoChanged_Type	input_manager.hpp	/^    InfoChanged_Type,$/;"	e	enum:__anon1
InfoPanel	components/info_panels.cpp	/^InfoPanel::InfoPanel( QWidget *parent,$/;"	f	class:InfoPanel
InfoPanel	components/info_panels.hpp	/^class InfoPanel: public QWidget$/;"	c
InfoTree	components/info_panels.hpp	/^    QTreeWidget *InfoTree;$/;"	m	class:InfoPanel
InitForPort	remoteControlServer.cpp	/^bool RCServer::InitForPort(int portNumber)$/;"	f	class:RCServer
InputAutoMenuBuilder	menus.cpp	/^static int InputAutoMenuBuilder( input_thread_t *p_object,$/;"	f	file:
InputControlsWidget	components/controller.cpp	/^InputControlsWidget::InputControlsWidget( intf_thread_t *_p_i, QWidget *_parent ) :$/;"	f	class:InputControlsWidget
InputControlsWidget	components/controller.hpp	/^class InputControlsWidget : public AbstractController$/;"	c
InputEvent	input_manager.cpp	/^static int InputEvent( vlc_object_t *p_this, const char *,$/;"	f	file:
InputManager	input_manager.cpp	/^InputManager::InputManager( QObject *parent, intf_thread_t *_p_intf) :$/;"	f	class:InputManager
InputManager	input_manager.hpp	/^class InputManager : public QObject$/;"	c
InputStatsPanel	components/info_panels.cpp	/^InputStatsPanel::InputStatsPanel( QWidget *parent,$/;"	f	class:InputStatsPanel
InputStatsPanel	components/info_panels.hpp	/^class InputStatsPanel: public QWidget$/;"	c
IntegerConfigControl	components/preferences_widgets.cpp	/^IntegerConfigControl::IntegerConfigControl( vlc_object_t *_p_this,$/;"	f	class:IntegerConfigControl
IntegerConfigControl	components/preferences_widgets.hpp	/^class IntegerConfigControl : public VIntConfigControl$/;"	c
IntegerListConfigControl	components/preferences_widgets.cpp	/^IntegerListConfigControl::IntegerListConfigControl( vlc_object_t *_p_this,$/;"	f	class:IntegerListConfigControl
IntegerListConfigControl	components/preferences_widgets.hpp	/^class IntegerListConfigControl : public VIntConfigControl$/;"	c
IntegerRangeConfigControl	components/preferences_widgets.cpp	/^IntegerRangeConfigControl::IntegerRangeConfigControl( vlc_object_t *_p_this,$/;"	f	class:IntegerRangeConfigControl
IntegerRangeConfigControl	components/preferences_widgets.hpp	/^class IntegerRangeConfigControl : public IntegerConfigControl$/;"	c
IntegerRangeSliderConfigControl	components/preferences_widgets.cpp	/^IntegerRangeSliderConfigControl::IntegerRangeSliderConfigControl($/;"	f	class:IntegerRangeSliderConfigControl
IntegerRangeSliderConfigControl	components/preferences_widgets.hpp	/^class IntegerRangeSliderConfigControl : public VIntConfigControl$/;"	c
InterfaceAoutUpdate_Type	input_manager.hpp	/^    InterfaceAoutUpdate_Type,$/;"	e	enum:__anon1
InterfacePreviewWidget	components/preferences_widgets.cpp	/^InterfacePreviewWidget::InterfacePreviewWidget ( QWidget *parent ) : QLabel( parent )$/;"	f	class:InterfacePreviewWidget
InterfacePreviewWidget	components/preferences_widgets.hpp	/^class InterfacePreviewWidget : public QLabel$/;"	c
InterfaceVoutUpdate_Type	input_manager.hpp	/^    InterfaceVoutUpdate_Type,$/;"	e	enum:__anon1
InterfacesMenu	menus.cpp	/^QMenu *VLCMenuBar::InterfacesMenu( intf_thread_t *p_intf, QMenu *current )$/;"	f	class:VLCMenuBar
IntfBossCB	main_interface.cpp	/^static int IntfBossCB( vlc_object_t *p_this, const char *psz_variable,$/;"	f	file:
IntfRaiseMainCB	main_interface.cpp	/^static int IntfRaiseMainCB( vlc_object_t *p_this, const char *psz_variable,$/;"	f	file:
IntfShowCB	main_interface.cpp	/^static int IntfShowCB( vlc_object_t *p_this, const char *psz_variable,$/;"	f	file:
IsCurrentRole	components/playlist/vlc_model.hpp	/^      IsCurrentRole = Qt::UserRole,$/;"	e	enum:VLCModel::__anon17
IsCurrentsParentNodeRole	components/playlist/vlc_model.hpp	/^      IsCurrentsParentNodeRole$/;"	e	enum:VLCModel::__anon17
IsLeafNodeRole	components/playlist/vlc_model.hpp	/^      IsLeafNodeRole,$/;"	e	enum:VLCModel::__anon17
IsMenuEmpty	menus.cpp	/^static bool IsMenuEmpty( const char *psz_var,$/;"	f	file:
ItemAction	components/playlist/selector.hpp	/^enum ItemAction {$/;"	g
ItemChanged	input_manager.cpp	/^static int ItemChanged( vlc_object_t *p_this, const char *psz_var,$/;"	f	file:
ItemChanged_Type	input_manager.hpp	/^    ItemChanged_Type,$/;"	e	enum:__anon1
ItemEsChanged_Type	input_manager.hpp	/^    ItemEsChanged_Type,$/;"	e	enum:__anon1
ItemIndex	remoteControlServer.cpp	/^int RCUtil::ItemIndex ( playlist_item_t *p_item ) {$/;"	f	class:RCUtil
ItemRateChanged_Type	input_manager.hpp	/^    ItemRateChanged_Type,$/;"	e	enum:__anon1
ItemStateChanged_Type	input_manager.hpp	/^    ItemStateChanged_Type,$/;"	e	enum:__anon1
ItemTeletextChanged_Type	input_manager.hpp	/^    ItemTeletextChanged_Type,$/;"	e	enum:__anon1
ItemTitleChanged_Type	input_manager.hpp	/^    ItemTitleChanged_Type,$/;"	e	enum:__anon1
JACK_CFLAGS	Makefile	/^JACK_CFLAGS = $/;"	m
JACK_DEVICE	components/open_panels.hpp	/^    JACK_DEVICE$/;"	e	enum:__anon14
JACK_LIBS	Makefile	/^JACK_LIBS = $/;"	m
KAI_LIBS	Makefile	/^KAI_LIBS = $/;"	m
KATE_CFLAGS	Makefile	/^KATE_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
KATE_LIBS	Makefile	/^KATE_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lkate  $/;"	m
KDE4_CONFIG	Makefile	/^KDE4_CONFIG = kde4-config$/;"	m
KEEPSIZE_LONGTEXT	qt4.cpp	108;"	d	file:
KEEPSIZE_TEXT	qt4.cpp	107;"	d	file:
KVA_LIBS	Makefile	/^KVA_LIBS = $/;"	m
KeyInputDialog	components/preferences_widgets.cpp	/^KeyInputDialog::KeyInputDialog( QTreeWidget *_table,$/;"	f	class:KeyInputDialog
KeyInputDialog	components/preferences_widgets.hpp	/^class KeyInputDialog : public QDialog$/;"	c
KeySelectorControl	components/preferences_widgets.cpp	/^KeySelectorControl::KeySelectorControl( vlc_object_t *_p_this,$/;"	f	class:KeySelectorControl
KeySelectorControl	components/preferences_widgets.hpp	/^class KeySelectorControl : public ConfigControl$/;"	c
LAST_COLUMN	components/preferences_widgets.cpp	56;"	d	file:
LD	Makefile	/^LD = \/usr\/i586-mingw32msvc\/bin\/ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS =  -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib$/;"	m
LDFLAGS_android_surface	Makefile	/^LDFLAGS_android_surface = $/;"	m
LDFLAGS_plugin	Makefile	/^LDFLAGS_plugin = $/;"	m
LDFLAGS_vlc	Makefile	/^LDFLAGS_vlc = -mwindows $/;"	m
LDFLAGS_x264	Makefile	/^LDFLAGS_x264 = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lx264   $/;"	m
LEFT_BRACE	ini/inifile.c	22;"	d	file:
LIBASS_CFLAGS	Makefile	/^LIBASS_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/fribidi -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/freetype2  $/;"	m
LIBASS_LIBS	Makefile	/^LIBASS_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lass -lm -lfontconfig -lxml2 -liconv -lfribidi -lfreetype  $/;"	m
LIBCDDB_CFLAGS	Makefile	/^LIBCDDB_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
LIBCDDB_LIBS	Makefile	/^LIBCDDB_LIBS = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/libregex.a -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lcddb -lregex -lws2_32  $/;"	m
LIBCDIO_CFLAGS	Makefile	/^LIBCDIO_CFLAGS = $/;"	m
LIBCDIO_LIBS	Makefile	/^LIBCDIO_LIBS = $/;"	m
LIBDL	Makefile	/^LIBDL = $/;"	m
LIBEXT	Makefile	/^LIBEXT = .dll$/;"	m
LIBICONV	Makefile	/^LIBICONV = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/libiconv.a$/;"	m
LIBINTL	Makefile	/^LIBINTL = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/libintl.a \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/libiconv.a$/;"	m
LIBM	Makefile	/^LIBM = -lm$/;"	m
LIBMODPLUG_CFLAGS	Makefile	/^LIBMODPLUG_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/libmodplug  $/;"	m
LIBMODPLUG_LIBS	Makefile	/^LIBMODPLUG_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lmodplug -lstdc++ -lm  $/;"	m
LIBMPEG2_CFLAGS	Makefile	/^LIBMPEG2_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/mpeg2dec  $/;"	m
LIBMPEG2_LIBS	Makefile	/^LIBMPEG2_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lmpeg2  $/;"	m
LIBOBJS	Makefile	/^LIBOBJS =  ${LIBOBJDIR}dirfd$U.o ${LIBOBJDIR}fdopendir$U.o ${LIBOBJDIR}flockfile$U.o ${LIBOBJDIR}fsync$U.o ${LIBOBJDIR}getdelim$U.o ${LIBOBJDIR}gmtime_r$U.o ${LIBOBJDIR}inet_pton$U.o ${LIBOBJDIR}localtime_r$U.o ${LIBOBJDIR}nrand48$U.o ${LIBOBJDIR}setenv$U.o ${LIBOBJDIR}strcasestr$U.o ${LIBOBJDIR}strlcpy$U.o ${LIBOBJDIR}strndup$U.o ${LIBOBJDIR}strnlen$U.o ${LIBOBJDIR}strsep$U.o ${LIBOBJDIR}strtok_r$U.o ${LIBOBJDIR}tdestroy$U.o ${LIBOBJDIR}asprintf$U.o ${LIBOBJDIR}vasprintf$U.o$/;"	m
LIBPROXY_CFLAGS	Makefile	/^LIBPROXY_CFLAGS = $/;"	m
LIBPROXY_LIBS	Makefile	/^LIBPROXY_LIBS = $/;"	m
LIBS	Makefile	/^LIBS = -lmingw32 $/;"	m
LIBS_a52tofloat32	Makefile	/^LIBS_a52tofloat32 =  -la52 -lm $/;"	m
LIBS_aa	Makefile	/^LIBS_aa = $/;"	m
LIBS_access_avio	Makefile	/^LIBS_access_avio = -Wl,-Bsymbolic -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lavformat -lavcodec -lvpx -lopenjpeg -lmp3lame -lgsm -lz -lpsapi -lshell32 -lavutil -lm    -lm $/;"	m
LIBS_access_dv	Makefile	/^LIBS_access_dv = $/;"	m
LIBS_access_eyetv	Makefile	/^LIBS_access_eyetv = $/;"	m
LIBS_access_ftp	Makefile	/^LIBS_access_ftp = -lws2_32 $/;"	m
LIBS_access_gnomevfs	Makefile	/^LIBS_access_gnomevfs = $/;"	m
LIBS_access_http	Makefile	/^LIBS_access_http = -lz -lws2_32 $/;"	m
LIBS_access_imem	Makefile	/^LIBS_access_imem = -lm $/;"	m
LIBS_access_jack	Makefile	/^LIBS_access_jack = $/;"	m
LIBS_access_mms	Makefile	/^LIBS_access_mms = -lws2_32 $/;"	m
LIBS_access_mtp	Makefile	/^LIBS_access_mtp = $/;"	m
LIBS_access_output_shout	Makefile	/^LIBS_access_output_shout = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lshout -lvorbis -ltheora -lspeex -lm -logg    -lws2_32 $/;"	m
LIBS_access_output_udp	Makefile	/^LIBS_access_output_udp = -lws2_32 $/;"	m
LIBS_access_realrtsp	Makefile	/^LIBS_access_realrtsp = -lws2_32 $/;"	m
LIBS_access_rtmp	Makefile	/^LIBS_access_rtmp = -lws2_32 $/;"	m
LIBS_access_sftp	Makefile	/^LIBS_access_sftp = $/;"	m
LIBS_access_smb	Makefile	/^LIBS_access_smb = $/;"	m
LIBS_access_tcp	Makefile	/^LIBS_access_tcp = -lws2_32 $/;"	m
LIBS_access_udp	Makefile	/^LIBS_access_udp = -lws2_32 $/;"	m
LIBS_adjust	Makefile	/^LIBS_adjust = -lm $/;"	m
LIBS_audiobargraph_a	Makefile	/^LIBS_audiobargraph_a = -lm -lws2_32 $/;"	m
LIBS_audioqueue	Makefile	/^LIBS_audioqueue = $/;"	m
LIBS_audioscrobbler	Makefile	/^LIBS_audioscrobbler = -lws2_32 $/;"	m
LIBS_auhal	Makefile	/^LIBS_auhal = $/;"	m
LIBS_avcodec	Makefile	/^LIBS_avcodec = -Wl,-Bsymbolic -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lavcodec -lvpx -lopenjpeg -lmp3lame -lgsm -lz -lpsapi -lshell32 -lavutil -lm   -lm $/;"	m
LIBS_avformat	Makefile	/^LIBS_avformat = -Wl,-Bsymbolic -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lavformat -lavcodec -lvpx -lopenjpeg -lmp3lame -lgsm -lz -lpsapi -lshell32 -lavutil -lm    -lm $/;"	m
LIBS_ball	Makefile	/^LIBS_ball = -lm $/;"	m
LIBS_bonjour	Makefile	/^LIBS_bonjour = $/;"	m
LIBS_caca	Makefile	/^LIBS_caca = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lcaca    $/;"	m
LIBS_cdda	Makefile	/^LIBS_cdda = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/libregex.a -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lcddb -lregex -lws2_32   -lwinmm $/;"	m
LIBS_chorus_flanger	Makefile	/^LIBS_chorus_flanger = -lm $/;"	m
LIBS_colorthres	Makefile	/^LIBS_colorthres = -lm $/;"	m
LIBS_compressor	Makefile	/^LIBS_compressor = -lm $/;"	m
LIBS_crystalhd	Makefile	/^LIBS_crystalhd = $/;"	m
LIBS_dbus	Makefile	/^LIBS_dbus = -lm $/;"	m
LIBS_dc1394	Makefile	/^LIBS_dc1394 = $/;"	m
LIBS_dirac	Makefile	/^LIBS_dirac = $/;"	m
LIBS_direct2d	Makefile	/^LIBS_direct2d = -lgdi32 -lole32 -luuid $/;"	m
LIBS_direct3d	Makefile	/^LIBS_direct3d = -lole32 -luuid -lgdi32 $/;"	m
LIBS_directfb	Makefile	/^LIBS_directfb = $/;"	m
LIBS_directx	Makefile	/^LIBS_directx = -lole32 -luuid -luser32 -lgdi32 $/;"	m
LIBS_dmo	Makefile	/^LIBS_dmo = -lole32 -luuid -lm $/;"	m
LIBS_dshow	Makefile	/^LIBS_dshow = -lole32 -loleaut32 -luuid -lstrmiids -lksuser $/;"	m
LIBS_dtstofloat32	Makefile	/^LIBS_dtstofloat32 = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ldca    -lm $/;"	m
LIBS_dvdnav	Makefile	/^LIBS_dvdnav = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ldvdnav -ldvdread -ldvdcss   $/;"	m
LIBS_dvdread	Makefile	/^LIBS_dvdread = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ldvdread -ldvdcss    $/;"	m
LIBS_equalizer	Makefile	/^LIBS_equalizer = -lm $/;"	m
LIBS_extract	Makefile	/^LIBS_extract = -lm $/;"	m
LIBS_faad	Makefile	/^LIBS_faad = -lm $/;"	m
LIBS_flac	Makefile	/^LIBS_flac = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lFLAC -lm -logg    -lm -lws2_32 $/;"	m
LIBS_fluidsynth	Makefile	/^LIBS_fluidsynth = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lfluidsynth -ldsound -lwinmm    $/;"	m
LIBS_freetype	Makefile	/^LIBS_freetype = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lfribidi   -lgdi32 -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lfreetype   -liconv -lz -lm -lm $/;"	m
LIBS_gaussianblur	Makefile	/^LIBS_gaussianblur = -lm $/;"	m
LIBS_globalhotkeys	Makefile	/^LIBS_globalhotkeys = $/;"	m
LIBS_glwin32	Makefile	/^LIBS_glwin32 = -lole32 -luuid -lopengl32 -lgdi32 $/;"	m
LIBS_gme	Makefile	/^LIBS_gme = -lgme $/;"	m
LIBS_gnutls	Makefile	/^LIBS_gnutls = -lws2_32 $/;"	m
LIBS_goom	Makefile	/^LIBS_goom = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lgoom2    -lm $/;"	m
LIBS_gradient	Makefile	/^LIBS_gradient = -lm $/;"	m
LIBS_grain	Makefile	/^LIBS_grain = -lm $/;"	m
LIBS_growl	Makefile	/^LIBS_growl = $/;"	m
LIBS_headphone_channel_mixer	Makefile	/^LIBS_headphone_channel_mixer = -lm $/;"	m
LIBS_hildon	Makefile	/^LIBS_hildon = $/;"	m
LIBS_hotkeys	Makefile	/^LIBS_hotkeys = -lm $/;"	m
LIBS_hqdn3d	Makefile	/^LIBS_hqdn3d = -lm $/;"	m
LIBS_i420_rgb	Makefile	/^LIBS_i420_rgb = -lm $/;"	m
LIBS_i420_rgb_mmx	Makefile	/^LIBS_i420_rgb_mmx = $/;"	m
LIBS_inhibit	Makefile	/^LIBS_inhibit = $/;"	m
LIBS_jack	Makefile	/^LIBS_jack = $/;"	m
LIBS_kate	Makefile	/^LIBS_kate = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lkate    -lm $/;"	m
LIBS_libass	Makefile	/^LIBS_libass = -lfontconfig -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lass -lm -lfontconfig -lxml2 -liconv -lfribidi -lfreetype   $/;"	m
LIBS_libbluray	Makefile	/^LIBS_libbluray = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lbluray    $/;"	m
LIBS_libmpeg2	Makefile	/^LIBS_libmpeg2 = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lmpeg2    $/;"	m
LIBS_libvlc	Makefile	/^LIBS_libvlc = $/;"	m
LIBS_libvlccore	Makefile	/^LIBS_libvlccore = -lnetapi32 -lwinmm $/;"	m
LIBS_linsys_sdi	Makefile	/^LIBS_linsys_sdi = $/;"	m
LIBS_lirc	Makefile	/^LIBS_lirc = $/;"	m
LIBS_live555	Makefile	/^LIBS_live555 = -lliveMedia -lgroupsock -lBasicUsageEnvironment -lUsageEnvironment -lws2_32 $/;"	m
LIBS_lua	Makefile	/^LIBS_lua = -L\/usr\/local\/lib -llua -lm    -lm -lws2_32 $/;"	m
LIBS_macosx	Makefile	/^LIBS_macosx = $/;"	m
LIBS_macosx_dialog_provider	Makefile	/^LIBS_macosx_dialog_provider = $/;"	m
LIBS_memcpyaltivec	Makefile	/^LIBS_memcpyaltivec = $/;"	m
LIBS_minimal_macosx	Makefile	/^LIBS_minimal_macosx = $/;"	m
LIBS_mkv	Makefile	/^LIBS_mkv = -lmatroska -lebml -lz $/;"	m
LIBS_mod	Makefile	/^LIBS_mod = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lmodplug -lstdc++ -lm   -lm $/;"	m
LIBS_mono	Makefile	/^LIBS_mono = -lm $/;"	m
LIBS_mosaic	Makefile	/^LIBS_mosaic = -lm $/;"	m
LIBS_motion	Makefile	/^LIBS_motion = $/;"	m
LIBS_mp4	Makefile	/^LIBS_mp4 = -lz $/;"	m
LIBS_mpc	Makefile	/^LIBS_mpc = -lmpcdec -lm $/;"	m
LIBS_mpgatofixed32	Makefile	/^LIBS_mpgatofixed32 = -lmad $/;"	m
LIBS_mtp	Makefile	/^LIBS_mtp = $/;"	m
LIBS_mux_ogg	Makefile	/^LIBS_mux_ogg = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -logg    $/;"	m
LIBS_ncurses	Makefile	/^LIBS_ncurses = $/;"	m
LIBS_netsync	Makefile	/^LIBS_netsync = -lws2_32 -lws2_32 $/;"	m
LIBS_noise	Makefile	/^LIBS_noise = -lm $/;"	m
LIBS_normvol	Makefile	/^LIBS_normvol = -lm $/;"	m
LIBS_notify	Makefile	/^LIBS_notify = $/;"	m
LIBS_ogg	Makefile	/^LIBS_ogg = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -logg    $/;"	m
LIBS_oldrc	Makefile	/^LIBS_oldrc = -lws2_32 $/;"	m
LIBS_omxil	Makefile	/^LIBS_omxil = $/;"	m
LIBS_opencv_example	Makefile	/^LIBS_opencv_example = $/;"	m
LIBS_opencv_wrapper	Makefile	/^LIBS_opencv_wrapper = $/;"	m
LIBS_opus	Makefile	/^LIBS_opus = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -logg -lopus    -lm $/;"	m
LIBS_panoramix	Makefile	/^LIBS_panoramix = -lm $/;"	m
LIBS_param_eq	Makefile	/^LIBS_param_eq = -lm $/;"	m
LIBS_plugin	Makefile	/^LIBS_plugin = $/;"	m
LIBS_png	Makefile	/^LIBS_png = -lpng -lz -lm $/;"	m
LIBS_portaudio	Makefile	/^LIBS_portaudio = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lportaudio -lwinmm -lm -lole32 -luuid    $/;"	m
LIBS_postproc	Makefile	/^LIBS_postproc = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lpostproc -lavutil -lm    -lm $/;"	m
LIBS_projectm	Makefile	/^LIBS_projectm = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lprojectM -lMilkdropPresetFactory -lRenderer -lglu32 -lglew32 -lopengl32   $/;"	m
LIBS_psychedelic	Makefile	/^LIBS_psychedelic = -lm $/;"	m
LIBS_qt4	Makefile	/^LIBS_qt4 = -lole32 -Wl,--subsystem,windows -mwindows -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lqjpeg -lqtaccessiblewidgets -lQtGui -lQtCore -lrpcrt4 -loleaut32 -lole32 -luuid -lwinspool -lwinmm -lshell32 -lcomctl32 -lcomdlg32 -ladvapi32 -lgdi32 -limm32 -lwsock32   -lm $/;"	m
LIBS_quartztext	Makefile	/^LIBS_quartztext = $/;"	m
LIBS_quicktime	Makefile	/^LIBS_quicktime = -lm $/;"	m
LIBS_realvideo	Makefile	/^LIBS_realvideo =  -lm $/;"	m
LIBS_remoteosd	Makefile	/^LIBS_remoteosd = -lws2_32 $/;"	m
LIBS_ripple	Makefile	/^LIBS_ripple = -lm $/;"	m
LIBS_rotate	Makefile	/^LIBS_rotate = -lm $/;"	m
LIBS_rtp	Makefile	/^LIBS_rtp = -lws2_32 $/;"	m
LIBS_samplerate	Makefile	/^LIBS_samplerate = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lsamplerate    -lm $/;"	m
LIBS_sap	Makefile	/^LIBS_sap = -lz -lws2_32 $/;"	m
LIBS_scene	Makefile	/^LIBS_scene = -lm $/;"	m
LIBS_schroedinger	Makefile	/^LIBS_schroedinger = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lschroedinger-1.0 -lorc-0.4 -lm    $/;"	m
LIBS_screen	Makefile	/^LIBS_screen = -lgdi32 $/;"	m
LIBS_sdl_image	Makefile	/^LIBS_sdl_image = -mwindows -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lSDL_image -ljpeg -ltiff -lmingw32 -lSDLmain -lSDL -lm -luser32 -lgdi32 -lwinmm   -lwinmm $/;"	m
LIBS_sid	Makefile	/^LIBS_sid = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/libsidplay2.la   -lresid-builder $/;"	m
LIBS_skins2	Makefile	/^LIBS_skins2 = -lgdi32 -lole32 -luuid -lmsimg32 -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lfribidi   -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lfreetype   ${top_builddir}\/modules\/access\/zip\/unzip\/libunzip.la -lz -lm $/;"	m
LIBS_spatializer	Makefile	/^LIBS_spatializer = -lm $/;"	m
LIBS_speex	Makefile	/^LIBS_speex = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -logg -lspeex -lm    -lm $/;"	m
LIBS_sqlite	Makefile	/^LIBS_sqlite = $/;"	m
LIBS_stream_out_raop	Makefile	/^LIBS_stream_out_raop = -lws2_32 $/;"	m
LIBS_stream_out_rtp	Makefile	/^LIBS_stream_out_rtp = -lws2_32 $/;"	m
LIBS_stream_out_select	Makefile	/^LIBS_stream_out_select = -lws2_32 $/;"	m
LIBS_stream_out_standard	Makefile	/^LIBS_stream_out_standard = -lws2_32 $/;"	m
LIBS_stream_out_switcher	Makefile	/^LIBS_stream_out_switcher = $/;"	m
LIBS_svg	Makefile	/^LIBS_svg = $/;"	m
LIBS_swscale	Makefile	/^LIBS_swscale = -Wl,-Bsymbolic -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lswscale -lavutil -lm   -lm $/;"	m
LIBS_taglib	Makefile	/^LIBS_taglib = $/;"	m
LIBS_telepathy	Makefile	/^LIBS_telepathy = $/;"	m
LIBS_theora	Makefile	/^LIBS_theora = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ltheoraenc -ltheoradec -logg    $/;"	m
LIBS_tremor	Makefile	/^LIBS_tremor = $/;"	m
LIBS_ts	Makefile	/^LIBS_ts = -lws2_32 $/;"	m
LIBS_twolame	Makefile	/^LIBS_twolame = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ltwolame    -lm $/;"	m
LIBS_udev	Makefile	/^LIBS_udev = $/;"	m
LIBS_unzip	Makefile	/^LIBS_unzip = -lz $/;"	m
LIBS_upnp	Makefile	/^LIBS_upnp = -DPTW32_STATIC_LIB -DUPNP_STATIC_LIB -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lupnp -lthreadutil -lixml -liphlpapi -lpthreadGC2 -lws2_32    $/;"	m
LIBS_vcd	Makefile	/^LIBS_vcd = $/;"	m
LIBS_vcdx	Makefile	/^LIBS_vcdx = -lwinmm $/;"	m
LIBS_visual	Makefile	/^LIBS_visual = -lm $/;"	m
LIBS_vlc	Makefile	/^LIBS_vlc = $/;"	m
LIBS_vod_rtsp	Makefile	/^LIBS_vod_rtsp = -lws2_32 $/;"	m
LIBS_vorbis	Makefile	/^LIBS_vorbis = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lvorbisenc -lvorbis -lm -logg    $/;"	m
LIBS_vout_ios	Makefile	/^LIBS_vout_ios = $/;"	m
LIBS_vout_macosx	Makefile	/^LIBS_vout_macosx = $/;"	m
LIBS_vout_sdl	Makefile	/^LIBS_vout_sdl = -mwindows -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lmingw32 -lSDLmain -lSDL -lm -luser32 -lgdi32 -lwinmm   -lwinmm $/;"	m
LIBS_wave	Makefile	/^LIBS_wave = -lm $/;"	m
LIBS_waveout	Makefile	/^LIBS_waveout = -lwinmm $/;"	m
LIBS_win32text	Makefile	/^LIBS_win32text = -lgdi32 $/;"	m
LIBS_wingapi	Makefile	/^LIBS_wingapi = $/;"	m
LIBS_wingdi	Makefile	/^LIBS_wingdi = -lgdi32 -lole32 -luuid $/;"	m
LIBS_x264	Makefile	/^LIBS_x264 = -Wl,-Bsymbolic -lm -lm $/;"	m
LIBS_xml	Makefile	/^LIBS_xml = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lxml2 -lws2_32    $/;"	m
LIBS_xosd	Makefile	/^LIBS_xosd = $/;"	m
LIBS_zip	Makefile	/^LIBS_zip = -lz $/;"	m
LIBS_zvbi	Makefile	/^LIBS_zvbi =  -lpthreadGC2 -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lzvbi -lpthreadGC2 -lwsock32 -lm -liconv -lpng -lz   -lws2_32 $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBV4L2_CFLAGS	Makefile	/^LIBV4L2_CFLAGS = $/;"	m
LIBV4L2_LIBS	Makefile	/^LIBV4L2_LIBS = $/;"	m
LIBVA_CFLAGS	Makefile	/^LIBVA_CFLAGS = $/;"	m
LIBVA_LIBS	Makefile	/^LIBVA_LIBS = $/;"	m
LIBVCDINFO_CFLAGS	Makefile	/^LIBVCDINFO_CFLAGS = $/;"	m
LIBVCDINFO_LIBS	Makefile	/^LIBVCDINFO_LIBS = $/;"	m
LIBXML2_CFLAGS	Makefile	/^LIBXML2_CFLAGS = -DLIBXML_STATIC -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/libxml2  $/;"	m
LIBXML2_LIBS	Makefile	/^LIBXML2_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lxml2 -lws2_32  $/;"	m
LINK	Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINSYS_SDI_CFLAGS	Makefile	/^LINSYS_SDI_CFLAGS = $/;"	m
LINSYS_SDI_LIBS	Makefile	/^LINSYS_SDI_LIBS = $/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LISTVIEW_ART_SIZE	components/playlist/views.cpp	176;"	d	file:
LIST_VIEW	components/playlist/standardpanel.hpp	/^           LIST_VIEW,$/;"	e	enum:StandardPLPanel::__anon16
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LONGNAME_ROLE	components/playlist/selector.hpp	/^    LONGNAME_ROLE,       \/\/QString$/;"	e	enum:__anon18
LOOP_ACTION	actions_manager.hpp	/^    LOOP_ACTION,$/;"	e	enum:actionType_e
LOOP_BUTTON	components/controller.hpp	/^    LOOP_BUTTON,$/;"	e	enum:buttonType_e
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBICONV	Makefile	/^LTLIBICONV = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -liconv$/;"	m
LTLIBINTL	Makefile	/^LTLIBINTL = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lintl -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -liconv$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS =  ${LIBOBJDIR}dirfd$U.lo ${LIBOBJDIR}fdopendir$U.lo ${LIBOBJDIR}flockfile$U.lo ${LIBOBJDIR}fsync$U.lo ${LIBOBJDIR}getdelim$U.lo ${LIBOBJDIR}gmtime_r$U.lo ${LIBOBJDIR}inet_pton$U.lo ${LIBOBJDIR}localtime_r$U.lo ${LIBOBJDIR}nrand48$U.lo ${LIBOBJDIR}setenv$U.lo ${LIBOBJDIR}strcasestr$U.lo ${LIBOBJDIR}strlcpy$U.lo ${LIBOBJDIR}strndup$U.lo ${LIBOBJDIR}strnlen$U.lo ${LIBOBJDIR}strsep$U.lo ${LIBOBJDIR}strtok_r$U.lo ${LIBOBJDIR}tdestroy$U.lo ${LIBOBJDIR}asprintf$U.lo ${LIBOBJDIR}vasprintf$U.lo$/;"	m
LTLIBRARIES	Makefile	/^LTLIBRARIES = $(libvlc_LTLIBRARIES)$/;"	m
LTLIBVLCCORE	Makefile	/^LTLIBVLCCORE = $(top_builddir)\/src\/libvlccore.la$/;"	m
LTLIBa52tofloat32	Makefile	/^LTLIBa52tofloat32 = liba52tofloat32_plugin.la$/;"	m
LTLIBaa	Makefile	/^LTLIBaa = $/;"	m
LTLIBaccess_avio	Makefile	/^LTLIBaccess_avio = libaccess_avio_plugin.la$/;"	m
LTLIBaccess_dv	Makefile	/^LTLIBaccess_dv = $/;"	m
LTLIBaccess_eyetv	Makefile	/^LTLIBaccess_eyetv = $/;"	m
LTLIBaccess_gnomevfs	Makefile	/^LTLIBaccess_gnomevfs = $/;"	m
LTLIBaccess_jack	Makefile	/^LTLIBaccess_jack = $/;"	m
LTLIBaccess_mtp	Makefile	/^LTLIBaccess_mtp = $/;"	m
LTLIBaccess_output_shout	Makefile	/^LTLIBaccess_output_shout = libaccess_output_shout_plugin.la$/;"	m
LTLIBaccess_realrtsp	Makefile	/^LTLIBaccess_realrtsp = $/;"	m
LTLIBaccess_sftp	Makefile	/^LTLIBaccess_sftp = $/;"	m
LTLIBaccess_shm	Makefile	/^LTLIBaccess_shm = $/;"	m
LTLIBaccess_smb	Makefile	/^LTLIBaccess_smb = libaccess_smb_plugin.la$/;"	m
LTLIBandroid_surface	Makefile	/^LTLIBandroid_surface = $/;"	m
LTLIBaout_directx	Makefile	/^LTLIBaout_directx = libaout_directx_plugin.la$/;"	m
LTLIBatmo	Makefile	/^LTLIBatmo = libatmo_plugin.la$/;"	m
LTLIBaudioqueue	Makefile	/^LTLIBaudioqueue = $/;"	m
LTLIBauhal	Makefile	/^LTLIBauhal = $/;"	m
LTLIBavcodec	Makefile	/^LTLIBavcodec = libavcodec_plugin.la$/;"	m
LTLIBavformat	Makefile	/^LTLIBavformat = libavformat_plugin.la$/;"	m
LTLIBbonjour	Makefile	/^LTLIBbonjour = $/;"	m
LTLIBcaca	Makefile	/^LTLIBcaca = libcaca_plugin.la$/;"	m
LTLIBcdda	Makefile	/^LTLIBcdda = libcdda_plugin.la$/;"	m
LTLIBcrystalhd	Makefile	/^LTLIBcrystalhd = libcrystalhd_plugin.la$/;"	m
LTLIBdbus	Makefile	/^LTLIBdbus = $/;"	m
LTLIBdc1394	Makefile	/^LTLIBdc1394 = $/;"	m
LTLIBdecklink	Makefile	/^LTLIBdecklink = $/;"	m
LTLIBdirac	Makefile	/^LTLIBdirac = $/;"	m
LTLIBdirect2d	Makefile	/^LTLIBdirect2d = libdirect2d_plugin.la$/;"	m
LTLIBdirect3d	Makefile	/^LTLIBdirect3d = libdirect3d_plugin.la$/;"	m
LTLIBdirectfb	Makefile	/^LTLIBdirectfb = $/;"	m
LTLIBdirectx	Makefile	/^LTLIBdirectx = libdirectx_plugin.la$/;"	m
LTLIBdmo	Makefile	/^LTLIBdmo = libdmo_plugin.la$/;"	m
LTLIBdshow	Makefile	/^LTLIBdshow = libdshow_plugin.la$/;"	m
LTLIBdtstofloat32	Makefile	/^LTLIBdtstofloat32 = libdtstofloat32_plugin.la$/;"	m
LTLIBdvdnav	Makefile	/^LTLIBdvdnav = libdvdnav_plugin.la$/;"	m
LTLIBdvdread	Makefile	/^LTLIBdvdread = libdvdread_plugin.la$/;"	m
LTLIBdynamicoverlay	Makefile	/^LTLIBdynamicoverlay = $/;"	m
LTLIBegl	Makefile	/^LTLIBegl = $/;"	m
LTLIBfaad	Makefile	/^LTLIBfaad = $/;"	m
LTLIBfb	Makefile	/^LTLIBfb = $/;"	m
LTLIBfbosd	Makefile	/^LTLIBfbosd = $/;"	m
LTLIBflac	Makefile	/^LTLIBflac = libflac_plugin.la$/;"	m
LTLIBfluidsynth	Makefile	/^LTLIBfluidsynth = libfluidsynth_plugin.la$/;"	m
LTLIBfreetype	Makefile	/^LTLIBfreetype = libfreetype_plugin.la$/;"	m
LTLIBgl	Makefile	/^LTLIBgl = $/;"	m
LTLIBglobalhotkeys	Makefile	/^LTLIBglobalhotkeys = libglobalhotkeys_plugin.la$/;"	m
LTLIBglwin32	Makefile	/^LTLIBglwin32 = libglwin32_plugin.la$/;"	m
LTLIBgme	Makefile	/^LTLIBgme = libgme_plugin.la$/;"	m
LTLIBgnutls	Makefile	/^LTLIBgnutls = $/;"	m
LTLIBgoom	Makefile	/^LTLIBgoom = libgoom_plugin.la$/;"	m
LTLIBgrowl	Makefile	/^LTLIBgrowl = $/;"	m
LTLIBhildon	Makefile	/^LTLIBhildon = $/;"	m
LTLIBinhibit	Makefile	/^LTLIBinhibit = $/;"	m
LTLIBiomx	Makefile	/^LTLIBiomx = $/;"	m
LTLIBjack	Makefile	/^LTLIBjack = $/;"	m
LTLIBkate	Makefile	/^LTLIBkate = libkate_plugin.la$/;"	m
LTLIBlibass	Makefile	/^LTLIBlibass = liblibass_plugin.la$/;"	m
LTLIBlibbluray	Makefile	/^LTLIBlibbluray = liblibbluray_plugin.la$/;"	m
LTLIBlibmpeg2	Makefile	/^LTLIBlibmpeg2 = liblibmpeg2_plugin.la$/;"	m
LTLIBlinsys_hdsdi	Makefile	/^LTLIBlinsys_hdsdi = $/;"	m
LTLIBlinsys_sdi	Makefile	/^LTLIBlinsys_sdi = $/;"	m
LTLIBlirc	Makefile	/^LTLIBlirc = $/;"	m
LTLIBlive555	Makefile	/^LTLIBlive555 = liblive555_plugin.la$/;"	m
LTLIBmacosx	Makefile	/^LTLIBmacosx = $/;"	m
LTLIBmacosx_dialog_provider	Makefile	/^LTLIBmacosx_dialog_provider = $/;"	m
LTLIBmce	Makefile	/^LTLIBmce = $/;"	m
LTLIBmedia_library	Makefile	/^LTLIBmedia_library = $/;"	m
LTLIBminimal_macosx	Makefile	/^LTLIBminimal_macosx = $/;"	m
LTLIBmkv	Makefile	/^LTLIBmkv = libmkv_plugin.la$/;"	m
LTLIBmod	Makefile	/^LTLIBmod = libmod_plugin.la$/;"	m
LTLIBmpc	Makefile	/^LTLIBmpc = libmpc_plugin.la$/;"	m
LTLIBmpgatofixed32	Makefile	/^LTLIBmpgatofixed32 = libmpgatofixed32_plugin.la$/;"	m
LTLIBmtp	Makefile	/^LTLIBmtp = $/;"	m
LTLIBmux_ogg	Makefile	/^LTLIBmux_ogg = libmux_ogg_plugin.la$/;"	m
LTLIBncurses	Makefile	/^LTLIBncurses = $/;"	m
LTLIBnotify	Makefile	/^LTLIBnotify = $/;"	m
LTLIBogg	Makefile	/^LTLIBogg = libogg_plugin.la$/;"	m
LTLIBomxil	Makefile	/^LTLIBomxil = $/;"	m
LTLIBopencv_example	Makefile	/^LTLIBopencv_example = $/;"	m
LTLIBopencv_wrapper	Makefile	/^LTLIBopencv_wrapper = $/;"	m
LTLIBopensles_android	Makefile	/^LTLIBopensles_android = $/;"	m
LTLIBopus	Makefile	/^LTLIBopus = libopus_plugin.la$/;"	m
LTLIBosd_parser	Makefile	/^LTLIBosd_parser = libosd_parser_plugin.la$/;"	m
LTLIBosdmenu	Makefile	/^LTLIBosdmenu = libosdmenu_plugin.la$/;"	m
LTLIBpanoramix	Makefile	/^LTLIBpanoramix = libpanoramix_plugin.la$/;"	m
LTLIBpng	Makefile	/^LTLIBpng = libpng_plugin.la$/;"	m
LTLIBportaudio	Makefile	/^LTLIBportaudio = libportaudio_plugin.la$/;"	m
LTLIBpostproc	Makefile	/^LTLIBpostproc = libpostproc_plugin.la$/;"	m
LTLIBprojectm	Makefile	/^LTLIBprojectm = libprojectm_plugin.la$/;"	m
LTLIBpvr	Makefile	/^LTLIBpvr = $/;"	m
LTLIBqt4	Makefile	/^LTLIBqt4 = libqt4_plugin.la$/;"	m
LTLIBqtcapture	Makefile	/^LTLIBqtcapture = $/;"	m
LTLIBqtsound	Makefile	/^LTLIBqtsound = $/;"	m
LTLIBquartztext	Makefile	/^LTLIBquartztext = $/;"	m
LTLIBquicktime	Makefile	/^LTLIBquicktime = $/;"	m
LTLIBrealvideo	Makefile	/^LTLIBrealvideo = $/;"	m
LTLIBsamplerate	Makefile	/^LTLIBsamplerate = libsamplerate_plugin.la$/;"	m
LTLIBschroedinger	Makefile	/^LTLIBschroedinger = libschroedinger_plugin.la$/;"	m
LTLIBscreen	Makefile	/^LTLIBscreen = libscreen_plugin.la$/;"	m
LTLIBsdl_image	Makefile	/^LTLIBsdl_image = libsdl_image_plugin.la$/;"	m
LTLIBshine	Makefile	/^LTLIBshine = $/;"	m
LTLIBsid	Makefile	/^LTLIBsid = libsid_plugin.la$/;"	m
LTLIBskins2	Makefile	/^LTLIBskins2 = libskins2_plugin.la$/;"	m
LTLIBspeex	Makefile	/^LTLIBspeex = libspeex_plugin.la$/;"	m
LTLIBsqlite	Makefile	/^LTLIBsqlite = $/;"	m
LTLIBstream_out_switcher	Makefile	/^LTLIBstream_out_switcher = $/;"	m
LTLIBsvg	Makefile	/^LTLIBsvg = $/;"	m
LTLIBswscale	Makefile	/^LTLIBswscale = libswscale_plugin.la$/;"	m
LTLIBtaglib	Makefile	/^LTLIBtaglib = $/;"	m
LTLIBtelepathy	Makefile	/^LTLIBtelepathy = $/;"	m
LTLIBtelx	Makefile	/^LTLIBtelx = libtelx_plugin.la$/;"	m
LTLIBtheora	Makefile	/^LTLIBtheora = libtheora_plugin.la$/;"	m
LTLIBtremor	Makefile	/^LTLIBtremor = $/;"	m
LTLIBtwolame	Makefile	/^LTLIBtwolame = libtwolame_plugin.la$/;"	m
LTLIBudev	Makefile	/^LTLIBudev = $/;"	m
LTLIBupnp	Makefile	/^LTLIBupnp = libupnp_plugin.la$/;"	m
LTLIBvcd	Makefile	/^LTLIBvcd = libvcd_plugin.la$/;"	m
LTLIBvcdx	Makefile	/^LTLIBvcdx = $/;"	m
LTLIBvisual	Makefile	/^LTLIBvisual = libvisual_plugin.la$/;"	m
LTLIBvorbis	Makefile	/^LTLIBvorbis = libvorbis_plugin.la$/;"	m
LTLIBvout_ios	Makefile	/^LTLIBvout_ios = $/;"	m
LTLIBvout_macosx	Makefile	/^LTLIBvout_macosx = $/;"	m
LTLIBvout_sdl	Makefile	/^LTLIBvout_sdl = libvout_sdl_plugin.la$/;"	m
LTLIBwaveout	Makefile	/^LTLIBwaveout = libwaveout_plugin.la$/;"	m
LTLIBwingapi	Makefile	/^LTLIBwingapi = $/;"	m
LTLIBwingdi	Makefile	/^LTLIBwingdi = libwingdi_plugin.la$/;"	m
LTLIBwma_fixed	Makefile	/^LTLIBwma_fixed = $/;"	m
LTLIBx264	Makefile	/^LTLIBx264 = libx264_plugin.la$/;"	m
LTLIBxcb_glx	Makefile	/^LTLIBxcb_glx = $/;"	m
LTLIBxcb_xv	Makefile	/^LTLIBxcb_xv = $/;"	m
LTLIBxml	Makefile	/^LTLIBxml = libxml_plugin.la$/;"	m
LTLIBxosd	Makefile	/^LTLIBxosd = $/;"	m
LTLIBzvbi	Makefile	/^LTLIBzvbi = libzvbi_plugin.la$/;"	m
LUAC	Makefile	/^LUAC = \/usr\/bin\/luac$/;"	m
LUA_CFLAGS	Makefile	/^LUA_CFLAGS = -I\/usr\/local\/include  $/;"	m
LUA_LIBS	Makefile	/^LUA_LIBS = -L\/usr\/local\/lib -llua -lm  $/;"	m
LeafToParent	input_manager.cpp	/^static int LeafToParent( vlc_object_t *p_this, const char *psz_var,$/;"	f	file:
LeafToParent_Type	input_manager.hpp	/^    LeafToParent_Type,$/;"	e	enum:__anon1
LocationBar	components/playlist/playlist.cpp	/^LocationBar::LocationBar( PLModel *m )$/;"	f	class:LocationBar
LocationBar	components/playlist/playlist.hpp	/^class LocationBar : public QWidget$/;"	c
LocationButton	components/playlist/playlist.cpp	/^LocationButton::LocationButton( const QString &text, bool bold,$/;"	f	class:LocationButton
LocationButton	components/playlist/playlist.hpp	/^class LocationButton : public QPushButton$/;"	c
LooknfeelBox	ui/sprefs_interface.h	/^    QGroupBox *LooknfeelBox;$/;"	m	class:Ui_SPrefsInterface
LoopButton	components/controller_widget.hpp	/^class LoopButton : public QToolButton$/;"	c
LoopChanged	input_manager.cpp	/^static int LoopChanged$/;"	f	file:
LoopChanged_Type	input_manager.hpp	/^    LoopChanged_Type,$/;"	e	enum:__anon1
MACOSX_DEPLOYMENT_TARGET	Makefile	/^MACOSX_DEPLOYMENT_TARGET = $/;"	m
MAINT	Makefile	/^MAINT = $/;"	m
MAIN_TB1_DEFAULT	components/controller.hpp	37;"	d
MAIN_TB2_DEFAULT	components/controller.hpp	38;"	d
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/ylwang\/msvc\/vlc-2.0.6\/autotools\/missing makeinfo$/;"	m
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MARGIN	components/interface_widgets.hpp	/^    static const int MARGIN = 5;$/;"	m	class:BackgroundWidget
MAXIMUM	util/input_slider.cpp	53;"	d	file:
MAX_FILE_SIZE	ini/inifile.c	21;"	d	file:
MAX_LEN	remoteControlServer.hpp	4;"	d
MAX_SIZE	remoteControlServer.hpp	36;"	d
MAX_VIEW	components/playlist/playlist.cpp	128;"	d	file:
MCE_CFLAGS	Makefile	/^MCE_CFLAGS = $/;"	m
MCE_LIBS	Makefile	/^MCE_LIBS = $/;"	m
MENU_BUTTONS	components/controller.hpp	/^    MENU_BUTTONS,$/;"	e	enum:buttonType_e
MENU_GET_ACTION	extensions_manager.cpp	37;"	d	file:
MENU_GET_EXTENSION	extensions_manager.cpp	38;"	d	file:
MENU_MAP	extensions_manager.cpp	36;"	d	file:
MESSAGES_PANEL_H	ui/messages_panel.h	12;"	d
MINIMAL	components/preferences_widgets.hpp	/^                 MINIMAL,  \/\/ aka WMP12 minimal$/;"	e	enum:InterfacePreviewWidget::enum_style
MINIMIZED_LONGTEXT	qt4.cpp	104;"	d	file:
MINIMIZED_TEXT	qt4.cpp	103;"	d	file:
MINIMUM	util/input_slider.cpp	52;"	d	file:
MINIZIP_CFLAGS	Makefile	/^MINIZIP_CFLAGS = -I\\${top_srcdir}\/modules\/access\/zip\/unzip$/;"	m
MINIZIP_LIBS	Makefile	/^MINIZIP_LIBS = \\${top_builddir}\/modules\/access\/zip\/unzip\/libunzip.la$/;"	m
MINWIDTH_BOX	components/preferences_widgets.cpp	55;"	d	file:
MJPEGMux	ui/profiles.h	/^    QRadioButton *MJPEGMux;$/;"	m	class:Ui_Profiles
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKVMux	ui/profiles.h	/^    QRadioButton *MKVMux;$/;"	m	class:Ui_Profiles
MLAppendDialog	dialogs_provider.cpp	/^void DialogsProvider::MLAppendDialog( int tab )$/;"	f	class:DialogsProvider
MLAppendDir	dialogs_provider.cpp	/^void DialogsProvider::MLAppendDir()$/;"	f	class:DialogsProvider
MLConfDialog	dialogs/ml_configuration.cpp	/^MLConfDialog::MLConfDialog( QWidget *parent, intf_thread_t *_p_intf )$/;"	f	class:MLConfDialog
MLConfDialog	dialogs/ml_configuration.hpp	/^class MLConfDialog : public QVLCDialog$/;"	c
MLDirModel	dialogs/ml_configuration.hpp	/^    MLDirModel( const QStringList &nameFilters, QDir::Filters filters,$/;"	f	class:MLDirModel
MLDirModel	dialogs/ml_configuration.hpp	/^class MLDirModel : public QDirModel$/;"	c
MLItem	components/playlist/ml_item.cpp	/^MLItem::MLItem( const MLModel *p_model,$/;"	f	class:MLItem
MLItem	components/playlist/ml_item.hpp	/^class MLItem$/;"	c
MLModel	components/playlist/ml_model.cpp	/^MLModel::MLModel( intf_thread_t* _p_intf, QObject *parent )$/;"	f	class:MLModel
MLModel	components/playlist/ml_model.hpp	/^class MLModel : public VLCModel$/;"	c
MMSHDestBox	components/sout/sout_widgets.cpp	/^MMSHDestBox::MMSHDestBox( QWidget *_parent ) : VirtualDestBox( _parent )$/;"	f	class:MMSHDestBox
MMSHDestBox	components/sout/sout_widgets.hpp	/^class MMSHDestBox: public VirtualDestBox$/;"	c
MMSHEdit	components/sout/sout_widgets.hpp	/^        QLineEdit *MMSHEdit;$/;"	m	class:MMSHDestBox
MMSHPort	components/sout/sout_widgets.hpp	/^        QSpinBox *MMSHPort;$/;"	m	class:MMSHDestBox
MOC	Makefile	/^MOC = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/bin\/moc$/;"	m
MODULE_NAME	Makefile	/^MODULE_NAME = `p="$@"; p="$${p\\#\\#*\/}"; p="$${p\\#lib}"; echo "$${p%_plugin*}"`$/;"	m
MOSTLYCLEANFILES	Makefile	/^MOSTLYCLEANFILES = $(UIH)$/;"	m
MOVMux	ui/profiles.h	/^    QRadioButton *MOVMux;$/;"	m	class:Ui_Profiles
MP	dialogs/mediainfo.hpp	/^    MetaPanel *MP;$/;"	m	class:MediaInfoDialog
MPEG1Mux	ui/profiles.h	/^    QRadioButton *MPEG1Mux;$/;"	m	class:Ui_Profiles
MRL	remoteControlServer.hpp	/^        MRL,$/;"	e	enum:RCInputMRL::FIELD
MSGFMT	Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT_015	Makefile	/^MSGFMT_015 = \/usr\/bin\/msgfmt$/;"	m
MSGMERGE	Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSTRTIME_MAX_SIZE	util/input_slider.hpp	34;"	d
MTP_CFLAGS	Makefile	/^MTP_CFLAGS = $/;"	m
MTP_LIBS	Makefile	/^MTP_LIBS = $/;"	m
MUX_OGG_CFLAGS	Makefile	/^MUX_OGG_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
MUX_OGG_LIBS	Makefile	/^MUX_OGG_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -logg  $/;"	m
MainInputManager	input_manager.cpp	/^MainInputManager::MainInputManager( intf_thread_t *_p_intf )$/;"	f	class:MainInputManager
MainInputManager	input_manager.hpp	/^class MainInputManager : public QObject, public Singleton<MainInputManager>$/;"	c
MainInterface	main_interface.cpp	/^MainInterface::MainInterface( intf_thread_t *_p_intf ) : QVLCMW( _p_intf )$/;"	f	class:MainInterface
MainInterface	main_interface.hpp	/^class MainInterface : public QVLCMW$/;"	c
ManageDialog	dialogs/extensions.cpp	/^void ExtensionsDialogProvider::ManageDialog( extension_dialog_t *p_dialog )$/;"	f	class:ExtensionsDialogProvider
MediaInfoDialog	dialogs/mediainfo.cpp	/^MediaInfoDialog::MediaInfoDialog( intf_thread_t *_p_intf,$/;"	f	class:MediaInfoDialog
MediaInfoDialog	dialogs/mediainfo.hpp	/^class MediaInfoDialog : public QVLCFrame, public Singleton<MediaInfoDialog>$/;"	c
MenuFunc	menus.hpp	/^    MenuFunc( QMenu *_menu, int _id ) : QObject( (QObject *)_menu ),$/;"	f	class:MenuFunc
MenuFunc	menus.hpp	/^class MenuFunc : public QObject$/;"	c
MenuItemData	menus.hpp	/^    MenuItemData( QObject* parent, vlc_object_t *_p_obj, int _i_type,$/;"	f	class:MenuItemData
MenuItemData	menus.hpp	/^class MenuItemData : public QObject$/;"	c
MessagesDialog	dialogs/messages.cpp	/^MessagesDialog::MessagesDialog( intf_thread_t *_p_intf)$/;"	f	class:MessagesDialog
MessagesDialog	dialogs/messages.hpp	/^class MessagesDialog : public QVLCFrame, public Singleton<MessagesDialog>$/;"	c
MetaChanged_Type	input_manager.hpp	/^    MetaChanged_Type,$/;"	e	enum:__anon1
MetaPanel	components/info_panels.cpp	/^MetaPanel::MetaPanel( QWidget *parent,$/;"	f	class:MetaPanel
MetaPanel	components/info_panels.hpp	/^class MetaPanel: public QWidget$/;"	c
MiscPopupMenu	menus.cpp	/^void VLCMenuBar::MiscPopupMenu( intf_thread_t *p_intf, bool show )$/;"	f	class:VLCMenuBar
ModuleConfigControl	components/preferences_widgets.cpp	/^ModuleConfigControl::ModuleConfigControl( vlc_object_t *_p_this,$/;"	f	class:ModuleConfigControl
ModuleConfigControl	components/preferences_widgets.hpp	/^class ModuleConfigControl : public VStringConfigControl$/;"	c
ModuleFromWidgetName	components/extended_panels.cpp	/^const QString ModuleFromWidgetName( QObject *obj )$/;"	f
ModuleListConfigControl	components/preferences_widgets.cpp	/^ModuleListConfigControl::ModuleListConfigControl( vlc_object_t *_p_this,$/;"	f	class:ModuleListConfigControl
ModuleListConfigControl	components/preferences_widgets.hpp	/^class ModuleListConfigControl : public VStringConfigControl$/;"	c
MsgCallback	dialogs/messages.cpp	/^void MessagesDialog::MsgCallback( void *self, int type, const msg_item_t *item,$/;"	f	class:MessagesDialog
MsgEvent	dialogs/messages.cpp	/^MsgEvent::MsgEvent( int type, const msg_item_t *msg, const char *text )$/;"	f	class:MsgEvent
MsgEvent	dialogs/messages.cpp	/^class MsgEvent : public QEvent$/;"	c	file:
MsgEventType	qt4.hpp	/^    MsgEventType    = 300,$/;"	e	enum:__anon9
MsgEvent_Type	dialogs/messages.cpp	/^    MsgEvent_Type = QEvent::User + MsgEventType + 1,$/;"	e	enum:__anon8	file:
NAME	remoteControlServer.hpp	/^        NAME,$/;"	e	enum:RCInputMRL::FIELD
NAME_ROLE	components/playlist/selector.hpp	/^    NAME_ROLE,           \/\/QString$/;"	e	enum:__anon18
NB_PROFILE	components/sout/profiles.hpp	1;"	d
NCURSES_CFLAGS	Makefile	/^NCURSES_CFLAGS = $/;"	m
NCURSES_LIBS	Makefile	/^NCURSES_LIBS = $/;"	m
NEON_CFLAGS	Makefile	/^NEON_CFLAGS = $/;"	m
NEXT_ACTION	actions_manager.hpp	/^    NEXT_ACTION,$/;"	e	enum:actionType_e
NEXT_BUTTON	components/controller.hpp	/^    NEXT_BUTTON,$/;"	e	enum:buttonType_e
NEXT_FAST_BUTTON	components/controller.hpp	/^    NEXT_FAST_BUTTON,$/;"	e	enum:buttonType_e
NM	Makefile	/^NM = \/usr\/bin\/i586-mingw32msvc-nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NOEPG_WIDGET	components/epg/EPGWidget.cpp	/^    NOEPG_WIDGET = 1$/;"	e	enum:__anon25	file:
NORMAL	input_manager.hpp	/^enum { NORMAL,    \/* loop: 0, repeat: 0 *\/$/;"	e	enum:__anon2
NORMAL_BUTTON	components/controller.cpp	220;"	d	file:
NORMAL_BUTTON	components/controller.cpp	505;"	d	file:
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOTIFICATION_LONGTEXT	qt4.cpp	118;"	d	file:
NOTIFICATION_TEXT	qt4.cpp	117;"	d	file:
NOTIFY_CFLAGS	Makefile	/^NOTIFY_CFLAGS = $/;"	m
NOTIFY_LIBS	Makefile	/^NOTIFY_LIBS = $/;"	m
NULL	Makefile	/^NULL = $/;"	m
NUM_CP_CTRL	components/extended_panels.hpp	40;"	d
NUM_SP_CTRL	components/extended_panels.hpp	41;"	d
NameChanged_Type	input_manager.hpp	/^    NameChanged_Type,$/;"	e	enum:__anon1
NavigMenu	menus.cpp	/^QMenu *VLCMenuBar::NavigMenu( intf_thread_t *p_intf, QMenu *menu )$/;"	f	class:VLCMenuBar
NavigMenu	menus.hpp	/^    static QMenu *NavigMenu( intf_thread_t *p_intf, QWidget *parent ) {$/;"	f	class:VLCMenuBar
NetOpenPanel	components/open_panels.cpp	/^NetOpenPanel::NetOpenPanel( QWidget *_parent, intf_thread_t *_p_intf ) :$/;"	f	class:NetOpenPanel
NetOpenPanel	components/open_panels.hpp	/^class NetOpenPanel: public OpenPanel$/;"	c
NoReflection	util/pictureflow.hpp	/^        NoReflection,$/;"	e	enum:PictureFlow::ReflectionEffect
None	components/open_panels.hpp	/^        None,$/;"	e	enum:DiscOpenPanel::DiscType
OBJC	Makefile	/^OBJC = i586-mingw32msvc-gcc$/;"	m
OBJCDEPMODE	Makefile	/^OBJCDEPMODE = depmode=gcc3$/;"	m
OBJCFLAGS	Makefile	/^OBJCFLAGS =  -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  -ffast-math -funroll-loops -fomit-frame-pointer$/;"	m
OBJCFLAGS_growl	Makefile	/^OBJCFLAGS_growl = $/;"	m
OBJCFLAGS_macosx	Makefile	/^OBJCFLAGS_macosx = $/;"	m
OBJCFLAGS_minimal_macosx	Makefile	/^OBJCFLAGS_minimal_macosx = $/;"	m
OBJCOPY	Makefile	/^OBJCOPY = i586-mingw32msvc-objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = i586-mingw32msvc-objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OGG_CFLAGS	Makefile	/^OGG_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
OGG_LIBS	Makefile	/^OGG_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -logg  $/;"	m
OPACITY_FS_LONGTEXT	qt4.cpp	133;"	d	file:
OPACITY_FS_TEXT	qt4.cpp	132;"	d	file:
OPACITY_LONGTEXT	qt4.cpp	127;"	d	file:
OPACITY_TEXT	qt4.cpp	126;"	d	file:
OPENCV_CFLAGS	Makefile	/^OPENCV_CFLAGS = $/;"	m
OPENCV_LIBS	Makefile	/^OPENCV_LIBS = $/;"	m
OPEN_ACTION	actions_manager.hpp	/^    OPEN_ACTION,$/;"	e	enum:actionType_e
OPEN_AND_ENQUEUE	dialogs/open.hpp	/^    OPEN_AND_ENQUEUE,$/;"	e	enum:__anon5
OPEN_AND_PLAY	dialogs/open.hpp	/^    OPEN_AND_PLAY,$/;"	e	enum:__anon5
OPEN_AND_SAVE	dialogs/open.hpp	/^    OPEN_AND_SAVE,$/;"	e	enum:__anon5
OPEN_AND_STREAM	dialogs/open.hpp	/^    OPEN_AND_STREAM,$/;"	e	enum:__anon5
OPEN_BUTTON	components/controller.hpp	/^    OPEN_BUTTON,$/;"	e	enum:buttonType_e
OPEN_CAPTURE_H	ui/open_capture.h	12;"	d
OPEN_CAPTURE_TAB	dialogs/open.hpp	/^    OPEN_CAPTURE_TAB,$/;"	e	enum:__anon4
OPEN_DISC_TAB	dialogs/open.hpp	/^    OPEN_DISC_TAB,$/;"	e	enum:__anon4
OPEN_DISK_H	ui/open_disk.h	12;"	d
OPEN_FILE_H	ui/open_file.h	12;"	d
OPEN_FILE_TAB	dialogs/open.hpp	/^    OPEN_FILE_TAB,$/;"	e	enum:__anon4
OPEN_H	ui/open.h	12;"	d
OPEN_NETWORK_TAB	dialogs/open.hpp	/^    OPEN_NETWORK_TAB,$/;"	e	enum:__anon4
OPEN_NET_H	ui/open_net.h	12;"	d
OPEN_SUB_ACTION	actions_manager.hpp	/^    OPEN_SUB_ACTION,$/;"	e	enum:actionType_e
OPEN_SUB_BUTTON	components/controller.hpp	/^    OPEN_SUB_BUTTON,$/;"	e	enum:buttonType_e
OPEN_TAB_MAX	dialogs/open.hpp	/^    OPEN_TAB_MAX$/;"	e	enum:__anon4
OPUS_CFLAGS	Makefile	/^OPUS_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/opus  $/;"	m
OPUS_LIBS	Makefile	/^OPUS_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -logg -lopus  $/;"	m
OSDBox	ui/sprefs_subtitles.h	/^    QCheckBox *OSDBox;$/;"	m	class:Ui_SPrefsSubtitles
OSDTitleBox	ui/sprefs_subtitles.h	/^    QCheckBox *OSDTitleBox;$/;"	m	class:Ui_SPrefsSubtitles
OSDTitlePos	ui/sprefs_subtitles.h	/^    QComboBox *OSDTitlePos;$/;"	m	class:Ui_SPrefsSubtitles
OSDTitlePosLabel	ui/sprefs_subtitles.h	/^    QLabel *OSDTitlePosLabel;$/;"	m	class:Ui_SPrefsSubtitles
OSS_LIBS	Makefile	/^OSS_LIBS = $/;"	m
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
OggMux	ui/profiles.h	/^    QRadioButton *OggMux;$/;"	m	class:Ui_Profiles
OnStop	remoteControlServer.cpp	/^void *OnStop( void * data) {$/;"	f
OneInterfaceBox	ui/sprefs_interface.h	/^    QGroupBox *OneInterfaceBox;$/;"	m	class:Ui_SPrefsInterface
OneInterfaceMode	ui/sprefs_interface.h	/^    QCheckBox *OneInterfaceMode;$/;"	m	class:Ui_SPrefsInterface
Open	qt4.cpp	/^static int Open( vlc_object_t *p_this, bool isDialogProvider )$/;"	f	file:
Open	ui/open.h	/^    class Open: public Ui_Open {};$/;"	c	namespace:Ui
OpenCapture	ui/open_capture.h	/^    class OpenCapture: public Ui_OpenCapture {};$/;"	c	namespace:Ui
OpenDialog	dialogs/open.cpp	/^OpenDialog::OpenDialog( QWidget *parent,$/;"	f	class:OpenDialog
OpenDialog	dialogs/open.hpp	/^class OpenDialog : public QVLCDialog$/;"	c
OpenDialogs	qt4.cpp	/^static int OpenDialogs( vlc_object_t *p_this )$/;"	f	file:
OpenDisk	ui/open_disk.h	/^    class OpenDisk: public Ui_OpenDisk {};$/;"	c	namespace:Ui
OpenFile	ui/open_file.h	/^    class OpenFile: public Ui_OpenFile {};$/;"	c	namespace:Ui
OpenIntf	qt4.cpp	/^static int OpenIntf( vlc_object_t *p_this )$/;"	f	file:
OpenNetwork	ui/open_net.h	/^    class OpenNetwork: public Ui_OpenNetwork {};$/;"	c	namespace:Ui
OpenPanel	components/open_panels.hpp	/^    OpenPanel( QWidget *p, intf_thread_t *_p_intf ) : QWidget( p )$/;"	f	class:OpenPanel
OpenPanel	components/open_panels.hpp	/^class OpenPanel: public QWidget$/;"	c
OpenUrlDialog	dialogs/openurl.cpp	/^OpenUrlDialog::OpenUrlDialog( intf_thread_t *_p_intf,$/;"	f	class:OpenUrlDialog
OpenUrlDialog	dialogs/openurl.hpp	/^class OpenUrlDialog : public QVLCDialog$/;"	c
OptionFromWidgetName	components/extended_panels.cpp	/^QString OptionFromWidgetName( QObject *obj )$/;"	f
OutputConfig	remoteControlServer.cpp	/^int AudioCommand::OutputConfig(intf_thread_t* p_intf, const char *psz_cmd,rc_value_t& newval, char* p_data) {$/;"	f	class:AudioCommand
PACKAGE	Makefile	/^PACKAGE = vlc$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = vlc$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = vlc 2.0.6$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = vlc$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 2.0.6$/;"	m
PADDING	components/playlist/playlist.cpp	404;"	d	file:
PADDING	components/playlist/playlist.cpp	452;"	d	file:
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PFREAL_ONE	util/pictureflow.cpp	48;"	d	file:
PFREAL_SHIFT	util/pictureflow.cpp	47;"	d	file:
PFreal	util/pictureflow.cpp	/^typedef long PFreal;$/;"	t	file:
PICTUREFLOW_H	util/pictureflow.hpp	29;"	d
PICTUREFLOW_VIEW	components/playlist/standardpanel.hpp	/^           PICTUREFLOW_VIEW,$/;"	e	enum:StandardPLPanel::__anon16
PKGDIR	Makefile	/^PKGDIR = vlc$/;"	m
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config --static$/;"	m
PKG_CONFIG_LIBDIR	Makefile	/^PKG_CONFIG_LIBDIR = \/root\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/pkgconfig$/;"	m
PKG_CONFIG_PATH	Makefile	/^PKG_CONFIG_PATH = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/pkgconfig:$/;"	m
PLAYBACK_BUTTONS	components/controller.hpp	/^    PLAYBACK_BUTTONS,$/;"	e	enum:buttonType_e
PLAYLIST_ACTION	actions_manager.hpp	/^    PLAYLIST_ACTION,$/;"	e	enum:actionType_e
PLAYLIST_BUTTON	components/controller.hpp	/^    PLAYLIST_BUTTON,$/;"	e	enum:buttonType_e
PLAY_ACTION	actions_manager.hpp	/^    PLAY_ACTION,$/;"	e	enum:actionType_e
PLAY_BUTTON	components/controller.hpp	/^    PLAY_BUTTON,$/;"	e	enum:buttonType_e
PLAppendDialog	dialogs_provider.cpp	/^void DialogsProvider::PLAppendDialog( int tab )$/;"	f	class:DialogsProvider
PLAppendDir	dialogs_provider.cpp	/^void DialogsProvider::PLAppendDir()$/;"	f	class:DialogsProvider
PLEmpty_Type	input_manager.hpp	/^    PLEmpty_Type$/;"	e	enum:PLEventTypes
PLEvent	input_manager.hpp	/^    PLEvent( int t, int i, int p = 0 )$/;"	f	class:PLEvent
PLEvent	input_manager.hpp	/^class PLEvent : public QEvent$/;"	c
PLEventType	qt4.hpp	/^    PLEventType     = 200,$/;"	e	enum:__anon9
PLEventTypes	input_manager.hpp	/^enum PLEventTypes$/;"	g
PLItem	components/playlist/playlist_item.cpp	/^PLItem::PLItem( playlist_item_t * p_item )$/;"	f	class:PLItem
PLItem	components/playlist/playlist_item.cpp	/^PLItem::PLItem( playlist_item_t *p_item, PLItem *parent )$/;"	f	class:PLItem
PLItem	components/playlist/playlist_item.hpp	/^class PLItem$/;"	c
PLItemAppended	input_manager.cpp	/^static int PLItemAppended$/;"	f	file:
PLItemAppended_Type	input_manager.hpp	/^    PLItemAppended_Type = QEvent::User + PLEventType + 1,$/;"	e	enum:PLEventTypes
PLItemChanged	input_manager.cpp	/^static int PLItemChanged( vlc_object_t *p_this, const char *psz_var,$/;"	f	file:
PLItemRemoved	input_manager.cpp	/^static int PLItemRemoved$/;"	f	file:
PLItemRemoved_Type	input_manager.hpp	/^    PLItemRemoved_Type,$/;"	e	enum:PLEventTypes
PLModel	components/playlist/playlist_model.cpp	/^PLModel::PLModel( playlist_t *_p_playlist,  \/* THEPL *\/$/;"	f	class:PLModel
PLModel	components/playlist/playlist_model.hpp	/^class PLModel : public VLCModel$/;"	c
PLOpenDir	dialogs_provider.cpp	/^void DialogsProvider::PLOpenDir()$/;"	f	class:DialogsProvider
PLSelItem	components/playlist/selector.cpp	/^PLSelItem::PLSelItem ( QTreeWidgetItem *i, const QString& text )$/;"	f	class:PLSelItem
PLSelItem	components/playlist/selector.hpp	/^class PLSelItem : public QWidget$/;"	c
PLSelector	components/playlist/selector.cpp	/^PLSelector::PLSelector( QWidget *p, intf_thread_t *_p_intf )$/;"	f	class:PLSelector
PLSelector	components/playlist/selector.hpp	/^class PLSelector: public QTreeWidget$/;"	c
PL_ITEM_ID_ROLE	components/playlist/selector.hpp	/^    PL_ITEM_ID_ROLE,     \/\/playlist_item_t->i_id$/;"	e	enum:__anon18
PL_ITEM_ROLE	components/playlist/selector.hpp	/^    PL_ITEM_ROLE,        \/\/playlist_item_t*$/;"	e	enum:__anon18
PL_ITEM_TYPE	components/playlist/selector.hpp	/^    PL_ITEM_TYPE,$/;"	e	enum:SelectorItemType
PODCAST_CONFIGURATION_H	ui/podcast_configuration.h	12;"	d
POPULATE_WITH_DEVS	components/open_panels.cpp	64;"	d	file:
POPUP_BOILERPLATE	menus.cpp	1096;"	d	file:
POPUP_BOILERPLATE	menus.cpp	765;"	d	file:
PORTAUDIO_CFLAGS	Makefile	/^PORTAUDIO_CFLAGS = -mthreads -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
PORTAUDIO_LIBS	Makefile	/^PORTAUDIO_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lportaudio -lwinmm -lm -lole32 -luuid  $/;"	m
POSTPROC_CFLAGS	Makefile	/^POSTPROC_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
POSTPROC_LIBS	Makefile	/^POSTPROC_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lpostproc -lavutil -lm  $/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POSUB	Makefile	/^POSUB = po$/;"	m
PREVIOUS_ACTION	actions_manager.hpp	/^    PREVIOUS_ACTION,$/;"	e	enum:actionType_e
PREVIOUS_BUTTON	components/controller.hpp	/^    PREVIOUS_BUTTON,$/;"	e	enum:buttonType_e
PREV_SLOW_BUTTON	components/controller.hpp	/^    PREV_SLOW_BUTTON,$/;"	e	enum:buttonType_e
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINT_ERR	remoteControlServer.hpp	31;"	d
PRIVACY_TEXT	qt4.cpp	149;"	d	file:
PROFILES_H	ui/profiles.h	12;"	d
PROFILE_NAME_1	dialogs/toolbar.hpp	33;"	d
PROFILE_NAME_2	dialogs/toolbar.hpp	35;"	d
PROFILE_NAME_3	dialogs/toolbar.hpp	37;"	d
PROFILE_NAME_4	dialogs/toolbar.hpp	39;"	d
PROFILE_NAME_5	dialogs/toolbar.hpp	41;"	d
PROFILE_NAME_6	dialogs/toolbar.hpp	43;"	d
PROGRAMFILES	Makefile	/^PROGRAMFILES = PROGRAMFILES$/;"	m
PROJECTM2_CFLAGS	Makefile	/^PROJECTM2_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
PROJECTM2_LIBS	Makefile	/^PROJECTM2_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lprojectM -lMilkdropPresetFactory -lRenderer -lglu32 -lglew32 -lopengl32  $/;"	m
PROJECTM_CFLAGS	Makefile	/^PROJECTM_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
PROJECTM_LIBS	Makefile	/^PROJECTM_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lprojectM -lMilkdropPresetFactory -lRenderer -lglu32 -lglew32 -lopengl32  $/;"	m
PSMux	ui/profiles.h	/^    QRadioButton *PSMux;$/;"	m	class:Ui_Profiles
PULSE_CFLAGS	Makefile	/^PULSE_CFLAGS = $/;"	m
PULSE_LIBS	Makefile	/^PULSE_LIBS = $/;"	m
PUSH_INPUTVAR	menus.cpp	209;"	d	file:
PUSH_VAR	menus.cpp	1145;"	d	file:
PUSH_VAR	menus.cpp	206;"	d	file:
PVR_DEVICE	components/open_panels.hpp	/^    PVR_DEVICE,$/;"	e	enum:__anon14
PicFlowView	components/playlist/views.cpp	/^PicFlowView::PicFlowView( PLModel *p_model, QWidget *parent ) : QAbstractItemView( parent )$/;"	f	class:PicFlowView
PicFlowView	components/playlist/views.hpp	/^class PicFlowView : public QAbstractItemView$/;"	c
PictureFlow	util/pictureflow.cpp	/^PictureFlow::PictureFlow(QWidget* parent, VLCModel* _p_model): QWidget(parent)$/;"	f	class:PictureFlow
PictureFlow	util/pictureflow.hpp	/^class PictureFlow : public QWidget$/;"	c
PictureFlowAbstractRenderer	util/pictureflow.cpp	/^    PictureFlowAbstractRenderer(): state(0), dirty(false), widget(0) {}$/;"	f	class:PictureFlowAbstractRenderer
PictureFlowAbstractRenderer	util/pictureflow.cpp	/^class PictureFlowAbstractRenderer$/;"	c	file:
PictureFlowAnimator	util/pictureflow.cpp	/^PictureFlowAnimator::PictureFlowAnimator():$/;"	f	class:PictureFlowAnimator
PictureFlowAnimator	util/pictureflow.cpp	/^class PictureFlowAnimator$/;"	c	file:
PictureFlowPrivate	util/pictureflow.cpp	/^class PictureFlowPrivate$/;"	c	file:
PictureFlowSoftwareRenderer	util/pictureflow.cpp	/^PictureFlowSoftwareRenderer::PictureFlowSoftwareRenderer():$/;"	f	class:PictureFlowSoftwareRenderer
PictureFlowSoftwareRenderer	util/pictureflow.cpp	/^class PictureFlowSoftwareRenderer: public PictureFlowAbstractRenderer$/;"	c	file:
PictureFlowState	util/pictureflow.cpp	/^PictureFlowState::PictureFlowState():$/;"	f	class:PictureFlowState
PictureFlowState	util/pictureflow.cpp	/^class PictureFlowState$/;"	c	file:
PlIconView	components/playlist/views.cpp	/^PlIconView::PlIconView( PLModel *, QWidget *parent ) : QListView( parent )$/;"	f	class:PlIconView
PlIconView	components/playlist/views.hpp	/^class PlIconView : public QListView$/;"	c
PlIconViewItemDelegate	components/playlist/views.hpp	/^    PlIconViewItemDelegate(QWidget *parent = 0) : AbstractPlViewItemDelegate( parent ) {}$/;"	f	class:PlIconViewItemDelegate
PlIconViewItemDelegate	components/playlist/views.hpp	/^class PlIconViewItemDelegate : public AbstractPlViewItemDelegate$/;"	c
PlListView	components/playlist/views.cpp	/^PlListView::PlListView( PLModel *, QWidget *parent ) : QListView( parent )$/;"	f	class:PlListView
PlListView	components/playlist/views.hpp	/^class PlListView : public QListView$/;"	c
PlListViewItemDelegate	components/playlist/views.hpp	/^    PlListViewItemDelegate(QWidget *parent = 0) : AbstractPlViewItemDelegate(parent) {}$/;"	f	class:PlListViewItemDelegate
PlListViewItemDelegate	components/playlist/views.hpp	/^class PlListViewItemDelegate : public AbstractPlViewItemDelegate$/;"	c
PlMimeData	components/playlist/playlist_model.hpp	/^    PlMimeData() {}$/;"	f	class:PlMimeData
PlMimeData	components/playlist/playlist_model.hpp	/^class PlMimeData : public QMimeData$/;"	c
PlTreeView	components/playlist/views.hpp	/^class PlTreeView : public QTreeView$/;"	c
PlainReflection	util/pictureflow.hpp	/^        PlainReflection,$/;"	e	enum:PictureFlow::ReflectionEffect
PlayButton	components/controller_widget.hpp	/^class PlayButton : public QToolButton$/;"	c
PlayListCommand	remoteControlServer.cpp	/^PlayListCommand::PlayListCommand(RCInvokerImpl* invoker) {$/;"	f	class:PlayListCommand
PlayListCommand	remoteControlServer.hpp	/^class PlayListCommand: public RCCommandImpl {$/;"	c
PlayListConfig	remoteControlServer.cpp	/^int PlayListCommand::PlayListConfig(intf_thread_t* p_intf, const char *psz_cmd,rc_value_t& newval, char* p_data) {$/;"	f	class:PlayListCommand
PlaylistDialog	dialogs/playlist.cpp	/^PlaylistDialog::PlaylistDialog( intf_thread_t *_p_intf )$/;"	f	class:PlaylistDialog
PlaylistDialog	dialogs/playlist.hpp	/^class PlaylistDialog : public QVLCMW, public Singleton<PlaylistDialog>$/;"	c
PlaylistSplitter	components/playlist/playlist.hpp	/^    PlaylistSplitter( QWidget *_parent ) : QSplitter( _parent ){}$/;"	f	class:PlaylistSplitter
PlaylistSplitter	components/playlist/playlist.hpp	/^class PlaylistSplitter : public QSplitter$/;"	c
PlaylistSplitter	components/playlist/playlist.hpp	92;"	d
PlaylistWidget	components/playlist/playlist.cpp	/^PlaylistWidget::PlaylistWidget( intf_thread_t *_p_i, QWidget *_par )$/;"	f	class:PlaylistWidget
PlaylistWidget	components/playlist/playlist.hpp	/^class PlaylistWidget : public QWidget$/;"	c
PluginDialog	dialogs/plugins.cpp	/^PluginDialog::PluginDialog( intf_thread_t *_p_intf ) : QVLCFrame( _p_intf )$/;"	f	class:PluginDialog
PluginDialog	dialogs/plugins.hpp	/^class PluginDialog : public QVLCFrame, public Singleton<PluginDialog>$/;"	c
PluginTab	dialogs/plugins.cpp	/^PluginTab::PluginTab( intf_thread_t *p_intf )$/;"	f	class:PluginTab
PluginTab	dialogs/plugins.hpp	/^class PluginTab : public QVLCFrame$/;"	c
PluginTreeItem	dialogs/plugins.hpp	/^    PluginTreeItem(QStringList &qs_item, int Type = QTreeWidgetItem::Type)$/;"	f	class:PluginTreeItem
PluginTreeItem	dialogs/plugins.hpp	/^class PluginTreeItem : public QTreeWidgetItem$/;"	c
PodcastConfigDialog	dialogs/podcast_configuration.cpp	/^PodcastConfigDialog::PodcastConfigDialog( intf_thread_t *_p_intf)$/;"	f	class:PodcastConfigDialog
PodcastConfigDialog	dialogs/podcast_configuration.hpp	/^class PodcastConfigDialog : public QVLCDialog, public Singleton<PodcastConfigDialog>$/;"	c
PodcastConfiguration	ui/podcast_configuration.h	/^    class PodcastConfiguration: public Ui_PodcastConfiguration {};$/;"	c	namespace:Ui
Populate	menus.cpp	/^QMenu * VLCMenuBar::Populate( intf_thread_t *p_intf,$/;"	f	class:VLCMenuBar
PopupMenu	menus.cpp	/^void VLCMenuBar::PopupMenu( intf_thread_t *p_intf, bool show )$/;"	f	class:VLCMenuBar
PopupMenuCB	main_interface.cpp	/^static int PopupMenuCB( vlc_object_t *p_this, const char *psz_variable,$/;"	f	file:
PopupMenuControlEntries	menus.cpp	/^void VLCMenuBar::PopupMenuControlEntries( QMenu *menu, intf_thread_t *p_intf,$/;"	f	class:VLCMenuBar
PopupMenuPlaylistEntries	menus.cpp	/^void VLCMenuBar::PopupMenuPlaylistEntries( QMenu *menu,$/;"	f	class:VLCMenuBar
PopupMenuStaticEntries	menus.cpp	/^void VLCMenuBar::PopupMenuStaticEntries( QMenu *menu )$/;"	f	class:VLCMenuBar
PositionUpdate_Type	input_manager.hpp	/^    PositionUpdate_Type = QEvent::User + IMEventType + 1,$/;"	e	enum:__anon1
PostProcLevel	ui/sprefs_input.h	/^    QSpinBox *PostProcLevel;$/;"	m	class:Ui_SPrefsInputAndCodecs
PrefsDialog	dialogs/preferences.cpp	/^PrefsDialog::PrefsDialog( QWidget *parent, intf_thread_t *_p_intf )$/;"	f	class:PrefsDialog
PrefsDialog	dialogs/preferences.hpp	/^class PrefsDialog : public QVLCDialog$/;"	c
PrefsItemData	components/complete_preferences.hpp	/^    PrefsItemData()$/;"	f	class:PrefsItemData
PrefsItemData	components/complete_preferences.hpp	/^class PrefsItemData : public QObject$/;"	c
PrefsTree	components/complete_preferences.cpp	/^PrefsTree::PrefsTree( intf_thread_t *_p_intf, QWidget *_parent ) :$/;"	f	class:PrefsTree
PrefsTree	components/complete_preferences.hpp	/^class PrefsTree : public QTreeWidget$/;"	c
PresetCallback	components/extended_panels.cpp	/^static int PresetCallback( vlc_object_t *p_this, char const *psz_cmd,$/;"	f	file:
Profiles	ui/profiles.h	/^    class Profiles: public Ui_Profiles {};$/;"	c	namespace:Ui
ProgramChanged_Type	input_manager.hpp	/^    ProgramChanged_Type,$/;"	e	enum:__anon1
QElidingLabel	util/customwidgets.cpp	/^QElidingLabel::QElidingLabel( const QString &s, Qt::TextElideMode mode, QWidget * parent )$/;"	f	class:QElidingLabel
QElidingLabel	util/customwidgets.hpp	/^class QElidingLabel : public QLabel$/;"	c
QFramelessButton	util/customwidgets.cpp	/^QFramelessButton::QFramelessButton( QWidget *parent )$/;"	f	class:QFramelessButton
QFramelessButton	util/customwidgets.hpp	/^class QFramelessButton : public QPushButton$/;"	c
QMenuView	util/qmenuview.cpp	/^QMenuView::QMenuView( QWidget * parent, int _iMaxVisibleCount )$/;"	f	class:QMenuView
QMenuView	util/qmenuview.hpp	/^class QMenuView : public QMenu$/;"	c
QModelIndex	util/qmenuview.cpp	/^Q_DECLARE_METATYPE(QModelIndex); \/\/ So we can store it in a QVariant$/;"	v
QPL_LOCK	qt4.hpp	82;"	d
QPL_UNLOCK	qt4.hpp	83;"	d
QT4_CFLAGS	Makefile	/^QT4_CFLAGS = -DQT_NODLL -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/qt4 -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/qt4\/QtCore -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/qt4\/QtGui  $/;"	m
QT4_LIBS	Makefile	/^QT4_LIBS = -Wl,--subsystem,windows -mwindows -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lqjpeg -lqtaccessiblewidgets -lQtGui -lQtCore -lrpcrt4 -loleaut32 -lole32 -luuid -lwinspool -lwinmm -lshell32 -lcomctl32 -lcomdlg32 -ladvapi32 -lgdi32 -limm32 -lwsock32  $/;"	m
QT_AUTOLOAD_EXTENSIONS_LONGTEXT	qt4.cpp	178;"	d	file:
QT_AUTOLOAD_EXTENSIONS_TEXT	qt4.cpp	177;"	d	file:
QT_BGCONE_EXPANDS_LONGTEXT	qt4.cpp	188;"	d	file:
QT_BGCONE_EXPANDS_TEXT	qt4.cpp	187;"	d	file:
QT_BGCONE_LONGTEXT	qt4.cpp	184;"	d	file:
QT_BGCONE_TEXT	qt4.cpp	183;"	d	file:
QT_DISABLE_VOLUME_KEYS_LONGTEXT	qt4.cpp	191;"	d	file:
QT_DISABLE_VOLUME_KEYS_TEXT	qt4.cpp	190;"	d	file:
QT_FULLSCREEN_TEXT	qt4.cpp	170;"	d	file:
QT_MINIMAL_MODE_TEXT	qt4.cpp	181;"	d	file:
QT_MODE_LONGTEXT	qt4.cpp	164;"	d	file:
QT_MODE_TEXT	qt4.cpp	163;"	d	file:
QT_NATIVEOPEN_TEXT	qt4.cpp	171;"	d	file:
QT_NO_CAST_TO_ASCII	qt4.hpp	36;"	d
QT_PAUSE_MINIMIZED_LONGTEXT	qt4.cpp	198;"	d	file:
QT_PAUSE_MINIMIZED_TEXT	qt4.cpp	197;"	d	file:
QT_XMAS_JOKE_DAY	qt4.hpp	139;"	d
QToolButtonExt	util/customwidgets.cpp	/^QToolButtonExt::QToolButtonExt(QWidget *parent, int ms )$/;"	f	class:QToolButtonExt
QToolButtonExt	util/customwidgets.hpp	/^class QToolButtonExt : public QToolButton$/;"	c
QUIT_ACTION	actions_manager.hpp	/^    QUIT_ACTION,$/;"	e	enum:actionType_e
QUIT_BUTTON	components/controller.hpp	/^    QUIT_BUTTON,$/;"	e	enum:buttonType_e
QVLCApp	util/qvlcapp.hpp	/^    QVLCApp( int & argc, char ** argv ) : QApplication( argc, argv, true )$/;"	f	class:QVLCApp
QVLCApp	util/qvlcapp.hpp	/^class QVLCApp : public QApplication$/;"	c
QVLCDebugLevelSpinBox	util/customwidgets.hpp	/^    QVLCDebugLevelSpinBox( QWidget *parent ) : QSpinBox( parent ) { };$/;"	f	class:QVLCDebugLevelSpinBox
QVLCDebugLevelSpinBox	util/customwidgets.hpp	/^class QVLCDebugLevelSpinBox : public QSpinBox$/;"	c
QVLCDialog	util/qvlcframe.hpp	/^    QVLCDialog( QWidget* parent, intf_thread_t *_p_intf ) :$/;"	f	class:QVLCDialog
QVLCDialog	util/qvlcframe.hpp	/^class QVLCDialog : public QDialog$/;"	c
QVLCFrame	util/qvlcframe.hpp	/^    QVLCFrame( intf_thread_t *_p_intf ) : QWidget( NULL ), p_intf( _p_intf )$/;"	f	class:QVLCFrame
QVLCFrame	util/qvlcframe.hpp	/^class QVLCFrame : public QWidget$/;"	c
QVLCInteger	variables.cpp	/^QVLCInteger::QVLCInteger (vlc_object_t *obj, const char *varname, bool inherit)$/;"	f	class:QVLCInteger
QVLCInteger	variables.hpp	/^class QVLCInteger : public QVLCVariable$/;"	c
QVLCMW	util/qvlcframe.hpp	/^    QVLCMW( intf_thread_t *_p_intf ) : QMainWindow( NULL ), p_intf( _p_intf ){}$/;"	f	class:QVLCMW
QVLCMW	util/qvlcframe.hpp	/^class QVLCMW : public QMainWindow$/;"	c
QVLCPointer	variables.cpp	/^QVLCPointer::QVLCPointer (vlc_object_t *obj, const char *varname, bool inherit)$/;"	f	class:QVLCPointer
QVLCPointer	variables.hpp	/^class QVLCPointer : public QVLCVariable$/;"	c
QVLCProgressDialog	dialogs/external.cpp	/^QVLCProgressDialog::QVLCProgressDialog (DialogHandler *parent,$/;"	f	class:QVLCProgressDialog
QVLCProgressDialog	dialogs/external.hpp	/^class QVLCProgressDialog : public QProgressDialog$/;"	c
QVLCRegistry	util/registry.cpp	/^QVLCRegistry::QVLCRegistry( HKEY rootKey )$/;"	f	class:QVLCRegistry
QVLCRegistry	util/registry.hpp	/^class QVLCRegistry$/;"	c
QVLCStackedWidget	util/customwidgets.hpp	/^    QVLCStackedWidget( QWidget *parent ) : QStackedWidget( parent ) { }$/;"	f	class:QVLCStackedWidget
QVLCStackedWidget	util/customwidgets.hpp	/^class QVLCStackedWidget : public QStackedWidget$/;"	c
QVLCTools	util/qvlcframe.hpp	/^class QVLCTools$/;"	c
QVLCUserDir	qt4.hpp	/^static inline QString QVLCUserDir( vlc_userdir_t type )$/;"	f
QVLCVariable	variables.cpp	/^QVLCVariable::QVLCVariable (vlc_object_t *obj, const char *varname, int type,$/;"	f	class:QVLCVariable
QVLCVariable	variables.hpp	/^class QVLCVariable : public QObject$/;"	c
QVLC_ACTIONS_MANAGER_H_	actions_manager.hpp	25;"	d
QVLC_BOOKMARKS_H_	dialogs/bookmarks.hpp	26;"	d
QVLC_CONTROLLER_H_	components/controller.hpp	25;"	d
QVLC_CONVERT_DIALOG_H_	dialogs/convert.hpp	25;"	d
QVLC_DIALOGS_EXTERNAL_H_	dialogs/external.hpp	22;"	d
QVLC_DIALOGS_PROVIDER_H_	dialogs_provider.hpp	26;"	d
QVLC_EPG_DIALOG_H_	dialogs/epg.hpp	24;"	d
QVLC_ERRORS_DIALOG_H_	dialogs/errors.hpp	25;"	d
QVLC_EXTENDED_DIALOG_H_	dialogs/extended.hpp	25;"	d
QVLC_GOTOTIME_DIALOG_H_	dialogs/gototime.hpp	25;"	d
QVLC_HELP_DIALOG_H_	dialogs/help.hpp	25;"	d
QVLC_H_	qt4.hpp	26;"	d
QVLC_INPUT_MANAGER_H_	input_manager.hpp	26;"	d
QVLC_MAIN_INTERFACE_H_	main_interface.hpp	26;"	d
QVLC_MEDIAINFO_DIALOG_H_	dialogs/mediainfo.hpp	26;"	d
QVLC_MENUS_H_	menus.hpp	26;"	d
QVLC_MESSAGES_DIALOG_H_	dialogs/messages.hpp	25;"	d
QVLC_OPEN_DIALOG_H_	dialogs/open.hpp	25;"	d
QVLC_OPEN_URL_H_	dialogs/openurl.hpp	25;"	d
QVLC_PLAYLIST_DIALOG_H_	dialogs/playlist.hpp	25;"	d
QVLC_PLUGIN_DIALOG_H_	dialogs/plugins.hpp	25;"	d
QVLC_PODCAST_CONFIGURATION_DIALOG_H_	dialogs/podcast_configuration.hpp	25;"	d
QVLC_PREFS_DIALOG_H_	dialogs/preferences.hpp	25;"	d
QVLC_RECENTS_H_	recents.hpp	25;"	d
QVLC_REGISTRY_H	util/registry.hpp	24;"	d
QVLC_SOUT_DIALOG_H_	dialogs/sout.hpp	25;"	d
QVLC_TOOLBAREDIT_DIALOG_H_	dialogs/toolbar.hpp	25;"	d
QVLC_UDPServer_H_	remoteControlServer.hpp	2;"	d
QVLC_VARIABLES_H_	variables.hpp	22;"	d
QVLC_VLM_DIALOG_H_	dialogs/vlm.hpp	26;"	d
QVLM_Broadcast	dialogs/vlm.hpp	/^    QVLM_Broadcast,$/;"	e	enum:__anon6
QVLM_Schedule	dialogs/vlm.hpp	/^    QVLM_Schedule,$/;"	e	enum:__anon6
QVLM_VOD	dialogs/vlm.hpp	/^    QVLM_VOD$/;"	e	enum:__anon6
Q_	ui/about.h	1;"	d
Q_	ui/equalizer.h	1;"	d
Q_	ui/messages_panel.h	1;"	d
Q_	ui/open.h	1;"	d
Q_	ui/open_capture.h	1;"	d
Q_	ui/open_disk.h	1;"	d
Q_	ui/open_file.h	1;"	d
Q_	ui/open_net.h	1;"	d
Q_	ui/podcast_configuration.h	1;"	d
Q_	ui/profiles.h	1;"	d
Q_	ui/sout.h	1;"	d
Q_	ui/sprefs_audio.h	1;"	d
Q_	ui/sprefs_input.h	1;"	d
Q_	ui/sprefs_interface.h	1;"	d
Q_	ui/sprefs_subtitles.h	1;"	d
Q_	ui/sprefs_video.h	1;"	d
Q_	ui/streampanel.h	1;"	d
Q_	ui/update.h	1;"	d
Q_	ui/video_effects.h	1;"	d
Q_	ui/vlm.h	1;"	d
Q_OBJECT	components/playlist/ml_model.hpp	/^    Q_OBJECT;$/;"	m	class:MLModel
Q_OBJECT	dialogs/ml_configuration.hpp	/^    Q_OBJECT;$/;"	m	class:MLConfDialog
Q_OBJECT	dialogs/ml_configuration.hpp	/^    Q_OBJECT;$/;"	m	class:MLDirModel
RADIO_OR_COMMAND	menus.cpp	1393;"	d	file:
RADIO_OR_COMMAND	menus.cpp	1448;"	d	file:
RANDOM_ACTION	actions_manager.hpp	/^    RANDOM_ACTION,$/;"	e	enum:actionType_e
RANDOM_BUTTON	components/controller.hpp	/^    RANDOM_BUTTON,$/;"	e	enum:buttonType_e
RANLIB	Makefile	/^RANLIB = i586-mingw32msvc-ranlib$/;"	m
RAWMux	ui/profiles.h	/^    QRadioButton *RAWMux;$/;"	m	class:Ui_Profiles
RC	Makefile	/^RC = i586-mingw32msvc-windres$/;"	m
RCAction	remoteControlServer.hpp	/^struct RCAction {$/;"	s
RCC	Makefile	/^RCC = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/bin\/rcc$/;"	m
RCCallback	remoteControlServer.cpp	/^int RCPlayListModel::RCCallback( vlc_object_t *p_this, const char * psz_cmd, vlc_value_t oldval, vlc_value_t newval, void *param) {$/;"	f	class:RCPlayListModel
RCCommandImpl	remoteControlServer.hpp	/^class RCCommandImpl {$/;"	c
RCHANDLER_ITEM_NAME	remoteControlServer.cpp	1480;"	d	file:
RCHandler	remoteControlServer.cpp	/^RCHandler::RCHandler(intf_thread_t* p_intf) {$/;"	f	class:RCHandler
RCHandler	remoteControlServer.hpp	/^class RCHandler:public RCHandlerImpl$/;"	c
RCHandlerImpl	remoteControlServer.hpp	/^class RCHandlerImpl{$/;"	c
RCInputMRL	remoteControlServer.hpp	/^    RCInputMRL() {$/;"	f	struct:RCInputMRL
RCInputMRL	remoteControlServer.hpp	/^struct RCInputMRL {$/;"	s
RCInvoker	remoteControlServer.cpp	/^RCInvoker::RCInvoker(intf_thread_t* p_intf) {$/;"	f	class:RCInvoker
RCInvoker	remoteControlServer.hpp	/^class RCInvoker :public RCInvokerImpl{$/;"	c
RCInvokerImpl	remoteControlServer.hpp	/^class RCInvokerImpl{$/;"	c
RCPlayListModel	remoteControlServer.cpp	/^RCPlayListModel::RCPlayListModel() {$/;"	f	class:RCPlayListModel
RCPlayListModel	remoteControlServer.cpp	/^RCPlayListModel::RCPlayListModel(const RCPlayListModel& other) {$/;"	f	class:RCPlayListModel
RCPlayListModel	remoteControlServer.hpp	/^class RCPlayListModel {$/;"	c
RCPlayListThreadPara	remoteControlServer.hpp	/^struct RCPlayListThreadPara {$/;"	s
RCServer	remoteControlServer.cpp	/^RCServer::RCServer(intf_thread_t* pIntf) {$/;"	f	class:RCServer
RCServer	remoteControlServer.hpp	/^class RCServer:public Thread {$/;"	c
RCStateCallback	remoteControlServer.cpp	/^RCStateCallback::RCStateCallback(intf_thread_t* p_intf):BasicCallbackImpl(),m_pIntf(p_intf){$/;"	f	class:RCStateCallback
RCStateCallback	remoteControlServer.hpp	/^class RCStateCallback:public BasicCallbackImpl {$/;"	c
RCUtil	remoteControlServer.hpp	/^class RCUtil {$/;"	c
RC_CONFIG	remoteControlServer.hpp	/^struct RC_CONFIG {$/;"	s
RC_LOGGER_MAX_LEN	rclog.h	/^const int RC_LOGGER_MAX_LEN=2000;$/;"	v
RC_LOGGER_MAX_SIZE	rclog.h	/^const int RC_LOGGER_MAX_SIZE=200;$/;"	v
RC_TAG	rclog.h	/^typedef int RC_TAG;$/;"	t
RC_VAR_ARGS	rclog.h	9;"	d
RECENTPLAY_FILTER_LONGTEXT	qt4.cpp	154;"	d	file:
RECENTPLAY_FILTER_TEXT	qt4.cpp	153;"	d	file:
RECENTPLAY_TEXT	qt4.cpp	151;"	d	file:
RECENTS_LIST_SIZE	recents.hpp	34;"	d
RECORD_ACTION	actions_manager.hpp	/^    RECORD_ACTION,$/;"	e	enum:actionType_e
RECORD_BUTTON	components/controller.hpp	/^    RECORD_BUTTON,$/;"	e	enum:buttonType_e
REMOTE_CONTROL	remoteControlServer.hpp	7;"	d
REPEAT_ALL	input_manager.hpp	/^       REPEAT_ALL,\/* loop: 1, repeat: 0 *\/$/;"	e	enum:__anon2
REPEAT_ONE	input_manager.hpp	/^       REPEAT_ONE,\/* loop: 0, repeat: 1 *\/$/;"	e	enum:__anon2
REVERSE_ACTION	actions_manager.hpp	/^    REVERSE_ACTION,$/;"	e	enum:actionType_e
REVERSE_BUTTON	components/controller.hpp	/^    REVERSE_BUTTON,$/;"	e	enum:buttonType_e
RIGHT_BRACE	ini/inifile.c	23;"	d	file:
RM_ACTION	components/playlist/selector.hpp	/^    RM_ACTION$/;"	e	enum:ItemAction
ROUNDBUTTON_H	util/buttons/RoundButton.hpp	23;"	d
RTL_UNAFFECTED_WIDGET	qt4.hpp	121;"	d
RTPDestBox	components/sout/sout_widgets.cpp	/^RTPDestBox::RTPDestBox( QWidget *_parent, const char *_mux )$/;"	f	class:RTPDestBox
RTPDestBox	components/sout/sout_widgets.hpp	/^class RTPDestBox: public VirtualDestBox$/;"	c
RTPEdit	components/sout/sout_widgets.hpp	/^        QLineEdit *RTPEdit;$/;"	m	class:RTPDestBox
RTPPort	components/sout/sout_widgets.hpp	/^        QSpinBox *RTPPort;$/;"	m	class:RTPDestBox
RTSPDestBox	components/sout/sout_widgets.cpp	/^RTSPDestBox::RTSPDestBox( QWidget *_parent ) : VirtualDestBox( _parent )$/;"	f	class:RTSPDestBox
RTSPDestBox	components/sout/sout_widgets.hpp	/^class RTSPDestBox: public VirtualDestBox$/;"	c
RTSPEdit	components/sout/sout_widgets.hpp	/^        QLineEdit *RTSPEdit;$/;"	m	class:RTSPDestBox
RTSPPort	components/sout/sout_widgets.hpp	/^        QSpinBox *RTSPPort;$/;"	m	class:RTSPDestBox
RandomChanged	input_manager.cpp	/^static int RandomChanged$/;"	f	file:
RandomChanged_Type	input_manager.hpp	/^    RandomChanged_Type,$/;"	e	enum:__anon1
ReadRegistryDouble	util/registry.cpp	/^double QVLCRegistry::ReadRegistryDouble( const char *path, const char *valueName, double default_value )$/;"	f	class:QVLCRegistry
ReadRegistryInt	util/registry.cpp	/^int QVLCRegistry::ReadRegistryInt( const char *path, const char *valueName, int default_value ) {$/;"	f	class:QVLCRegistry
ReadRegistryString	util/registry.cpp	/^char * QVLCRegistry::ReadRegistryString( const char *path, const char *valueName, const char *default_value )$/;"	f	class:QVLCRegistry
RebuildNavigMenu	menus.cpp	/^QMenu *VLCMenuBar::RebuildNavigMenu( intf_thread_t *p_intf, QMenu *menu, bool b_keep )$/;"	f	class:VLCMenuBar
RecentsMRL	recents.cpp	/^RecentsMRL::RecentsMRL( intf_thread_t *_p_intf ) : p_intf( _p_intf )$/;"	f	class:RecentsMRL
RecentsMRL	recents.hpp	/^class RecentsMRL : public QObject$/;"	c
RecordingEvent_Type	input_manager.hpp	/^    RecordingEvent_Type,$/;"	e	enum:__anon1
ReflectionEffect	util/pictureflow.hpp	/^    enum ReflectionEffect {$/;"	g	class:PictureFlow
Refresh	components/extended_panels.cpp	/^void ExtV4l2::Refresh( void )$/;"	f	class:ExtV4l2
RegisterIntf	qt4.cpp	/^static void RegisterIntf( vlc_object_t *p_this )$/;"	f	file:
RegistryKeyExists	util/registry.cpp	/^bool QVLCRegistry::RegistryKeyExists( const char *path )$/;"	f	class:QVLCRegistry
RegistryValueExists	util/registry.cpp	/^bool QVLCRegistry::RegistryValueExists( const char *path, const char *valueName )$/;"	f	class:QVLCRegistry
Remaining	components/interface_widgets.hpp	/^        Remaining,$/;"	e	enum:TimeLabel::Display
RepeatChanged	input_manager.cpp	/^static int RepeatChanged$/;"	f	file:
RepeatChanged_Type	input_manager.hpp	/^    RepeatChanged_Type,$/;"	e	enum:__anon1
RoundButton	util/buttons/DeckButtonsLayout.hpp	/^    QPointer<QAbstractButton> RoundButton;$/;"	m	class:DeckButtonsLayout
RoundButton	util/buttons/RoundButton.cpp	/^RoundButton::RoundButton( QWidget* parent )$/;"	f	class:RoundButton
RoundButton	util/buttons/RoundButton.hpp	/^class RoundButton : public QToolButton$/;"	c
Runnable	thpool.h	/^class Runnable {$/;"	c
SAMPLERATE_CFLAGS	Makefile	/^SAMPLERATE_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
SAMPLERATE_LIBS	Makefile	/^SAMPLERATE_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lsamplerate  $/;"	m
SAVEVOL_TEXT	qt4.cpp	147;"	d	file:
SCHROEDINGER_CFLAGS	Makefile	/^SCHROEDINGER_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/schroedinger-1.0 -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/orc-0.4  $/;"	m
SCHROEDINGER_LIBS	Makefile	/^SCHROEDINGER_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lschroedinger-1.0 -lorc-0.4 -lm  $/;"	m
SCREEN_DEVICE	components/open_panels.hpp	/^    SCREEN_DEVICE,$/;"	e	enum:__anon14
SDL_CFLAGS	Makefile	/^SDL_CFLAGS = -D_GNU_SOURCE=1 -Dmain=SDL_main -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/SDL  $/;"	m
SDL_IMAGE_CFLAGS	Makefile	/^SDL_IMAGE_CFLAGS = -D_GNU_SOURCE=1 -Dmain=SDL_main -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/SDL  $/;"	m
SDL_IMAGE_LIBS	Makefile	/^SDL_IMAGE_LIBS = -mwindows -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lSDL_image -ljpeg -ltiff -lmingw32 -lSDLmain -lSDL -lm -luser32 -lgdi32 -lwinmm  $/;"	m
SDL_LIBS	Makefile	/^SDL_LIBS = -mwindows -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lmingw32 -lSDLmain -lSDL -lm -luser32 -lgdi32 -lwinmm  $/;"	m
SDMapper	dialogs_provider.hpp	/^    QSignalMapper *SDMapper;$/;"	m	class:DialogsProvider
SDMenuAction	dialogs_provider.cpp	/^void DialogsProvider::SDMenuAction( const QString& data )$/;"	f	class:DialogsProvider
SD_TYPE	components/playlist/selector.hpp	/^    SD_TYPE,$/;"	e	enum:SelectorItemType
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SEEKPOINTS_HPP	adapters/seekpoints.hpp	23;"	d
SELECT	dialogs/open.hpp	/^    SELECT              \/* Special mode to select a MRL (for VLM or similar *\/$/;"	e	enum:__anon5
SETUP_VFILTER	components/extended_panels.cpp	108;"	d	file:
SETUP_VFILTER	components/extended_panels.cpp	249;"	d	file:
SETUP_VFILTER_OPTION	components/extended_panels.cpp	130;"	d	file:
SETUP_VFILTER_OPTION	components/extended_panels.cpp	250;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAPPING	components/controller.cpp	201;"	d	file:
SET_MAPPING	components/controller.cpp	628;"	d	file:
SHARD_PATHW	recents.cpp	47;"	d	file:
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SHOUT_CFLAGS	Makefile	/^SHOUT_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
SHOUT_LIBS	Makefile	/^SHOUT_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lshout -lvorbis -ltheora -lspeex -lm -logg  $/;"	m
SID_CFLAGS	Makefile	/^SID_CFLAGS = -DHAVE_UNIX -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
SID_LIBS	Makefile	/^SID_LIBS = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib\/libsidplay2.la  $/;"	m
SKINS	components/preferences_widgets.hpp	/^                 SKINS };$/;"	e	enum:InterfacePreviewWidget::enum_style
SKIPSPACE	remoteControlServer.cpp	566;"	d	file:
SKIPTRAILINGSPACE	remoteControlServer.cpp	567;"	d	file:
SKIP_BACK_ACTION	actions_manager.hpp	/^    SKIP_BACK_ACTION,$/;"	e	enum:actionType_e
SKIP_BACK_BUTTON	components/controller.hpp	/^    SKIP_BACK_BUTTON,$/;"	e	enum:buttonType_e
SKIP_FW_ACTION	actions_manager.hpp	/^    SKIP_FW_ACTION,$/;"	e	enum:actionType_e
SKIP_FW_BUTTON	components/controller.hpp	/^    SKIP_FW_BUTTON,$/;"	e	enum:buttonType_e
SLIDERCOL_LONGTEXT	qt4.cpp	158;"	d	file:
SLIDERCOL_TEXT	qt4.cpp	157;"	d	file:
SLOWER_ACTION	actions_manager.hpp	/^    SLOWER_ACTION,$/;"	e	enum:actionType_e
SLOWER_BUTTON	components/controller.hpp	/^    SLOWER_BUTTON,$/;"	e	enum:buttonType_e
SMUX	components/sout/profile_selector.cpp	416;"	d	file:
SMUX	components/sout/profile_selector.cpp	430;"	d	file:
SNAPSHOT_ACTION	actions_manager.hpp	/^    SNAPSHOT_ACTION,$/;"	e	enum:actionType_e
SNAPSHOT_BUTTON	components/controller.hpp	/^    SNAPSHOT_BUTTON,$/;"	e	enum:buttonType_e
SOCKET_LIBS	Makefile	/^SOCKET_LIBS = -lws2_32$/;"	m
SOUNDMAX	util/input_slider.cpp	567;"	d	file:
SOUNDMIN	util/input_slider.cpp	566;"	d	file:
SOURCES	Makefile	/^SOURCES = $(libqt4_plugin_la_SOURCES) \\$/;"	m
SOURCES_qt4	Makefile	/^SOURCES_qt4 = qt4.cpp menus.cpp main_interface.cpp \\$/;"	m
SOUT_H	ui/sout.h	12;"	d
SOUT_WIDGETS_H	components/sout/sout_widgets.hpp	25;"	d
SPACER	components/playlist/views.cpp	41;"	d	file:
SPECIAL_MAX	components/controller.hpp	/^    SPECIAL_MAX,$/;"	e	enum:buttonType_e
SPECIAL_ROLE	components/playlist/selector.hpp	/^    SPECIAL_ROLE,        \/\/SpecialData$/;"	e	enum:__anon18
SPEED_LABEL	components/controller.hpp	/^    SPEED_LABEL,$/;"	e	enum:buttonType_e
SPEEXDSP_CFLAGS	Makefile	/^SPEEXDSP_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
SPEEXDSP_LIBS	Makefile	/^SPEEXDSP_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lspeexdsp -lm  $/;"	m
SPEEX_CFLAGS	Makefile	/^SPEEX_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
SPEEX_LIBS	Makefile	/^SPEEX_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -logg -lspeex -lm  $/;"	m
SPLITTER	components/controller.hpp	/^    SPLITTER = 0x20,$/;"	e	enum:buttonType_e
SPREFS_AUDIO_H	ui/sprefs_audio.h	12;"	d
SPREFS_INPUT_H	ui/sprefs_input.h	12;"	d
SPREFS_INTERFACE_H	ui/sprefs_interface.h	12;"	d
SPREFS_SUBTITLES_H	ui/sprefs_subtitles.h	12;"	d
SPREFS_VIDEO_H	ui/sprefs_video.h	12;"	d
SPrefsAudio	components/simple_preferences.hpp	/^    SPrefsAudio,$/;"	e	enum:__anon19
SPrefsAudio	ui/sprefs_audio.h	/^    class SPrefsAudio: public Ui_SPrefsAudio {};$/;"	c	namespace:Ui
SPrefsAudio_zone	ui/sprefs_audio.h	/^    QWidget *SPrefsAudio_zone;$/;"	m	class:Ui_SPrefsAudio
SPrefsCatList	components/simple_preferences.cpp	/^SPrefsCatList::SPrefsCatList( intf_thread_t *_p_intf, QWidget *_parent, bool small ) :$/;"	f	class:SPrefsCatList
SPrefsCatList	components/simple_preferences.hpp	/^class SPrefsCatList : public QWidget$/;"	c
SPrefsDefaultCat	components/simple_preferences.hpp	55;"	d
SPrefsHotkeys	components/simple_preferences.hpp	/^    SPrefsHotkeys,$/;"	e	enum:__anon19
SPrefsInputAndCodecs	components/simple_preferences.hpp	/^    SPrefsInputAndCodecs,$/;"	e	enum:__anon19
SPrefsInputAndCodecs	ui/sprefs_input.h	/^    class SPrefsInputAndCodecs: public Ui_SPrefsInputAndCodecs {};$/;"	c	namespace:Ui
SPrefsInterface	components/simple_preferences.hpp	/^    SPrefsInterface = 0,$/;"	e	enum:__anon19
SPrefsInterface	ui/sprefs_interface.h	/^    class SPrefsInterface: public Ui_SPrefsInterface {};$/;"	c	namespace:Ui
SPrefsMax	components/simple_preferences.hpp	/^    SPrefsMax$/;"	e	enum:__anon19
SPrefsPanel	components/simple_preferences.cpp	/^SPrefsPanel::SPrefsPanel( intf_thread_t *_p_intf, QWidget *_parent,$/;"	f	class:SPrefsPanel
SPrefsPanel	components/simple_preferences.hpp	/^class SPrefsPanel : public QWidget$/;"	c
SPrefsSubtitles	components/simple_preferences.hpp	/^    SPrefsSubtitles,$/;"	e	enum:__anon19
SPrefsSubtitles	ui/sprefs_subtitles.h	/^    class SPrefsSubtitles: public Ui_SPrefsSubtitles {};$/;"	c	namespace:Ui
SPrefsVideo	components/simple_preferences.hpp	/^    SPrefsVideo,$/;"	e	enum:__anon19
SPrefsVideo	ui/sprefs_video.h	/^    class SPrefsVideo: public Ui_SPrefsVideo {};$/;"	c	namespace:Ui
SQLITE_CFLAGS	Makefile	/^SQLITE_CFLAGS = $/;"	m
SQLITE_LIBS	Makefile	/^SQLITE_LIBS = $/;"	m
SQL_ML_TYPE	components/playlist/selector.hpp	/^    SQL_ML_TYPE,$/;"	e	enum:SelectorItemType
START_SPREFS_CAT	components/simple_preferences.cpp	182;"	d	file:
START_SPREFS_CAT	components/simple_preferences.cpp	729;"	d	file:
STOP_ACTION	actions_manager.hpp	/^    STOP_ACTION,$/;"	e	enum:actionType_e
STOP_BUTTON	components/controller.hpp	/^    STOP_BUTTON,$/;"	e	enum:buttonType_e
STREAMPANEL_H	ui/streampanel.h	12;"	d
STRIP	Makefile	/^STRIP = i586-mingw32msvc-strip$/;"	m
SUBSDELAY_CFG_FACTOR	components/extended_panels.cpp	1486;"	d	file:
SUBSDELAY_CFG_MODE	components/extended_panels.cpp	1485;"	d	file:
SUBSDELAY_MODE_ABSOLUTE	components/extended_panels.cpp	1487;"	d	file:
SUBSDELAY_MODE_RELATIVE_SOURCE_CONTENT	components/extended_panels.cpp	1489;"	d	file:
SUBSDELAY_MODE_RELATIVE_SOURCE_DELAY	components/extended_panels.cpp	1488;"	d	file:
SUFFIXES	Makefile	/^SUFFIXES = .ui .h .hpp .moc.cpp$/;"	m
SVG_CFLAGS	Makefile	/^SVG_CFLAGS = $/;"	m
SVG_LIBS	Makefile	/^SVG_LIBS = $/;"	m
SWSCALE_CFLAGS	Makefile	/^SWSCALE_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
SWSCALE_LIBS	Makefile	/^SWSCALE_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lswscale -lavutil -lm  $/;"	m
SYS	Makefile	/^SYS = mingw32$/;"	m
SYSTRAY_LONGTEXT	qt4.cpp	99;"	d	file:
SYSTRAY_TEXT	qt4.cpp	98;"	d	file:
SaveAudioOutputDevice	remoteControlServer.cpp	/^void AudioCommand::SaveAudioOutputDevice(intf_thread_t* p_intf,RC_CONFIG& config)$/;"	f	class:AudioCommand
SaveAudioOutputDevice	remoteControlServer.cpp	/^void AudioCommand::SaveAudioOutputDevice(intf_thread_t* p_intf,RC_CONFIG& config,const char* file)$/;"	f	class:AudioCommand
SearchLineEdit	util/searchlineedit.cpp	/^SearchLineEdit::SearchLineEdit( QWidget *parent ) : QLineEdit( parent )$/;"	f	class:SearchLineEdit
SearchLineEdit	util/searchlineedit.hpp	/^class SearchLineEdit : public QLineEdit$/;"	c
SearchLineEdit	util/searchlineedit.hpp	/^class SearchLineEdit : public QMacCocoaViewContainer$/;"	c
SeekPoint	adapters/seekpoints.hpp	/^    SeekPoint( seekpoint_t *seekpoint )$/;"	f	class:SeekPoint
SeekPoint	adapters/seekpoints.hpp	/^class SeekPoint$/;"	c
SeekPoints	adapters/seekpoints.cpp	/^SeekPoints::SeekPoints( QObject *parent, intf_thread_t *p_intf_ ) :$/;"	f	class:SeekPoints
SeekPoints	adapters/seekpoints.hpp	/^class SeekPoints : public QObject$/;"	c
SeekSlider	util/input_slider.cpp	/^SeekSlider::SeekSlider( Qt::Orientation q, QWidget *_parent, bool _static )$/;"	f	class:SeekSlider
SeekSlider	util/input_slider.hpp	/^class SeekSlider : public QSlider$/;"	c
SelectorActionButton	components/playlist/selector.hpp	/^class SelectorActionButton : public QFramelessButton$/;"	c
SelectorItemType	components/playlist/selector.hpp	/^enum SelectorItemType {$/;"	g
SeparateEntries	dialogs/open.cpp	/^QStringList OpenDialog::SeparateEntries( const QString& entries )$/;"	f	class:OpenDialog
Serve	remoteControlServer.cpp	/^void* Serve(void* para) {$/;"	f
SetSizing	components/interface_widgets.cpp	/^void VideoWidget::SetSizing( unsigned int w, unsigned int h )$/;"	f	class:VideoWidget
SetVideoOnTopEvent_Type	dialogs_provider.hpp	/^    SetVideoOnTopEvent_Type = QEvent::User + DialogEventType + 4,$/;"	e	enum:__anon27
ShowDialog	qt4.cpp	/^static void ShowDialog( intf_thread_t *p_intf, int i_dialog_event, int i_arg,$/;"	f	file:
SignalDialog	dialogs/extensions.moc.cpp	/^void ExtensionsDialogProvider::SignalDialog(extension_dialog_t * _t1)$/;"	f	class:ExtensionsDialogProvider
Singleton	util/singleton.hpp	/^    Singleton(){}$/;"	f	class:Singleton
Singleton	util/singleton.hpp	/^class       Singleton$/;"	c
SlideInfo	util/pictureflow.cpp	/^struct SlideInfo {$/;"	s	file:
SoundMuteChanged	input_manager.cpp	/^static int SoundMuteChanged( vlc_object_t *p_this, const char *psz_var,$/;"	f	file:
SoundMuteChanged_Type	input_manager.hpp	/^    SoundMuteChanged_Type,$/;"	e	enum:__anon1
SoundSlider	util/input_slider.cpp	/^SoundSlider::SoundSlider( QWidget *_parent, int _i_step, bool b_hard,$/;"	f	class:SoundSlider
SoundSlider	util/input_slider.hpp	/^class SoundSlider : public QAbstractSlider$/;"	c
SoundWidget	components/controller_widget.cpp	/^SoundWidget::SoundWidget( QWidget *_parent, intf_thread_t * _p_intf,$/;"	f	class:SoundWidget
SoundWidget	components/controller_widget.hpp	/^class SoundWidget : public QWidget$/;"	c
Sout	ui/sout.h	/^    class Sout: public Ui_Sout {};$/;"	c	namespace:Ui
SoutDialog	dialogs/sout.cpp	/^SoutDialog::SoutDialog( QWidget *parent, intf_thread_t *_p_intf, const QString& inputMRL )$/;"	f	class:SoutDialog
SoutDialog	dialogs/sout.hpp	/^class SoutDialog : public QVLCDialog$/;"	c
SoutInputBox	components/sout/sout_widgets.cpp	/^SoutInputBox::SoutInputBox( QWidget *_parent, const QString& mrl ) : QGroupBox( _parent )$/;"	f	class:SoutInputBox
SoutInputBox	components/sout/sout_widgets.hpp	/^class SoutInputBox : public QGroupBox$/;"	c
SoutMrl	dialogs/sout.hpp	/^    SoutMrl( const QString& head = "")$/;"	f	class:SoutMrl
SoutMrl	dialogs/sout.hpp	/^class SoutMrl$/;"	c
Spatializer	components/extended_panels.cpp	/^Spatializer::Spatializer( intf_thread_t *_p_intf, QWidget *_parent )$/;"	f	class:Spatializer
Spatializer	components/extended_panels.hpp	/^class Spatializer: public QWidget$/;"	c
SpecialData	components/playlist/selector.hpp	/^enum SpecialData {$/;"	g
SpeedControlWidget	components/interface_widgets.cpp	/^SpeedControlWidget::SpeedControlWidget( intf_thread_t *_p_i, QWidget *_parent )$/;"	f	class:SpeedControlWidget
SpeedControlWidget	components/interface_widgets.hpp	/^class SpeedControlWidget : public QFrame$/;"	c
SpeedLabel	components/interface_widgets.cpp	/^SpeedLabel::SpeedLabel( intf_thread_t *_p_intf, QWidget *parent )$/;"	f	class:SpeedLabel
SpeedLabel	components/interface_widgets.hpp	/^class SpeedLabel : public QLabel$/;"	c
SpinningIcon	util/customwidgets.cpp	/^SpinningIcon::SpinningIcon( QWidget *parent, bool noIdleFrame )$/;"	f	class:SpinningIcon
SpinningIcon	util/customwidgets.hpp	/^class SpinningIcon : public AnimatedIcon$/;"	c
SplitterHandle	components/playlist/playlist.cpp	/^SplitterHandle::SplitterHandle( Qt::Orientation orientation, QSplitter * parent )$/;"	f	class:SplitterHandle
SplitterHandle	components/playlist/playlist.hpp	/^class SplitterHandle : public QSplitterHandle$/;"	c
StandardPLPanel	components/playlist/standardpanel.cpp	/^StandardPLPanel::StandardPLPanel( PlaylistWidget *_parent,$/;"	f	class:StandardPLPanel
StandardPLPanel	components/playlist/standardpanel.hpp	/^class StandardPLPanel: public QWidget$/;"	c
StatisticsUpdate_Type	input_manager.hpp	/^    StatisticsUpdate_Type, \/*10*\/$/;"	e	enum:__anon1
StatsTree	components/info_panels.hpp	/^    QTreeWidget *StatsTree;$/;"	m	class:InputStatsPanel
StringConfigControl	components/preferences_widgets.cpp	/^StringConfigControl::StringConfigControl( vlc_object_t *_p_this,$/;"	f	class:StringConfigControl
StringConfigControl	components/preferences_widgets.hpp	/^class StringConfigControl : public VStringConfigControl$/;"	c
StringListConfigControl	components/preferences_widgets.cpp	/^StringListConfigControl::StringListConfigControl( vlc_object_t *_p_this,$/;"	f	class:StringListConfigControl
StringListConfigControl	components/preferences_widgets.hpp	/^class StringListConfigControl : public VStringConfigControl$/;"	c
SubtitleMenu	menus.cpp	/^QMenu *VLCMenuBar::SubtitleMenu( QMenu *current )$/;"	f	class:VLCMenuBar
SyncControls	components/extended_panels.cpp	/^SyncControls::SyncControls( intf_thread_t *_p_intf, QWidget *_parent ) :$/;"	f	class:SyncControls
SyncControls	components/extended_panels.hpp	/^class SyncControls : public QWidget$/;"	c
SyncInput	dialogs/extensions.cpp	/^void ExtensionDialog::SyncInput( QObject *object )$/;"	f	class:ExtensionDialog
SyncSelection	dialogs/extensions.cpp	/^void ExtensionDialog::SyncSelection( QObject *object )$/;"	f	class:ExtensionDialog
SyncWidget	components/extended_panels.cpp	/^SyncWidget::SyncWidget( QWidget *_parent ) : QWidget( _parent )$/;"	f	class:SyncWidget
SyncWidget	components/extended_panels.hpp	/^class SyncWidget : public QWidget$/;"	c
SynchroChanged_Type	input_manager.hpp	/^    SynchroChanged_Type,$/;"	e	enum:__anon1
TAGLIB_CFLAGS	Makefile	/^TAGLIB_CFLAGS = $/;"	m
TAGLIB_LIBS	Makefile	/^TAGLIB_LIBS = $/;"	m
TAG_DEBUG	rclog.h	/^const RC_TAG TAG_DEBUG=0;$/;"	v
TAG_ERROR	rclog.h	/^const RC_TAG TAG_ERROR=3;$/;"	v
TAG_INFO	rclog.h	/^const RC_TAG TAG_INFO=1;$/;"	v
TAG_WARNING	rclog.h	/^const RC_TAG TAG_WARNING=2;$/;"	v
TELETEXT_BUTTONS	components/controller.hpp	/^    TELETEXT_BUTTONS,$/;"	e	enum:buttonType_e
TEXT_OR_VAR	menus.cpp	1221;"	d	file:
TEXT_OR_VAR	menus.cpp	1342;"	d	file:
THEAM	qt4.hpp	87;"	d
THEDP	qt4.hpp	85;"	d
THEMIM	qt4.hpp	86;"	d
THEORA_CFLAGS	Makefile	/^THEORA_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
THEORA_LIBS	Makefile	/^THEORA_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ltheoraenc -ltheoradec -logg  $/;"	m
THEPL	qt4.hpp	81;"	d
TIGER_CFLAGS	Makefile	/^TIGER_CFLAGS = $/;"	m
TIGER_LIBS	Makefile	/^TIGER_LIBS = $/;"	m
TIMETOOLTIP_H	util/timetooltip.hpp	23;"	d
TIME_LABEL	components/controller.hpp	/^    TIME_LABEL,$/;"	e	enum:buttonType_e
TIME_LABEL_ELAPSED	components/controller.hpp	/^    TIME_LABEL_ELAPSED,$/;"	e	enum:buttonType_e
TIME_LABEL_REMAINING	components/controller.hpp	/^    TIME_LABEL_REMAINING,$/;"	e	enum:buttonType_e
TIP_HEIGHT	util/timetooltip.cpp	152;"	d	file:
TIP_HEIGHT	util/timetooltip.cpp	30;"	d	file:
TITLE_EXTENSIONS_ALL	dialogs_provider.hpp	45;"	d
TITLE_EXTENSIONS_AUDIO	dialogs_provider.hpp	42;"	d
TITLE_EXTENSIONS_MEDIA	dialogs_provider.hpp	40;"	d
TITLE_EXTENSIONS_PLAYLIST	dialogs_provider.hpp	43;"	d
TITLE_EXTENSIONS_SUBTITLE	dialogs_provider.hpp	44;"	d
TITLE_EXTENSIONS_VIDEO	dialogs_provider.hpp	41;"	d
TITLE_LONGTEXT	qt4.cpp	114;"	d	file:
TITLE_TEXT	qt4.cpp	113;"	d	file:
TOGGLEV	qt4.hpp	117;"	d
TRACKS_HEIGHT	components/epg/EPGView.hpp	36;"	d
TREE_VIEW	components/playlist/standardpanel.hpp	/^           TREE_VIEW ,$/;"	e	enum:StandardPLPanel::__anon16
TSMux	ui/profiles.h	/^    QRadioButton *TSMux;$/;"	m	class:Ui_Profiles
TWOLAME_CFLAGS	Makefile	/^TWOLAME_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
TWOLAME_LIBS	Makefile	/^TWOLAME_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -ltwolame  $/;"	m
TYPE_CATEGORY	components/complete_preferences.hpp	/^    TYPE_CATEGORY,$/;"	e	enum:__anon13
TYPE_CATSUBCAT	components/complete_preferences.hpp	/^    TYPE_CATSUBCAT,$/;"	e	enum:__anon13
TYPE_MODULE	components/complete_preferences.hpp	/^    TYPE_MODULE$/;"	e	enum:__anon13
TYPE_ROLE	components/playlist/selector.hpp	/^    TYPE_ROLE = Qt::UserRole + 1,$/;"	e	enum:__anon18
TYPE_SUBCATEGORY	components/complete_preferences.hpp	/^    TYPE_SUBCATEGORY,$/;"	e	enum:__anon13
Tab	ui/open.h	/^    QTabWidget *Tab;$/;"	m	class:Ui_Open
TestCaC	components/simple_preferences.cpp	502;"	d	file:
TestCaC	components/simple_preferences.cpp	515;"	d	file:
Thread	qt4.cpp	/^static void *Thread( void *obj )$/;"	f	file:
Thread	thpool.c	/^Thread::Thread():Runnable() {$/;"	f	class:Thread
Thread	thpool.c	/^Thread::Thread(Runnable* runnable):Runnable(){$/;"	f	class:Thread
Thread	thpool.h	/^class Thread:public Runnable {$/;"	c
TimeLabel	components/interface_widgets.cpp	/^TimeLabel::TimeLabel( intf_thread_t *_p_intf, TimeLabel::Display _displayType  )$/;"	f	class:TimeLabel
TimeLabel	components/interface_widgets.hpp	/^class TimeLabel : public QLabel$/;"	c
TimeTooltip	util/timetooltip.cpp	/^TimeTooltip::TimeTooltip( QWidget *parent ) :$/;"	f	class:TimeTooltip
TimeTooltip	util/timetooltip.hpp	/^class TimeTooltip : public QWidget$/;"	c
ToolbarEditDialog	dialogs/toolbar.cpp	/^ToolbarEditDialog::ToolbarEditDialog( QWidget *_w, intf_thread_t *_p_intf)$/;"	f	class:ToolbarEditDialog
ToolbarEditDialog	dialogs/toolbar.hpp	/^class ToolbarEditDialog : public QVLCDialog$/;"	c
ToolsMenu	menus.cpp	/^QMenu *VLCMenuBar::ToolsMenu( QMenu *menu )$/;"	f	class:VLCMenuBar
ToolsMenu	menus.hpp	/^    static QMenu *ToolsMenu( QWidget *parent ) { return ToolsMenu( new QMenu( parent ) ); }$/;"	f	class:VLCMenuBar
TrackListCmp	qt4.cpp	/^struct TrackListCmp{$/;"	s	file:
TriggerClick	dialogs/extensions.cpp	/^int ExtensionDialog::TriggerClick( QObject *object )$/;"	f	class:ExtensionDialog
Type	util/buttons/BrowseButton.hpp	/^    enum Type {$/;"	g	class:BrowseButton
U2D	Makefile	/^U2D = unix2dos$/;"	m
UDEV_CFLAGS	Makefile	/^UDEV_CFLAGS = $/;"	m
UDEV_LIBS	Makefile	/^UDEV_LIBS = $/;"	m
UDErrorEvent	dialogs/help.hpp	/^static const int UDErrorEvent = QEvent::User + DialogEventType + 22;$/;"	v
UDOkEvent	dialogs/help.hpp	/^static const int UDOkEvent = QEvent::User + DialogEventType + 21;$/;"	v
UDPDestBox	components/sout/sout_widgets.cpp	/^UDPDestBox::UDPDestBox( QWidget *_parent ) : VirtualDestBox( _parent )$/;"	f	class:UDPDestBox
UDPDestBox	components/sout/sout_widgets.hpp	/^class UDPDestBox: public VirtualDestBox$/;"	c
UDPEdit	components/sout/sout_widgets.hpp	/^        QLineEdit *UDPEdit;$/;"	m	class:UDPDestBox
UDPPort	components/sout/sout_widgets.hpp	/^        QSpinBox *UDPPort;$/;"	m	class:UDPDestBox
UIC	Makefile	/^UIC = \/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/bin\/uic$/;"	m
UPDATER_DAYS_TEXT	qt4.cpp	145;"	d	file:
UPDATER_LONGTEXT	qt4.cpp	142;"	d	file:
UPDATER_TEXT	qt4.cpp	141;"	d	file:
UPDATE_AND_APPLY_TEXT	components/extended_panels.cpp	410;"	d	file:
UPDATE_AND_APPLY_TEXT	components/extended_panels.cpp	432;"	d	file:
UPDATE_FLOAT	components/info_panels.cpp	580;"	d	file:
UPDATE_FLOAT	components/info_panels.cpp	606;"	d	file:
UPDATE_H	ui/update.h	12;"	d
UPDATE_INT	components/info_panels.cpp	577;"	d	file:
UPDATE_INT	components/info_panels.cpp	605;"	d	file:
UPDATE_META	components/info_panels.cpp	194;"	d	file:
UPDATE_META	components/info_panels.cpp	251;"	d	file:
UPDATE_META_INT	components/info_panels.cpp	199;"	d	file:
UPDATE_META_INT	components/info_panels.cpp	250;"	d	file:
UPNP_CFLAGS	Makefile	/^UPNP_CFLAGS = -DPTW32_STATIC_LIB -DUPNP_STATIC_LIB -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include\/upnp  $/;"	m
UPNP_LIBS	Makefile	/^UPNP_LIBS = -DPTW32_STATIC_LIB -DUPNP_STATIC_LIB -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lupnp -lthreadutil -lixml -liphlpapi -lpthreadGC2 -lws2_32  $/;"	m
USE_NLS	Makefile	/^USE_NLS = yes$/;"	m
Ui	ui/about.h	/^namespace Ui {$/;"	n
Ui	ui/equalizer.h	/^namespace Ui {$/;"	n
Ui	ui/messages_panel.h	/^namespace Ui {$/;"	n
Ui	ui/open.h	/^namespace Ui {$/;"	n
Ui	ui/open_capture.h	/^namespace Ui {$/;"	n
Ui	ui/open_disk.h	/^namespace Ui {$/;"	n
Ui	ui/open_file.h	/^namespace Ui {$/;"	n
Ui	ui/open_net.h	/^namespace Ui {$/;"	n
Ui	ui/podcast_configuration.h	/^namespace Ui {$/;"	n
Ui	ui/profiles.h	/^namespace Ui {$/;"	n
Ui	ui/sout.h	/^namespace Ui {$/;"	n
Ui	ui/sprefs_audio.h	/^namespace Ui {$/;"	n
Ui	ui/sprefs_input.h	/^namespace Ui {$/;"	n
Ui	ui/sprefs_interface.h	/^namespace Ui {$/;"	n
Ui	ui/sprefs_subtitles.h	/^namespace Ui {$/;"	n
Ui	ui/sprefs_video.h	/^namespace Ui {$/;"	n
Ui	ui/streampanel.h	/^namespace Ui {$/;"	n
Ui	ui/update.h	/^namespace Ui {$/;"	n
Ui	ui/video_effects.h	/^namespace Ui {$/;"	n
Ui	ui/vlm.h	/^namespace Ui {$/;"	n
Ui_BroadcastPanel	ui/streampanel.h	/^class Ui_BroadcastPanel$/;"	c
Ui_EqualizerWidget	ui/equalizer.h	/^class Ui_EqualizerWidget$/;"	c
Ui_ExtVideoWidget	ui/video_effects.h	/^class Ui_ExtVideoWidget$/;"	c
Ui_Open	ui/open.h	/^class Ui_Open$/;"	c
Ui_OpenCapture	ui/open_capture.h	/^class Ui_OpenCapture$/;"	c
Ui_OpenDisk	ui/open_disk.h	/^class Ui_OpenDisk$/;"	c
Ui_OpenFile	ui/open_file.h	/^class Ui_OpenFile$/;"	c
Ui_OpenNetwork	ui/open_net.h	/^class Ui_OpenNetwork$/;"	c
Ui_PodcastConfiguration	ui/podcast_configuration.h	/^class Ui_PodcastConfiguration$/;"	c
Ui_Profiles	ui/profiles.h	/^class Ui_Profiles$/;"	c
Ui_SPrefsAudio	ui/sprefs_audio.h	/^class Ui_SPrefsAudio$/;"	c
Ui_SPrefsInputAndCodecs	ui/sprefs_input.h	/^class Ui_SPrefsInputAndCodecs$/;"	c
Ui_SPrefsInterface	ui/sprefs_interface.h	/^class Ui_SPrefsInterface$/;"	c
Ui_SPrefsSubtitles	ui/sprefs_subtitles.h	/^class Ui_SPrefsSubtitles$/;"	c
Ui_SPrefsVideo	ui/sprefs_video.h	/^class Ui_SPrefsVideo$/;"	c
Ui_Sout	ui/sout.h	/^class Ui_Sout$/;"	c
Ui_Vlm	ui/vlm.h	/^class Ui_Vlm$/;"	c
Ui_aboutWidget	ui/about.h	/^class Ui_aboutWidget$/;"	c
Ui_messagesPanelWidget	ui/messages_panel.h	/^class Ui_messagesPanelWidget$/;"	c
Ui_updateWidget	ui/update.h	/^class Ui_updateWidget$/;"	c
UpdateAout	input_manager.cpp	/^void InputManager::UpdateAout()$/;"	f	class:InputManager
UpdateArt	input_manager.cpp	/^void InputManager::UpdateArt()$/;"	f	class:InputManager
UpdateCaching	input_manager.cpp	/^void InputManager::UpdateCaching()$/;"	f	class:InputManager
UpdateCallback	dialogs/help.cpp	/^static void UpdateCallback( void *data, bool b_ret )$/;"	f	file:
UpdateDialog	dialogs/help.cpp	/^UpdateDialog::UpdateDialog( intf_thread_t *_p_intf ) : QVLCFrame( _p_intf )$/;"	f	class:UpdateDialog
UpdateDialog	dialogs/help.hpp	/^class UpdateDialog : public QVLCFrame, public Singleton<UpdateDialog>$/;"	c
UpdateEPG	input_manager.cpp	/^void InputManager::UpdateEPG()$/;"	f	class:InputManager
UpdateExtDialog	dialogs/extensions.cpp	/^ExtensionDialog* ExtensionsDialogProvider::UpdateExtDialog($/;"	f	class:ExtensionsDialogProvider
UpdateInfo	input_manager.cpp	/^inline void InputManager::UpdateInfo()$/;"	f	class:InputManager
UpdateItem	menus.cpp	/^void VLCMenuBar::UpdateItem( intf_thread_t *p_intf, QMenu *menu,$/;"	f	class:VLCMenuBar
UpdateMeta	input_manager.cpp	/^inline void InputManager::UpdateMeta( input_item_t *p_item )$/;"	f	class:InputManager
UpdateMeta	input_manager.cpp	/^inline void InputManager::UpdateMeta()$/;"	f	class:InputManager
UpdateName	input_manager.cpp	/^void InputManager::UpdateName()$/;"	f	class:InputManager
UpdateNavigation	input_manager.cpp	/^void InputManager::UpdateNavigation()$/;"	f	class:InputManager
UpdateOrDownload	dialogs/help.cpp	/^void UpdateDialog::UpdateOrDownload()$/;"	f	class:UpdateDialog
UpdatePosition	input_manager.cpp	/^void InputManager::UpdatePosition()$/;"	f	class:InputManager
UpdateProgramEvent	input_manager.cpp	/^void InputManager::UpdateProgramEvent()$/;"	f	class:InputManager
UpdateRate	input_manager.cpp	/^void InputManager::UpdateRate()$/;"	f	class:InputManager
UpdateRecord	input_manager.cpp	/^void InputManager::UpdateRecord()$/;"	f	class:InputManager
UpdateStats	input_manager.cpp	/^inline void InputManager::UpdateStats()$/;"	f	class:InputManager
UpdateStatus	input_manager.cpp	/^void InputManager::UpdateStatus()$/;"	f	class:InputManager
UpdateTeletext	input_manager.cpp	/^void InputManager::UpdateTeletext()$/;"	f	class:InputManager
UpdateVout	input_manager.cpp	/^void InputManager::UpdateVout()$/;"	f	class:InputManager
UpdateWidget	dialogs/extensions.cpp	/^QWidget* ExtensionDialog::UpdateWidget( extension_widget_t *p_widget )$/;"	f	class:ExtensionDialog
UpdateWidgets	dialogs/extensions.cpp	/^void ExtensionDialog::UpdateWidgets()$/;"	f	class:ExtensionDialog
UrlValidator	components/open_panels.hpp	/^   UrlValidator( QObject *parent ) : QValidator( parent ) { }$/;"	f	class:UrlValidator
UrlValidator	components/open_panels.hpp	/^class UrlValidator : public QValidator$/;"	c
V4L2_DEVICE	components/open_panels.hpp	/^    V4L2_DEVICE,$/;"	e	enum:__anon14
VALUE_1	dialogs/toolbar.hpp	34;"	d
VALUE_2	dialogs/toolbar.hpp	36;"	d
VALUE_3	dialogs/toolbar.hpp	38;"	d
VALUE_4	dialogs/toolbar.hpp	40;"	d
VALUE_5	dialogs/toolbar.hpp	42;"	d
VALUE_6	dialogs/toolbar.hpp	44;"	d
VAL_RC_CONFIG	qt4.cpp	/^RC_CONFIG VAL_RC_CONFIG;$/;"	v
VAL_RC_DEFAULT_PORT	remoteControlServer.hpp	/^const int VAL_RC_DEFAULT_PORT=6000;$/;"	v
VERSION	Makefile	/^VERSION = 2.0.6$/;"	m
VERSION_EXTRA	Makefile	/^VERSION_EXTRA = 0$/;"	m
VERSION_MAJOR	Makefile	/^VERSION_MAJOR = 2$/;"	m
VERSION_MESSAGE	Makefile	/^VERSION_MESSAGE = 2.0.6 Twoflower$/;"	m
VERSION_MINOR	Makefile	/^VERSION_MINOR = 0$/;"	m
VERSION_REVISION	Makefile	/^VERSION_REVISION = 6$/;"	m
VFloatConfigControl	components/preferences_widgets.hpp	/^    VFloatConfigControl( vlc_object_t *a, module_config_t *b ) :$/;"	f	class:VFloatConfigControl
VFloatConfigControl	components/preferences_widgets.hpp	/^    VFloatConfigControl( vlc_object_t *a, module_config_t *b, QWidget *c ) :$/;"	f	class:VFloatConfigControl
VFloatConfigControl	components/preferences_widgets.hpp	/^class VFloatConfigControl : public ConfigControl$/;"	c
VIDEO_EFFECTS_H	ui/video_effects.h	12;"	d
VIEW_COUNT	components/playlist/standardpanel.hpp	/^           VIEW_COUNT };$/;"	e	enum:StandardPLPanel::__anon16
VISIBLE	qt4.hpp	115;"	d
VIntConfigControl	components/preferences_widgets.hpp	/^    VIntConfigControl( vlc_object_t *a, module_config_t *b ) :$/;"	f	class:VIntConfigControl
VIntConfigControl	components/preferences_widgets.hpp	/^    VIntConfigControl( vlc_object_t *a, module_config_t *b, QWidget *c ) :$/;"	f	class:VIntConfigControl
VIntConfigControl	components/preferences_widgets.hpp	/^class VIntConfigControl : public ConfigControl$/;"	c
VLCKeyToString	util/customwidgets.cpp	/^QString VLCKeyToString( unsigned val )$/;"	f
VLCMenuBar	menus.hpp	/^class VLCMenuBar : public QObject$/;"	c
VLCModel	components/playlist/vlc_model.cpp	/^VLCModel::VLCModel( intf_thread_t *_p_intf, QObject *parent )$/;"	f	class:VLCModel
VLCModel	components/playlist/vlc_model.hpp	/^class VLCModel : public QAbstractItemModel$/;"	c
VLCProfileEditor	components/sout/profile_selector.cpp	/^VLCProfileEditor::VLCProfileEditor( const QString& qs_name, const QString& value,$/;"	f	class:VLCProfileEditor
VLCProfileEditor	components/sout/profile_selector.hpp	/^class VLCProfileEditor : public QVLCDialog$/;"	c
VLCProfileSelector	components/sout/profile_selector.cpp	/^VLCProfileSelector::VLCProfileSelector( QWidget *_parent ): QWidget( _parent )$/;"	f	class:VLCProfileSelector
VLCProfileSelector	components/sout/profile_selector.hpp	/^class VLCProfileSelector : public QWidget$/;"	c
VLMAWidget	dialogs/vlm.cpp	/^VLMAWidget::VLMAWidget( const QString& _name, const QString& _input,$/;"	f	class:VLMAWidget
VLMAWidget	dialogs/vlm.hpp	/^class VLMAWidget : public QGroupBox$/;"	c
VLMBroadcast	dialogs/vlm.cpp	/^VLMBroadcast::VLMBroadcast( const QString& _name, const QString& _input,$/;"	f	class:VLMBroadcast
VLMBroadcast	dialogs/vlm.hpp	/^class VLMBroadcast : public VLMAWidget$/;"	c
VLMDialog	dialogs/vlm.cpp	/^VLMDialog::VLMDialog( intf_thread_t *_p_intf ) : QVLCDialog( (QWidget*)_p_intf->p_sys->p_mi, _p_intf )$/;"	f	class:VLMDialog
VLMDialog	dialogs/vlm.hpp	/^class VLMDialog : public QVLCDialog, public Singleton<VLMDialog>$/;"	c
VLMSchedule	dialogs/vlm.cpp	/^VLMSchedule::VLMSchedule( const QString& name, const QString& input,$/;"	f	class:VLMSchedule
VLMSchedule	dialogs/vlm.hpp	/^class VLMSchedule : public VLMAWidget$/;"	c
VLMVod	dialogs/vlm.cpp	/^VLMVod::VLMVod( const QString& name, const QString& input,$/;"	f	class:VLMVod
VLMVod	dialogs/vlm.hpp	/^class VLMVod : public VLMAWidget$/;"	c
VLMWrapper	dialogs/vlm.cpp	/^VLMWrapper::VLMWrapper( vlm_t *_p_vlm )$/;"	f	class:VLMWrapper
VLMWrapper	dialogs/vlm.hpp	/^class VLMWrapper$/;"	c
VLM_H	ui/vlm.h	12;"	d
VOLUME	components/controller.hpp	/^    VOLUME,$/;"	e	enum:buttonType_e
VOLUME_MAX	components/controller_widget.hpp	94;"	d
VOLUME_SPECIAL	components/controller.hpp	/^    VOLUME_SPECIAL,$/;"	e	enum:buttonType_e
VORBIS_CFLAGS	Makefile	/^VORBIS_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
VORBIS_LIBS	Makefile	/^VORBIS_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lvorbisenc -lvorbis -lm -logg  $/;"	m
VStringConfigControl	components/preferences_widgets.hpp	/^    VStringConfigControl( vlc_object_t *a, module_config_t *b ) :$/;"	f	class:VStringConfigControl
VStringConfigControl	components/preferences_widgets.hpp	/^    VStringConfigControl( vlc_object_t *a, module_config_t *b, QWidget *c ) :$/;"	f	class:VStringConfigControl
VStringConfigControl	components/preferences_widgets.hpp	/^class VStringConfigControl : public ConfigControl$/;"	c
ValueChange	components/extended_panels.cpp	/^void ExtV4l2::ValueChange( bool value )$/;"	f	class:ExtV4l2
ValueChange	components/extended_panels.cpp	/^void ExtV4l2::ValueChange( int value )$/;"	f	class:ExtV4l2
VbiEvent	input_manager.cpp	/^static int VbiEvent( vlc_object_t *, const char *,$/;"	f	file:
Vcd	components/open_panels.hpp	/^        Vcd,$/;"	e	enum:DiscOpenPanel::DiscType
VideoAutoMenuBuilder	menus.cpp	/^static int VideoAutoMenuBuilder( vout_thread_t *p_object,$/;"	f	file:
VideoMenu	menus.cpp	/^QMenu *VLCMenuBar::VideoMenu( intf_thread_t *p_intf, QMenu *current, bool b_subtitle )$/;"	f	class:VLCMenuBar
VideoMenu	menus.hpp	/^    static QMenu *VideoMenu( intf_thread_t *p_intf, QWidget *parent ) {$/;"	f	class:VLCMenuBar
VideoPopupMenu	menus.cpp	/^void VLCMenuBar::VideoPopupMenu( intf_thread_t *p_intf, bool show )$/;"	f	class:VLCMenuBar
VideoWidget	components/interface_widgets.cpp	/^VideoWidget::VideoWidget( intf_thread_t *_p_i )$/;"	f	class:VideoWidget
VideoWidget	components/interface_widgets.hpp	/^class VideoWidget : public QFrame$/;"	c
ViewMenu	menus.cpp	/^QMenu *VLCMenuBar::ViewMenu( intf_thread_t *p_intf, QMenu *current, MainInterface *_mi )$/;"	f	class:VLCMenuBar
VirtualDestBox	components/sout/sout_widgets.hpp	/^        VirtualDestBox( QWidget *_parent = NULL ) : QWidget( _parent ){}$/;"	f	class:VirtualDestBox
VirtualDestBox	components/sout/sout_widgets.hpp	/^class VirtualDestBox : public QWidget$/;"	c
Vlm	ui/vlm.h	/^    class Vlm: public Ui_Vlm {};$/;"	c	namespace:Ui
VolumeChanged	input_manager.cpp	/^static int VolumeChanged( vlc_object_t *p_this, const char *psz_var,$/;"	f	file:
VolumeChanged_Type	input_manager.hpp	/^    VolumeChanged_Type,$/;"	e	enum:__anon1
VolumeEntries	menus.cpp	/^static inline void VolumeEntries( intf_thread_t *p_intf, QMenu *current )$/;"	f	file:
WAVMux	ui/profiles.h	/^    QRadioButton *WAVMux;$/;"	m	class:Ui_Profiles
WEBMux	ui/profiles.h	/^    QRadioButton *WEBMux;$/;"	m	class:Ui_Profiles
WHEIGHT	util/input_slider.cpp	565;"	d	file:
WIDGET_BIG	components/controller.hpp	/^   WIDGET_BIG    = 0x2,$/;"	e	enum:__anon10
WIDGET_FLAT	components/controller.hpp	/^   WIDGET_FLAT   = 0x1,$/;"	e	enum:__anon10
WIDGET_MAX	components/controller.hpp	/^    WIDGET_MAX,$/;"	e	enum:buttonType_e
WIDGET_NORMAL	components/controller.hpp	/^   WIDGET_NORMAL = 0x0,$/;"	e	enum:__anon10
WIDGET_SHINY	components/controller.hpp	/^   WIDGET_SHINY  = 0x4,$/;"	e	enum:__anon10
WIDGET_SPACER	components/controller.hpp	/^    WIDGET_SPACER = 0x40,$/;"	e	enum:buttonType_e
WIDGET_SPACER_EXTEND	components/controller.hpp	/^    WIDGET_SPACER_EXTEND,$/;"	e	enum:buttonType_e
WINDRES	Makefile	/^WINDRES = i586-mingw32msvc-windres$/;"	m
WINE_SDK_PATH	Makefile	/^WINE_SDK_PATH = $/;"	m
WLENGTH	util/input_slider.cpp	564;"	d	file:
WM_APPCOMMAND	main_interface_win32.cpp	33;"	d	file:
WidgetListing	dialogs/toolbar.cpp	/^WidgetListing::WidgetListing( intf_thread_t *p_intf, QWidget *_parent )$/;"	f	class:WidgetListing
WidgetListing	dialogs/toolbar.hpp	/^class WidgetListing : public QListWidget$/;"	c
WidgetMapper	dialogs/extensions.hpp	/^    WidgetMapper( extension_widget_t *_p_widget ) :$/;"	f	class:WidgetMapper
WidgetMapper	dialogs/extensions.hpp	/^class WidgetMapper : public QObject$/;"	c
WindowClose	qt4.cpp	/^static void WindowClose( vout_window_t *p_wnd )$/;"	f	file:
WindowControl	qt4.cpp	/^static int WindowControl( vout_window_t *p_wnd, int i_query, va_list args )$/;"	f	file:
WindowOpen	qt4.cpp	/^static int WindowOpen( vout_window_t *p_wnd, const vout_window_cfg_t *cfg )$/;"	f	file:
WriteRegistryDouble	util/registry.cpp	/^void QVLCRegistry::WriteRegistryDouble( const char *path, const char *valueName, double value )$/;"	f	class:QVLCRegistry
WriteRegistryInt	util/registry.cpp	/^void QVLCRegistry::WriteRegistryInt( const char *path, const char *valueName, int value )$/;"	f	class:QVLCRegistry
WriteRegistryString	util/registry.cpp	/^void QVLCRegistry::WriteRegistryString( const char *path, const char *valueName, const char *value )$/;"	f	class:QVLCRegistry
X264_CFLAGS	Makefile	/^X264_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
X264_LIBS	Makefile	/^X264_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lx264  $/;"	m
XCB_CFLAGS	Makefile	/^XCB_CFLAGS = $/;"	m
XCB_COMPOSITE_CFLAGS	Makefile	/^XCB_COMPOSITE_CFLAGS = $/;"	m
XCB_COMPOSITE_LIBS	Makefile	/^XCB_COMPOSITE_LIBS = $/;"	m
XCB_KEYSYMS_CFLAGS	Makefile	/^XCB_KEYSYMS_CFLAGS = $/;"	m
XCB_KEYSYMS_LIBS	Makefile	/^XCB_KEYSYMS_LIBS = $/;"	m
XCB_LIBS	Makefile	/^XCB_LIBS = $/;"	m
XCB_RANDR_CFLAGS	Makefile	/^XCB_RANDR_CFLAGS = $/;"	m
XCB_RANDR_LIBS	Makefile	/^XCB_RANDR_LIBS = $/;"	m
XCB_SHM_CFLAGS	Makefile	/^XCB_SHM_CFLAGS = $/;"	m
XCB_SHM_LIBS	Makefile	/^XCB_SHM_LIBS = $/;"	m
XCB_XV_CFLAGS	Makefile	/^XCB_XV_CFLAGS = $/;"	m
XCB_XV_LIBS	Makefile	/^XCB_XV_LIBS = $/;"	m
XEXT_CFLAGS	Makefile	/^XEXT_CFLAGS = $/;"	m
XEXT_LIBS	Makefile	/^XEXT_LIBS = $/;"	m
XGETTEXT	Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT_015	Makefile	/^XGETTEXT_015 = \/usr\/bin\/xgettext$/;"	m
XGETTEXT_EXTRA_OPTIONS	Makefile	/^XGETTEXT_EXTRA_OPTIONS = $/;"	m
XINERAMA_CFLAGS	Makefile	/^XINERAMA_CFLAGS = $/;"	m
XINERAMA_LIBS	Makefile	/^XINERAMA_LIBS = $/;"	m
XMKMF	Makefile	/^XMKMF = $/;"	m
XPM_CFLAGS	Makefile	/^XPM_CFLAGS = $/;"	m
XPM_LIBS	Makefile	/^XPM_LIBS = $/;"	m
XPROTO_CFLAGS	Makefile	/^XPROTO_CFLAGS = $/;"	m
XPROTO_LIBS	Makefile	/^XPROTO_LIBS = $/;"	m
X_CFLAGS	Makefile	/^X_CFLAGS = $/;"	m
X_EXTRA_LIBS	Makefile	/^X_EXTRA_LIBS = $/;"	m
X_LIBS	Makefile	/^X_LIBS = $/;"	m
X_PRE_LIBS	Makefile	/^X_PRE_LIBS = $/;"	m
ZVBI_CFLAGS	Makefile	/^ZVBI_CFLAGS = -I\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/include  $/;"	m
ZVBI_LIBS	Makefile	/^ZVBI_LIBS = -L\/home\/ylwang\/msvc\/vlc-2.0.6\/contrib\/i586-mingw32msvc\/lib -lzvbi -lpthreadGC2 -lwsock32 -lm -liconv -lpng -lz  $/;"	m
_2	ui/video_effects.h	/^    QGridLayout *_2;$/;"	m	class:Ui_ExtVideoWidget
_4	ui/profiles.h	/^    QGridLayout *_4;$/;"	m	class:Ui_Profiles
_4	ui/sout.h	/^    QHBoxLayout *_4;$/;"	m	class:Ui_Sout
_4	ui/video_effects.h	/^    QGridLayout *_4;$/;"	m	class:Ui_ExtVideoWidget
_5	ui/video_effects.h	/^    QGridLayout *_5;$/;"	m	class:Ui_ExtVideoWidget
_CONTROLLER_WIDGET_H_	components/controller_widget.hpp	25;"	d
_CUSTOMWIDGETS_H_	util/customwidgets.hpp	28;"	d
_EQUALIZER_H_	components/extended_panels.hpp	26;"	d
_ICON_VIEW_H_	components/playlist/views.hpp	25;"	d
_INFOPANELS_H_	components/info_panels.hpp	27;"	d
_INPUTSLIDER_H_	util/input_slider.hpp	27;"	d
_INTFWIDGETS_H_	components/interface_widgets.hpp	27;"	d
_LOG	rclog.cpp	9;"	d	file:
_MEDIA_LIBRARY_CONFIG_H	dialogs/ml_configuration.hpp	29;"	d
_MEDIA_LIBRARY_MLITEM_H	components/playlist/ml_item.hpp	29;"	d
_MEDIA_LIBRARY_MLMODEL_H	components/playlist/ml_model.hpp	29;"	d
_OPENPANELS_H_	components/open_panels.hpp	29;"	d
_PLAYLISTWIDGET_H_	components/playlist/playlist.hpp	27;"	d
_PLAYLIST_ITEM_H_	components/playlist/playlist_item.hpp	25;"	d
_PLAYLIST_MODEL_H_	components/playlist/playlist_model.hpp	26;"	d
_PLPANELS_H_	components/playlist/standardpanel.hpp	25;"	d
_PLSEL_H_	components/playlist/selector.hpp	26;"	d
_PREFERENCESWIDGETS_H_	components/preferences_widgets.hpp	27;"	d
_PREFSTREE_H_	components/complete_preferences.hpp	25;"	d
_PROFILE_H_	components/sout/profile_selector.hpp	25;"	d
_QMENU_VIEW_H_	util/qmenuview.hpp	25;"	d
_QT_DIR_H_	util/qt_dirs.hpp	25;"	d
_QVLCFRAME_H_	util/qvlcframe.hpp	25;"	d
_QVLC_APP_H_	util/qvlcapp.hpp	26;"	d
_SEARCHLINEEDIT_H_	util/searchlineedit.hpp	28;"	d
_SIMPLEPREFS_H_	components/simple_preferences.hpp	25;"	d
_SINGLETON_HPP_	util/singleton.hpp	24;"	d
_SORTING_H_	components/playlist/sorting.h	25;"	d
_THPOOL_	thpool.h	2;"	d
_VLC_MODEL_H_	components/playlist/vlc_model.hpp	25;"	d
__STDC_CONSTANT_MACROS	components/info_panels.cpp	27;"	d	file:
__STDC_CONSTANT_MACROS	input_manager.cpp	27;"	d	file:
__STDC_CONSTANT_MACROS	menus.cpp	31;"	d	file:
__STDC_FORMAT_MACROS	components/extended_panels.cpp	25;"	d	file:
__STDC_FORMAT_MACROS	components/info_panels.cpp	26;"	d	file:
__STDC_FORMAT_MACROS	input_manager.cpp	26;"	d	file:
__STDC_FORMAT_MACROS	menus.cpp	30;"	d	file:
_inputItems	components/playlist/playlist_model.hpp	/^    QList<input_item_t*> _inputItems;$/;"	m	class:PlMimeData
_mimeData	components/playlist/playlist_model.hpp	/^    QMimeData *_mimeData;$/;"	m	class:PlMimeData
_name	components/preferences_widgets.hpp	/^    QString _name;$/;"	m	class:ConfigControl
aBitrateLabel	ui/profiles.h	/^    QLabel *aBitrateLabel;$/;"	m	class:Ui_Profiles
aBitrateSpin	ui/profiles.h	/^    QSpinBox *aBitrateSpin;$/;"	m	class:Ui_Profiles
aChannelsLabel	ui/profiles.h	/^    QLabel *aChannelsLabel;$/;"	m	class:Ui_Profiles
aChannelsSpin	ui/profiles.h	/^    QSpinBox *aChannelsSpin;$/;"	m	class:Ui_Profiles
aCodecBox	ui/profiles.h	/^    QComboBox *aCodecBox;$/;"	m	class:Ui_Profiles
aCodecLabel	ui/profiles.h	/^    QLabel *aCodecLabel;$/;"	m	class:Ui_Profiles
aSampleBox	ui/profiles.h	/^    QComboBox *aSampleBox;$/;"	m	class:Ui_Profiles
aSampleLabel	ui/profiles.h	/^    QLabel *aSampleLabel;$/;"	m	class:Ui_Profiles
aTa	components/simple_preferences.cpp	1007;"	d	file:
aTa	components/simple_preferences.cpp	971;"	d	file:
aTo	components/simple_preferences.cpp	1005;"	d	file:
aTo	components/simple_preferences.cpp	973;"	d	file:
aTv	components/simple_preferences.cpp	1006;"	d	file:
aTv	components/simple_preferences.cpp	972;"	d	file:
aboutDialog	dialogs_provider.cpp	/^void DialogsProvider::aboutDialog()$/;"	f	class:DialogsProvider
aboutWidget	ui/about.h	/^    class aboutWidget: public Ui_aboutWidget {};$/;"	c	namespace:Ui
abs_builddir	Makefile	/^abs_builddir = \/home\/ylwang\/msvc\/vlc-2.0.6\/modules\/gui\/qt4$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/ylwang\/msvc\/vlc-2.0.6\/modules\/gui\/qt4$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/ylwang\/msvc\/vlc-2.0.6$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/ylwang\/msvc\/vlc-2.0.6$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = $/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = $/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = $/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_OBJC	Makefile	/^ac_ct_OBJC = $/;"	m
accept	components/open_panels.cpp	/^void DiscOpenPanel::accept()$/;"	f	class:DiscOpenPanel
accept	components/open_panels.cpp	/^void FileOpenPanel::accept()$/;"	f	class:FileOpenPanel
accept	components/open_panels.hpp	/^    void accept(){}$/;"	f	class:FileOpenBox
accept	dialogs/podcast_configuration.cpp	/^void PodcastConfigDialog::accept()$/;"	f	class:PodcastConfigDialog
acceptButtonBox	ui/sout.h	/^    QDialogButtonBox *acceptButtonBox;$/;"	m	class:Ui_Sout
access	adapters/seekpoints.hpp	/^    bool access() { return listMutex.tryLock( 100 ); }$/;"	f	class:SeekPoints
action	components/playlist/selector.moc.cpp	/^void PLSelItem::action(PLSelItem * _t1)$/;"	f	class:PLSelItem
actionRequested	components/preferences_widgets.cpp	/^void IntegerListConfigControl::actionRequested( int i_action )$/;"	f	class:IntegerListConfigControl
actionRequested	components/preferences_widgets.cpp	/^void StringListConfigControl::actionRequested( int i_action )$/;"	f	class:StringListConfigControl
actionType_e	actions_manager.hpp	/^typedef enum actionType_e$/;"	g
actionType_e	actions_manager.hpp	/^} actionType_e;$/;"	t	typeref:enum:actionType_e
actionflag	menus.hpp	/^    enum actionflag {$/;"	g	class:VLCMenuBar
actions	components/playlist/playlist.hpp	/^    QList<QAction*> actions;$/;"	m	class:LocationBar
activate	components/playlist/standardpanel.cpp	/^void StandardPLPanel::activate( const QModelIndex &index )$/;"	f	class:StandardPLPanel
activate	util/qmenuview.cpp	/^void QMenuView::activate( QAction* action )$/;"	f	class:QMenuView
activateItem	components/playlist/ml_model.cpp	/^void MLModel::activateItem( const QModelIndex &index )$/;"	f	class:MLModel
activateItem	components/playlist/playlist_model.cpp	/^void PLModel::activateItem( const QModelIndex &index )$/;"	f	class:PLModel
activateItem	components/playlist/playlist_model.cpp	/^void PLModel::activateItem( playlist_item_t *p_item )$/;"	f	class:PLModel
activateItem	dialogs/bookmarks.cpp	/^void BookmarksDialog::activateItem( QModelIndex index )$/;"	f	class:BookmarksDialog
activateOnState	components/interface_widgets.cpp	/^void SpeedControlWidget::activateOnState()$/;"	f	class:SpeedControlWidget
activatePlayQuit	input_manager.cpp	/^void MainInputManager::activatePlayQuit( bool b_exit )$/;"	f	class:MainInputManager
activateTeletext	input_manager.cpp	/^void InputManager::activateTeletext( bool b_enable )$/;"	f	class:InputManager
activated	util/qmenuview.moc.cpp	/^void QMenuView::activated(const QModelIndex & _t1)$/;"	f	class:QMenuView
active	qt4.cpp	/^    static bool active = false;$/;"	v	file:
add	dialogs/bookmarks.cpp	/^void BookmarksDialog::add()$/;"	f	class:BookmarksDialog
add	dialogs/errors.cpp	/^void ErrorsDialog::add( bool error, const QString& title, const QString& text )$/;"	f	class:ErrorsDialog
add	dialogs/podcast_configuration.cpp	/^void PodcastConfigDialog::add()$/;"	f	class:PodcastConfigDialog
add	remoteControlServer.cpp	/^const char* RCPlayListModel::add(const char* rcmrl) {$/;"	f	class:RCPlayListModel
addAction	components/playlist/selector.cpp	/^void PLSelItem::addAction( ItemAction act, const QString& tooltip )$/;"	f	class:PLSelItem
addAction	menus.cpp	/^static inline void addAction( QMenu *_menu, QVariant val, QString title ) {$/;"	f	file:
addActionWithCheckbox	menus.cpp	/^static inline void addActionWithCheckbox( QMenu *_menu, QVariant val, QString title ) {$/;"	f	file:
addActionWithSubmenu	menus.cpp	/^static inline QMenu *addActionWithSubmenu( QMenu *_menu, QVariant val, QString title ) {$/;"	f	file:
addAsso	components/simple_preferences.cpp	/^void addAsso( QVLCRegistry *qvReg, const char *psz_ext )$/;"	f
addButton	ui/sout.h	/^    QPushButton *addButton;$/;"	m	class:Ui_Sout
addButton	ui/vlm.h	/^    QPushButton *addButton;$/;"	m	class:Ui_Vlm
addCallback	remoteControlServer.cpp	/^void RCPlayListModel::addCallback(input_thread_t* p_input) {$/;"	f	class:RCPlayListModel
addCallback	remoteControlServer.cpp	/^void RCPlayListModel::addCallback(intf_thread_t* p_intf) {$/;"	f	class:RCPlayListModel
addCallbacks	components/extended_panels.cpp	/^void Equalizer::addCallbacks( vlc_object_t *p_aout )$/;"	f	class:Equalizer
addCallbacks	components/extended_panels.cpp	/^void Spatializer::addCallbacks( vlc_object_t *p_aout )$/;"	f	class:Spatializer
addCallbacks	input_manager.cpp	/^inline void InputManager::addCallbacks()$/;"	f	class:InputManager
addChannel	components/epg/EPGChannels.cpp	/^void EPGChannels::addChannel( QString channelName )$/;"	f	class:EPGChannels
addChild	components/playlist/ml_item.cpp	/^void MLItem::addChild( MLItem *child, int row )$/;"	f	class:MLItem
addCommand	remoteControlServer.cpp	/^void RCInvoker::addCommand(const char* keyword,RCCommandImpl* impl){$/;"	f	class:RCInvoker
addDPStaticEntry	menus.cpp	/^QAction *addDPStaticEntry( QMenu *menu,$/;"	f
addDest	dialogs/sout.cpp	/^void SoutDialog::addDest( )$/;"	f	class:SoutDialog
addEPGEvent	components/epg/EPGView.cpp	/^bool EPGView::addEPGEvent( vlc_epg_event_t *data, QString channelName, bool b_current )$/;"	f	class:EPGView
addError	dialogs/errors.cpp	/^void ErrorsDialog::addError( const QString& title, const QString& text )$/;"	f	class:ErrorsDialog
addFrame	util/customwidgets.cpp	/^void AnimatedIcon::addFrame( const QPixmap &pxm, int index )$/;"	f	class:AnimatedIcon
addFromSimple	dialogs_provider.cpp	/^void DialogsProvider::addFromSimple( bool pl, bool go)$/;"	f	class:DialogsProvider
addInputButton	ui/streampanel.h	/^    QPushButton *addInputButton;$/;"	m	class:Ui_BroadcastPanel
addItem	components/playlist/selector.cpp	/^PLSelItem * PLSelector::addItem ($/;"	f	class:PLSelector
addItem	remoteControlServer.cpp	/^char* RCUtil::addItem(char* item,char* dst) {$/;"	f	class:RCUtil
addItem	util/buttons/DeckButtonsLayout.cpp	/^void DeckButtonsLayout::addItem( QLayoutItem* item )$/;"	f	class:DeckButtonsLayout
addMIMStaticEntry	menus.cpp	/^QAction* addMIMStaticEntry( intf_thread_t *p_intf,$/;"	f
addMenuToMainbar	menus.cpp	/^static inline void addMenuToMainbar( QMenu *func, QString title, QMenuBar *bar ) {$/;"	f	file:
addModuleAndLayouts	components/open_panels.cpp	1110;"	d	file:
addModuleAndLayouts	components/open_panels.cpp	747;"	d	file:
addPodcastItem	components/playlist/selector.cpp	/^PLSelItem *PLSelector::addPodcastItem( playlist_item_t *p_item )$/;"	f	class:PLSelector
addRecent	recents.cpp	/^void RecentsMRL::addRecent( const QString &mrl )$/;"	f	class:RecentsMRL
addToCachingBox	components/simple_preferences.cpp	492;"	d	file:
addToCachingBox	components/simple_preferences.cpp	500;"	d	file:
addType	components/simple_preferences.cpp	/^bool SPrefsPanel::addType( const char * psz_ext, QTreeWidgetItem* current,$/;"	f	class:SPrefsPanel
addVLMItem	dialogs/vlm.cpp	/^void VLMDialog::addVLMItem()$/;"	f	class:VLMDialog
add_color	util/input_slider.cpp	604;"	d	file:
add_colors	util/input_slider.cpp	615;"	d	file:
add_desaturated_color	util/input_slider.cpp	609;"	d	file:
adecoded_stat	components/info_panels.hpp	/^    QTreeWidgetItem *adecoded_stat;$/;"	m	class:InputStatsPanel
adevDshowW	components/open_panels.hpp	/^    StringListConfigControl *vdevDshowW, *adevDshowW;$/;"	m	class:CaptureOpenPanel
adjustEnable	ui/video_effects.h	/^    QGroupBox *adjustEnable;$/;"	m	class:Ui_ExtVideoWidget
adjustSubsDuration	components/extended_panels.cpp	/^void SyncControls::adjustSubsDuration( double f_factor )$/;"	f	class:SyncControls
adjustSubsSpeed	components/extended_panels.cpp	/^void SyncControls::adjustSubsSpeed( double f_fps )$/;"	f	class:SyncControls
adv	components/open_panels.hpp	/^    QDialog *adv;$/;"	m	class:CaptureOpenPanel
advControls	components/controller.hpp	/^    AdvControlsWidget   *advControls;$/;"	m	class:AbstractController
advMRL	components/open_panels.hpp	/^    QString advMRL;$/;"	m	class:CaptureOpenPanel
advanceAudio	components/extended_panels.cpp	/^void SyncControls::advanceAudio( double f_advance )$/;"	f	class:SyncControls
advanceSubs	components/extended_panels.cpp	/^void SyncControls::advanceSubs( double f_advance )$/;"	f	class:SyncControls
advancedButton	ui/open_capture.h	/^    QPushButton *advancedButton;$/;"	m	class:Ui_OpenCapture
advancedCheckBox	ui/open.h	/^    QCheckBox *advancedCheckBox;$/;"	m	class:Ui_Open
advancedControlsToggled	components/controller.moc.cpp	/^void ControlsWidget::advancedControlsToggled(bool _t1)$/;"	f	class:ControlsWidget
advancedDialog	components/open_panels.cpp	/^void CaptureOpenPanel::advancedDialog()$/;"	f	class:CaptureOpenPanel
advancedFrame	ui/open.h	/^    QGroupBox *advancedFrame;$/;"	m	class:Ui_Open
advancedLabel	ui/open.h	/^    QLabel *advancedLabel;$/;"	m	class:Ui_Open
advancedLineInput	ui/open.h	/^    QLineEdit *advancedLineInput;$/;"	m	class:Ui_Open
advancedTreeFilterChanged	dialogs/preferences.cpp	/^void PrefsDialog::advancedTreeFilterChanged( const QString & text )$/;"	f	class:PrefsDialog
advanced_panel	dialogs/preferences.hpp	/^    AdvPrefsPanel *advanced_panel;$/;"	m	class:PrefsDialog
advanced_tree	dialogs/preferences.hpp	/^    PrefsTree *advanced_tree;$/;"	m	class:PrefsDialog
all	dialogs/preferences.hpp	/^    QRadioButton *small,*all;$/;"	m	class:PrefsDialog
alost_stat	components/info_panels.hpp	/^    QTreeWidgetItem *alost_stat;$/;"	m	class:InputStatsPanel
alwaysOnTop	ui/sprefs_video.h	/^    QCheckBox *alwaysOnTop;$/;"	m	class:Ui_SPrefsVideo
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DEPENDENCIES_2	Makefile	/^am__DEPENDENCIES_2 = $(LTLIBVLCCORE) \\$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/flags.m4 \\$/;"	m
am__append_1	Makefile	/^am__append_1 = -D__PLUGIN__$/;"	m
am__append_2	Makefile	/^am__append_2 = main_interface_win32.cpp$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(libvlcdir)"$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__libqt4_plugin_la_SOURCES_DIST	Makefile	/^am__libqt4_plugin_la_SOURCES_DIST = qt4.cpp menus.cpp rclog.cpp remoteControlServer.cpp thpool.c ini\/inifiles.c\\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__objects_1	Makefile	/^am__objects_1 =  \\$/;"	m
am__objects_2	Makefile	/^am__objects_2 = libqt4_plugin_la-qt4.lo libqt4_plugin_la-menus.lo \\$/;"	m
am__objects_3	Makefile	/^am__objects_3 = libqt4_plugin_la-main_interface.moc.lo \\$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__uninstall_files_from_dir	Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = tar -xf -$/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 = $/;"	m
am__v_CXXLD_	Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_0	Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_1	Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXX_	Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_0	Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_1	Makefile	/^am__v_CXX_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_libqt4_plugin_la_OBJECTS	Makefile	/^am_libqt4_plugin_la_OBJECTS = $(am__objects_2)$/;"	m
angle	util/pictureflow.cpp	/^    int angle;$/;"	m	class:PictureFlowState	file:
angle	util/pictureflow.cpp	/^    int angle;$/;"	m	struct:SlideInfo	file:
animHandle	util/input_slider.hpp	/^    QPropertyAnimation *animHandle;$/;"	m	class:SeekSlider
animateTimer	util/pictureflow.cpp	/^    QTimer animateTimer;$/;"	m	class:PictureFlowAnimator	file:
animator	util/pictureflow.cpp	/^    PictureFlowAnimator* animator;$/;"	m	class:PictureFlowPrivate	file:
antiflickerEnable	ui/video_effects.h	/^    QGroupBox *antiflickerEnable;$/;"	m	class:Ui_ExtVideoWidget
antiflickerSofteningSizeSlider	ui/video_effects.h	/^    QSlider *antiflickerSofteningSizeSlider;$/;"	m	class:Ui_ExtVideoWidget
aplayed_stat	components/info_panels.hpp	/^    QTreeWidgetItem *aplayed_stat;$/;"	m	class:InputStatsPanel
appendChild	components/playlist/playlist_item.cpp	/^void PLItem::appendChild( PLItem *item )$/;"	f	class:PLItem
appendItem	components/playlist/playlist_model.cpp	/^void PlMimeData::appendItem( input_item_t *p_item )$/;"	f	class:PlMimeData
appendMedia	components/playlist/ml_model.cpp	/^int MLModel::appendMedia( ml_media_t *p_media )$/;"	f	class:MLModel
appendResult	components/playlist/ml_model.cpp	/^inline int MLModel::appendResult( const ml_result_t *p_result )$/;"	f	class:MLModel
apply	components/complete_preferences.cpp	/^void AdvPrefsPanel::apply()$/;"	f	class:AdvPrefsPanel
apply	components/simple_preferences.cpp	/^void SPrefsPanel::apply()$/;"	f	class:SPrefsPanel
applyAll	components/complete_preferences.cpp	/^void PrefsTree::applyAll()$/;"	f	class:PrefsTree
applyAttributes	components/controller.cpp	/^void AbstractController::applyAttributes( QToolButton *tmpButton, bool b_flat, bool b_big )$/;"	f	class:AbstractController
arLabel	ui/sprefs_video.h	/^    QLabel *arLabel;$/;"	m	class:Ui_SPrefsVideo
arLine	ui/sprefs_video.h	/^    QLineEdit *arLine;$/;"	m	class:Ui_SPrefsVideo
artChanged	input_manager.moc.cpp	/^void InputManager::artChanged(QString _t1)$/;"	f	class:InputManager
artContainer	components/playlist/playlist.hpp	/^    QStackedWidget *artContainer;$/;"	m	class:PlaylistWidget
artFetchLabel	ui/sprefs_interface.h	/^    QLabel *artFetchLabel;$/;"	m	class:Ui_SPrefsInterface
artFetcher	ui/sprefs_interface.h	/^    QComboBox *artFetcher;$/;"	m	class:Ui_SPrefsInterface
artUrl	input_manager.hpp	/^    QString         artUrl;$/;"	m	class:InputManager
art_cover	components/info_panels.hpp	/^    CoverArtLabel *art_cover;$/;"	m	class:MetaPanel
artist_text	components/info_panels.hpp	/^    QLineEdit *artist_text;$/;"	m	class:MetaPanel
askBoss	main_interface.moc.cpp	/^void MainInterface::askBoss()$/;"	f	class:MainInterface
askForUpdate	components/interface_widgets.cpp	/^void CoverArtLabel::askForUpdate()$/;"	f	class:CoverArtLabel
askGetVideo	main_interface.moc.cpp	/^void MainInterface::askGetVideo(WId * _t1, int * _t2, int * _t3, unsigned  * _t4, unsigned  * _t5)$/;"	f	class:MainInterface
askRaise	main_interface.moc.cpp	/^void MainInterface::askRaise()$/;"	f	class:MainInterface
askReleaseVideo	main_interface.moc.cpp	/^void MainInterface::askReleaseVideo()$/;"	f	class:MainInterface
askToQuit	main_interface.moc.cpp	/^void MainInterface::askToQuit()$/;"	f	class:MainInterface
askVideoOnTop	main_interface.moc.cpp	/^void MainInterface::askVideoOnTop(bool _t1)$/;"	f	class:MainInterface
askVideoSetFullScreen	main_interface.moc.cpp	/^void MainInterface::askVideoSetFullScreen(bool _t1)$/;"	f	class:MainInterface
askVideoToResize	main_interface.moc.cpp	/^void MainInterface::askVideoToResize(unsigned int _t1, unsigned int _t2)$/;"	f	class:MainInterface
assoButton	ui/sprefs_interface.h	/^    QPushButton *assoButton;$/;"	m	class:Ui_SPrefsInterface
assoDialog	components/simple_preferences.cpp	/^void SPrefsPanel::assoDialog()$/;"	f	class:SPrefsPanel
assocLabel	ui/sprefs_interface.h	/^    QLabel *assocLabel;$/;"	m	class:Ui_SPrefsInterface
atmoBrightnessSlider	ui/video_effects.h	/^    QSlider *atmoBrightnessSlider;$/;"	m	class:Ui_ExtVideoWidget
atmoDarknesslimitSlider	ui/video_effects.h	/^    QSlider *atmoDarknesslimitSlider;$/;"	m	class:Ui_ExtVideoWidget
atmoEdgeweightningSlider	ui/video_effects.h	/^    QSlider *atmoEdgeweightningSlider;$/;"	m	class:Ui_ExtVideoWidget
atmoEnable	ui/video_effects.h	/^    QGroupBox *atmoEnable;$/;"	m	class:Ui_ExtVideoWidget
atmoFiltermodeCombo	ui/video_effects.h	/^    QComboBox *atmoFiltermodeCombo;$/;"	m	class:Ui_ExtVideoWidget
atmoMeanlengthSlider	ui/video_effects.h	/^    QSlider *atmoMeanlengthSlider;$/;"	m	class:Ui_ExtVideoWidget
atmoMeanthresholdSlider	ui/video_effects.h	/^    QSlider *atmoMeanthresholdSlider;$/;"	m	class:Ui_ExtVideoWidget
atmoPercentnewSlider	ui/video_effects.h	/^    QSlider *atmoPercentnewSlider;$/;"	m	class:Ui_ExtVideoWidget
atmoShowdotsCheck	ui/video_effects.h	/^    QCheckBox *atmoShowdotsCheck;$/;"	m	class:Ui_ExtVideoWidget
atsc	components/open_panels.hpp	/^    QRadioButton *dvbc, *dvbs, *dvbs2, *dvbt, *dvbt2, *atsc, *cqam;$/;"	m	class:CaptureOpenPanel
audio	components/info_panels.hpp	/^    QTreeWidgetItem *audio;$/;"	m	class:InputStatsPanel
audioBox	ui/sprefs_audio.h	/^    QGroupBox *audioBox;$/;"	m	class:Ui_SPrefsAudio
audioCDRadioButton	ui/open_disk.h	/^    QRadioButton *audioCDRadioButton;$/;"	m	class:Ui_OpenDisk
audioCodec	ui/profiles.h	/^    QWidget *audioCodec;$/;"	m	class:Ui_Profiles
audioCommon	components/simple_preferences.cpp	266;"	d	file:
audioCommon	components/simple_preferences.cpp	327;"	d	file:
audioConfigInfo	remoteControlServer.hpp	/^    std::vector<std::pair<std::string,std::string> >  audioConfigInfo;$/;"	m	struct:RC_CONFIG
audioConfigKTVIndex	remoteControlServer.hpp	/^    int audioConfigKTVIndex;$/;"	m	struct:RC_CONFIG
audioConfigMovieIndex	remoteControlServer.hpp	/^    int audioConfigMovieIndex;$/;"	m	struct:RC_CONFIG
audioControl	components/simple_preferences.cpp	275;"	d	file:
audioControl	components/simple_preferences.cpp	326;"	d	file:
audioControl2	components/simple_preferences.cpp	283;"	d	file:
audioControl2	components/simple_preferences.cpp	325;"	d	file:
audioLabel	ui/open_disk.h	/^    QLabel *audioLabel;$/;"	m	class:Ui_OpenDisk
audioOutCoB	components/simple_preferences.hpp	/^       audioOutCoB,$/;"	e	enum:__anon21
audioSpin	ui/open_disk.h	/^    QSpinBox *audioSpin;$/;"	m	class:Ui_OpenDisk
author	dialogs/plugins.cpp	/^    QString name, title, description, shortdesc, author, version, url;$/;"	m	class:ExtensionCopy	file:
author	remoteControlServer.hpp	/^    std::string author;$/;"	m	struct:RCInputMRL
authorsEdit	ui/about.h	/^    QTextEdit *authorsEdit;$/;"	m	class:Ui_aboutWidget
autoscaleBox	ui/sprefs_audio.h	/^    QCheckBox *autoscaleBox;$/;"	m	class:Ui_SPrefsAudio
aviLabel	ui/sprefs_input.h	/^    QLabel *aviLabel;$/;"	m	class:Ui_SPrefsInputAndCodecs
bClipboard	dialogs/openurl.hpp	/^    bool bClipboard, bShouldEnqueue;$/;"	m	class:OpenUrlDialog
bShouldEnqueue	dialogs/openurl.hpp	/^    bool bClipboard, bShouldEnqueue;$/;"	m	class:OpenUrlDialog
b_advancedVisible	components/controller.hpp	/^    bool b_advancedVisible;$/;"	m	class:ControlsWidget
b_arrow	components/playlist/playlist.hpp	/^    bool b_arrow;$/;"	m	class:LocationButton
b_autoresize	main_interface.hpp	/^    bool                 b_autoresize;          \/\/\/< persistent resizable window$/;"	m	class:MainInterface
b_bool	remoteControlServer.hpp	/^    bool                b_bool;$/;"	m	struct:rc_value_t
b_checked	dialogs/help.hpp	/^    bool b_checked;$/;"	m	class:UpdateDialog
b_classic	util/input_slider.hpp	/^    bool b_classic;$/;"	m	class:SeekSlider
b_draging	dialogs/toolbar.hpp	/^    bool b_draging;$/;"	m	class:DroppingController
b_enabled	dialogs/vlm.hpp	/^    bool b_enabled;$/;"	m	class:VLMAWidget
b_expandPixmap	components/interface_widgets.hpp	/^    bool b_expandPixmap;$/;"	m	class:BackgroundWidget
b_failed	extensions_manager.hpp	/^    bool b_failed; \/\/\/< Flag set to true if we could not load the module$/;"	m	class:ExtensionsManager
b_first	dialogs/sout.hpp	/^    bool b_first;$/;"	m	class:SoutMrl
b_fullscreen	components/controller.hpp	/^    bool        b_fullscreen;$/;"	m	class:FullscreenControllerWidget
b_global	components/preferences_widgets.hpp	/^    bool b_global;$/;"	m	class:KeyInputDialog
b_hasPausedWhenMinimized	main_interface.hpp	/^    bool                 b_hasPausedWhenMinimized;$/;"	m	class:MainInterface
b_has_bracket	dialogs/sout.hpp	/^    bool b_has_bracket;$/;"	m	class:SoutMrl
b_hideAfterCreation	main_interface.hpp	/^    bool                 b_hideAfterCreation;$/;"	m	class:MainInterface
b_ignore_valuechanged	components/controller_widget.hpp	/^    bool                b_ignore_valuechanged;$/;"	m	class:SoundWidget
b_inEditMode	components/info_panels.hpp	/^    bool b_inEditMode;$/;"	m	class:MetaPanel
b_input_type_known	components/epg/EPGWidget.hpp	/^    bool b_input_type_known;$/;"	m	class:EPGWidget
b_interfaceFullScreen	main_interface.hpp	/^    bool                 b_interfaceFullScreen;$/;"	m	class:MainInterface
b_isDialogProvider	qt4.hpp	/^    bool b_isDialogProvider; \/* Qt mode or Skins mode *\/$/;"	m	struct:intf_sys_t
b_isDying	dialogs_provider.hpp	/^    bool b_isDying;$/;"	m	class:DialogsProvider
b_isMuted	util/input_slider.hpp	/^    bool b_isMuted;$/;"	m	class:SoundSlider
b_is_muted	components/controller_widget.hpp	/^    bool                b_is_muted;$/;"	m	class:SoundWidget
b_looped	dialogs/vlm.hpp	/^    bool b_looped;$/;"	m	class:VLMBroadcast
b_minimalView	main_interface.hpp	/^    bool                 b_minimalView;         \/\/\/< Minimal video$/;"	m	class:MainInterface
b_mouseOutside	util/input_slider.hpp	/^    bool b_mouseOutside; \/* Whether the mouse is outside or inside the Widget *\/$/;"	m	class:SoundSlider
b_mouse_over	components/controller.hpp	/^    bool b_mouse_over;$/;"	m	class:FullscreenControllerWidget
b_notificationEnabled	main_interface.hpp	/^    bool                 b_notificationEnabled; \/\/\/ Systray Notifications$/;"	m	class:MainInterface
b_pauseOnMinimize	main_interface.hpp	/^    bool                 b_pauseOnMinimize;$/;"	m	class:MainInterface
b_pl	dialogs/open.hpp	/^    bool b_pl;$/;"	m	class:OpenDialog
b_plDocked	main_interface.hpp	/^    bool                 b_plDocked;            \/\/\/< Is the playlist docked ?$/;"	m	class:MainInterface
b_playing	dialogs/vlm.hpp	/^    bool b_playing;$/;"	m	class:VLMBroadcast
b_recentList	components/open_panels.hpp	/^    bool b_recentList;$/;"	m	class:NetOpenPanel
b_recursive	dialogs/ml_configuration.hpp	/^    bool b_recursive;$/;"	m	class:MLDirModel
b_remainingTime	components/interface_widgets.hpp	/^    bool b_remainingTime;$/;"	m	class:TimeLabel
b_slow_hide_begin	components/controller.hpp	/^    bool b_slow_hide_begin;$/;"	m	class:FullscreenControllerWidget
b_small	dialogs/preferences.hpp	/^    bool b_small;$/;"	m	class:PrefsDialog
b_statusbarVisible	main_interface.hpp	/^    bool                 b_statusbarVisible;$/;"	m	class:MainInterface
b_unloading	extensions_manager.hpp	/^    bool b_unloading;  \/\/\/< Work around threads + emit issues, see isUnloading$/;"	m	class:ExtensionsManager
b_userAction	components/extended_panels.hpp	/^    bool b_userAction;$/;"	m	class:SyncControls
b_video	input_manager.hpp	/^    bool            b_video;$/;"	m	class:InputManager
b_videoEmbedded	main_interface.hpp	/^    bool                 b_videoEmbedded;       \/\/\/< Want an external Video Window$/;"	m	class:MainInterface
b_videoFullScreen	main_interface.hpp	/^    bool                 b_videoFullScreen;     \/\/\/< --fullscreen$/;"	m	class:MainInterface
b_withart	components/interface_widgets.hpp	/^    bool b_withart;$/;"	m	class:BackgroundWidget
backgroundCB	components/simple_preferences.hpp	/^enum { shadowCB, backgroundCB };$/;"	e	enum:__anon24
backgroundCheck	ui/sprefs_subtitles.h	/^    QCheckBox *backgroundCheck;$/;"	m	class:Ui_SPrefsSubtitles
backgroundColor	util/pictureflow.cpp	/^    QRgb backgroundColor;$/;"	m	class:PictureFlowState	file:
backgroundColor	util/pictureflow.cpp	/^QColor PictureFlow::backgroundColor() const$/;"	f	class:PictureFlow
backwardButton	util/buttons/DeckButtonsLayout.hpp	/^    QPointer<QAbstractButton> backwardButton;$/;"	m	class:DeckButtonsLayout
backwardItem	util/buttons/DeckButtonsLayout.hpp	/^    QWidgetItem* backwardItem;$/;"	m	class:DeckButtonsLayout
band_frequencies	components/extended_panels.cpp	/^static const QString band_frequencies[] =$/;"	v	file:
band_texts	components/extended_panels.hpp	/^    QLabel *band_texts[BANDS];$/;"	m	class:Equalizer
bands	components/extended_panels.hpp	/^    QSlider *bands[BANDS];$/;"	m	class:Equalizer
baseTime	components/epg/EPGView.cpp	/^const QDateTime& EPGView::baseTime()$/;"	f	class:EPGView
basedir	Makefile	/^basedir = gui$/;"	m
bdRadioButton	ui/open_disk.h	/^    QRadioButton *bdRadioButton;$/;"	m	class:Ui_OpenDisk
begin	dialogs/sout.hpp	/^    void begin( const QString& module )$/;"	f	class:SoutMrl
bgWidget	main_interface.hpp	/^    BackgroundWidget    *bgWidget;$/;"	m	class:MainInterface
bgcolor	util/pictureflow.cpp	/^    QRgb bgcolor;$/;"	m	class:PictureFlowSoftwareRenderer	file:
bigBox	dialogs/toolbar.hpp	/^    QCheckBox *flatBox, *bigBox, *shinyBox;$/;"	m	class:ToolbarEditDialog
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
blankSurface	util/pictureflow.cpp	/^    QImage* blankSurface;$/;"	m	class:PictureFlowSoftwareRenderer	file:
blend	util/pictureflow.cpp	/^    int blend;$/;"	m	struct:SlideInfo	file:
blendColor	util/pictureflow.cpp	/^static QRgb blendColor(QRgb c1, QRgb c2, int blend)$/;"	f	file:
blurFactorSlider	ui/video_effects.h	/^    QSlider *blurFactorSlider;$/;"	m	class:Ui_ExtVideoWidget
bookmarksChanged	input_manager.moc.cpp	/^void InputManager::bookmarksChanged()$/;"	f	class:InputManager
bookmarksDialog	dialogs_provider.cpp	/^void DialogsProvider::bookmarksDialog()$/;"	f	class:DialogsProvider
bookmarksList	dialogs/bookmarks.hpp	/^    QTreeWidget *bookmarksList;$/;"	m	class:BookmarksDialog
bottomButtonsBox	ui/messages_panel.h	/^    QDialogButtonBox *bottomButtonsBox;$/;"	m	class:Ui_messagesPanelWidget
boundingRect	components/epg/EPGItem.cpp	/^QRectF EPGItem::boundingRect() const$/;"	f	class:EPGItem
box	components/extended_panels.hpp	/^    QGroupBox *box;$/;"	m	class:ExtV4l2
brightnessSlider	ui/video_effects.h	/^    QSlider *brightnessSlider;$/;"	m	class:Ui_ExtVideoWidget
brightnessThresholdCheck	ui/video_effects.h	/^    QCheckBox *brightnessThresholdCheck;$/;"	m	class:Ui_ExtVideoWidget
browse	components/preferences_widgets.hpp	/^    QPushButton *browse;$/;"	m	class:FileConfigControl
browseDevice	components/open_panels.cpp	/^void DiscOpenPanel::browseDevice()$/;"	f	class:DiscOpenPanel
browseDiscButton	ui/open_disk.h	/^    QPushButton *browseDiscButton;$/;"	m	class:Ui_OpenDisk
browseEraseFile	components/extended_panels.cpp	/^void ExtVideo::browseEraseFile()$/;"	f	class:ExtVideo
browseFile	components/open_panels.cpp	/^void FileOpenPanel::browseFile()$/;"	f	class:FileOpenPanel
browseFileSub	components/open_panels.cpp	/^void FileOpenPanel::browseFileSub()$/;"	f	class:FileOpenPanel
browseInputSlave	dialogs/open.cpp	/^void OpenDialog::browseInputSlave()$/;"	f	class:OpenDialog
browseInto	components/playlist/standardpanel.cpp	/^void StandardPLPanel::browseInto( const QModelIndex &index )$/;"	f	class:StandardPLPanel
browseInto	components/playlist/standardpanel.cpp	/^void StandardPLPanel::browseInto( int i_id )$/;"	f	class:StandardPLPanel
browseInto	components/playlist/standardpanel.cpp	/^void StandardPLPanel::browseInto()$/;"	f	class:StandardPLPanel
browseLogo	components/extended_panels.cpp	/^void ExtVideo::browseLogo()$/;"	f	class:ExtVideo
brush	util/buttons/RoundButton.cpp	/^QBrush RoundButton::brush( QStyleOptionToolButton* option ) const$/;"	f	class:RoundButton
btnMore	components/playlist/playlist.hpp	/^    LocationButton *btnMore;$/;"	m	class:LocationBar
bufTimer	components/interface_widgets.hpp	/^    QTimer *bufTimer;$/;"	m	class:TimeLabel
bufVal	components/interface_widgets.hpp	/^    float bufVal;$/;"	m	class:TimeLabel
buffer	util/pictureflow.cpp	/^    QImage buffer;$/;"	m	class:PictureFlowSoftwareRenderer	file:
buffering	components/interface_widgets.hpp	/^    bool buffering;$/;"	m	class:TimeLabel
build	Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	util/qmenuview.cpp	/^void QMenuView::build( const QModelIndex &parent )$/;"	f	class:QMenuView
buildPath	util/timetooltip.cpp	/^void TimeTooltip::buildPath()$/;"	f	class:TimeTooltip
buildPrivDialog	dialogs/firstrun.cpp	/^void FirstRun::buildPrivDialog()$/;"	f	class:FirstRun
buildTree	dialogs/messages.cpp	/^void MessagesDialog::buildTree( QTreeWidgetItem *parentItem,$/;"	f	class:MessagesDialog
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
busy	qt4.cpp	/^    static bool busy = false;$/;"	v	file:
butMoreInfo	dialogs/plugins.hpp	/^    QPushButton *butMoreInfo;$/;"	m	class:ExtensionTab
buttonBox	components/preferences_widgets.hpp	/^    QDialogButtonBox *buttonBox;$/;"	m	class:KeyInputDialog
buttonBox	ui/profiles.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_Profiles
buttonBox	ui/vlm.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_Vlm
buttonGroupLayout	components/controller.hpp	/^    QHBoxLayout         *buttonGroupLayout;$/;"	m	class:AbstractController
buttonType_e	components/controller.hpp	/^typedef enum buttonType_e$/;"	g
buttonType_e	components/controller.hpp	/^} buttonType_e;$/;"	t	typeref:enum:buttonType_e
buttons	components/playlist/playlist.hpp	/^    QWidgetList buttons;$/;"	m	class:LocationBar
buttonsBox	ui/open.h	/^    QDialogButtonBox *buttonsBox;$/;"	m	class:Ui_Open
c	util/input_slider.cpp	603;"	d	file:
cache	util/pictureflow.cpp	/^    QHash<QString, QImage*> cache;$/;"	m	class:PictureFlowSoftwareRenderer	file:
cacheLabel	ui/open.h	/^    QLabel *cacheLabel;$/;"	m	class:Ui_Open
cacheSpinBox	ui/open.h	/^    QSpinBox *cacheSpinBox;$/;"	m	class:Ui_Open
cachedLength	components/interface_widgets.hpp	/^    int cachedLength;$/;"	m	class:TimeLabel
cachingChanged	input_manager.moc.cpp	/^void InputManager::cachingChanged(float _t1)$/;"	f	class:InputManager
cachingCoB	components/simple_preferences.hpp	/^enum { inputLE, cachingCoB };$/;"	e	enum:__anon22
cachingCombo	ui/sprefs_input.h	/^    QComboBox *cachingCombo;$/;"	m	class:Ui_SPrefsInputAndCodecs
callback	variables.cpp	/^int QVLCVariable::callback (vlc_object_t *object, const char *,$/;"	f	class:QVLCVariable
canEdit	components/playlist/playlist_model.cpp	/^bool PLModel::canEdit() const$/;"	f	class:PLModel
cancel	dialogs/convert.cpp	/^void ConvertDialog::cancel()$/;"	f	class:ConvertDialog
cancel	dialogs/gototime.cpp	/^void GotoTimeDialog::cancel()$/;"	f	class:GotoTimeDialog
cancel	dialogs/ml_configuration.cpp	/^void MLConfDialog::cancel()$/;"	f	class:MLConfDialog
cancel	dialogs/open.cpp	/^void OpenDialog::cancel()$/;"	f	class:OpenDialog
cancel	dialogs/preferences.cpp	/^void PrefsDialog::cancel()$/;"	f	class:PrefsDialog
cancel	dialogs/sout.cpp	/^void SoutDialog::cancel()$/;"	f	class:SoutDialog
cancel	dialogs/toolbar.cpp	/^void ToolbarEditDialog::cancel()$/;"	f	class:ToolbarEditDialog
cancel	util/qvlcframe.hpp	/^    virtual void cancel()$/;"	f	class:QVLCDialog
cancel	util/qvlcframe.hpp	/^    virtual void cancel()$/;"	f	class:QVLCFrame
cancelButton	dialogs/open.hpp	/^    QPushButton *cancelButton, *selectButton;$/;"	m	class:OpenDialog
cancel_mutex	dialogs/external.cpp	/^static QMutex cancel_mutex;$/;"	v	file:
cancelled	dialogs/external.hpp	/^    bool cancelled;$/;"	m	class:QVLCProgressDialog
cannotLoad	extensions_manager.hpp	/^    inline bool cannotLoad() { return b_unloading || b_failed; }$/;"	f	class:ExtensionsManager
captureOpenPanel	dialogs/open.hpp	/^    CaptureOpenPanel *captureOpenPanel;$/;"	m	class:OpenDialog
cardBox	ui/open_capture.h	/^    QGroupBox *cardBox;$/;"	m	class:Ui_OpenCapture
categoryActivated	components/playlist/selector.moc.cpp	/^void PLSelector::categoryActivated(playlist_item_t * _t1, bool _t2)$/;"	f	class:PLSelector
centerFSC	components/controller.cpp	/^void FullscreenControllerWidget::centerFSC( int number )$/;"	f	class:FullscreenControllerWidget
centerIndex	util/pictureflow.cpp	/^    int centerIndex;$/;"	m	class:PictureFlowState	file:
centerIndex	util/pictureflow.cpp	/^int PictureFlow::centerIndex() const$/;"	f	class:PictureFlow
centerIndexChanged	util/pictureflow.moc.cpp	/^void PictureFlow::centerIndexChanged(int _t1)$/;"	f	class:PictureFlow
centerSlide	util/pictureflow.cpp	/^    SlideInfo centerSlide;$/;"	m	class:PictureFlowState	file:
changeAdvPanel	dialogs/preferences.cpp	/^void PrefsDialog::changeAdvPanel( QTreeWidgetItem *item )$/;"	f	class:PrefsDialog
changeEvent	main_interface.cpp	/^void MainInterface::changeEvent(QEvent *event)$/;"	f	class:MainInterface
changeModel	components/playlist/standardpanel.cpp	/^void StandardPLPanel::changeModel( bool b_ml )$/;"	f	class:StandardPLPanel
changeProfile	dialogs/toolbar.cpp	/^void ToolbarEditDialog::changeProfile( int i )$/;"	f	class:ToolbarEditDialog
changeSimplePanel	dialogs/preferences.cpp	/^void PrefsDialog::changeSimplePanel( int number )$/;"	f	class:PrefsDialog
changeStyle	components/simple_preferences.cpp	/^void SPrefsPanel::changeStyle( QString s_style )$/;"	f	class:SPrefsPanel
changeThumbbarButtons	main_interface_win32.cpp	/^void MainInterface::changeThumbbarButtons( int i_status )$/;"	f	class:MainInterface
changeValue	util/input_slider.cpp	/^void SoundSlider::changeValue( int x )$/;"	f	class:SoundSlider
changeVerbosity	dialogs/messages.cpp	/^void MessagesDialog::changeVerbosity( int verbosity )$/;"	f	class:MessagesDialog
changeView	components/playlist/playlist.cpp	/^void PlaylistWidget::changeView( const QModelIndex& index )$/;"	f	class:PlaylistWidget
changedItem	dialogs/extended.cpp	/^void ExtendedDialog::changedItem( int i_status )$/;"	f	class:ExtendedDialog
channelAdded	components/epg/EPGView.moc.cpp	/^void EPGView::channelAdded(QString _t1)$/;"	f	class:EPGView
channelList	components/epg/EPGChannels.hpp	/^    QStringList channelList;$/;"	m	class:EPGChannels
channelRemoved	components/epg/EPGView.moc.cpp	/^void EPGView::channelRemoved(QString _t1)$/;"	f	class:EPGView
chapterChanged	input_manager.moc.cpp	/^void InputManager::chapterChanged(bool _t1)$/;"	f	class:InputManager
chapterLabel	ui/open_disk.h	/^    QLabel *chapterLabel;$/;"	m	class:Ui_OpenDisk
chapterSpin	ui/open_disk.h	/^    QSpinBox *chapterSpin;$/;"	m	class:Ui_OpenDisk
chapters	util/input_slider.hpp	/^    SeekPoints* chapters;$/;"	m	class:SeekSlider
check	dialogs/external.cpp	/^bool QVLCProgressDialog::check (void *priv)$/;"	f	class:QVLCProgressDialog
checkBox	components/preferences_widgets.hpp	/^    QCheckBox *checkBox;$/;"	m	struct:checkBoxListItem
checkBoxListItem	components/preferences_widgets.hpp	/^struct checkBoxListItem {$/;"	s
checkForConflicts	components/preferences_widgets.cpp	/^void KeyInputDialog::checkForConflicts( int i_vlckey )$/;"	f	class:KeyInputDialog
checkbox	components/preferences_widgets.hpp	/^    QAbstractButton *checkbox;$/;"	m	class:BoolConfigControl
checkbox	dialogs/firstrun.hpp	/^        QCheckBox *checkbox, *checkbox2;$/;"	m	class:FirstRun
checkbox2	dialogs/firstrun.hpp	/^        QCheckBox *checkbox, *checkbox2;$/;"	m	class:FirstRun
checkbox_lists	components/preferences_widgets.cpp	/^void ModuleListConfigControl::checkbox_lists( QString label, QString help, const char* psz_module )$/;"	f	class:ModuleListConfigControl
checkbox_lists	components/preferences_widgets.cpp	/^void ModuleListConfigControl::checkbox_lists( module_t *p_parser )$/;"	f	class:ModuleListConfigControl
child	components/playlist/ml_item.cpp	/^MLItem* MLItem::child( int row ) const$/;"	f	class:MLItem
child	components/playlist/playlist_item.hpp	/^    PLItem *child( int row ) const { return children.value( row ); }$/;"	f	class:PLItem
childCount	components/playlist/ml_item.cpp	/^int MLItem::childCount() const$/;"	f	class:MLItem
childCount	components/playlist/playlist_item.hpp	/^    int childCount() const { return children.count(); }$/;"	f	class:PLItem
children	components/playlist/ml_item.hpp	/^    QList< MLItem* > children;$/;"	m	class:MLItem
children	components/playlist/playlist_item.hpp	/^    QList<PLItem*> children;$/;"	m	class:PLItem
clean	components/complete_preferences.cpp	/^void AdvPrefsPanel::clean()$/;"	f	class:AdvPrefsPanel
clean	components/extended_panels.cpp	/^void ExtVideo::clean()$/;"	f	class:ExtVideo
clean	components/extended_panels.cpp	/^void SyncControls::clean()$/;"	f	class:SyncControls
clean	components/extended_panels.hpp	/^    void clean() { enable(); }$/;"	f	class:Equalizer
clean	components/simple_preferences.cpp	/^void SPrefsPanel::clean()$/;"	f	class:SPrefsPanel
cleanAll	components/complete_preferences.cpp	/^void PrefsTree::cleanAll()$/;"	f	class:PrefsTree
cleanOverlapped	components/epg/EPGView.cpp	/^static void cleanOverlapped( EPGEventByTimeQMap *epgItemByTime, EPGItem *epgItem, QGraphicsScene *scene )$/;"	f	file:
cleanup	components/epg/EPGView.cpp	/^void EPGView::cleanup()$/;"	f	class:EPGView
clear	components/info_panels.cpp	/^void ExtraMetaPanel::clear()$/;"	f	class:ExtraMetaPanel
clear	components/info_panels.cpp	/^void InfoPanel::clear()$/;"	f	class:InfoPanel
clear	components/info_panels.cpp	/^void InputStatsPanel::clear()$/;"	f	class:InputStatsPanel
clear	components/info_panels.cpp	/^void MetaPanel::clear()$/;"	f	class:MetaPanel
clear	components/interface_widgets.cpp	/^void CoverArtLabel::clear()$/;"	f	class:CoverArtLabel
clear	components/open_panels.cpp	/^void CaptureOpenPanel::clear()$/;"	f	class:CaptureOpenPanel
clear	components/open_panels.cpp	/^void DiscOpenPanel::clear()$/;"	f	class:DiscOpenPanel
clear	components/open_panels.cpp	/^void FileOpenPanel::clear()$/;"	f	class:FileOpenPanel
clear	components/open_panels.cpp	/^void NetOpenPanel::clear()$/;"	f	class:NetOpenPanel
clear	components/playlist/ml_model.cpp	/^void MLModel::clear()$/;"	f	class:MLModel
clear	dialogs/bookmarks.cpp	/^void BookmarksDialog::clear()$/;"	f	class:BookmarksDialog
clear	dialogs/errors.cpp	/^void ErrorsDialog::clear()$/;"	f	class:ErrorsDialog
clear	dialogs/messages.cpp	/^void MessagesDialog::clear()$/;"	f	class:MessagesDialog
clear	recents.cpp	/^void RecentsMRL::clear()$/;"	f	class:RecentsMRL
clear	util/pictureflow.cpp	/^void PictureFlow::clear()$/;"	f	class:PictureFlow
clear	util/searchlineedit.cpp	/^void SearchLineEdit::clear()$/;"	f	class:SearchLineEdit
clear	util/searchlineedit.hpp	/^    void clear() {}$/;"	f	class:SearchLineEdit
clearAllTabs	dialogs/mediainfo.cpp	/^void MediaInfoDialog::clearAllTabs()$/;"	f	class:MediaInfoDialog
clearButton	ui/messages_panel.h	/^    QPushButton *clearButton;$/;"	m	class:Ui_messagesPanelWidget
clearButton	ui/vlm.h	/^    QPushButton *clearButton;$/;"	m	class:Ui_Vlm
clearButton	util/searchlineedit.hpp	/^    QFramelessButton   *clearButton;$/;"	m	class:SearchLineEdit
clearChildren	components/playlist/ml_item.cpp	/^void MLItem::clearChildren()$/;"	f	class:MLItem
clearInputsButton	ui/streampanel.h	/^    QPushButton *clearInputsButton;$/;"	m	class:Ui_BroadcastPanel
clearPlaylist	components/playlist/playlist.cpp	/^void PlaylistWidget::clearPlaylist()$/;"	f	class:PlaylistWidget
clearPlaylist	components/playlist/playlist_model.cpp	/^void PLModel::clearPlaylist()$/;"	f	class:PLModel
clearWidgets	dialogs/vlm.cpp	/^void VLMDialog::clearWidgets()$/;"	f	class:VLMDialog
clickMapper	dialogs/extensions.hpp	/^    QSignalMapper *clickMapper;$/;"	m	class:ExtensionDialog
clickedSlot	util/customwidgets.cpp	/^void QToolButtonExt::clickedSlot()$/;"	f	class:QToolButtonExt
cloneCountSpin	ui/video_effects.h	/^    QSpinBox *cloneCountSpin;$/;"	m	class:Ui_ExtVideoWidget
cloneEnable	ui/video_effects.h	/^    QGroupBox *cloneEnable;$/;"	m	class:Ui_ExtVideoWidget
close	components/sout/profile_selector.cpp	/^void VLCProfileEditor::close()$/;"	f	class:VLCProfileEditor
close	dialogs/convert.cpp	/^void ConvertDialog::close()$/;"	f	class:ConvertDialog
close	dialogs/errors.cpp	/^void ErrorsDialog::close()$/;"	f	class:ErrorsDialog
close	dialogs/gototime.cpp	/^void GotoTimeDialog::close()$/;"	f	class:GotoTimeDialog
close	dialogs/help.hpp	/^    virtual void close() { toggleVisible(); }$/;"	f	class:AboutDialog
close	dialogs/help.hpp	/^    virtual void close() { toggleVisible(); }$/;"	f	class:HelpDialog
close	dialogs/help.hpp	/^    virtual void close() { toggleVisible(); }$/;"	f	class:UpdateDialog
close	dialogs/mediainfo.cpp	/^void MediaInfoDialog::close()$/;"	f	class:MediaInfoDialog
close	dialogs/ml_configuration.hpp	/^    void close() { save(); };$/;"	f	class:MLConfDialog
close	dialogs/open.cpp	/^void OpenDialog::close()$/;"	f	class:OpenDialog
close	dialogs/openurl.hpp	/^    virtual void close() { play(); };$/;"	f	class:OpenUrlDialog
close	dialogs/preferences.hpp	/^    void close() { save(); };$/;"	f	class:PrefsDialog
close	dialogs/toolbar.cpp	/^void ToolbarEditDialog::close()$/;"	f	class:ToolbarEditDialog
close	util/qvlcframe.hpp	/^    virtual void close()$/;"	f	class:QVLCDialog
close	util/qvlcframe.hpp	/^    virtual void close()$/;"	f	class:QVLCFrame
closeButtonBox	ui/about.h	/^    QDialogButtonBox *closeButtonBox;$/;"	m	class:Ui_aboutWidget
closeEvent	components/playlist/playlist.cpp	/^void PlaylistWidget::closeEvent( QCloseEvent *event )$/;"	f	class:PlaylistWidget
closeEvent	dialogs/extensions.cpp	/^void ExtensionDialog::closeEvent( QCloseEvent * )$/;"	f	class:ExtensionDialog
closeEvent	main_interface.cpp	/^void MainInterface::closeEvent( QCloseEvent *e )$/;"	f	class:MainInterface
closeTab	dialogs/sout.cpp	/^void SoutDialog::closeTab()$/;"	f	class:SoutDialog
closeTabButton	dialogs/sout.hpp	/^    QToolButton *closeTabButton;$/;"	m	class:SoutDialog
collapseUnselectedItems	components/complete_preferences.cpp	/^bool PrefsTree::collapseUnselectedItems( QTreeWidgetItem *item )$/;"	f	class:PrefsTree
collection_text	components/info_panels.hpp	/^    QLineEdit *collection_text;$/;"	m	class:MetaPanel
colon_escape	util/qt_dirs.hpp	/^static inline QString colon_escape( QString s )$/;"	f
colon_unescape	util/qt_dirs.hpp	/^static inline QString colon_unescape( QString s )$/;"	f
color_but	components/preferences_widgets.hpp	/^    QAbstractButton *color_but;$/;"	m	class:ColorConfigControl
color_px	components/preferences_widgets.hpp	/^    QPixmap *color_px;$/;"	m	class:ColorConfigControl
colorthresColorText	ui/video_effects.h	/^    QLineEdit *colorthresColorText;$/;"	m	class:Ui_ExtVideoWidget
colorthresEnable	ui/video_effects.h	/^    QGroupBox *colorthresEnable;$/;"	m	class:Ui_ExtVideoWidget
colorthresSaturationthresSlider	ui/video_effects.h	/^    QSlider *colorthresSaturationthresSlider;$/;"	m	class:Ui_ExtVideoWidget
colorthresSimilaritythresSlider	ui/video_effects.h	/^    QSlider *colorthresSimilaritythresSlider;$/;"	m	class:Ui_ExtVideoWidget
columnCount	components/playlist/ml_model.cpp	/^int MLModel::columnCount( const QModelIndex & ) const$/;"	f	class:MLModel
columnCount	components/playlist/playlist_model.cpp	/^int PLModel::columnCount( const QModelIndex &) const$/;"	f	class:PLModel
columnCount	dialogs/ml_configuration.cpp	/^int MLDirModel::columnCount( const QModelIndex & ) const$/;"	f	class:MLDirModel
columnFromMeta	components/playlist/vlc_model.hpp	/^    static int columnFromMeta( int meta_col )$/;"	f	class:VLCModel
columnToMeta	components/playlist/vlc_model.hpp	/^    static int columnToMeta( int _column )$/;"	f	class:VLCModel
columnType	components/playlist/ml_model.cpp	/^ml_select_e MLModel::columnType( int logicalindex ) const$/;"	f	class:MLModel
combo	components/preferences_widgets.hpp	/^    QComboBox *combo;$/;"	m	class:IntegerListConfigControl
combo	components/preferences_widgets.hpp	/^    QComboBox *combo;$/;"	m	class:ModuleConfigControl
combo	components/preferences_widgets.hpp	/^    QComboBox *combo;$/;"	m	class:StringListConfigControl
compCtrl	components/extended_panels.hpp	/^    QSlider *compCtrl[NUM_CP_CTRL];$/;"	m	class:Compressor
comp_controls	components/extended_panels.cpp	/^static const comp_controls_t comp_controls[] =$/;"	v	file:
comp_controls_t	components/extended_panels.cpp	/^} comp_controls_t;$/;"	t	typeref:struct:__anon11	file:
compareMeta	components/playlist/ml_item.cpp	/^static int compareMeta( const ml_media_t *a, const ml_media_t *b,$/;"	f	file:
computeMinimumSize	main_interface.cpp	/^void MainInterface::computeMinimumSize()$/;"	f	class:MainInterface
configList	components/open_panels.hpp	/^    QStringList configList;$/;"	m	class:CaptureOpenPanel
configML	components/simple_preferences.cpp	/^void SPrefsPanel::configML()$/;"	f	class:SPrefsPanel
conflicts	components/preferences_widgets.hpp	/^    bool conflicts;$/;"	m	class:KeyInputDialog
contains	components/complete_preferences.cpp	/^bool PrefsItemData::contains( const QString &text, Qt::CaseSensitivity cs )$/;"	f	class:PrefsItemData
contextMenuEvent	components/interface_widgets.cpp	/^void BackgroundWidget::contextMenuEvent( QContextMenuEvent *event )$/;"	f	class:BackgroundWidget
contrastSlider	ui/video_effects.h	/^    QSlider *contrastSlider;$/;"	m	class:Ui_ExtVideoWidget
controlBox	ui/streampanel.h	/^    QGroupBox *controlBox;$/;"	m	class:Ui_BroadcastPanel
controlLayout	components/controller.hpp	/^    QHBoxLayout         *controlLayout;$/;"	m	class:AbstractController
controlVars	components/extended_panels.hpp	/^    float controlVars[5];$/;"	m	class:Spatializer
controlVars	components/extended_panels.hpp	/^    float controlVars[NUM_CP_CTRL];$/;"	m	class:Compressor
controlVideo	main_interface.cpp	/^int MainInterface::controlVideo( int i_query, va_list args )$/;"	f	class:MainInterface
controller	dialogs/toolbar.hpp	/^    DroppingController *controllerFSC, *controller;$/;"	m	class:ToolbarEditDialog
controller1	dialogs/toolbar.hpp	/^    DroppingController *controller1, *controller2, *controllerA;$/;"	m	class:ToolbarEditDialog
controller2	dialogs/toolbar.hpp	/^    DroppingController *controller1, *controller2, *controllerA;$/;"	m	class:ToolbarEditDialog
controllerA	dialogs/toolbar.hpp	/^    DroppingController *controller1, *controller2, *controllerA;$/;"	m	class:ToolbarEditDialog
controllerFSC	dialogs/toolbar.hpp	/^    DroppingController *controllerFSC, *controller;$/;"	m	class:ToolbarEditDialog
controls	components/complete_preferences.hpp	/^    QList<ConfigControl *> controls;$/;"	m	class:AdvPrefsPanel
controls	components/simple_preferences.hpp	/^    QList<ConfigControl *> controls;$/;"	m	class:SPrefsPanel
controls	main_interface.hpp	/^    ControlsWidget      *controls;$/;"	m	class:MainInterface
copyright_text	components/info_panels.hpp	/^    QLineEdit *copyright_text;$/;"	m	class:MetaPanel
corrupted_stat	components/info_panels.hpp	/^    QTreeWidgetItem *corrupted_stat;$/;"	m	class:InputStatsPanel
count	util/buttons/DeckButtonsLayout.cpp	/^int DeckButtonsLayout::count() const$/;"	f	class:DeckButtonsLayout
counter	remoteControlServer.hpp	/^    int counter;$/;"	m	struct:RCInputMRL
cqam	components/open_panels.hpp	/^    QRadioButton *dvbc, *dvbs, *dvbs2, *dvbt, *dvbt2, *atsc, *cqam;$/;"	m	class:CaptureOpenPanel
createActionFromIndex	util/qmenuview.cpp	/^QAction* QMenuView::createActionFromIndex( QModelIndex index )$/;"	f	class:QMenuView
createAndAddWidget	components/controller.cpp	/^void AbstractController::createAndAddWidget( QBoxLayout *controlLayout,$/;"	f	class:AbstractController
createAndAddWidget	dialogs/toolbar.cpp	/^void DroppingController::createAndAddWidget( QBoxLayout *controlLayout,$/;"	f	class:DroppingController
createControl	components/preferences_widgets.cpp	/^ConfigControl *ConfigControl::createControl( vlc_object_t *p_this,$/;"	f	class:ConfigControl
createCoverView	components/playlist/standardpanel.cpp	/^void StandardPLPanel::createCoverView()$/;"	f	class:StandardPLPanel
createHandle	components/playlist/playlist.cpp	/^QSplitterHandle *PlaylistSplitter::createHandle()$/;"	f	class:PlaylistSplitter
createIconView	components/playlist/standardpanel.cpp	/^void StandardPLPanel::createIconView()$/;"	f	class:StandardPLPanel
createItems	components/playlist/selector.cpp	/^void PLSelector::createItems()$/;"	f	class:PLSelector
createListView	components/playlist/standardpanel.cpp	/^void StandardPLPanel::createListView()$/;"	f	class:StandardPLPanel
createMainWidget	main_interface.cpp	/^void MainInterface::createMainWidget( QSettings *settings )$/;"	f	class:MainInterface
createMenuBar	menus.cpp	/^void VLCMenuBar::createMenuBar( MainInterface *mi,$/;"	f	class:VLCMenuBar
createPlaylist	main_interface.cpp	/^void MainInterface::createPlaylist()$/;"	f	class:MainInterface
createStatusBar	main_interface.cpp	/^inline void MainInterface::createStatusBar()$/;"	f	class:MainInterface
createSystray	main_interface.cpp	/^void MainInterface::createSystray()$/;"	f	class:MainInterface
createTaskBarButtons	main_interface_win32.cpp	/^void MainInterface::createTaskBarButtons()$/;"	f	class:MainInterface
createTreeView	components/playlist/standardpanel.cpp	/^void StandardPLPanel::createTreeView()$/;"	f	class:StandardPLPanel
createValuesFromPreset	components/extended_panels.cpp	/^char * Equalizer::createValuesFromPreset( int i_preset )$/;"	f	class:Equalizer
createWidget	components/controller.cpp	/^QWidget *AbstractController::createWidget( buttonType_e button, int options )$/;"	f	class:AbstractController
critical	dialogs/external.hpp	/^    QVLCPointer critical;$/;"	m	class:DialogHandler
cropBotPx	ui/video_effects.h	/^    QSpinBox *cropBotPx;$/;"	m	class:Ui_ExtVideoWidget
cropChange	components/extended_panels.cpp	/^void ExtVideo::cropChange()$/;"	f	class:ExtVideo
cropLeftPx	ui/video_effects.h	/^    QSpinBox *cropLeftPx;$/;"	m	class:Ui_ExtVideoWidget
cropRightPx	ui/video_effects.h	/^    QSpinBox *cropRightPx;$/;"	m	class:Ui_ExtVideoWidget
cropTopPx	ui/video_effects.h	/^    QSpinBox *cropTopPx;$/;"	m	class:Ui_ExtVideoWidget
cryptedLabel	main_interface.hpp	/^    QLabel              *cryptedLabel;$/;"	m	class:MainInterface
ctrl_readout	components/extended_panels.hpp	/^    QLabel *ctrl_readout[NUM_CP_CTRL];$/;"	m	class:Compressor
ctrl_readout	components/extended_panels.hpp	/^    QLabel *ctrl_readout[NUM_SP_CTRL];$/;"	m	class:Spatializer
ctrl_texts	components/extended_panels.hpp	/^    QLabel *ctrl_texts[NUM_CP_CTRL];$/;"	m	class:Compressor
ctrl_texts	components/extended_panels.hpp	/^    QLabel *ctrl_texts[NUM_SP_CTRL];$/;"	m	class:Spatializer
curItem	components/playlist/selector.hpp	/^    QTreeWidgetItem  *curItem;$/;"	m	class:PLSelector
currentData	components/sout/profile_selector.cpp	432;"	d	file:
currentData	components/sout/profile_selector.cpp	461;"	d	file:
currentGroup	menus.cpp	/^static QActionGroup *currentGroup;$/;"	v	file:
currentIndex	components/playlist/ml_model.cpp	/^QModelIndex MLModel::currentIndex() const$/;"	f	class:MLModel
currentIndex	components/playlist/playlist_model.cpp	/^QModelIndex PLModel::currentIndex() const$/;"	f	class:PLModel
currentIndex	dialogs/vlm.hpp	/^    int currentIndex;$/;"	m	class:VLMDialog
currentIndexChanged	components/playlist/playlist_model.moc.cpp	/^void PLModel::currentIndexChanged(const QModelIndex & _t1)$/;"	f	class:PLModel
currentInputItem	input_manager.hpp	/^    inline input_item_t *currentInputItem()$/;"	f	class:MainInputManager
currentItemChanged	components/simple_preferences.moc.cpp	/^void SPrefsCatList::currentItemChanged(int _t1)$/;"	f	class:SPrefsCatList
currentMetaChanged	input_manager.moc.cpp	/^void InputManager::currentMetaChanged(input_item_t * _t1)$/;"	f	class:InputManager
currentRootIndexId	components/playlist/standardpanel.hpp	/^    int currentRootIndexId;$/;"	m	class:StandardPLPanel
currentTab	dialogs/extended.cpp	/^int ExtendedDialog::currentTab()$/;"	f	class:ExtendedDialog
currentURL	components/info_panels.hpp	/^    QString  currentURL;$/;"	m	class:MetaPanel
currentView	components/playlist/standardpanel.hpp	/^    QAbstractItemView *currentView;$/;"	m	class:StandardPLPanel
currentViewIndex	components/playlist/standardpanel.cpp	/^int StandardPLPanel::currentViewIndex() const$/;"	f	class:StandardPLPanel
current_index	components/playlist/ml_model.hpp	/^    QModelIndex current_index;$/;"	m	class:MLModel
current_selection	components/playlist/ml_model.hpp	/^    QModelIndexList current_selection;$/;"	m	class:MLModel
current_selection	components/playlist/playlist_model.hpp	/^    QModelIndexList current_selection;$/;"	m	class:PLModel
current_simple_panel	dialogs/preferences.hpp	/^    SPrefsPanel *current_simple_panel;$/;"	m	class:PrefsDialog
customEvent	components/controller.cpp	/^void FullscreenControllerWidget::customEvent( QEvent *event )$/;"	f	class:FullscreenControllerWidget
customEvent	dialogs/help.cpp	/^void UpdateDialog::customEvent( QEvent *event )$/;"	f	class:UpdateDialog
customEvent	dialogs/messages.cpp	/^void MessagesDialog::customEvent( QEvent *event )$/;"	f	class:MessagesDialog
customEvent	dialogs_provider.cpp	/^void DialogsProvider::customEvent( QEvent *event )$/;"	f	class:DialogsProvider
customEvent	input_manager.cpp	/^void InputManager::customEvent( QEvent *event )$/;"	f	class:InputManager
customEvent	input_manager.cpp	/^void MainInputManager::customEvent( QEvent *event )$/;"	f	class:MainInputManager
cx	util/pictureflow.cpp	/^    PFreal cx;$/;"	m	struct:SlideInfo	file:
cy	util/pictureflow.cpp	/^    PFreal cy;$/;"	m	struct:SlideInfo	file:
cycleViews	components/playlist/standardpanel.cpp	/^void StandardPLPanel::cycleViews()$/;"	f	class:StandardPLPanel
d	util/pictureflow.hpp	/^    PictureFlowPrivate* d;$/;"	m	class:PictureFlow
dXdisplayDevice	ui/sprefs_video.h	/^    QComboBox *dXdisplayDevice;$/;"	m	class:Ui_SPrefsVideo
data	components/playlist/ml_item.cpp	/^QVariant MLItem::data( int column ) const$/;"	f	class:MLItem
data	components/playlist/ml_model.cpp	/^QVariant MLModel::data( const QModelIndex &index, const int role ) const$/;"	f	class:MLModel
data	components/playlist/playlist_model.cpp	/^QVariant PLModel::data( const QModelIndex &index, const int role ) const$/;"	f	class:PLModel
data	dialogs/ml_configuration.cpp	/^QVariant MLDirModel::data( const QModelIndex &index, int role ) const$/;"	f	class:MLDirModel
data	dialogs/plugins.cpp	/^QVariant ExtensionListModel::data( const QModelIndex& index, int role ) const$/;"	f	class:ExtensionListModel
dataChanged	components/playlist/views.cpp	/^void PicFlowView::dataChanged( const QModelIndex &topLeft, const QModelIndex &bottomRight )$/;"	f	class:PicFlowView
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
date	dialogs/vlm.hpp	/^    QDateTimeEdit *time, *date, *repeatTime;$/;"	m	class:VLMDialog
date_text	components/info_panels.hpp	/^    QLineEdit *date_text;$/;"	m	class:MetaPanel
debug	main_interface.cpp	/^void MainInterface::debug()$/;"	f	class:MainInterface
decodeArtURL	input_manager.cpp	/^const QString InputManager::decodeArtURL( input_item_t *p_item )$/;"	f	class:InputManager
decreaseZoom	components/playlist/playlist_model.cpp	/^void PLModel::decreaseZoom()$/;"	f	class:PLModel
defaultVolume	ui/sprefs_audio.h	/^    QSlider *defaultVolume;$/;"	m	class:Ui_SPrefsAudio
defaultVolume_zone	ui/sprefs_audio.h	/^    QWidget *defaultVolume_zone;$/;"	m	class:Ui_SPrefsAudio
deinterBox	dialogs/convert.hpp	/^    QCheckBox *displayBox, *deinterBox, *dumpBox;$/;"	m	class:ConvertDialog
deinterLabel	ui/sprefs_video.h	/^    QLabel *deinterLabel;$/;"	m	class:Ui_SPrefsVideo
deinterModeLabel	ui/sprefs_video.h	/^    QLabel *deinterModeLabel;$/;"	m	class:Ui_SPrefsVideo
deinterlaceBox	ui/sprefs_video.h	/^    QComboBox *deinterlaceBox;$/;"	m	class:Ui_SPrefsVideo
deinterlaceModeBox	ui/sprefs_video.h	/^    QComboBox *deinterlaceModeBox;$/;"	m	class:Ui_SPrefsVideo
del	dialogs/bookmarks.cpp	/^void BookmarksDialog::del()$/;"	f	class:BookmarksDialog
del	dialogs/vlm.cpp	/^void VLMAWidget::del()$/;"	f	class:VLMAWidget
delAsso	components/simple_preferences.cpp	/^void delAsso( QVLCRegistry *qvReg, const char *psz_ext )$/;"	f
delCallbacks	components/extended_panels.cpp	/^void Equalizer::delCallbacks( vlc_object_t *p_aout )$/;"	f	class:Equalizer
delCallbacks	components/extended_panels.cpp	/^void Spatializer::delCallbacks( vlc_object_t *p_aout )$/;"	f	class:Spatializer
delCallbacks	input_manager.cpp	/^inline void InputManager::delCallbacks()$/;"	f	class:InputManager
delChild	components/playlist/ml_item.cpp	/^void MLItem::delChild( int row )$/;"	f	class:MLItem
delInput	input_manager.cpp	/^void InputManager::delInput()$/;"	f	class:InputManager
delay	remoteControlServer.hpp	/^    mtime_t delay;$/;"	m	struct:RCPlayListThreadPara
deleteButton	ui/streampanel.h	/^    QPushButton *deleteButton;$/;"	m	class:Ui_BroadcastPanel
deleteProfile	components/sout/profile_selector.cpp	/^void VLCProfileSelector::deleteProfile()$/;"	f	class:VLCProfileSelector
deleteProfile	dialogs/toolbar.cpp	/^void ToolbarEditDialog::deleteProfile()$/;"	f	class:ToolbarEditDialog
deleteSelection	components/playlist/standardpanel.cpp	/^void StandardPLPanel::deleteSelection()$/;"	f	class:StandardPLPanel
demuxed_stat	components/info_panels.hpp	/^    QTreeWidgetItem *demuxed_stat;$/;"	m	class:InputStatsPanel
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/autotools\/depcomp$/;"	m
desaturate	util/input_slider.cpp	608;"	d	file:
described	dialogs/external.moc.cpp	/^void QVLCProgressDialog::described(const QString & _t1)$/;"	f	class:QVLCProgressDialog
description	components/epg/EPGItem.cpp	/^QString EPGItem::description()$/;"	f	class:EPGItem
description	dialogs/epg.hpp	/^    QTextEdit *description;$/;"	m	class:EpgDialog
description	dialogs/plugins.cpp	/^    QString name, title, description, shortdesc, author, version, url;$/;"	m	class:ExtensionCopy	file:
description_text	components/info_panels.hpp	/^    QTextEdit *description_text;$/;"	m	class:MetaPanel
destBox	ui/sout.h	/^    QComboBox *destBox;$/;"	m	class:Ui_Sout
destPage	ui/sout.h	/^    QWidget *destPage;$/;"	m	class:Ui_Sout
destTab	ui/sout.h	/^    QTabWidget *destTab;$/;"	m	class:Ui_Sout
destroy	dialogs/external.cpp	/^void QVLCProgressDialog::destroy (void *priv)$/;"	f	class:QVLCProgressDialog
destroyDialog	dialogs/extensions.moc.cpp	/^void ExtensionDialog::destroyDialog(extension_dialog_t * _t1)$/;"	f	class:ExtensionDialog
destroyPopupMenu	main_interface.cpp	/^void MainInterface::destroyPopupMenu()$/;"	f	class:MainInterface
detectionDolby	ui/sprefs_audio.h	/^    QComboBox *detectionDolby;$/;"	m	class:Ui_SPrefsAudio
deviceCombo	ui/open_capture.h	/^    QComboBox *deviceCombo;$/;"	m	class:Ui_OpenCapture
deviceCombo	ui/open_disk.h	/^    QComboBox *deviceCombo;$/;"	m	class:Ui_OpenDisk
deviceLabel	ui/open_disk.h	/^    QLabel *deviceLabel;$/;"	m	class:Ui_OpenDisk
dialogBox	components/open_panels.hpp	/^    FileOpenBox *dialogBox;$/;"	m	class:FileOpenPanel
dir	Makefile	/^dir = gui\/qt4$/;"	m
dirLabel	ui/sprefs_video.h	/^    QLabel *dirLabel;$/;"	m	class:Ui_SPrefsVideo
directXBox	ui/sprefs_video.h	/^    QGroupBox *directXBox;$/;"	m	class:Ui_SPrefsVideo
directxW	components/simple_preferences.hpp	/^       directxW,$/;"	e	enum:__anon21
dirty	util/pictureflow.cpp	/^    bool dirty;$/;"	m	class:PictureFlowAbstractRenderer	file:
disable_volume_keys	qt4.hpp	/^    bool disable_volume_keys;$/;"	m	struct:intf_sys_t
discFrame	components/controller.cpp	/^QFrame *AbstractController::discFrame()$/;"	f	class:AbstractController
discOpenPanel	dialogs/open.hpp	/^    DiscOpenPanel *discOpenPanel;$/;"	m	class:OpenDialog
discontinuity_stat	components/info_panels.hpp	/^    QTreeWidgetItem *discontinuity_stat;$/;"	m	class:InputStatsPanel
diskGroupBox	ui/open_disk.h	/^    QGroupBox *diskGroupBox;$/;"	m	class:Ui_OpenDisk
diskOptionBox	ui/open_disk.h	/^    QGroupBox *diskOptionBox;$/;"	m	class:Ui_OpenDisk
diskOptionBox_2	ui/open_disk.h	/^    QGroupBox *diskOptionBox_2;$/;"	m	class:Ui_OpenDisk
displayBox	dialogs/convert.hpp	/^    QCheckBox *displayBox, *deinterBox, *dumpBox;$/;"	m	class:ConvertDialog
displayBox	ui/sprefs_video.h	/^    QGroupBox *displayBox;$/;"	m	class:Ui_SPrefsVideo
displayCritical	dialogs/external.cpp	/^void DialogHandler::displayCritical (vlc_object_t *, void *value)$/;"	f	class:DialogHandler
displayError	dialogs/external.cpp	/^void DialogHandler::displayError (const QString& title, const QString& message)$/;"	f	class:DialogHandler
displayEvent	dialogs/epg.cpp	/^void EpgDialog::displayEvent( EPGItem *epgItem )$/;"	f	class:EpgDialog
displayType	components/interface_widgets.hpp	/^    TimeLabel::Display displayType;$/;"	m	class:TimeLabel
doAction	actions_manager.cpp	/^void ActionsManager::doAction( int id_action )$/;"	f	class:ActionsManager
doAction	dialogs/toolbar.cpp	/^void DroppingController::doAction( int i )$/;"	f	class:DroppingController
doAll	components/complete_preferences.cpp	/^void PrefsTree::doAll( bool doclean )$/;"	f	class:PrefsTree
doApply	components/preferences_widgets.cpp	/^VFloatConfigControl::doApply()$/;"	f	class:VFloatConfigControl
doApply	components/preferences_widgets.cpp	/^VIntConfigControl::doApply()$/;"	f	class:VIntConfigControl
doApply	components/preferences_widgets.cpp	/^VStringConfigControl::doApply()$/;"	f	class:VStringConfigControl
doApply	components/preferences_widgets.cpp	/^void KeySelectorControl::doApply()$/;"	f	class:KeySelectorControl
doDelete	components/playlist/ml_model.cpp	/^void MLModel::doDelete( QModelIndexList list )$/;"	f	class:MLModel
doDelete	components/playlist/playlist_model.cpp	/^void PLModel::doDelete( QModelIndexList selected )$/;"	f	class:PLModel
doFunc	menus.hpp	/^    void doFunc( intf_thread_t *p_intf)$/;"	f	class:MenuFunc
doQuit	util/qvlcapp.hpp	/^    void doQuit()$/;"	f	class:QVLCApp
doScheduleButton	ui/streampanel.h	/^    QPushButton *doScheduleButton;$/;"	m	class:Ui_BroadcastPanel
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
dockPlaylist	main_interface.cpp	/^void MainInterface::dockPlaylist( bool p_docked )$/;"	f	class:MainInterface
dolbyLabel	ui/sprefs_audio.h	/^    QLabel *dolbyLabel;$/;"	m	class:Ui_SPrefsAudio
dontShow	dialogs/errors.cpp	/^void ErrorsDialog::dontShow()$/;"	f	class:ErrorsDialog
doubleInt	dialogs/toolbar.hpp	/^    struct doubleInt$/;"	s	class:DroppingController
dragEnterEvent	components/open_panels.cpp	/^void FileOpenPanel::dragEnterEvent( QDragEnterEvent *event )$/;"	f	class:FileOpenPanel
dragEnterEvent	components/playlist/playlist.cpp	/^void PlaylistWidget::dragEnterEvent( QDragEnterEvent *event )$/;"	f	class:PlaylistWidget
dragEnterEvent	dialogs/playlist.cpp	/^void PlaylistDialog::dragEnterEvent( QDragEnterEvent *event )$/;"	f	class:PlaylistDialog
dragEnterEvent	dialogs/toolbar.cpp	/^void DroppingController::dragEnterEvent( QDragEnterEvent * event )$/;"	f	class:DroppingController
dragEnterEvent	main_interface.cpp	/^void MainInterface::dragEnterEvent(QDragEnterEvent *event)$/;"	f	class:MainInterface
dragLeaveEvent	components/open_panels.cpp	/^void FileOpenPanel::dragLeaveEvent( QDragLeaveEvent *event )$/;"	f	class:FileOpenPanel
dragLeaveEvent	dialogs/playlist.cpp	/^void PlaylistDialog::dragLeaveEvent( QDragLeaveEvent *event )$/;"	f	class:PlaylistDialog
dragLeaveEvent	dialogs/toolbar.cpp	/^void DroppingController::dragLeaveEvent ( QDragLeaveEvent * event )$/;"	f	class:DroppingController
dragLeaveEvent	main_interface.cpp	/^void MainInterface::dragLeaveEvent(QDragLeaveEvent *event)$/;"	f	class:MainInterface
dragMoveEvent	components/open_panels.cpp	/^void FileOpenPanel::dragMoveEvent( QDragMoveEvent *event )$/;"	f	class:FileOpenPanel
dragMoveEvent	components/playlist/selector.cpp	/^void PLSelector::dragMoveEvent ( QDragMoveEvent * event )$/;"	f	class:PLSelector
dragMoveEvent	components/playlist/views.cpp	/^void PlIconView::dragMoveEvent ( QDragMoveEvent * event )$/;"	f	class:PlIconView
dragMoveEvent	components/playlist/views.cpp	/^void PlListView::dragMoveEvent ( QDragMoveEvent * event )$/;"	f	class:PlListView
dragMoveEvent	components/playlist/views.cpp	/^void PlTreeView::dragMoveEvent ( QDragMoveEvent * event )$/;"	f	class:PlTreeView
dragMoveEvent	dialogs/playlist.cpp	/^void PlaylistDialog::dragMoveEvent( QDragMoveEvent *event )$/;"	f	class:PlaylistDialog
dragMoveEvent	dialogs/toolbar.cpp	/^void DroppingController::dragMoveEvent( QDragMoveEvent *event )$/;"	f	class:DroppingController
dragMoveEvent	main_interface.cpp	/^void MainInterface::dragMoveEvent(QDragMoveEvent *event)$/;"	f	class:MainInterface
drawBackground	components/epg/EPGView.cpp	/^void EPGGraphicsScene::drawBackground( QPainter *painter, const QRectF &rect)$/;"	f	class:EPGGraphicsScene
drawBranches	components/playlist/selector.cpp	/^void PLSelector::drawBranches ( QPainter * painter, const QRect & rect, const QModelIndex & index ) const$/;"	f	class:PLSelector
dropAppendCopy	components/playlist/playlist_model.cpp	/^void PLModel::dropAppendCopy( const PlMimeData *plMimeData, PLItem *target, int pos )$/;"	f	class:PLModel
dropEvent	components/open_panels.cpp	/^void FileOpenPanel::dropEvent( QDropEvent *event )$/;"	f	class:FileOpenPanel
dropEvent	components/playlist/playlist.cpp	/^void PlaylistWidget::dropEvent( QDropEvent *event )$/;"	f	class:PlaylistWidget
dropEvent	dialogs/playlist.cpp	/^void PlaylistDialog::dropEvent( QDropEvent *event )$/;"	f	class:PlaylistDialog
dropEvent	dialogs/toolbar.cpp	/^void DroppingController::dropEvent( QDropEvent *event )$/;"	f	class:DroppingController
dropEvent	main_interface.cpp	/^void MainInterface::dropEvent(QDropEvent *event)$/;"	f	class:MainInterface
dropEvent	util/searchlineedit.cpp	/^void ClickLineEdit::dropEvent( QDropEvent *ev )$/;"	f	class:ClickLineEdit
dropEventPlay	main_interface.cpp	/^void MainInterface::dropEventPlay( QDropEvent *event, bool b_play, bool b_playlist )$/;"	f	class:MainInterface
dropEventPlay	main_interface.hpp	/^    void dropEventPlay( QDropEvent* event, bool b_play ) { dropEventPlay(event, b_play, true); }$/;"	f	class:MainInterface
dropMimeData	components/playlist/playlist_model.cpp	/^bool PLModel::dropMimeData( const QMimeData *data, Qt::DropAction action,$/;"	f	class:PLModel
dropMimeData	components/playlist/selector.cpp	/^bool PLSelector::dropMimeData ( QTreeWidgetItem * parent, int,$/;"	f	class:PLSelector
dropMove	components/playlist/playlist_model.cpp	/^void PLModel::dropMove( const PlMimeData * plMimeData, PLItem *target, int row )$/;"	f	class:PLModel
dshowVSizeLine	components/open_panels.hpp	/^    QLineEdit *dshowVSizeLine;$/;"	m	class:CaptureOpenPanel
dumpBox	dialogs/convert.hpp	/^    QCheckBox *displayBox, *deinterBox, *dumpBox;$/;"	m	class:ConvertDialog
dumpChecked	dialogs/convert.cpp	/^void ConvertDialog::dumpChecked( bool checked )$/;"	f	class:ConvertDialog
duration	components/epg/EPGItem.cpp	/^int EPGItem::duration() const$/;"	f	class:EPGItem
durationChanged	components/epg/EPGView.moc.cpp	/^void EPGView::durationChanged(int _t1)$/;"	f	class:EPGView
dvbBandBox	components/open_panels.hpp	/^    QComboBox *dvbQamBox, *dvbPskBox, *dvbBandBox;$/;"	m	class:CaptureOpenPanel
dvbBandLabel	components/open_panels.hpp	/^    QLabel *dvbBandLabel, *dvbSrateLabel, *dvbModLabel;$/;"	m	class:CaptureOpenPanel
dvbCard	components/open_panels.hpp	/^    QSpinBox *dvbCard, *dvbFreq, *dvbSrate;$/;"	m	class:CaptureOpenPanel
dvbFreq	components/open_panels.hpp	/^    QSpinBox *dvbCard, *dvbFreq, *dvbSrate;$/;"	m	class:CaptureOpenPanel
dvbModLabel	components/open_panels.hpp	/^    QLabel *dvbBandLabel, *dvbSrateLabel, *dvbModLabel;$/;"	m	class:CaptureOpenPanel
dvbPskBox	components/open_panels.hpp	/^    QComboBox *dvbQamBox, *dvbPskBox, *dvbBandBox;$/;"	m	class:CaptureOpenPanel
dvbQamBox	components/open_panels.hpp	/^    QComboBox *dvbQamBox, *dvbPskBox, *dvbBandBox;$/;"	m	class:CaptureOpenPanel
dvbSrate	components/open_panels.hpp	/^    QSpinBox *dvbCard, *dvbFreq, *dvbSrate;$/;"	m	class:CaptureOpenPanel
dvbSrateLabel	components/open_panels.hpp	/^    QLabel *dvbBandLabel, *dvbSrateLabel, *dvbModLabel;$/;"	m	class:CaptureOpenPanel
dvbc	components/open_panels.hpp	/^    QRadioButton *dvbc, *dvbs, *dvbs2, *dvbt, *dvbt2, *atsc, *cqam;$/;"	m	class:CaptureOpenPanel
dvbs	components/open_panels.hpp	/^    QRadioButton *dvbc, *dvbs, *dvbs2, *dvbt, *dvbt2, *atsc, *cqam;$/;"	m	class:CaptureOpenPanel
dvbs2	components/open_panels.hpp	/^    QRadioButton *dvbc, *dvbs, *dvbs2, *dvbt, *dvbt2, *atsc, *cqam;$/;"	m	class:CaptureOpenPanel
dvbt	components/open_panels.hpp	/^    QRadioButton *dvbc, *dvbs, *dvbs2, *dvbt, *dvbt2, *atsc, *cqam;$/;"	m	class:CaptureOpenPanel
dvbt2	components/open_panels.hpp	/^    QRadioButton *dvbc, *dvbs, *dvbs2, *dvbt, *dvbt2, *atsc, *cqam;$/;"	m	class:CaptureOpenPanel
dvdRadioButton	ui/open_disk.h	/^    QRadioButton *dvdRadioButton;$/;"	m	class:Ui_OpenDisk
dvdsimple	ui/open_disk.h	/^    QCheckBox *dvdsimple;$/;"	m	class:Ui_OpenDisk
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dxDeviceLabel	ui/sprefs_video.h	/^    QLabel *dxDeviceLabel;$/;"	m	class:Ui_SPrefsVideo
edit	dialogs/bookmarks.cpp	/^void BookmarksDialog::edit( QTreeWidgetItem *item, int column )$/;"	f	class:BookmarksDialog
edit	dialogs/openurl.hpp	/^    ClickLineEdit *edit;$/;"	m	class:OpenUrlDialog
edit	dialogs/plugins.hpp	/^    SearchLineEdit *edit;$/;"	m	class:PluginTab
editInputButton	ui/streampanel.h	/^    QPushButton *editInputButton;$/;"	m	class:Ui_BroadcastPanel
editProfile	components/sout/profile_selector.cpp	/^void VLCProfileSelector::editProfile( const QString& qs, const QString& value )$/;"	f	class:VLCProfileSelector
editProfile	components/sout/profile_selector.cpp	/^void VLCProfileSelector::editProfile()$/;"	f	class:VLCProfileSelector
editStreamingButton	ui/streampanel.h	/^    QPushButton *editStreamingButton;$/;"	m	class:Ui_BroadcastPanel
editing	components/info_panels.moc.cpp	/^void MetaPanel::editing()$/;"	f	class:MetaPanel
effect	ui/sprefs_subtitles.h	/^    QComboBox *effect;$/;"	m	class:Ui_SPrefsSubtitles
effect	util/pictureflow.cpp	/^    int effect;$/;"	m	class:PictureFlowSoftwareRenderer	file:
eject	components/open_panels.cpp	/^void DiscOpenPanel::eject()$/;"	f	class:DiscOpenPanel
ejectButton	ui/open_disk.h	/^    QToolButton *ejectButton;$/;"	m	class:Ui_OpenDisk
elideMode	util/customwidgets.hpp	/^    Qt::TextElideMode elideMode;$/;"	m	class:QElidingLabel
embedVideo	ui/sprefs_interface.h	/^    QCheckBox *embedVideo;$/;"	m	class:Ui_SPrefsInterface
emitBoss	main_interface.cpp	/^void MainInterface::emitBoss()$/;"	f	class:MainInterface
emitRaise	main_interface.cpp	/^void MainInterface::emitRaise()$/;"	f	class:MainInterface
enable	components/extended_panels.cpp	/^void Compressor::enable( bool en )$/;"	f	class:Compressor
enable	components/extended_panels.cpp	/^void Compressor::enable()$/;"	f	class:Compressor
enable	components/extended_panels.cpp	/^void Equalizer::enable( bool en )$/;"	f	class:Equalizer
enable	components/extended_panels.cpp	/^void Equalizer::enable()$/;"	f	class:Equalizer
enable	components/extended_panels.cpp	/^void Spatializer::enable( bool en )$/;"	f	class:Spatializer
enable	components/extended_panels.cpp	/^void Spatializer::enable()$/;"	f	class:Spatializer
enableAudio	ui/sprefs_audio.h	/^    QCheckBox *enableAudio;$/;"	m	class:Ui_SPrefsAudio
enableCheck	components/extended_panels.hpp	/^    QCheckBox *enableCheck;$/;"	m	class:Compressor
enableCheck	components/extended_panels.hpp	/^    QCheckBox *enableCheck;$/;"	m	class:Spatializer
enableCheck	ui/equalizer.h	/^    QCheckBox *enableCheck;$/;"	m	class:Ui_EqualizerWidget
enableCheck	ui/vlm.h	/^    QCheckBox *enableCheck;$/;"	m	class:Ui_Vlm
enableVideo	ui/sprefs_video.h	/^    QCheckBox *enableVideo;$/;"	m	class:Ui_SPrefsVideo
encodLabel	ui/sprefs_subtitles.h	/^    QLabel *encodLabel;$/;"	m	class:Ui_SPrefsSubtitles
encode	remoteControlServer.hpp	/^    const char* encode() {$/;"	f	struct:RCInputMRL
encodedby_text	components/info_panels.hpp	/^    QLineEdit *encodedby_text;$/;"	m	class:MetaPanel
encoding	ui/sprefs_subtitles.h	/^    QComboBox *encoding;$/;"	m	class:Ui_SPrefsSubtitles
encryptionChanged	input_manager.moc.cpp	/^void InputManager::encryptionChanged(bool _t1)$/;"	f	class:InputManager
end	components/epg/EPGItem.cpp	/^QDateTime EPGItem::end()$/;"	f	class:EPGItem
end	dialogs/sout.hpp	/^    void end()$/;"	f	class:SoutMrl
end_of_string	ini/inifile.c	/^	static int end_of_string(char c)$/;"	f	file:
endsBefore	components/epg/EPGItem.cpp	/^bool EPGItem::endsBefore( const QDateTime &ref ) const$/;"	f	class:EPGItem
enqueue	dialogs/open.cpp	/^void OpenDialog::enqueue( bool b_enqueue )$/;"	f	class:OpenDialog
enqueue	dialogs/openurl.cpp	/^void OpenUrlDialog::enqueue()$/;"	f	class:OpenUrlDialog
enterEditMode	components/info_panels.cpp	/^void MetaPanel::enterEditMode()$/;"	f	class:MetaPanel
enterEvent	components/controller.cpp	/^void FullscreenControllerWidget::enterEvent( QEvent *event )$/;"	f	class:FullscreenControllerWidget
enterEvent	components/playlist/selector.hpp	/^    inline void enterEvent( QEvent* ){ showAction(); }$/;"	f	class:PLSelItem
enterEvent	util/input_slider.cpp	/^void SeekSlider::enterEvent( QEvent * )$/;"	f	class:SeekSlider
enum_style	components/preferences_widgets.hpp	/^    enum enum_style {$/;"	g	class:InterfacePreviewWidget
epg	dialogs/epg.hpp	/^    EPGWidget *epg;$/;"	m	class:EpgDialog
epgChanged	input_manager.moc.cpp	/^void InputManager::epgChanged()$/;"	f	class:InputManager
epgDialog	dialogs_provider.cpp	/^void DialogsProvider::epgDialog()$/;"	f	class:DialogsProvider
epgitemsByChannel	components/epg/EPGView.hpp	/^    EPGTimeMapByChannelQMap epgitemsByChannel;$/;"	m	class:EPGView
eq2PassCheck	ui/equalizer.h	/^    QCheckBox *eq2PassCheck;$/;"	m	class:Ui_EqualizerWidget
equal	dialogs/extended.hpp	/^    Equalizer *equal;$/;"	m	class:ExtendedDialog
eraseBrowseBtn	ui/video_effects.h	/^    QToolButton *eraseBrowseBtn;$/;"	m	class:Ui_ExtVideoWidget
eraseEnable	ui/video_effects.h	/^    QGroupBox *eraseEnable;$/;"	m	class:Ui_ExtVideoWidget
eraseMaskText	ui/video_effects.h	/^    QLineEdit *eraseMaskText;$/;"	m	class:Ui_ExtVideoWidget
eraseXSpin	ui/video_effects.h	/^    QSpinBox *eraseXSpin;$/;"	m	class:Ui_ExtVideoWidget
eraseYSpin	ui/video_effects.h	/^    QSpinBox *eraseYSpin;$/;"	m	class:Ui_ExtVideoWidget
error	dialogs/external.cpp	/^int DialogHandler::error (vlc_object_t *obj, const char *,$/;"	f	class:DialogHandler
error	dialogs/external.moc.cpp	/^void DialogHandler::error(const QString & _t1, const QString & _t2)$/;"	f	class:DialogHandler
eventFilter	components/controller_widget.cpp	/^bool SoundWidget::eventFilter( QObject *obj, QEvent *e )$/;"	f	class:SoundWidget
eventFilter	components/open_panels.hpp	/^    bool eventFilter(QObject *, QEvent *event)$/;"	f	class:FileOpenPanel
eventFilter	components/playlist/standardpanel.cpp	/^bool StandardPLPanel::eventFilter ( QObject *, QEvent * event )$/;"	f	class:StandardPLPanel
eventFilter	components/preferences_widgets.cpp	/^bool KeySelectorControl::eventFilter( QObject *obj, QEvent *e )$/;"	f	class:KeySelectorControl
eventFilter	dialogs/toolbar.cpp	/^bool DroppingController::eventFilter( QObject *obj, QEvent *event )$/;"	f	class:DroppingController
eventFilter	util/input_slider.cpp	/^bool SeekSlider::eventFilter( QObject *obj, QEvent *event )$/;"	f	class:SeekSlider
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exportVLMConf	dialogs/vlm.cpp	/^bool VLMDialog::exportVLMConf()$/;"	f	class:VLMDialog
extList	dialogs/plugins.hpp	/^    QListView *extList;$/;"	m	class:ExtensionTab
extendedDialog	dialogs_provider.cpp	/^void DialogsProvider::extendedDialog()$/;"	f	class:DialogsProvider
extensionTab	dialogs/plugins.hpp	/^    ExtensionTab *extensionTab;$/;"	m	class:PluginDialog
extensions	dialogs/plugins.hpp	/^    QList<ExtensionCopy*> extensions;$/;"	m	class:ExtensionListModel
extensionsUpdated	extensions_manager.moc.cpp	/^void ExtensionsManager::extensionsUpdated()$/;"	f	class:ExtensionsManager
extraMetaTree	components/info_panels.hpp	/^    QTreeWidget *extraMetaTree;$/;"	m	class:ExtraMetaPanel
extract	dialogs/bookmarks.cpp	/^void BookmarksDialog::extract()$/;"	f	class:BookmarksDialog
extractComponentText	ui/video_effects.h	/^    QLineEdit *extractComponentText;$/;"	m	class:Ui_ExtVideoWidget
extractEnable	ui/video_effects.h	/^    QGroupBox *extractEnable;$/;"	m	class:Ui_ExtVideoWidget
f_buffering	util/input_slider.hpp	/^    float f_buffering;$/;"	m	class:SeekSlider
f_cache	input_manager.hpp	/^    float           f_cache;$/;"	m	class:InputManager
f_float	remoteControlServer.hpp	/^    double              f_float;$/;"	m	struct:rc_value_t
f_max	components/extended_panels.cpp	/^    const float f_max;      \/\/ max$/;"	m	struct:__anon11	file:
f_min	components/extended_panels.cpp	/^    const float f_min;      \/\/ min$/;"	m	struct:__anon11	file:
f_opacity	components/controller.hpp	/^    float f_opacity;$/;"	m	class:FullscreenControllerWidget
f_rate	input_manager.hpp	/^    float           f_rate;$/;"	m	class:InputManager
f_resolution	components/extended_panels.cpp	/^    const float f_resolution; \/\/ resolution$/;"	m	struct:__anon11	file:
f_step	util/input_slider.hpp	/^    float f_step; \/* How much do we increase each time we wheel *\/$/;"	m	class:SoundSlider
f_value	components/extended_panels.cpp	/^    const float f_value;    \/\/ value$/;"	m	struct:__anon11	file:
faster	input_manager.cpp	/^void InputManager::faster()$/;"	f	class:InputManager
fcos	util/pictureflow.cpp	/^inline PFreal fcos(int iangle)$/;"	f
fdiv	util/pictureflow.cpp	/^inline PFreal fdiv(PFreal num, PFreal den)$/;"	f
fileBrowse	components/sout/sout_widgets.cpp	/^void FileDestBox::fileBrowse()$/;"	f	class:FileDestBox
fileBrowse	dialogs/convert.cpp	/^void ConvertDialog::fileBrowse()$/;"	f	class:ConvertDialog
fileBrowseButton	ui/open_file.h	/^    QPushButton *fileBrowseButton;$/;"	m	class:Ui_OpenFile
fileBrowseButton	ui/sprefs_audio.h	/^    QPushButton *fileBrowseButton;$/;"	m	class:Ui_SPrefsAudio
fileControl	ui/sprefs_audio.h	/^    QWidget *fileControl;$/;"	m	class:Ui_SPrefsAudio
fileEdit	components/sout/sout_widgets.hpp	/^        QLineEdit *fileEdit;$/;"	m	class:FileDestBox
fileLabel	ui/sprefs_audio.h	/^    QLabel *fileLabel;$/;"	m	class:Ui_SPrefsAudio
fileLine	dialogs/convert.hpp	/^    QLineEdit *fileLine;$/;"	m	class:ConvertDialog
fileListWidg	ui/open_file.h	/^    QListWidget *fileListWidg;$/;"	m	class:Ui_OpenFile
fileName	ui/sprefs_audio.h	/^    QLineEdit *fileName;$/;"	m	class:Ui_SPrefsAudio
fileOpenPanel	dialogs/open.hpp	/^    FileOpenPanel *fileOpenPanel;$/;"	m	class:OpenDialog
fileSkin	ui/sprefs_interface.h	/^    QLineEdit *fileSkin;$/;"	m	class:Ui_SPrefsInterface
fileW	components/simple_preferences.hpp	/^       fileW,$/;"	e	enum:__anon21
filename	rclog.h	/^    std::string filename;$/;"	m	class:logger
filepath	qt4.hpp	/^    QString filepath;        \/* Last path used in dialogs *\/$/;"	m	struct:intf_sys_t
fillProfile	components/sout/profile_selector.cpp	/^void VLCProfileEditor::fillProfile( const QString& qs )$/;"	f	class:VLCProfileEditor
fillProfilesCombo	components/sout/profile_selector.cpp	/^inline void VLCProfileSelector::fillProfilesCombo()$/;"	f	class:VLCProfileSelector
filter	components/complete_preferences.cpp	/^void PrefsTree::filter( const QString &text )$/;"	f	class:PrefsTree
filter	components/preferences_widgets.cpp	/^void KeySelectorControl::filter( const QString &qs_search )$/;"	f	class:KeySelectorControl
filter	dialogs/messages.hpp	/^    QStringList filter;$/;"	m	class:MessagesDialog
filter	recents.hpp	/^    QRegExp       *filter;$/;"	m	class:RecentsMRL
filterDefault	dialogs/messages.hpp	/^    bool filterDefault;$/;"	m	class:MessagesDialog
filterItems	components/complete_preferences.cpp	/^bool PrefsTree::filterItems( QTreeWidgetItem *item, const QString &text,$/;"	f	class:PrefsTree
filterLabel	ui/sprefs_input.h	/^    QLabel *filterLabel;$/;"	m	class:Ui_SPrefsInputAndCodecs
filterLabel	ui/sprefs_interface.h	/^    QLabel *filterLabel;$/;"	m	class:Ui_SPrefsInterface
filterMapper	components/extended_panels.hpp	/^    QSignalMapper* filterMapper;$/;"	m	class:ExtVideo
findById	components/playlist/playlist_model.cpp	/^PLItem *PLModel::findById( PLItem *root, int i_id ) const$/;"	f	class:PLModel
findByInput	components/playlist/playlist_model.cpp	/^PLItem *PLModel::findByInput( PLItem *root, int i_id ) const$/;"	f	class:PLModel
findInner	components/playlist/playlist_model.cpp	/^PLItem * PLModel::findInner( PLItem *root, int i_id, bool b_input ) const$/;"	f	class:PLModel
finish	components/preferences_widgets.cpp	/^void BoolConfigControl::finish()$/;"	f	class:BoolConfigControl
finish	components/preferences_widgets.cpp	/^void ColorConfigControl::finish()$/;"	f	class:ColorConfigControl
finish	components/preferences_widgets.cpp	/^void FileConfigControl::finish()$/;"	f	class:FileConfigControl
finish	components/preferences_widgets.cpp	/^void FloatConfigControl::finish()$/;"	f	class:FloatConfigControl
finish	components/preferences_widgets.cpp	/^void FloatRangeConfigControl::finish()$/;"	f	class:FloatRangeConfigControl
finish	components/preferences_widgets.cpp	/^void IntegerConfigControl::finish()$/;"	f	class:IntegerConfigControl
finish	components/preferences_widgets.cpp	/^void IntegerListConfigControl::finish(module_config_t *p_module_config )$/;"	f	class:IntegerListConfigControl
finish	components/preferences_widgets.cpp	/^void IntegerRangeConfigControl::finish()$/;"	f	class:IntegerRangeConfigControl
finish	components/preferences_widgets.cpp	/^void KeySelectorControl::finish()$/;"	f	class:KeySelectorControl
finish	components/preferences_widgets.cpp	/^void ModuleConfigControl::finish( bool bycat )$/;"	f	class:ModuleConfigControl
finish	components/preferences_widgets.cpp	/^void ModuleListConfigControl::finish( bool bycat )$/;"	f	class:ModuleListConfigControl
finish	components/preferences_widgets.cpp	/^void StringConfigControl::finish()$/;"	f	class:StringConfigControl
finish	components/preferences_widgets.cpp	/^void StringListConfigControl::finish(module_config_t *p_module_config )$/;"	f	class:StringListConfigControl
fixup	components/open_panels.cpp	/^void UrlValidator::fixup( QString& str ) const$/;"	f	class:UrlValidator
flags	components/playlist/ml_model.cpp	/^Qt::ItemFlags MLModel::flags(const QModelIndex &index) const$/;"	f	class:MLModel
flags	components/playlist/playlist_model.cpp	/^Qt::ItemFlags PLModel::flags( const QModelIndex &index ) const$/;"	f	class:PLModel
flags	dialogs/ml_configuration.cpp	/^Qt::ItemFlags MLDirModel::flags( const QModelIndex &index ) const$/;"	f	class:MLDirModel
flatBox	dialogs/toolbar.hpp	/^    QCheckBox *flatBox, *bigBox, *shinyBox;$/;"	m	class:ToolbarEditDialog
fmul	util/pictureflow.cpp	/^inline PFreal fmul(PFreal a, PFreal b)$/;"	f
focusInEvent	components/epg/EPGItem.cpp	/^void EPGItem::focusInEvent( QFocusEvent * event )$/;"	f	class:EPGItem
focusInEvent	util/searchlineedit.cpp	/^void ClickLineEdit::focusInEvent( QFocusEvent *ev )$/;"	f	class:ClickLineEdit
focusInEvent	util/searchlineedit.cpp	/^void SearchLineEdit::focusInEvent( QFocusEvent *event )$/;"	f	class:SearchLineEdit
focusItem	components/epg/EPGView.cpp	/^void EPGView::focusItem( EPGItem *epgItem )$/;"	f	class:EPGView
focusOutEvent	util/searchlineedit.cpp	/^void ClickLineEdit::focusOutEvent( QFocusEvent *ev )$/;"	f	class:ClickLineEdit
focusOutEvent	util/searchlineedit.cpp	/^void SearchLineEdit::focusOutEvent( QFocusEvent *event )$/;"	f	class:SearchLineEdit
font	components/preferences_widgets.hpp	/^    QFontComboBox *font;$/;"	m	class:FontConfigControl
font	ui/sprefs_subtitles.h	/^    QFontComboBox *font;$/;"	m	class:Ui_SPrefsSubtitles
fontColor	ui/sprefs_subtitles.h	/^    QPushButton *fontColor;$/;"	m	class:Ui_SPrefsSubtitles
fontColorLabel	ui/sprefs_subtitles.h	/^    QLabel *fontColorLabel;$/;"	m	class:Ui_SPrefsSubtitles
fontEffectLabel	ui/sprefs_subtitles.h	/^    QLabel *fontEffectLabel;$/;"	m	class:Ui_SPrefsSubtitles
fontLabel	ui/sprefs_subtitles.h	/^    QLabel *fontLabel;$/;"	m	class:Ui_SPrefsSubtitles
fontSize	ui/sprefs_subtitles.h	/^    QComboBox *fontSize;$/;"	m	class:Ui_SPrefsSubtitles
fontSizeLabel	ui/sprefs_subtitles.h	/^    QLabel *fontSizeLabel;$/;"	m	class:Ui_SPrefsSubtitles
forceHide	components/playlist/playlist.cpp	/^void PlaylistWidget::forceHide()$/;"	f	class:PlaylistWidget
forceShow	components/playlist/playlist.cpp	/^void PlaylistWidget::forceShow()$/;"	f	class:PlaylistWidget
formatLabel	ui/sprefs_video.h	/^    QLabel *formatLabel;$/;"	m	class:Ui_SPrefsVideo
formatTooltip	components/preferences_widgets.cpp	/^QString formatTooltip(const QString & tooltip)$/;"	f
formats	components/playlist/playlist_model.cpp	/^QStringList PlMimeData::formats () const$/;"	f	class:PlMimeData
forwardButton	util/buttons/DeckButtonsLayout.hpp	/^    QPointer<QAbstractButton> forwardButton;$/;"	m	class:DeckButtonsLayout
forwardItem	util/buttons/DeckButtonsLayout.hpp	/^    QWidgetItem* forwardItem;$/;"	m	class:DeckButtonsLayout
frame	actions_manager.cpp	/^void ActionsManager::frame()$/;"	f	class:ActionsManager
frame	ui/equalizer.h	/^    QFrame *frame;$/;"	m	class:Ui_EqualizerWidget
frame	util/pictureflow.cpp	/^    int frame;$/;"	m	class:PictureFlowAnimator	file:
fsController	ui/sprefs_interface.h	/^    QCheckBox *fsController;$/;"	m	class:Ui_SPrefsInterface
fsin	util/pictureflow.cpp	/^inline PFreal fsin(int iangle)$/;"	f
fullscreen	actions_manager.cpp	/^void ActionsManager::fullscreen()$/;"	f	class:ActionsManager
fullscreen	ui/sprefs_video.h	/^    QCheckBox *fullscreen;$/;"	m	class:Ui_SPrefsVideo
fullscreenChanged	components/controller.cpp	/^void FullscreenControllerWidget::fullscreenChanged( vout_thread_t *p_vout,$/;"	f	class:FullscreenControllerWidget
fullscreenControls	main_interface.hpp	/^    FullscreenControllerWidget *fullscreenControls;$/;"	m	class:MainInterface
fullscreenInterfaceToggled	main_interface.moc.cpp	/^void MainInterface::fullscreenInterfaceToggled(bool _t1)$/;"	f	class:MainInterface
gammaSlider	ui/video_effects.h	/^    QSlider *gammaSlider;$/;"	m	class:Ui_ExtVideoWidget
gaussianbluSigmaSlider	ui/video_effects.h	/^    QSlider *gaussianbluSigmaSlider;$/;"	m	class:Ui_ExtVideoWidget
gaussianblurEnable	ui/video_effects.h	/^    QGroupBox *gaussianblurEnable;$/;"	m	class:Ui_ExtVideoWidget
genre_text	components/info_panels.hpp	/^    QLineEdit *genre_text;$/;"	m	class:MetaPanel
getAction	remoteControlServer.cpp	/^RCAction RCInvoker::getAction() {$/;"	f	class:RCInvoker
getAout	input_manager.cpp	/^audio_output_t * MainInputManager::getAout()$/;"	f	class:MainInputManager
getArtPixmap	components/playlist/vlc_model.cpp	/^QPixmap VLCModel::getArtPixmap( const QModelIndex & index, const QSize & size )$/;"	f	class:VLCModel
getAudioConf	remoteControlServer.cpp	/^const char* AudioCommand::getAudioConf(const char* psz_cmd) {$/;"	f	class:AudioCommand
getAudioOutputDevicesList	remoteControlServer.cpp	/^char* AudioCommand::getAudioOutputDevicesList(vlc_object_t* p_aout,const char* psz_audio_output,char* result) {$/;"	f	class:AudioCommand
getAudioOutputList	remoteControlServer.cpp	/^char* AudioCommand::getAudioOutputList(vlc_object_t* p_aout,char* result) {$/;"	f	class:AudioCommand
getControlsVisibilityStatus	main_interface.cpp	/^int MainInterface::getControlsVisibilityStatus()$/;"	f	class:MainInterface
getCurrentAudioOutput	remoteControlServer.cpp	/^char* AudioCommand::getCurrentAudioOutput(vlc_object_t* p_aout) {$/;"	f	class:AudioCommand
getCurrentAudioOutput	remoteControlServer.cpp	/^char* AudioCommand::getCurrentAudioOutput(vlc_object_t* p_aout,char* psz_config_name) {$/;"	f	class:AudioCommand
getCurrentAudioOutputDeviceList	remoteControlServer.cpp	/^char* AudioCommand::getCurrentAudioOutputDeviceList(vlc_object_t* p_aout,char* psz_name,char* result) {$/;"	f	class:AudioCommand
getCurrentCount	remoteControlServer.cpp	/^int RCPlayListModel::getCurrentCount(const char* name) {$/;"	f	class:RCPlayListModel
getCurrentItemCategory	components/playlist/selector.cpp	/^int PLSelector::getCurrentItemCategory()$/;"	f	class:PLSelector
getCurrentItemInfos	components/playlist/selector.cpp	/^void PLSelector::getCurrentItemInfos( int* type, bool* can_delay_search, QString *string)$/;"	f	class:PLSelector
getCurrentPlayListItem	remoteControlServer.cpp	/^playlist_item_t* PlayListCommand::getCurrentPlayListItem(playlist_t *p_playlist)$/;"	f	class:PlayListCommand
getCurrentPlayListItemId	remoteControlServer.cpp	/^int PlayListCommand::getCurrentPlayListItemId(playlist_t *p_playlist) {$/;"	f	class:PlayListCommand
getCurrentPlayListItemName	remoteControlServer.cpp	/^char* PlayListCommand::getCurrentPlayListItemName(playlist_t *p_playlist)$/;"	f	class:PlayListCommand
getFullscreenControllerWidget	main_interface.hpp	/^    FullscreenControllerWidget* getFullscreenControllerWidget() { return fullscreenControls; }$/;"	f	class:MainInterface
getID	remoteControlServer.cpp	/^const char* RCPlayListModel::getID(const char* name) {$/;"	f	class:RCPlayListModel
getIM	input_manager.hpp	/^    InputManager *getIM() { return im; }$/;"	f	class:MainInputManager
getInput	input_manager.hpp	/^    input_thread_t *getInput() { return p_input; }$/;"	f	class:MainInputManager
getInstance	actions_manager.hpp	/^    static ActionsManager *getInstance( intf_thread_t *_p_intf, QObject *_parent = 0 )$/;"	f	class:ActionsManager
getInstance	dialogs/extensions.hpp	/^    static ExtensionsDialogProvider* getInstance( intf_thread_t *p_intf = NULL,$/;"	f	class:ExtensionsDialogProvider
getInstance	dialogs/open.cpp	/^OpenDialog* OpenDialog::getInstance( QWidget *parent, intf_thread_t *p_intf,$/;"	f	class:OpenDialog
getInstance	dialogs_provider.hpp	/^    static DialogsProvider *getInstance( intf_thread_t *p_intf )$/;"	f	class:DialogsProvider
getInstance	dialogs_provider.hpp	/^    static DialogsProvider *getInstance()$/;"	f	class:DialogsProvider
getInstance	extensions_manager.hpp	/^    static ExtensionsManager *getInstance( intf_thread_t *_p_intf,$/;"	f	class:ExtensionsManager
getInstance	recents.hpp	/^    static RecentsMRL* getInstance( intf_thread_t* p_intf )$/;"	f	class:RecentsMRL
getInstance	util/singleton.hpp	/^    static T*      getInstance( intf_thread_t *p_intf = NULL )$/;"	f	class:Singleton
getIntf	remoteControlServer.cpp	/^intf_thread_t* RCHandler::getIntf() {$/;"	f	class:RCHandler
getIntf	remoteControlServer.cpp	/^intf_thread_t* RCInvoker::getIntf() {$/;"	f	class:RCInvoker
getItem	components/playlist/ml_model.hpp	/^    inline MLItem *getItem( QModelIndex index ) const$/;"	f	class:MLModel
getItem	components/playlist/playlist_model.hpp	/^    PLItem *getItem( const QModelIndex & index ) const$/;"	f	class:PLModel
getItem	remoteControlServer.cpp	/^const char* RCPlayListModel::getItem(const char* name) {$/;"	f	class:RCPlayListModel
getLastState	remoteControlServer.cpp	/^const char* RCInvoker::getLastState() {$/;"	f	class:RCInvoker
getMRL	components/sout/sout_widgets.cpp	/^QString FileDestBox::getMRL( const QString& mux, const int, const bool,$/;"	f	class:FileDestBox
getMRL	components/sout/sout_widgets.cpp	/^QString HTTPDestBox::getMRL( const QString& mux, const int, const bool,$/;"	f	class:HTTPDestBox
getMRL	components/sout/sout_widgets.cpp	/^QString ICEDestBox::getMRL( const QString&, const int, const bool,$/;"	f	class:ICEDestBox
getMRL	components/sout/sout_widgets.cpp	/^QString MMSHDestBox::getMRL( const QString&, const int, const bool,$/;"	f	class:MMSHDestBox
getMRL	components/sout/sout_widgets.cpp	/^QString RTPDestBox::getMRL( const QString&, const int ttl, const bool sap,$/;"	f	class:RTPDestBox
getMRL	components/sout/sout_widgets.cpp	/^QString RTSPDestBox::getMRL( const QString&, const int, const bool,$/;"	f	class:RTSPDestBox
getMRL	components/sout/sout_widgets.cpp	/^QString UDPDestBox::getMRL( const QString& mux, const int ttl, const bool sap,$/;"	f	class:UDPDestBox
getMRL	dialogs/open.cpp	/^QString OpenDialog::getMRL( bool b_all )$/;"	f	class:OpenDialog
getMRL	remoteControlServer.cpp	/^const char* RCPlayListModel::getMRL(const char* name) {$/;"	f	class:RCPlayListModel
getManager	extensions_manager.hpp	/^    extensions_manager_t* getManager()$/;"	f	class:ExtensionsManager
getMedia	components/playlist/ml_item.cpp	/^ml_media_t* MLItem::getMedia() const$/;"	f	class:MLItem
getMeta	components/playlist/vlc_model.cpp	/^QString VLCModel::getMeta( const QModelIndex & index, int meta )$/;"	f	class:VLCModel
getMrl	dialogs/convert.hpp	/^    QString getMrl() {return mrl;}$/;"	f	class:ConvertDialog
getMrl	dialogs/sout.hpp	/^    QString getMrl()$/;"	f	class:SoutMrl
getMrl	dialogs/sout.hpp	/^    QString getMrl(){ return mrl; }$/;"	f	class:SoutDialog
getMux	components/sout/profile_selector.hpp	/^    QString getMux() { return mux; }$/;"	f	class:VLCProfileSelector
getName	components/preferences_widgets.hpp	/^    const char * getName() const { return  p_item->psz_name; }$/;"	f	class:ConfigControl
getName	input_manager.hpp	/^    QString getName() { return oldName; }$/;"	f	class:InputManager
getName	remoteControlServer.cpp	/^const char* AudioCommand::getName() {$/;"	f	class:AudioCommand
getName	remoteControlServer.cpp	/^const char* BasicCommand::getName() {$/;"	f	class:BasicCommand
getName	remoteControlServer.cpp	/^const char* PlayListCommand::getName() {$/;"	f	class:PlayListCommand
getObject	remoteControlServer.cpp	/^int RCUtil::getObject(vlc_object_t* object,const char* psz_variable,vlc_value_t& val,vlc_value_t& text,int& i_value,int option){$/;"	f	class:RCUtil
getOptions	dialogs/open.cpp	/^QString OpenDialog::getOptions()$/;"	f	class:OpenDialog
getOptions	dialogs/toolbar.hpp	/^    int getOptions() { return flatBox->isChecked() * WIDGET_FLAT +$/;"	f	class:ToolbarEditDialog
getPLModel	components/playlist/playlist_model.hpp	/^    static PLModel* getPLModel( intf_thread_t *p_intf )$/;"	f	class:PLModel
getPacket	remoteControlServer.cpp	/^bool RCServer::getPacket(sockaddr& from, void *data, int &size, int maxSize)$/;"	f	class:RCServer
getParentPosInLayout	dialogs/toolbar.cpp	/^inline int DroppingController::getParentPosInLayout( QPoint point )$/;"	f	class:DroppingController
getPlayExitState	input_manager.cpp	/^bool MainInputManager::getPlayExitState()$/;"	f	class:MainInputManager
getPlayListItem	remoteControlServer.cpp	/^playlist_item_t* PlayListCommand::getPlayListItem(playlist_t *p_playlist,int index) {$/;"	f	class:PlayListCommand
getPoints	adapters/seekpoints.cpp	/^QList<SeekPoint> const SeekPoints::getPoints()$/;"	f	class:SeekPoints
getRatio	remoteControlServer.cpp	/^const char* BasicCommand::getRatio(int width,int height) {$/;"	f	class:BasicCommand
getSettings	qt4.hpp	123;"	d
getStaticMetaObject	actions_manager.moc.cpp	/^const QMetaObject &ActionsManager::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ActionsManager
getStaticMetaObject	adapters/seekpoints.moc.cpp	/^const QMetaObject &SeekPoints::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SeekPoints
getStaticMetaObject	components/complete_preferences.moc.cpp	/^const QMetaObject &AdvPrefsPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:AdvPrefsPanel
getStaticMetaObject	components/complete_preferences.moc.cpp	/^const QMetaObject &PrefsTree::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PrefsTree
getStaticMetaObject	components/controller.moc.cpp	/^const QMetaObject &AbstractController::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:AbstractController
getStaticMetaObject	components/controller.moc.cpp	/^const QMetaObject &AdvControlsWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:AdvControlsWidget
getStaticMetaObject	components/controller.moc.cpp	/^const QMetaObject &ControlsWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ControlsWidget
getStaticMetaObject	components/controller.moc.cpp	/^const QMetaObject &FullscreenControllerWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:FullscreenControllerWidget
getStaticMetaObject	components/controller.moc.cpp	/^const QMetaObject &InputControlsWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:InputControlsWidget
getStaticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject &AspectRatioComboBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:AspectRatioComboBox
getStaticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject &AtoB_Button::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:AtoB_Button
getStaticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject &LoopButton::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:LoopButton
getStaticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject &PlayButton::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PlayButton
getStaticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject &SoundWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SoundWidget
getStaticMetaObject	components/epg/EPGChannels.moc.cpp	/^const QMetaObject &EPGChannels::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:EPGChannels
getStaticMetaObject	components/epg/EPGRuler.moc.cpp	/^const QMetaObject &EPGRuler::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:EPGRuler
getStaticMetaObject	components/epg/EPGView.moc.cpp	/^const QMetaObject &EPGGraphicsScene::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:EPGGraphicsScene
getStaticMetaObject	components/epg/EPGView.moc.cpp	/^const QMetaObject &EPGView::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:EPGView
getStaticMetaObject	components/epg/EPGWidget.moc.cpp	/^const QMetaObject &EPGWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:EPGWidget
getStaticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject &Compressor::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:Compressor
getStaticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject &Equalizer::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:Equalizer
getStaticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject &ExtV4l2::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ExtV4l2
getStaticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject &ExtVideo::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ExtVideo
getStaticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject &Spatializer::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:Spatializer
getStaticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject &SyncControls::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SyncControls
getStaticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject &SyncWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SyncWidget
getStaticMetaObject	components/info_panels.moc.cpp	/^const QMetaObject &ExtraMetaPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ExtraMetaPanel
getStaticMetaObject	components/info_panels.moc.cpp	/^const QMetaObject &InfoPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:InfoPanel
getStaticMetaObject	components/info_panels.moc.cpp	/^const QMetaObject &InputStatsPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:InputStatsPanel
getStaticMetaObject	components/info_panels.moc.cpp	/^const QMetaObject &MetaPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MetaPanel
getStaticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject &BackgroundWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:BackgroundWidget
getStaticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject &CoverArtLabel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:CoverArtLabel
getStaticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject &SpeedControlWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SpeedControlWidget
getStaticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject &SpeedLabel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SpeedLabel
getStaticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject &TimeLabel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:TimeLabel
getStaticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject &VideoWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:VideoWidget
getStaticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject &CaptureOpenPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:CaptureOpenPanel
getStaticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject &DiscOpenPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:DiscOpenPanel
getStaticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject &FileOpenBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:FileOpenBox
getStaticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject &FileOpenPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:FileOpenPanel
getStaticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject &NetOpenPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:NetOpenPanel
getStaticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject &OpenPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:OpenPanel
getStaticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject &UrlValidator::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:UrlValidator
getStaticMetaObject	components/playlist/playlist.moc.cpp	/^const QMetaObject &LocationBar::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:LocationBar
getStaticMetaObject	components/playlist/playlist.moc.cpp	/^const QMetaObject &PlaylistWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PlaylistWidget
getStaticMetaObject	components/playlist/playlist_model.moc.cpp	/^const QMetaObject &PLModel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PLModel
getStaticMetaObject	components/playlist/playlist_model.moc.cpp	/^const QMetaObject &PlMimeData::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PlMimeData
getStaticMetaObject	components/playlist/selector.moc.cpp	/^const QMetaObject &PLSelItem::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PLSelItem
getStaticMetaObject	components/playlist/selector.moc.cpp	/^const QMetaObject &PLSelector::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PLSelector
getStaticMetaObject	components/playlist/standardpanel.moc.cpp	/^const QMetaObject &StandardPLPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:StandardPLPanel
getStaticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject &PicFlowView::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PicFlowView
getStaticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject &PlIconView::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PlIconView
getStaticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject &PlIconViewItemDelegate::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PlIconViewItemDelegate
getStaticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject &PlListView::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PlListView
getStaticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject &PlListViewItemDelegate::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PlListViewItemDelegate
getStaticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject &PlTreeView::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PlTreeView
getStaticMetaObject	components/playlist/vlc_model.moc.cpp	/^const QMetaObject &VLCModel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:VLCModel
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &ColorConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ColorConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &ConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &DirectoryConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:DirectoryConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &FileConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:FileConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &FloatConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:FloatConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &FloatRangeConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:FloatRangeConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &FontConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:FontConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &IntegerConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:IntegerConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &IntegerListConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:IntegerListConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &InterfacePreviewWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:InterfacePreviewWidget
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &KeySelectorControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:KeySelectorControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &ModuleListConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ModuleListConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &StringConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:StringConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &StringListConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:StringListConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &VFloatConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:VFloatConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &VIntConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:VIntConfigControl
getStaticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject &VStringConfigControl::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:VStringConfigControl
getStaticMetaObject	components/simple_preferences.moc.cpp	/^const QMetaObject &SPrefsCatList::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SPrefsCatList
getStaticMetaObject	components/simple_preferences.moc.cpp	/^const QMetaObject &SPrefsPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SPrefsPanel
getStaticMetaObject	components/sout/profile_selector.moc.cpp	/^const QMetaObject &VLCProfileEditor::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:VLCProfileEditor
getStaticMetaObject	components/sout/profile_selector.moc.cpp	/^const QMetaObject &VLCProfileSelector::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:VLCProfileSelector
getStaticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject &FileDestBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:FileDestBox
getStaticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject &HTTPDestBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:HTTPDestBox
getStaticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject &ICEDestBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ICEDestBox
getStaticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject &MMSHDestBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MMSHDestBox
getStaticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject &RTPDestBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:RTPDestBox
getStaticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject &RTSPDestBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:RTSPDestBox
getStaticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject &UDPDestBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:UDPDestBox
getStaticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject &VirtualDestBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:VirtualDestBox
getStaticMetaObject	dialogs/bookmarks.moc.cpp	/^const QMetaObject &BookmarksDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:BookmarksDialog
getStaticMetaObject	dialogs/convert.moc.cpp	/^const QMetaObject &ConvertDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ConvertDialog
getStaticMetaObject	dialogs/epg.moc.cpp	/^const QMetaObject &EpgDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:EpgDialog
getStaticMetaObject	dialogs/errors.moc.cpp	/^const QMetaObject &ErrorsDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ErrorsDialog
getStaticMetaObject	dialogs/extended.moc.cpp	/^const QMetaObject &ExtendedDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ExtendedDialog
getStaticMetaObject	dialogs/extensions.moc.cpp	/^const QMetaObject &ExtensionDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ExtensionDialog
getStaticMetaObject	dialogs/extensions.moc.cpp	/^const QMetaObject &ExtensionsDialogProvider::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ExtensionsDialogProvider
getStaticMetaObject	dialogs/extensions.moc.cpp	/^const QMetaObject &WidgetMapper::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:WidgetMapper
getStaticMetaObject	dialogs/external.moc.cpp	/^const QMetaObject &DialogHandler::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:DialogHandler
getStaticMetaObject	dialogs/external.moc.cpp	/^const QMetaObject &QVLCProgressDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:QVLCProgressDialog
getStaticMetaObject	dialogs/firstrun.moc.cpp	/^const QMetaObject &FirstRun::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:FirstRun
getStaticMetaObject	dialogs/gototime.moc.cpp	/^const QMetaObject &GotoTimeDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:GotoTimeDialog
getStaticMetaObject	dialogs/help.moc.cpp	/^const QMetaObject &AboutDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:AboutDialog
getStaticMetaObject	dialogs/help.moc.cpp	/^const QMetaObject &HelpDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:HelpDialog
getStaticMetaObject	dialogs/mediainfo.moc.cpp	/^const QMetaObject &MediaInfoDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MediaInfoDialog
getStaticMetaObject	dialogs/messages.moc.cpp	/^const QMetaObject &MessagesDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MessagesDialog
getStaticMetaObject	dialogs/open.moc.cpp	/^const QMetaObject &OpenDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:OpenDialog
getStaticMetaObject	dialogs/openurl.moc.cpp	/^const QMetaObject &OpenUrlDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:OpenUrlDialog
getStaticMetaObject	dialogs/playlist.moc.cpp	/^const QMetaObject &PlaylistDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PlaylistDialog
getStaticMetaObject	dialogs/plugins.moc.cpp	/^const QMetaObject &ExtensionListModel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ExtensionListModel
getStaticMetaObject	dialogs/plugins.moc.cpp	/^const QMetaObject &ExtensionTab::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ExtensionTab
getStaticMetaObject	dialogs/plugins.moc.cpp	/^const QMetaObject &PluginDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PluginDialog
getStaticMetaObject	dialogs/plugins.moc.cpp	/^const QMetaObject &PluginTab::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PluginTab
getStaticMetaObject	dialogs/podcast_configuration.moc.cpp	/^const QMetaObject &PodcastConfigDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PodcastConfigDialog
getStaticMetaObject	dialogs/preferences.moc.cpp	/^const QMetaObject &PrefsDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PrefsDialog
getStaticMetaObject	dialogs/sout.moc.cpp	/^const QMetaObject &SoutDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SoutDialog
getStaticMetaObject	dialogs/toolbar.moc.cpp	/^const QMetaObject &DroppingController::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:DroppingController
getStaticMetaObject	dialogs/toolbar.moc.cpp	/^const QMetaObject &ToolbarEditDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ToolbarEditDialog
getStaticMetaObject	dialogs/toolbar.moc.cpp	/^const QMetaObject &WidgetListing::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:WidgetListing
getStaticMetaObject	dialogs_provider.moc.cpp	/^const QMetaObject &DialogsProvider::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:DialogsProvider
getStaticMetaObject	extensions_manager.moc.cpp	/^const QMetaObject &ExtensionsManager::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ExtensionsManager
getStaticMetaObject	input_manager.moc.cpp	/^const QMetaObject &InputManager::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:InputManager
getStaticMetaObject	input_manager.moc.cpp	/^const QMetaObject &MainInputManager::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MainInputManager
getStaticMetaObject	main_interface.moc.cpp	/^const QMetaObject &MainInterface::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MainInterface
getStaticMetaObject	menus.moc.cpp	/^const QMetaObject &MenuFunc::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MenuFunc
getStaticMetaObject	menus.moc.cpp	/^const QMetaObject &MenuItemData::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MenuItemData
getStaticMetaObject	menus.moc.cpp	/^const QMetaObject &VLCMenuBar::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:VLCMenuBar
getStaticMetaObject	recents.moc.cpp	/^const QMetaObject &RecentsMRL::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:RecentsMRL
getStaticMetaObject	util/buttons/BrowseButton.moc.cpp	/^const QMetaObject &BrowseButton::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:BrowseButton
getStaticMetaObject	util/buttons/DeckButtonsLayout.moc.cpp	/^const QMetaObject &DeckButtonsLayout::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:DeckButtonsLayout
getStaticMetaObject	util/buttons/RoundButton.moc.cpp	/^const QMetaObject &RoundButton::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:RoundButton
getStaticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject &AnimatedIcon::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:AnimatedIcon
getStaticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject &QFramelessButton::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:QFramelessButton
getStaticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject &QToolButtonExt::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:QToolButtonExt
getStaticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject &QVLCDebugLevelSpinBox::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:QVLCDebugLevelSpinBox
getStaticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject &SpinningIcon::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SpinningIcon
getStaticMetaObject	util/input_slider.moc.cpp	/^const QMetaObject &SeekSlider::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SeekSlider
getStaticMetaObject	util/input_slider.moc.cpp	/^const QMetaObject &SoundSlider::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SoundSlider
getStaticMetaObject	util/pictureflow.moc.cpp	/^const QMetaObject &PictureFlow::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PictureFlow
getStaticMetaObject	util/qmenuview.moc.cpp	/^const QMetaObject &QMenuView::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:QMenuView
getStaticMetaObject	util/qvlcapp.moc.cpp	/^const QMetaObject &QVLCApp::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:QVLCApp
getStaticMetaObject	util/searchlineedit.moc.cpp	/^const QMetaObject &ClickLineEdit::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ClickLineEdit
getStaticMetaObject	util/searchlineedit.moc.cpp	/^const QMetaObject &SearchLineEdit::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SearchLineEdit
getStaticMetaObject	util/timetooltip.moc.cpp	/^const QMetaObject &TimeTooltip::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:TimeTooltip
getStaticMetaObject	variables.moc.cpp	/^const QMetaObject &QVLCInteger::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:QVLCInteger
getStaticMetaObject	variables.moc.cpp	/^const QMetaObject &QVLCPointer::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:QVLCPointer
getStaticMetaObject	variables.moc.cpp	/^const QMetaObject &QVLCVariable::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:QVLCVariable
getSysTray	main_interface.hpp	/^    QSystemTrayIcon *getSysTray() { return sysTray; }$/;"	f	class:MainInterface
getSysTrayMenu	main_interface.hpp	/^    QMenu *getSysTrayMenu() { return systrayMenu; }$/;"	f	class:MainInterface
getTotalPlayList	remoteControlServer.cpp	/^char* PlayListCommand::getTotalPlayList(playlist_item_t *p_item, int i_level,char* result)$/;"	f	class:PlayListCommand
getTotalPlayListDetail	remoteControlServer.cpp	/^char* PlayListCommand::getTotalPlayListDetail(playlist_item_t *p_item, int i_level,char* result,int field){$/;"	f	class:PlayListCommand
getTotalPlayListIdList	remoteControlServer.cpp	/^char* PlayListCommand::getTotalPlayListIdList(playlist_item_t *p_item, int i_level,char* result)$/;"	f	class:PlayListCommand
getTotalTrackList	remoteControlServer.cpp	/^const char* RCUtil::getTotalTrackList(const vlc_value_t&val,const vlc_value_t& text,char* result)$/;"	f	class:RCUtil
getTrack	remoteControlServer.cpp	/^const char* RCUtil::getTrack(const char* psz_cmd)$/;"	f	class:RCUtil
getTrackTextValueByIndex	remoteControlServer.cpp	/^const char* RCUtil::getTrackTextValueByIndex(const vlc_value_t& val,const vlc_value_t& text,int index)$/;"	f	class:RCUtil
getTranscode	components/sout/profile_selector.hpp	/^    QString getTranscode() { return transcode; }$/;"	f	class:VLCProfileSelector
getType	components/preferences_widgets.hpp	/^    virtual int getType() const { return CONFIG_ITEM_BOOL; }$/;"	f	class:BoolConfigControl
getType	components/preferences_widgets.hpp	/^    virtual int getType() const { return CONFIG_ITEM_FLOAT; }$/;"	f	class:VFloatConfigControl
getType	components/preferences_widgets.hpp	/^    virtual int getType() const { return CONFIG_ITEM_INTEGER; }$/;"	f	class:VIntConfigControl
getType	components/preferences_widgets.hpp	/^    virtual int getType() const { return CONFIG_ITEM_KEY; }$/;"	f	class:KeySelectorControl
getType	components/preferences_widgets.hpp	/^    virtual int getType() const { return CONFIG_ITEM_STRING; }$/;"	f	class:VStringConfigControl
getUri	components/playlist/ml_item.cpp	/^QUrl MLItem::getUri() const$/;"	f	class:MLItem
getValue	components/preferences_widgets.cpp	/^QString ModuleConfigControl::getValue() const$/;"	f	class:ModuleConfigControl
getValue	components/preferences_widgets.cpp	/^QString ModuleListConfigControl::getValue() const$/;"	f	class:ModuleListConfigControl
getValue	components/preferences_widgets.cpp	/^QString StringListConfigControl::getValue() const$/;"	f	class:StringListConfigControl
getValue	components/preferences_widgets.cpp	/^float FloatConfigControl::getValue() const$/;"	f	class:FloatConfigControl
getValue	components/preferences_widgets.cpp	/^int BoolConfigControl::getValue() const$/;"	f	class:BoolConfigControl
getValue	components/preferences_widgets.cpp	/^int ColorConfigControl::getValue() const$/;"	f	class:ColorConfigControl
getValue	components/preferences_widgets.cpp	/^int IntegerConfigControl::getValue() const$/;"	f	class:IntegerConfigControl
getValue	components/preferences_widgets.cpp	/^int IntegerListConfigControl::getValue() const$/;"	f	class:IntegerListConfigControl
getValue	components/preferences_widgets.cpp	/^int IntegerRangeSliderConfigControl::getValue() const$/;"	f	class:IntegerRangeSliderConfigControl
getValue	components/preferences_widgets.hpp	/^    virtual QString getValue() const { return font->currentFont().family(); }$/;"	f	class:FontConfigControl
getValue	components/preferences_widgets.hpp	/^    virtual QString getValue() const { return text->text(); };$/;"	f	class:FileConfigControl
getValue	components/preferences_widgets.hpp	/^    virtual QString getValue() const { return text->text(); };$/;"	f	class:StringConfigControl
getValue	dialogs/toolbar.cpp	/^QString DroppingController::getValue()$/;"	f	class:DroppingController
getVideo	main_interface.cpp	/^WId MainInterface::getVideo( int *pi_x, int *pi_y,$/;"	f	class:MainInterface
getVideoSlot	main_interface.cpp	/^void MainInterface::getVideoSlot( WId *p_id, int *pi_x, int *pi_y,$/;"	f	class:MainInterface
getVout	input_manager.cpp	/^vout_thread_t* MainInputManager::getVout()$/;"	f	class:MainInputManager
getWidget	components/preferences_widgets.hpp	/^    QWidget *getWidget() const { assert( widget ); return widget; }$/;"	f	class:ConfigControl
getWidget	dialogs/extensions.hpp	/^    extension_widget_t* getWidget() { return p_widget; }$/;"	f	class:WidgetMapper
global_layout	components/complete_preferences.hpp	/^    QVBoxLayout *global_layout;$/;"	m	class:AdvPrefsPanel
goItem	util/buttons/DeckButtonsLayout.hpp	/^    QWidgetItem* goItem;$/;"	m	class:DeckButtonsLayout
gotoPlayingItem	components/playlist/standardpanel.cpp	/^void StandardPLPanel::gotoPlayingItem()$/;"	f	class:StandardPLPanel
gotoTimeDialog	dialogs_provider.cpp	/^void DialogsProvider::gotoTimeDialog()$/;"	f	class:DialogsProvider
gradfunEnable	ui/video_effects.h	/^    QGroupBox *gradfunEnable;$/;"	m	class:Ui_ExtVideoWidget
gradfunRadiusSlider	ui/video_effects.h	/^    QSlider *gradfunRadiusSlider;$/;"	m	class:Ui_ExtVideoWidget
gradientCartoonCheck	ui/video_effects.h	/^    QCheckBox *gradientCartoonCheck;$/;"	m	class:Ui_ExtVideoWidget
gradientEnable	ui/video_effects.h	/^    QGroupBox *gradientEnable;$/;"	m	class:Ui_ExtVideoWidget
gradientModeCombo	ui/video_effects.h	/^    QComboBox *gradientModeCombo;$/;"	m	class:Ui_ExtVideoWidget
gradientTypeCheck	ui/video_effects.h	/^    QCheckBox *gradientTypeCheck;$/;"	m	class:Ui_ExtVideoWidget
grainEnable	ui/video_effects.h	/^    QGroupBox *grainEnable;$/;"	m	class:Ui_ExtVideoWidget
grainVarianceSlider	ui/video_effects.h	/^    QSlider *grainVarianceSlider;$/;"	m	class:Ui_ExtVideoWidget
gridLayout	ui/about.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_aboutWidget
gridLayout	ui/equalizer.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_EqualizerWidget
gridLayout	ui/messages_panel.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_messagesPanelWidget
gridLayout	ui/open.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_Open
gridLayout	ui/open_capture.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_OpenCapture
gridLayout	ui/open_disk.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_OpenDisk
gridLayout	ui/open_file.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_OpenFile
gridLayout	ui/open_net.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_OpenNetwork
gridLayout	ui/podcast_configuration.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_PodcastConfiguration
gridLayout	ui/profiles.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_Profiles
gridLayout	ui/sprefs_audio.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_SPrefsAudio
gridLayout	ui/sprefs_input.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_SPrefsInputAndCodecs
gridLayout	ui/sprefs_interface.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_SPrefsInterface
gridLayout	ui/sprefs_subtitles.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_SPrefsSubtitles
gridLayout	ui/sprefs_video.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_SPrefsVideo
gridLayout	ui/streampanel.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_BroadcastPanel
gridLayout	ui/video_effects.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_ExtVideoWidget
gridLayout	ui/vlm.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_Vlm
gridLayout1	ui/open_file.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_OpenFile
gridLayout1	ui/profiles.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_Profiles
gridLayout1	ui/sprefs_audio.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_SPrefsAudio
gridLayout1	ui/sprefs_input.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_SPrefsInputAndCodecs
gridLayout1	ui/sprefs_interface.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_SPrefsInterface
gridLayout1	ui/sprefs_subtitles.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_SPrefsSubtitles
gridLayout1	ui/sprefs_video.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_SPrefsVideo
gridLayout1	ui/streampanel.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_BroadcastPanel
gridLayout1	ui/video_effects.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_ExtVideoWidget
gridLayout1	ui/vlm.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_Vlm
gridLayout2	ui/sprefs_video.h	/^    QGridLayout *gridLayout2;$/;"	m	class:Ui_SPrefsVideo
gridLayout2	ui/video_effects.h	/^    QGridLayout *gridLayout2;$/;"	m	class:Ui_ExtVideoWidget
gridLayout2	ui/vlm.h	/^    QGridLayout *gridLayout2;$/;"	m	class:Ui_Vlm
gridLayout3	ui/sprefs_video.h	/^    QGridLayout *gridLayout3;$/;"	m	class:Ui_SPrefsVideo
gridLayout3	ui/video_effects.h	/^    QGridLayout *gridLayout3;$/;"	m	class:Ui_ExtVideoWidget
gridLayout4	ui/sprefs_video.h	/^    QGridLayout *gridLayout4;$/;"	m	class:Ui_SPrefsVideo
gridLayout4	ui/video_effects.h	/^    QGridLayout *gridLayout4;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_10	ui/sout.h	/^    QGridLayout *gridLayout_10;$/;"	m	class:Ui_Sout
gridLayout_10	ui/video_effects.h	/^    QGridLayout *gridLayout_10;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_11	ui/video_effects.h	/^    QGridLayout *gridLayout_11;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_12	ui/video_effects.h	/^    QGridLayout *gridLayout_12;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_13	ui/video_effects.h	/^    QGridLayout *gridLayout_13;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_14	ui/video_effects.h	/^    QGridLayout *gridLayout_14;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_15	ui/video_effects.h	/^    QGridLayout *gridLayout_15;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_16	ui/video_effects.h	/^    QGridLayout *gridLayout_16;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_17	ui/video_effects.h	/^    QGridLayout *gridLayout_17;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_18	ui/video_effects.h	/^    QGridLayout *gridLayout_18;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_19	ui/video_effects.h	/^    QGridLayout *gridLayout_19;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_2	ui/about.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_aboutWidget
gridLayout_2	ui/open.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_Open
gridLayout_2	ui/open_disk.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_OpenDisk
gridLayout_2	ui/profiles.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_Profiles
gridLayout_2	ui/sout.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_Sout
gridLayout_2	ui/sprefs_audio.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_SPrefsAudio
gridLayout_2	ui/sprefs_input.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_SPrefsInputAndCodecs
gridLayout_2	ui/sprefs_interface.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_SPrefsInterface
gridLayout_2	ui/sprefs_subtitles.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_SPrefsSubtitles
gridLayout_2	ui/video_effects.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_3	ui/profiles.h	/^    QGridLayout *gridLayout_3;$/;"	m	class:Ui_Profiles
gridLayout_3	ui/sout.h	/^    QGridLayout *gridLayout_3;$/;"	m	class:Ui_Sout
gridLayout_3	ui/sprefs_audio.h	/^    QGridLayout *gridLayout_3;$/;"	m	class:Ui_SPrefsAudio
gridLayout_3	ui/sprefs_input.h	/^    QGridLayout *gridLayout_3;$/;"	m	class:Ui_SPrefsInputAndCodecs
gridLayout_3	ui/sprefs_interface.h	/^    QGridLayout *gridLayout_3;$/;"	m	class:Ui_SPrefsInterface
gridLayout_3	ui/video_effects.h	/^    QGridLayout *gridLayout_3;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_4	ui/profiles.h	/^    QGridLayout *gridLayout_4;$/;"	m	class:Ui_Profiles
gridLayout_4	ui/sout.h	/^    QGridLayout *gridLayout_4;$/;"	m	class:Ui_Sout
gridLayout_4	ui/sprefs_interface.h	/^    QGridLayout *gridLayout_4;$/;"	m	class:Ui_SPrefsInterface
gridLayout_4	ui/video_effects.h	/^    QGridLayout *gridLayout_4;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_5	ui/sout.h	/^    QGridLayout *gridLayout_5;$/;"	m	class:Ui_Sout
gridLayout_5	ui/sprefs_interface.h	/^    QGridLayout *gridLayout_5;$/;"	m	class:Ui_SPrefsInterface
gridLayout_5	ui/video_effects.h	/^    QGridLayout *gridLayout_5;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_6	ui/sout.h	/^    QGridLayout *gridLayout_6;$/;"	m	class:Ui_Sout
gridLayout_6	ui/video_effects.h	/^    QGridLayout *gridLayout_6;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_7	ui/sout.h	/^    QGridLayout *gridLayout_7;$/;"	m	class:Ui_Sout
gridLayout_7	ui/sprefs_interface.h	/^    QGridLayout *gridLayout_7;$/;"	m	class:Ui_SPrefsInterface
gridLayout_7	ui/video_effects.h	/^    QGridLayout *gridLayout_7;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_8	ui/video_effects.h	/^    QGridLayout *gridLayout_8;$/;"	m	class:Ui_ExtVideoWidget
gridLayout_9	ui/video_effects.h	/^    QGridLayout *gridLayout_9;$/;"	m	class:Ui_ExtVideoWidget
grip	components/controller.hpp	/^    QSizeGrip *grip;$/;"	m	class:ControlsWidget
groupBox	components/preferences_widgets.hpp	/^    QGroupBox *groupBox;$/;"	m	class:ModuleListConfigControl
groupBox	ui/open_net.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_OpenNetwork
groupBox	ui/profiles.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_Profiles
groupBox	ui/sout.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_Sout
groupBox	ui/sprefs_input.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_SPrefsInputAndCodecs
groupBox	ui/sprefs_subtitles.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_SPrefsSubtitles
groupBox	ui/sprefs_video.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_SPrefsVideo
groupBox_2	ui/sout.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_Sout
groupBox_2	ui/sprefs_audio.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_SPrefsAudio
groupBox_2	ui/sprefs_input.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_SPrefsInputAndCodecs
groupBox_2	ui/sprefs_interface.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_SPrefsInterface
groupBox_2	ui/sprefs_subtitles.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_SPrefsSubtitles
groupBox_2	ui/sprefs_video.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_SPrefsVideo
groupBox_3	ui/sout.h	/^    QGroupBox *groupBox_3;$/;"	m	class:Ui_Sout
groupBox_3	ui/sprefs_audio.h	/^    QGroupBox *groupBox_3;$/;"	m	class:Ui_SPrefsAudio
groupBox_3	ui/sprefs_input.h	/^    QGroupBox *groupBox_3;$/;"	m	class:Ui_SPrefsInputAndCodecs
groupBox_3	ui/sprefs_subtitles.h	/^    QGroupBox *groupBox_3;$/;"	m	class:Ui_SPrefsSubtitles
groupBox_4	ui/sout.h	/^    QGroupBox *groupBox_4;$/;"	m	class:Ui_Sout
groupBox_4	ui/sprefs_input.h	/^    QGroupBox *groupBox_4;$/;"	m	class:Ui_SPrefsInputAndCodecs
handle	remoteControlServer.cpp	/^int RCHandler::handle(char *psz_cmd,char* p_data) {$/;"	f	class:RCHandler
handleExpansion	components/playlist/standardpanel.cpp	/^void StandardPLPanel::handleExpansion( const QModelIndex& index )$/;"	f	class:StandardPLPanel
handleKeyPress	main_interface.cpp	/^void MainInterface::handleKeyPress( QKeyEvent *e )$/;"	f	class:MainInterface
handleOpacity	util/input_slider.cpp	/^qreal SeekSlider::handleOpacity() const$/;"	f	class:SeekSlider
handleSize	util/input_slider.cpp	/^QSize SeekSlider::handleSize() const$/;"	f	class:SeekSlider
handleSystrayClick	main_interface.cpp	/^void MainInterface::handleSystrayClick($/;"	f	class:MainInterface
handler	dialogs/external.hpp	/^    DialogHandler *handler;$/;"	m	class:QVLCProgressDialog
hasAudio	input_manager.cpp	/^bool InputManager::hasAudio()$/;"	f	class:InputManager
hasEmptyPlaylist	input_manager.cpp	/^bool MainInputManager::hasEmptyPlaylist()$/;"	f	class:MainInputManager
hasInput	input_manager.hpp	/^    bool hasInput()$/;"	f	class:InputManager
hasValidData	components/epg/EPGView.cpp	/^bool EPGView::hasValidData() const$/;"	f	class:EPGView
hasVideo	input_manager.hpp	/^    bool hasVideo() { return hasInput() && b_video; }$/;"	f	class:InputManager
hasVisualisation	input_manager.cpp	/^bool InputManager::hasVisualisation()$/;"	f	class:InputManager
has_lock	dialogs/extensions.hpp	/^    bool has_lock; \/\/\/< Indicates whether Qt thread owns the lock$/;"	m	class:ExtensionDialog
hboxLayout	ui/equalizer.h	/^    QHBoxLayout *hboxLayout;$/;"	m	class:Ui_EqualizerWidget
hboxLayout	ui/sprefs_audio.h	/^    QHBoxLayout *hboxLayout;$/;"	m	class:Ui_SPrefsAudio
hboxLayout	ui/streampanel.h	/^    QHBoxLayout *hboxLayout;$/;"	m	class:Ui_BroadcastPanel
hboxLayout	ui/vlm.h	/^    QHBoxLayout *hboxLayout;$/;"	m	class:Ui_Vlm
hboxLayout1	ui/streampanel.h	/^    QHBoxLayout *hboxLayout1;$/;"	m	class:Ui_BroadcastPanel
header	dialogs/messages.cpp	/^    QString header;$/;"	m	class:MsgEvent	file:
headerData	components/playlist/ml_model.cpp	/^QVariant MLModel::headerData( int section, Qt::Orientation orientation,$/;"	f	class:MLModel
headerData	components/playlist/playlist_model.cpp	/^QVariant PLModel::headerData( int section, Qt::Orientation orientation,$/;"	f	class:PLModel
headphoneB	components/simple_preferences.hpp	/^       headphoneB,$/;"	e	enum:__anon21
headphoneEffect	ui/sprefs_audio.h	/^    QCheckBox *headphoneEffect;$/;"	m	class:Ui_SPrefsAudio
heightBox	ui/profiles.h	/^    QLineEdit *heightBox;$/;"	m	class:Ui_Profiles
heightLabel	ui/profiles.h	/^    QLabel *heightLabel;$/;"	m	class:Ui_Profiles
help	components/complete_preferences.hpp	/^    QString help;$/;"	m	class:PrefsItemData
help	components/extended_panels.hpp	/^    QLabel *help;$/;"	m	class:ExtV4l2
helpDialog	dialogs_provider.cpp	/^void DialogsProvider::helpDialog()$/;"	f	class:DialogsProvider
helpEdit	ui/sout.h	/^    QTextEdit *helpEdit;$/;"	m	class:Ui_Sout
hide	components/preferences_widgets.cpp	/^void ModuleListConfigControl::hide()$/;"	f	class:ModuleListConfigControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { checkbox->hide(); }$/;"	f	class:BoolConfigControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { combo->hide(); if( label ) label->hide(); }$/;"	f	class:IntegerListConfigControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { combo->hide(); if( label ) label->hide(); }$/;"	f	class:ModuleConfigControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { combo->hide(); if( label ) label->hide(); }$/;"	f	class:StringListConfigControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { getWidget()->hide(); };$/;"	f	class:ConfigControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { spin->hide(); if( label ) label->hide(); }$/;"	f	class:FloatConfigControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { spin->hide(); if( label ) label->hide(); }$/;"	f	class:IntegerConfigControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { table->hide(); if( label ) label->hide(); }$/;"	f	class:KeySelectorControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { text->hide(); if( label ) label->hide(); browse->hide(); }$/;"	f	class:FileConfigControl
hide	components/preferences_widgets.hpp	/^    virtual void hide() { text->hide(); if( label ) label->hide(); }$/;"	f	class:StringConfigControl
hideAction	components/playlist/selector.hpp	/^    void hideAction() { if( lblAction ) lblAction->hide(); }$/;"	f	class:PLSelItem
hideEvent	util/input_slider.cpp	/^void SeekSlider::hideEvent( QHideEvent * )$/;"	f	class:SeekSlider
hideFSC	components/controller.hpp	/^    void hideFSC() { hide(); }$/;"	f	class:FullscreenControllerWidget
hideHandle	util/input_slider.cpp	/^void SeekSlider::hideHandle()$/;"	f	class:SeekSlider
hideHandleTimer	util/input_slider.hpp	/^    QTimer *hideHandleTimer;$/;"	m	class:SeekSlider
hideUpdateSystrayMenu	main_interface.cpp	/^void MainInterface::hideUpdateSystrayMenu()$/;"	f	class:MainInterface
himl	main_interface.hpp	/^    HIMAGELIST himl;$/;"	m	class:MainInterface
horizontalLayout	ui/open_disk.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_OpenDisk
horizontalLayout	ui/open_file.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_OpenFile
horizontalLayout	ui/sprefs_audio.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_SPrefsAudio
horizontalLayout	ui/sprefs_input.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_SPrefsInputAndCodecs
horizontalLayout	ui/video_effects.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_ExtVideoWidget
horizontalLayout_2	ui/open.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_Open
horizontalLayout_3	ui/sprefs_interface.h	/^    QHBoxLayout *horizontalLayout_3;$/;"	m	class:Ui_SPrefsInterface
horizontalLayout_4	ui/sprefs_input.h	/^    QHBoxLayout *horizontalLayout_4;$/;"	m	class:Ui_SPrefsInputAndCodecs
horizontalLayout_4	ui/sprefs_interface.h	/^    QHBoxLayout *horizontalLayout_4;$/;"	m	class:Ui_SPrefsInterface
horizontalLayout_5	ui/open_disk.h	/^    QHBoxLayout *horizontalLayout_5;$/;"	m	class:Ui_OpenDisk
horizontalLayout_5	ui/sprefs_interface.h	/^    QHBoxLayout *horizontalLayout_5;$/;"	m	class:Ui_SPrefsInterface
horizontalOffset	components/playlist/views.cpp	/^int PicFlowView::horizontalOffset() const$/;"	f	class:PicFlowView
horizontalSlider	ui/streampanel.h	/^    QSlider *horizontalSlider;$/;"	m	class:Ui_BroadcastPanel
horizontalSpacer	ui/equalizer.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_EqualizerWidget
horizontalSpacer	ui/open.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_Open
horizontalSpacer	ui/open_disk.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_OpenDisk
horizontalSpacer	ui/profiles.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_Profiles
horizontalSpacer	ui/sout.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_Sout
horizontalSpacer	ui/sprefs_audio.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_SPrefsAudio
horizontalSpacer	ui/sprefs_input.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_SPrefsInputAndCodecs
horizontalSpacer	ui/sprefs_interface.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_SPrefsInterface
horizontalSpacer	ui/sprefs_subtitles.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_SPrefsSubtitles
horizontalSpacer	ui/sprefs_video.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_SPrefsVideo
horizontalSpacer_2	ui/open.h	/^    QSpacerItem *horizontalSpacer_2;$/;"	m	class:Ui_Open
horizontalSpacer_2	ui/open_disk.h	/^    QSpacerItem *horizontalSpacer_2;$/;"	m	class:Ui_OpenDisk
horizontalSpacer_2	ui/sprefs_interface.h	/^    QSpacerItem *horizontalSpacer_2;$/;"	m	class:Ui_SPrefsInterface
horizontalSpacer_3	ui/sout.h	/^    QSpacerItem *horizontalSpacer_3;$/;"	m	class:Ui_Sout
horizontalSpacer_3	ui/sprefs_interface.h	/^    QSpacerItem *horizontalSpacer_3;$/;"	m	class:Ui_SPrefsInterface
horizontalSpacer_4	ui/sout.h	/^    QSpacerItem *horizontalSpacer_4;$/;"	m	class:Ui_Sout
horizontalSpacer_4	ui/sprefs_interface.h	/^    QSpacerItem *horizontalSpacer_4;$/;"	m	class:Ui_SPrefsInterface
horizontalSpacer_5	ui/sprefs_interface.h	/^    QSpacerItem *horizontalSpacer_5;$/;"	m	class:Ui_SPrefsInterface
horizontalSpacer_6	ui/sprefs_interface.h	/^    QSpacerItem *horizontalSpacer_6;$/;"	m	class:Ui_SPrefsInterface
horizontalSpacer_7	ui/sprefs_interface.h	/^    QSpacerItem *horizontalSpacer_7;$/;"	m	class:Ui_SPrefsInterface
horizontalSpacer_8	ui/sprefs_interface.h	/^    QSpacerItem *horizontalSpacer_8;$/;"	m	class:Ui_SPrefsInterface
host	Makefile	/^host = i586-pc-mingw32msvc$/;"	m
host_alias	Makefile	/^host_alias = i586-mingw32msvc$/;"	m
host_cpu	Makefile	/^host_cpu = i586$/;"	m
host_os	Makefile	/^host_os = mingw32msvc$/;"	m
host_triplet	Makefile	/^host_triplet = i586-pc-mingw32msvc$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
hoverEnterEvent	components/epg/EPGItem.cpp	/^void EPGItem::hoverEnterEvent ( QGraphicsSceneHoverEvent * event )$/;"	f	class:EPGItem
hoverLeaveEvent	components/epg/EPGItem.cpp	/^void EPGItem::hoverLeaveEvent ( QGraphicsSceneHoverEvent * event )$/;"	f	class:EPGItem
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
httpProxyLabel	ui/sprefs_input.h	/^    QLabel *httpProxyLabel;$/;"	m	class:Ui_SPrefsInputAndCodecs
hueSlider	ui/video_effects.h	/^    QSlider *hueSlider;$/;"	m	class:Ui_ExtVideoWidget
hwAccelBox	ui/sprefs_input.h	/^    QCheckBox *hwAccelBox;$/;"	m	class:Ui_SPrefsInputAndCodecs
hwYUVBox	ui/sprefs_video.h	/^    QCheckBox *hwYUVBox;$/;"	m	class:Ui_SPrefsVideo
iMaxVisibleCount	util/qmenuview.hpp	/^    int iMaxVisibleCount;$/;"	m	class:QMenuView
i_action_flag	dialogs/open.hpp	/^    int i_action_flag;$/;"	m	class:OpenDialog
i_arg	dialogs_provider.hpp	/^    int i_arg, i_dialog;$/;"	m	class:DialogEvent
i_cached_id	components/playlist/playlist_model.hpp	/^    int i_cached_id;$/;"	m	class:PLModel
i_cached_input_id	components/playlist/playlist_model.hpp	/^    int i_cached_input_id;$/;"	m	class:PLModel
i_color	components/preferences_widgets.hpp	/^    int i_color;$/;"	m	class:ColorConfigControl
i_column_sorting	components/playlist/sorting.h	/^static inline int i_column_sorting( uint32_t i_column )$/;"	f
i_dialog	dialogs_provider.hpp	/^    int i_arg, i_dialog;$/;"	m	class:DialogEvent
i_dragIndex	dialogs/toolbar.hpp	/^    int i_dragIndex;$/;"	m	class:DroppingController
i_event_source_type	components/epg/EPGWidget.hpp	/^    uint8_t i_event_source_type;$/;"	m	class:EPGWidget
i_hide_timeout	components/controller.hpp	/^    int         i_hide_timeout;  \/* FSC hiding timeout, same as mouse hiding timeout *\/$/;"	m	class:FullscreenControllerWidget
i_id	components/playlist/playlist_item.hpp	/^    int i_id;$/;"	m	class:PLItem
i_item	input_manager.hpp	/^    int i_item;$/;"	m	class:PLEvent
i_mouse_last_move_x	components/controller.hpp	/^    int i_mouse_last_move_x;$/;"	m	class:FullscreenControllerWidget
i_mouse_last_move_y	components/controller.hpp	/^    int i_mouse_last_move_y;$/;"	m	class:FullscreenControllerWidget
i_mouse_last_x	components/controller.hpp	/^    int i_mouse_last_x, i_mouse_last_y;$/;"	m	class:FullscreenControllerWidget
i_mouse_last_y	components/controller.hpp	/^    int i_mouse_last_x, i_mouse_last_y;$/;"	m	class:FullscreenControllerWidget
i_object_id	components/complete_preferences.hpp	/^    int i_object_id;$/;"	m	class:PrefsItemData
i_old_playing_status	input_manager.hpp	/^    int             i_old_playing_status;$/;"	m	class:InputManager
i_oldvalue	util/input_slider.hpp	/^    int i_oldvalue; \/* Store the old Value before changing *\/$/;"	m	class:SoundSlider
i_option	dialogs/toolbar.hpp	/^        int i_option;$/;"	m	struct:DroppingController::doubleInt
i_parent	input_manager.hpp	/^    int i_parent;$/;"	m	class:PLEvent
i_popup_item	components/playlist/playlist_model.hpp	/^    int i_popup_item, i_popup_parent;$/;"	m	class:PLModel
i_popup_parent	components/playlist/playlist_model.hpp	/^    int i_popup_item, i_popup_parent;$/;"	m	class:PLModel
i_row	components/epg/EPGItem.hpp	/^    unsigned int i_row;$/;"	m	class:EPGItem
i_screenHeight	qt4.hpp	/^    int  i_screenHeight;     \/* Detection of Small screens *\/$/;"	m	struct:intf_sys_t
i_screenWidth	qt4.hpp	/^    int  i_screenWidth;     \/* Detection of Small screens *\/$/;"	m	struct:intf_sys_t
i_screennumber	components/controller.hpp	/^    int i_screennumber;$/;"	m	class:FullscreenControllerWidget
i_slow_hide_timeout	components/controller.hpp	/^    int  i_slow_hide_timeout;$/;"	m	class:FullscreenControllerWidget
i_subcat_id	components/complete_preferences.hpp	/^    int i_subcat_id;$/;"	m	class:PrefsItemData
i_type	components/complete_preferences.hpp	/^    int i_type;$/;"	m	class:PrefsItemData
i_type	dialogs/toolbar.hpp	/^        int i_type;$/;"	m	struct:DroppingController::doubleInt
i_val_type	menus.hpp	/^    int i_val_type;$/;"	m	class:MenuItemData
i_zoom	components/playlist/playlist_model.hpp	/^    int i_zoom;$/;"	m	class:PLModel
icomp	components/playlist/ml_item.cpp	56;"	d	file:
icomp	components/playlist/ml_item.cpp	82;"	d	file:
icon	dialogs/plugins.cpp	/^    QPixmap *icon;$/;"	m	class:ExtensionCopy	file:
iconL	components/controller.hpp	/^static const QString iconL[BUTTON_MAX] ={ ":\/toolbar\/play_b", ":\/toolbar\/stop_b",$/;"	v
iconVLC	ui/about.h	/^    QLabel *iconVLC;$/;"	m	class:Ui_aboutWidget
iconView	components/playlist/standardpanel.hpp	/^    PlIconView        *iconView;$/;"	m	class:StandardPLPanel
icons	components/playlist/playlist_model.cpp	/^QIcon PLModel::icons[ITEM_TYPE_NUMBER];$/;"	m	class:PLModel	file:
icons	components/playlist/playlist_model.hpp	/^    static QIcon icons[ITEM_TYPE_NUMBER];$/;"	m	class:PLModel
id	components/playlist/ml_item.cpp	/^int MLItem::id() const$/;"	f	class:MLItem
id	components/playlist/playlist_item.hpp	/^    int id() { return i_id; }$/;"	f	class:PLItem
id	menus.hpp	/^    int id;$/;"	m	class:MenuFunc
id	remoteControlServer.hpp	/^    std::string id;$/;"	m	struct:RCInputMRL
im	input_manager.hpp	/^    InputManager            *im;$/;"	m	class:MainInputManager
importVLMConf	dialogs/vlm.cpp	/^bool VLMDialog::importVLMConf()$/;"	f	class:VLMDialog
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
increaseZoom	components/playlist/playlist_model.cpp	/^void PLModel::increaseZoom()$/;"	f	class:PLModel
index	components/playlist/ml_model.cpp	/^QModelIndex MLModel::index( int row, int column,$/;"	f	class:MLModel
index	components/playlist/playlist_model.cpp	/^QModelIndex PLModel::index( PLItem *item, int column ) const$/;"	f	class:PLModel
index	components/playlist/playlist_model.cpp	/^QModelIndex PLModel::index( const int i_id, const int c )$/;"	f	class:PLModel
index	components/playlist/playlist_model.cpp	/^QModelIndex PLModel::index( const int row, const int column, const QModelIndex &parent )$/;"	f	class:PLModel
index	dialogs/plugins.cpp	/^QModelIndex ExtensionListModel::index( int row, int column,$/;"	f	class:ExtensionListModel
indexAt	components/playlist/views.cpp	/^QModelIndex PicFlowView::indexAt(const QPoint &) const$/;"	f	class:PicFlowView
info	remoteControlServer.cpp	/^void RCUtil::info(const vlc_object_t* obj) {$/;"	f	class:RCUtil
infoChanged	input_manager.moc.cpp	/^void InputManager::infoChanged(input_item_t * _t1)$/;"	f	class:InputManager
infoLabel	ui/about.h	/^    QLabel *infoLabel;$/;"	m	class:Ui_aboutWidget
infoTabW	dialogs/mediainfo.hpp	/^    QTabWidget *infoTabW;$/;"	m	class:MediaInfoDialog
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init	components/playlist/playlist_item.cpp	/^void PLItem::init( playlist_item_t *_playlist_item, PLItem *parent )$/;"	f	class:PLItem
init	dialogs/ml_configuration.cpp	/^void MLConfDialog::init()$/;"	f	class:MLConfDialog
init	util/pictureflow.cpp	/^void PictureFlowSoftwareRenderer::init()$/;"	f	class:PictureFlowSoftwareRenderer
initCallback	remoteControlServer.cpp	/^void RCPlayListModel::initCallback(intf_thread_t* p_intf) {$/;"	f	class:RCPlayListModel
initComboBoxItems	components/extended_panels.cpp	/^void ExtVideo::initComboBoxItems( QObject *widget )$/;"	f	class:ExtVideo
initSubsDuration	components/extended_panels.cpp	/^void SyncControls::initSubsDuration()$/;"	f	class:SyncControls
initSystray	main_interface.cpp	/^inline void MainInterface::initSystray()$/;"	f	class:MainInterface
initialize	components/open_panels.cpp	/^void CaptureOpenPanel::initialize()$/;"	f	class:CaptureOpenPanel
input	components/info_panels.hpp	/^    QTreeWidgetItem *input;$/;"	m	class:InputStatsPanel
input	dialogs/vlm.hpp	/^    QString input;$/;"	m	class:VLMAWidget
inputBox	ui/sout.h	/^    SoutInputBox *inputBox;$/;"	m	class:Ui_Sout
inputButton	ui/vlm.h	/^    QPushButton *inputButton;$/;"	m	class:Ui_Vlm
inputC	main_interface.hpp	/^    InputControlsWidget *inputC;$/;"	m	class:MainInterface
inputChanged	extensions_manager.cpp	/^void ExtensionsManager::inputChanged( input_thread_t* p_input )$/;"	f	class:ExtensionsManager
inputChanged	input_manager.moc.cpp	/^void MainInputManager::inputChanged(input_thread_t * _t1)$/;"	f	class:MainInputManager
inputExists	components/controller.moc.cpp	/^void AbstractController::inputExists(bool _t1)$/;"	f	class:AbstractController
inputIsRecordable	components/controller.moc.cpp	/^void AbstractController::inputIsRecordable(bool _t1)$/;"	f	class:AbstractController
inputIsTrickPlayable	components/controller.moc.cpp	/^void AbstractController::inputIsTrickPlayable(bool _t1)$/;"	f	class:AbstractController
inputItem	components/playlist/playlist_item.hpp	/^    input_item_t *inputItem() const { return p_input; }$/;"	f	class:PLItem
inputItemUpdate	components/playlist/selector.cpp	/^void PLSelector::inputItemUpdate( input_item_t *arg )$/;"	f	class:PLSelector
inputItems	components/playlist/playlist_model.cpp	/^QList<input_item_t*> PlMimeData::inputItems() const$/;"	f	class:PlMimeData
inputLE	components/simple_preferences.hpp	/^enum { inputLE, cachingCoB };$/;"	e	enum:__anon22
inputLabel	ui/vlm.h	/^    QLabel *inputLabel;$/;"	m	class:Ui_Vlm
inputLedit	ui/vlm.h	/^    QLineEdit *inputLedit;$/;"	m	class:Ui_Vlm
inputLength	util/input_slider.hpp	/^    int inputLength;                           \/* InputLength that can change *\/$/;"	m	class:SeekSlider
inputList	ui/streampanel.h	/^    QTreeWidget *inputList;$/;"	m	class:Ui_BroadcastPanel
inputMapper	dialogs/extensions.hpp	/^    QSignalMapper *inputMapper;$/;"	m	class:ExtensionDialog
inputOptions	dialogs/vlm.hpp	/^    QString inputOptions;$/;"	m	class:VLMAWidget
inputOptions	dialogs/vlm.hpp	/^    QString inputOptions;$/;"	m	class:VLMDialog
inputPlaying	components/controller.moc.cpp	/^void AbstractController::inputPlaying(bool _t1)$/;"	f	class:AbstractController
input_bitrate_stat	components/info_panels.hpp	/^    QTreeWidgetItem *input_bitrate_stat;$/;"	m	class:InputStatsPanel
input_name	main_interface.hpp	/^    QString              input_name;$/;"	m	class:MainInterface
insertChild	components/playlist/playlist_item.cpp	/^void PLItem::insertChild( PLItem *item, int i_pos )$/;"	f	class:PLItem
insertChildren	components/playlist/playlist_model.cpp	/^void PLModel::insertChildren( PLItem *node, QList<PLItem*>& items, int i_pos )$/;"	f	class:PLModel
insertMedia	components/playlist/ml_model.cpp	/^int MLModel::insertMedia( ml_media_t *p_media, int row,$/;"	f	class:MLModel
insertMediaArray	components/playlist/ml_model.cpp	/^int MLModel::insertMediaArray( vlc_array_t *p_media_array,$/;"	f	class:MLModel
insertResult	components/playlist/ml_model.cpp	/^int MLModel::insertResult( const ml_result_t *p_result, int row,$/;"	f	class:MLModel
insertResultArray	components/playlist/ml_model.cpp	/^int MLModel::insertResultArray( vlc_array_t *p_result_array,$/;"	f	class:MLModel
inst	rclog.cpp	/^logger* logger::inst() {$/;"	f	class:logger
inst	remoteControlServer.cpp	/^RCPlayListModel* RCPlayListModel::inst() {$/;"	f	class:RCPlayListModel
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/ylwang\/msvc\/vlc-2.0.6\/autotools\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instance	actions_manager.cpp	/^ActionsManager * ActionsManager::instance = NULL;$/;"	m	class:ActionsManager	file:
instance	actions_manager.hpp	/^    static ActionsManager *instance;$/;"	m	class:ActionsManager
instance	dialogs/extensions.cpp	/^ExtensionsDialogProvider *ExtensionsDialogProvider::instance = NULL;$/;"	m	class:ExtensionsDialogProvider	file:
instance	dialogs/extensions.hpp	/^    static ExtensionsDialogProvider *instance;$/;"	m	class:ExtensionsDialogProvider
instance	dialogs/ml_configuration.cpp	/^MLConfDialog *MLConfDialog::instance = NULL;$/;"	m	class:MLConfDialog	file:
instance	dialogs/ml_configuration.hpp	/^    static MLConfDialog *instance;$/;"	m	class:MLConfDialog
instance	dialogs/open.cpp	/^OpenDialog *OpenDialog::instance = NULL;$/;"	m	class:OpenDialog	file:
instance	dialogs/open.hpp	/^    static OpenDialog *instance;$/;"	m	class:OpenDialog
instance	dialogs_provider.cpp	/^DialogsProvider* DialogsProvider::instance = NULL;$/;"	m	class:DialogsProvider	file:
instance	dialogs_provider.hpp	/^    static DialogsProvider *instance;$/;"	m	class:DialogsProvider
instance	extensions_manager.cpp	/^ExtensionsManager* ExtensionsManager::instance = NULL;$/;"	m	class:ExtensionsManager	file:
instance	extensions_manager.hpp	/^    static ExtensionsManager* instance;$/;"	m	class:ExtensionsManager
instance	recents.cpp	/^RecentsMRL* RecentsMRL::instance = NULL;$/;"	m	class:RecentsMRL	file:
instance	recents.hpp	/^    static RecentsMRL *instance;$/;"	m	class:RecentsMRL
integerChanged	variables.moc.cpp	/^void QVLCInteger::integerChanged(vlc_object_t * _t1, int _t2)$/;"	f	class:QVLCInteger
integerChanged	variables.moc.cpp	/^void QVLCInteger::integerChanged(vlc_object_t * _t1, int _t2, int _t3)$/;"	f	class:QVLCInteger
intf	dialogs/external.hpp	/^    intf_thread_t *intf;$/;"	m	class:DialogHandler
intf_sys_t	qt4.hpp	/^struct intf_sys_t$/;"	s
introduction	ui/about.h	/^    QLabel *introduction;$/;"	m	class:Ui_aboutWidget
invertEnable	ui/video_effects.h	/^    QCheckBox *invertEnable;$/;"	m	class:Ui_ExtVideoWidget
invoke	components/playlist/playlist.cpp	/^void LocationBar::invoke( int i_id )$/;"	f	class:LocationBar
invoke	remoteControlServer.cpp	/^void RCInvoker::invoke(RCAction& action){$/;"	f	class:RCInvoker
invoked	components/playlist/playlist.moc.cpp	/^void LocationBar::invoked(const QModelIndex & _t1)$/;"	f	class:LocationBar
isActive	recents.hpp	/^    bool          isActive;$/;"	m	class:RecentsMRL
isAdvanced	components/preferences_widgets.hpp	/^    bool isAdvanced() const { return p_item->b_advanced; }$/;"	f	class:ConfigControl
isAlive	dialogs_provider.hpp	/^    static bool isAlive()$/;"	f	class:DialogsProvider
isAnimationRunning	util/input_slider.cpp	/^bool SeekSlider::isAnimationRunning() const$/;"	f	class:SeekSlider
isAutoMatchScreen	remoteControlServer.hpp	/^    int isAutoMatchScreen;$/;"	m	struct:RC_CONFIG
isCurrent	components/playlist/playlist_model.cpp	/^bool PLModel::isCurrent( const QModelIndex &index ) const$/;"	f	class:PLModel
isDebug	rclog.cpp	/^int logger::isDebug() {$/;"	f	class:logger
isDebug	remoteControlServer.hpp	/^    int isDebug;$/;"	m	struct:RC_CONFIG
isDying	dialogs_provider.hpp	/^    bool isDying() { return b_isDying; }$/;"	f	class:DialogsProvider
isEditable	components/playlist/ml_model.cpp	/^bool MLModel::isEditable( const QModelIndex &index ) const$/;"	f	class:MLModel
isInEditMode	components/info_panels.cpp	/^bool MetaPanel::isInEditMode()$/;"	f	class:MetaPanel
isIndexHidden	components/playlist/views.cpp	/^bool PicFlowView::isIndexHidden(const QModelIndex &index) const$/;"	f	class:PicFlowView
isInitialized	components/open_panels.hpp	/^    bool isInitialized;$/;"	m	class:CaptureOpenPanel
isInterfaceFullScreen	main_interface.hpp	/^    bool isInterfaceFullScreen() { return b_interfaceFullScreen; }$/;"	f	class:MainInterface
isJumping	util/input_slider.hpp	/^    bool isJumping;              \/* if we requested a jump to another chapter *\/$/;"	m	class:SeekSlider
isLoaded	extensions_manager.hpp	/^    inline bool isLoaded() { return p_extensions_manager != NULL; }$/;"	f	class:ExtensionsManager
isMainInputInfo	dialogs/mediainfo.hpp	/^    bool isMainInputInfo;$/;"	m	class:MediaInfoDialog
isNameGenuine	dialogs/vlm.cpp	/^bool VLMDialog::isNameGenuine( const QString& name )$/;"	f	class:VLMDialog
isNeedCheckRatio	remoteControlServer.cpp	/^bool RCInvoker::isNeedCheckRatio(RCAction& action) {$/;"	f	class:RCInvoker
isNumber	remoteControlServer.cpp	/^bool isNumber(const char* s) {$/;"	f
isParent	components/playlist/playlist_model.cpp	/^bool PLModel::isParent( const QModelIndex &index, const QModelIndex &current ) const$/;"	f	class:PLModel
isPlDocked	main_interface.hpp	/^    bool isPlDocked() { return ( b_plDocked != false ); }$/;"	f	class:MainInterface
isPlaying	util/customwidgets.hpp	/^    inline bool isPlaying()$/;"	f	class:AnimatedIcon
isServerAutoStart	remoteControlServer.hpp	/^    int isServerAutoStart;$/;"	m	struct:RC_CONFIG
isSliding	util/input_slider.hpp	/^    bool isSliding;        \/* Whether we are currently sliding by user action *\/$/;"	m	class:SeekSlider
isSliding	util/input_slider.hpp	/^    bool isSliding; \/* Whether we are currently sliding by user action *\/$/;"	m	class:SoundSlider
isSocketOpen	remoteControlServer.cpp	/^bool RCServer::isSocketOpen() {$/;"	f	class:RCServer
isUnloading	extensions_manager.hpp	/^    inline bool isUnloading() { return b_unloading; }$/;"	f	class:ExtensionsManager
isWideFSC	components/controller.hpp	/^    bool isWideFSC;$/;"	m	class:FullscreenControllerWidget
isdebug	rclog.h	/^    int isdebug;$/;"	m	class:logger
isright_brace	ini/inifile.c	/^	static int isright_brace(char c )$/;"	f	file:
itemAt	util/buttons/DeckButtonsLayout.cpp	/^QLayoutItem* DeckButtonsLayout::itemAt( int index ) const$/;"	f	class:DeckButtonsLayout
itemCheckState	dialogs/ml_configuration.hpp	/^    QMap<QString, Qt::CheckState> itemCheckState;$/;"	m	class:MLDirModel
itemFocused	components/epg/EPGView.moc.cpp	/^void EPGView::itemFocused(EPGItem * _t1)$/;"	f	class:EPGView
itemId	components/playlist/ml_model.cpp	/^int MLModel::itemId( const QModelIndex &index ) const$/;"	f	class:MLModel
itemId	components/playlist/playlist_model.cpp	/^int PLModel::itemId( const QModelIndex &index ) const$/;"	f	class:PLModel
itemSelectionChanged	components/epg/EPGWidget.moc.cpp	/^void EPGWidget::itemSelectionChanged(EPGItem * _t1)$/;"	f	class:EPGWidget
itemWidget	components/playlist/selector.cpp	/^PLSelItem * PLSelector::itemWidget( QTreeWidgetItem *item )$/;"	f	class:PLSelector
items	components/playlist/ml_model.hpp	/^    QList< MLItem* > items;$/;"	m	class:MLModel
itemsMRL	dialogs/open.hpp	/^    QStringList itemsMRL;$/;"	m	class:OpenDialog
jackChannels	components/open_panels.hpp	/^    QSpinBox *jackChannels;$/;"	m	class:CaptureOpenPanel
jackConnect	components/open_panels.hpp	/^    QCheckBox *jackPace, *jackConnect;$/;"	m	class:CaptureOpenPanel
jackPace	components/open_panels.hpp	/^    QCheckBox *jackPace, *jackConnect;$/;"	m	class:CaptureOpenPanel
jackPortsSelected	components/open_panels.hpp	/^    QLineEdit *jackPortsSelected;$/;"	m	class:CaptureOpenPanel
join	thpool.c	/^void Thread::join() {$/;"	f	class:Thread
jumpBwd	input_manager.cpp	/^void InputManager::jumpBwd()$/;"	f	class:InputManager
jumpFwd	input_manager.cpp	/^void InputManager::jumpFwd()$/;"	f	class:InputManager
jumpTo	adapters/seekpoints.cpp	/^bool SeekPoints::jumpTo( int i_chapterindex )$/;"	f	class:SeekPoints
keepAudio	ui/profiles.h	/^    QCheckBox *keepAudio;$/;"	m	class:Ui_Profiles
keepVideo	ui/profiles.h	/^    QCheckBox *keepVideo;$/;"	m	class:Ui_Profiles
keepVolumeRadio	ui/sprefs_audio.h	/^    QRadioButton *keepVolumeRadio;$/;"	m	class:Ui_SPrefsAudio
keyPressEvent	components/controller.cpp	/^void FullscreenControllerWidget::keyPressEvent( QKeyEvent *event )$/;"	f	class:FullscreenControllerWidget
keyPressEvent	components/playlist/views.cpp	/^void PlListView::keyPressEvent( QKeyEvent *event )$/;"	f	class:PlListView
keyPressEvent	components/playlist/views.cpp	/^void PlTreeView::keyPressEvent( QKeyEvent *event )$/;"	f	class:PlTreeView
keyPressEvent	components/preferences_widgets.cpp	/^void KeyInputDialog::keyPressEvent( QKeyEvent *e )$/;"	f	class:KeyInputDialog
keyPressEvent	dialogs/extensions.cpp	/^void ExtensionDialog::keyPressEvent( QKeyEvent *event )$/;"	f	class:ExtensionDialog
keyPressEvent	dialogs/plugins.cpp	/^void ExtensionTab::keyPressEvent( QKeyEvent *keyEvent )$/;"	f	class:ExtensionTab
keyPressEvent	dialogs/plugins.cpp	/^void PluginTab::keyPressEvent( QKeyEvent *keyEvent )$/;"	f	class:PluginTab
keyPressEvent	main_interface.cpp	/^void MainInterface::keyPressEvent( QKeyEvent *e )$/;"	f	class:MainInterface
keyPressEvent	util/pictureflow.cpp	/^void PictureFlow::keyPressEvent(QKeyEvent* event)$/;"	f	class:PictureFlow
keyPressEvent	util/qvlcframe.hpp	/^    virtual void keyPressEvent( QKeyEvent *keyEvent )$/;"	f	class:QVLCDialog
keyPressEvent	util/qvlcframe.hpp	/^    virtual void keyPressEvent( QKeyEvent *keyEvent )$/;"	f	class:QVLCFrame
keyPressed	components/controller.moc.cpp	/^void FullscreenControllerWidget::keyPressed(QKeyEvent * _t1)$/;"	f	class:FullscreenControllerWidget
keyValue	components/preferences_widgets.hpp	/^    int keyValue;$/;"	m	class:KeyInputDialog
keycmp	util/customwidgets.cpp	/^static int keycmp( const void *a, const void *b )$/;"	f	file:
keys	util/customwidgets.cpp	/^static const vlc_qt_key_t keys[] =$/;"	v	file:
killInstance	actions_manager.hpp	/^    static void killInstance()$/;"	f	class:ActionsManager
killInstance	dialogs/extensions.hpp	/^    static void killInstance()$/;"	f	class:ExtensionsDialogProvider
killInstance	dialogs/open.hpp	/^    static void killInstance()$/;"	f	class:OpenDialog
killInstance	dialogs_provider.hpp	/^    static void killInstance()$/;"	f	class:DialogsProvider
killInstance	extensions_manager.hpp	/^    static void killInstance()$/;"	f	class:ExtensionsManager
killInstance	recents.hpp	/^    static void killInstance()$/;"	f	class:RecentsMRL
killInstance	util/singleton.hpp	/^    static void    killInstance()$/;"	f	class:Singleton
kvaBox	ui/sprefs_video.h	/^    QGroupBox *kvaBox;$/;"	m	class:Ui_SPrefsVideo
kvaFixT23	ui/sprefs_video.h	/^    QCheckBox *kvaFixT23;$/;"	m	class:Ui_SPrefsVideo
kvaVideoMode	ui/sprefs_video.h	/^    QComboBox *kvaVideoMode;$/;"	m	class:Ui_SPrefsVideo
kvaVideoModeLabel	ui/sprefs_video.h	/^    QLabel *kvaVideoModeLabel;$/;"	m	class:Ui_SPrefsVideo
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:ColorConfigControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:FileConfigControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:FloatConfigControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:FontConfigControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:IntegerConfigControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:IntegerListConfigControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:IntegerRangeSliderConfigControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:KeySelectorControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:ModuleConfigControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:StringConfigControl
label	components/preferences_widgets.hpp	/^    QLabel *label;$/;"	m	class:StringListConfigControl
label	ui/about.h	/^    QLabel *label;$/;"	m	class:Ui_aboutWidget
label	ui/messages_panel.h	/^    QLabel *label;$/;"	m	class:Ui_messagesPanelWidget
label	ui/open.h	/^    QLabel *label;$/;"	m	class:Ui_Open
label	ui/open_capture.h	/^    QLabel *label;$/;"	m	class:Ui_OpenCapture
label	ui/open_file.h	/^    QLabel *label;$/;"	m	class:Ui_OpenFile
label	ui/open_net.h	/^    QLabel *label;$/;"	m	class:Ui_OpenNetwork
label	ui/podcast_configuration.h	/^    QLabel *label;$/;"	m	class:Ui_PodcastConfiguration
label	ui/profiles.h	/^    QLabel *label;$/;"	m	class:Ui_Profiles
label	ui/sout.h	/^    QLabel *label;$/;"	m	class:Ui_Sout
label	ui/update.h	/^    QLabel *label;$/;"	m	class:Ui_updateWidget
label	ui/video_effects.h	/^    QLabel *label;$/;"	m	class:Ui_ExtVideoWidget
label	ui/vlm.h	/^    QLabel *label;$/;"	m	class:Ui_Vlm
label2	ui/podcast_configuration.h	/^    QLabel *label2;$/;"	m	class:Ui_PodcastConfiguration
label_1	ui/open_net.h	/^    QLabel *label_1;$/;"	m	class:Ui_OpenNetwork
label_10	ui/video_effects.h	/^    QLabel *label_10;$/;"	m	class:Ui_ExtVideoWidget
label_11	ui/video_effects.h	/^    QLabel *label_11;$/;"	m	class:Ui_ExtVideoWidget
label_12	ui/video_effects.h	/^    QLabel *label_12;$/;"	m	class:Ui_ExtVideoWidget
label_13	ui/video_effects.h	/^    QLabel *label_13;$/;"	m	class:Ui_ExtVideoWidget
label_14	ui/video_effects.h	/^    QLabel *label_14;$/;"	m	class:Ui_ExtVideoWidget
label_15	ui/video_effects.h	/^    QLabel *label_15;$/;"	m	class:Ui_ExtVideoWidget
label_16	ui/video_effects.h	/^    QLabel *label_16;$/;"	m	class:Ui_ExtVideoWidget
label_17	ui/video_effects.h	/^    QLabel *label_17;$/;"	m	class:Ui_ExtVideoWidget
label_18	ui/video_effects.h	/^    QLabel *label_18;$/;"	m	class:Ui_ExtVideoWidget
label_19	ui/video_effects.h	/^    QLabel *label_19;$/;"	m	class:Ui_ExtVideoWidget
label_2	ui/messages_panel.h	/^    QLabel *label_2;$/;"	m	class:Ui_messagesPanelWidget
label_2	ui/sout.h	/^    QLabel *label_2;$/;"	m	class:Ui_Sout
label_2	ui/sprefs_input.h	/^    QLabel *label_2;$/;"	m	class:Ui_SPrefsInputAndCodecs
label_2	ui/update.h	/^    QLabel *label_2;$/;"	m	class:Ui_updateWidget
label_2	ui/video_effects.h	/^    QLabel *label_2;$/;"	m	class:Ui_ExtVideoWidget
label_20	ui/video_effects.h	/^    QLabel *label_20;$/;"	m	class:Ui_ExtVideoWidget
label_21	ui/video_effects.h	/^    QLabel *label_21;$/;"	m	class:Ui_ExtVideoWidget
label_22	ui/video_effects.h	/^    QLabel *label_22;$/;"	m	class:Ui_ExtVideoWidget
label_23	ui/video_effects.h	/^    QLabel *label_23;$/;"	m	class:Ui_ExtVideoWidget
label_24	ui/video_effects.h	/^    QLabel *label_24;$/;"	m	class:Ui_ExtVideoWidget
label_25	ui/video_effects.h	/^    QLabel *label_25;$/;"	m	class:Ui_ExtVideoWidget
label_26	ui/video_effects.h	/^    QLabel *label_26;$/;"	m	class:Ui_ExtVideoWidget
label_27	ui/video_effects.h	/^    QLabel *label_27;$/;"	m	class:Ui_ExtVideoWidget
label_28	ui/video_effects.h	/^    QLabel *label_28;$/;"	m	class:Ui_ExtVideoWidget
label_29	ui/video_effects.h	/^    QLabel *label_29;$/;"	m	class:Ui_ExtVideoWidget
label_3	ui/open.h	/^    QLabel *label_3;$/;"	m	class:Ui_Open
label_3	ui/video_effects.h	/^    QLabel *label_3;$/;"	m	class:Ui_ExtVideoWidget
label_30	ui/video_effects.h	/^    QLabel *label_30;$/;"	m	class:Ui_ExtVideoWidget
label_31	ui/video_effects.h	/^    QLabel *label_31;$/;"	m	class:Ui_ExtVideoWidget
label_32	ui/video_effects.h	/^    QLabel *label_32;$/;"	m	class:Ui_ExtVideoWidget
label_34	ui/video_effects.h	/^    QLabel *label_34;$/;"	m	class:Ui_ExtVideoWidget
label_35	ui/video_effects.h	/^    QLabel *label_35;$/;"	m	class:Ui_ExtVideoWidget
label_36	ui/video_effects.h	/^    QLabel *label_36;$/;"	m	class:Ui_ExtVideoWidget
label_37	ui/video_effects.h	/^    QLabel *label_37;$/;"	m	class:Ui_ExtVideoWidget
label_38	ui/video_effects.h	/^    QLabel *label_38;$/;"	m	class:Ui_ExtVideoWidget
label_39	ui/video_effects.h	/^    QLabel *label_39;$/;"	m	class:Ui_ExtVideoWidget
label_4	ui/video_effects.h	/^    QLabel *label_4;$/;"	m	class:Ui_ExtVideoWidget
label_40	ui/video_effects.h	/^    QLabel *label_40;$/;"	m	class:Ui_ExtVideoWidget
label_41	ui/video_effects.h	/^    QLabel *label_41;$/;"	m	class:Ui_ExtVideoWidget
label_42	ui/video_effects.h	/^    QLabel *label_42;$/;"	m	class:Ui_ExtVideoWidget
label_43	ui/video_effects.h	/^    QLabel *label_43;$/;"	m	class:Ui_ExtVideoWidget
label_48	ui/video_effects.h	/^    QLabel *label_48;$/;"	m	class:Ui_ExtVideoWidget
label_49	ui/video_effects.h	/^    QLabel *label_49;$/;"	m	class:Ui_ExtVideoWidget
label_5	ui/profiles.h	/^    QLabel *label_5;$/;"	m	class:Ui_Profiles
label_5	ui/video_effects.h	/^    QLabel *label_5;$/;"	m	class:Ui_ExtVideoWidget
label_50	ui/video_effects.h	/^    QLabel *label_50;$/;"	m	class:Ui_ExtVideoWidget
label_6	ui/video_effects.h	/^    QLabel *label_6;$/;"	m	class:Ui_ExtVideoWidget
label_7	ui/video_effects.h	/^    QLabel *label_7;$/;"	m	class:Ui_ExtVideoWidget
label_8	ui/video_effects.h	/^    QLabel *label_8;$/;"	m	class:Ui_ExtVideoWidget
label_9	ui/video_effects.h	/^    QLabel *label_9;$/;"	m	class:Ui_ExtVideoWidget
langLabel	ui/sprefs_audio.h	/^    QLabel *langLabel;$/;"	m	class:Ui_SPrefsAudio
language	ui/sprefs_interface.h	/^    QComboBox *language;$/;"	m	class:Ui_SPrefsInterface
languageBox	ui/sprefs_interface.h	/^    QGroupBox *languageBox;$/;"	m	class:Ui_SPrefsInterface
languageLabel	ui/sprefs_interface.h	/^    QLabel *languageLabel;$/;"	m	class:Ui_SPrefsInterface
language_text	components/info_panels.hpp	/^    QLineEdit *language_text;$/;"	m	class:MetaPanel
lastActivatedId	components/playlist/standardpanel.hpp	/^    int lastActivatedId;$/;"	m	class:StandardPLPanel
lastUrl	dialogs/openurl.hpp	/^    QString lastUrl;$/;"	m	class:OpenUrlDialog
lastValue	components/interface_widgets.hpp	/^    int lastValue;$/;"	m	class:SpeedControlWidget
lastfm	ui/sprefs_audio.h	/^    QCheckBox *lastfm;$/;"	m	class:Ui_SPrefsAudio
lastfm_Changed	components/simple_preferences.cpp	/^void SPrefsPanel::lastfm_Changed( int i_state )$/;"	f	class:SPrefsPanel
lastfm_pass_edit	ui/sprefs_audio.h	/^    QLineEdit *lastfm_pass_edit;$/;"	m	class:Ui_SPrefsAudio
lastfm_pass_label	ui/sprefs_audio.h	/^    QLabel *lastfm_pass_label;$/;"	m	class:Ui_SPrefsAudio
lastfm_user_edit	ui/sprefs_audio.h	/^    QLineEdit *lastfm_user_edit;$/;"	m	class:Ui_SPrefsAudio
lastfm_user_label	ui/sprefs_audio.h	/^    QLabel *lastfm_user_label;$/;"	m	class:Ui_SPrefsAudio
lastfm_zone	ui/sprefs_audio.h	/^    QWidget *lastfm_zone;$/;"	m	class:Ui_SPrefsAudio
latestSearch	components/playlist/playlist_model.hpp	/^    QString latestSearch;$/;"	m	class:PLModel
layOut	components/playlist/playlist.cpp	/^void LocationBar::layOut( const QSize& size )$/;"	f	class:LocationBar
layout	components/interface_widgets.hpp	/^    QLayout *layout;$/;"	m	class:VideoWidget
layout	components/playlist/selector.hpp	/^    QHBoxLayout*         layout;$/;"	m	class:PLSelItem
layout	dialogs/extensions.hpp	/^    QGridLayout *layout;$/;"	m	class:ExtensionDialog
lbl	components/playlist/selector.hpp	/^    QLabel*              lbl;$/;"	m	class:PLSelItem
lblAction	components/playlist/selector.hpp	/^    QFramelessButton* lblAction;$/;"	m	class:PLSelItem
lblURL	components/info_panels.hpp	/^    QLabel   *lblURL;$/;"	m	class:MetaPanel
leafBecameParent	input_manager.moc.cpp	/^void MainInputManager::leafBecameParent(int _t1)$/;"	f	class:MainInputManager
leaveEvent	components/controller.cpp	/^void FullscreenControllerWidget::leaveEvent( QEvent *event )$/;"	f	class:FullscreenControllerWidget
leaveEvent	components/playlist/selector.hpp	/^    inline void leaveEvent( QEvent* ){ hideAction(); }$/;"	f	class:PLSelItem
leaveEvent	util/input_slider.cpp	/^void SeekSlider::leaveEvent( QEvent * )$/;"	f	class:SeekSlider
leftRightCropSync	ui/video_effects.h	/^    QCheckBox *leftRightCropSync;$/;"	m	class:Ui_ExtVideoWidget
leftSlides	util/pictureflow.cpp	/^    QVector<SlideInfo> leftSlides;$/;"	m	class:PictureFlowState	file:
leftSplitter	components/playlist/playlist.hpp	/^    QSplitter            *leftSplitter;$/;"	m	class:PlaylistWidget
left_barce	ini/inifile.c	/^	static int left_barce(char c)$/;"	f	file:
levelBox	ui/sprefs_input.h	/^    QLineEdit *levelBox;$/;"	m	class:Ui_SPrefsInputAndCodecs
libUpdateVolume	components/controller_widget.cpp	/^void SoundWidget::libUpdateVolume()$/;"	f	class:SoundWidget
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libqt4_plugin_la_CFLAGS	Makefile	/^libqt4_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_qt4)$/;"	m
libqt4_plugin_la_CPPFLAGS	Makefile	/^libqt4_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_qt4)$/;"	m
libqt4_plugin_la_CXXFLAGS	Makefile	/^libqt4_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_qt4)$/;"	m
libqt4_plugin_la_DEPENDENCIES	Makefile	/^libqt4_plugin_la_DEPENDENCIES = $/;"	m
libqt4_plugin_la_LDFLAGS	Makefile	/^libqt4_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_qt4)$/;"	m
libqt4_plugin_la_LIBADD	Makefile	/^libqt4_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_qt4) -lpthreadGC2$/;"	m
libqt4_plugin_la_LINK	Makefile	/^libqt4_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \\$/;"	m
libqt4_plugin_la_OBJCFLAGS	Makefile	/^libqt4_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_qt4)$/;"	m
libqt4_plugin_la_OBJECTS	Makefile	/^libqt4_plugin_la_OBJECTS = $(am_libqt4_plugin_la_OBJECTS) \\$/;"	m
libqt4_plugin_la_SOURCES	Makefile	/^libqt4_plugin_la_SOURCES = $(SOURCES_qt4)$/;"	m
libvlc_LTLIBRARIES	Makefile	/^libvlc_LTLIBRARIES = $(LTLIBqt4)$/;"	m
libvlcdir	Makefile	/^libvlcdir = $(vlclibdir)\/plugins\/$(basedir)$/;"	m
licenseEdit	ui/about.h	/^    QTextEdit *licenseEdit;$/;"	m	class:Ui_aboutWidget
line	ui/open.h	/^    QFrame *line;$/;"	m	class:Ui_Open
line	ui/open_capture.h	/^    QFrame *line;$/;"	m	class:Ui_OpenCapture
line	ui/open_disk.h	/^    QFrame *line;$/;"	m	class:Ui_OpenDisk
line	ui/sprefs_audio.h	/^    QFrame *line;$/;"	m	class:Ui_SPrefsAudio
line	ui/sprefs_input.h	/^    QFrame *line;$/;"	m	class:Ui_SPrefsInputAndCodecs
line	ui/sprefs_interface.h	/^    QFrame *line;$/;"	m	class:Ui_SPrefsInterface
line	ui/video_effects.h	/^    QFrame *line;$/;"	m	class:Ui_ExtVideoWidget
line	ui/vlm.h	/^    QFrame *line;$/;"	m	class:Ui_Vlm
line1	ui/open.h	/^    QFrame *line1;$/;"	m	class:Ui_Open
line_2	ui/sprefs_input.h	/^    QFrame *line_2;$/;"	m	class:Ui_SPrefsInputAndCodecs
line_2	ui/vlm.h	/^    QFrame *line_2;$/;"	m	class:Ui_Vlm
listAsso	components/simple_preferences.hpp	/^    QList<QTreeWidgetItem *> listAsso;$/;"	m	class:SPrefsPanel
listMutex	adapters/seekpoints.hpp	/^    QMutex listMutex;$/;"	m	class:SeekPoints
listView	components/playlist/standardpanel.hpp	/^    PlListView        *listView;$/;"	m	class:StandardPLPanel
littlefaster	input_manager.cpp	/^void InputManager::littlefaster()$/;"	f	class:InputManager
littleslower	input_manager.cpp	/^void InputManager::littleslower()$/;"	f	class:InputManager
live555TransportHTTPRadio	ui/sprefs_input.h	/^    QRadioButton *live555TransportHTTPRadio;$/;"	m	class:Ui_SPrefsInputAndCodecs
live555TransportLabel	ui/sprefs_input.h	/^    QLabel *live555TransportLabel;$/;"	m	class:Ui_SPrefsInputAndCodecs
live555TransportRTSP_TCPRadio	ui/sprefs_input.h	/^    QRadioButton *live555TransportRTSP_TCPRadio;$/;"	m	class:Ui_SPrefsInputAndCodecs
load	recents.cpp	/^void RecentsMRL::load()$/;"	f	class:RecentsMRL
loadExtensions	extensions_manager.cpp	/^bool ExtensionsManager::loadExtensions()$/;"	f	class:ExtensionsManager
loadPixmapFromData	dialogs/plugins.cpp	/^static QPixmap *loadPixmapFromData( char *data, int size )$/;"	f	file:
loadSubtitlesFile	dialogs_provider.cpp	/^void DialogsProvider::loadSubtitlesFile()$/;"	f	class:DialogsProvider
load_ini_file	ini/inifile.c	/^	static int load_ini_file(const char *file, char *buf,int *file_size)$/;"	f	file:
localOutput	ui/sout.h	/^    QCheckBox *localOutput;$/;"	m	class:Ui_Sout
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
locationBar	components/playlist/playlist.hpp	/^    LocationBar          *locationBar;$/;"	m	class:PlaylistWidget
lock	components/controller.hpp	/^    vlc_mutex_t lock;$/;"	m	class:FullscreenControllerWidget
lock	qt4.cpp	/^    static QMutex lock;$/;"	v	file:
log	rclog.cpp	/^void logger::log(RC_TAG tag,const char* format,...) {$/;"	f	class:logger
log	rclog.cpp	/^void logger::log(RC_TAG tag,const char* format,const char* data,...){$/;"	f	class:logger
log	rclog.cpp	/^void logger::log(const char* format,...) {$/;"	f	class:logger
log	rclog.cpp	/^void logger::log(const char* format,const char* data,...){$/;"	f	class:logger
logger	rclog.cpp	/^logger::logger() {$/;"	f	class:logger
logger	rclog.cpp	/^logger::logger(const logger& other) {$/;"	f	class:logger
logger	rclog.h	/^class logger {$/;"	c
login	dialogs/external.hpp	/^    QVLCPointer login;$/;"	m	class:DialogHandler
logoBrowseBtn	ui/video_effects.h	/^    QToolButton *logoBrowseBtn;$/;"	m	class:Ui_ExtVideoWidget
logoEnable	ui/video_effects.h	/^    QGroupBox *logoEnable;$/;"	m	class:Ui_ExtVideoWidget
logoFileText	ui/video_effects.h	/^    QLineEdit *logoFileText;$/;"	m	class:Ui_ExtVideoWidget
logoOpacitySlider	ui/video_effects.h	/^    QSlider *logoOpacitySlider;$/;"	m	class:Ui_ExtVideoWidget
logoXSpin	ui/video_effects.h	/^    QSpinBox *logoXSpin;$/;"	m	class:Ui_ExtVideoWidget
logoYSpin	ui/video_effects.h	/^    QSpinBox *logoYSpin;$/;"	m	class:Ui_ExtVideoWidget
logs	rclog.h	/^    std::queue<std::string> logs;$/;"	m	class:logger
longClick	util/customwidgets.hpp	/^    bool longClick;$/;"	m	class:QToolButtonExt
longClicked	util/customwidgets.moc.cpp	/^void QToolButtonExt::longClicked()$/;"	f	class:QToolButtonExt
loopBCast	ui/vlm.h	/^    QCheckBox *loopBCast;$/;"	m	class:Ui_Vlm
loopButton	dialogs/vlm.hpp	/^    QToolButton *loopButton, *playButton;$/;"	m	class:VLMBroadcast
loopFilterBox	ui/sprefs_input.h	/^    QComboBox *loopFilterBox;$/;"	m	class:Ui_SPrefsInputAndCodecs
loopFunc	thpool.c	/^void *Thread::loopFunc(void* arg) {$/;"	f	class:Thread
loopRepeatLoopStatus	input_manager.cpp	/^void MainInputManager::loopRepeatLoopStatus()$/;"	f	class:MainInputManager
mBox	util/timetooltip.hpp	/^    QRect mBox;$/;"	m	class:TimeTooltip
mClickMessage	util/searchlineedit.hpp	/^    QString mClickMessage;$/;"	m	class:ClickLineEdit
mCurrentFrame	util/customwidgets.hpp	/^    int mCurrentFrame, mRemainingLoops;$/;"	m	class:AnimatedIcon
mDisplayedText	util/timetooltip.hpp	/^    QString mDisplayedText;$/;"	m	class:TimeTooltip
mDrawClickMsg	util/searchlineedit.hpp	/^    bool mDrawClickMsg;$/;"	m	class:ClickLineEdit
mFont	util/timetooltip.hpp	/^    QFont mFont;$/;"	m	class:TimeTooltip
mFrames	util/customwidgets.hpp	/^    QList<QPixmap*> mFrames; \/\/ Keeps deep copies of all the frames$/;"	m	class:AnimatedIcon
mHandleOpacity	util/input_slider.hpp	/^    qreal mHandleOpacity;$/;"	m	class:SeekSlider
mIdleFrame	util/customwidgets.hpp	/^    QPixmap *mIdleFrame;$/;"	m	class:AnimatedIcon
mInitialized	util/timetooltip.hpp	/^    bool mInitialized;$/;"	m	class:TimeTooltip
mMRLItem	remoteControlServer.hpp	/^        std::map<std::string,RCInputMRL> mMRLItem;$/;"	m	class:RCPlayListModel
mMask	util/timetooltip.hpp	/^    QBitmap mMask;$/;"	m	class:TimeTooltip
mPainterPath	util/timetooltip.hpp	/^    QPainterPath mPainterPath;$/;"	m	class:TimeTooltip
mPreviousMetricsWidth	util/timetooltip.hpp	/^    int mPreviousMetricsWidth;$/;"	m	class:TimeTooltip
mRemainingLoops	util/customwidgets.hpp	/^    int mCurrentFrame, mRemainingLoops;$/;"	m	class:AnimatedIcon
mText	util/timetooltip.hpp	/^    QString mText;$/;"	m	class:TimeTooltip
mTime	util/timetooltip.hpp	/^    QString mTime;$/;"	m	class:TimeTooltip
mTimeTooltip	util/input_slider.hpp	/^    TimeTooltip *mTimeTooltip;$/;"	m	class:SeekSlider
mTimer	util/customwidgets.hpp	/^    QTimer mTimer;$/;"	m	class:AnimatedIcon
mType	util/buttons/BrowseButton.hpp	/^    BrowseButton::Type mType;$/;"	m	class:BrowseButton
m_RootKey	util/registry.hpp	/^    HKEY m_RootKey;$/;"	m	class:QVLCRegistry
m_actions	remoteControlServer.hpp	/^        std::stack<RCAction> m_actions;$/;"	m	class:RCInvoker
m_baseTime	components/epg/EPGView.hpp	/^    QDateTime       m_baseTime;$/;"	m	class:EPGView
m_boundingRect	components/epg/EPGItem.hpp	/^    QRectF      m_boundingRect;$/;"	m	class:EPGItem
m_callback	remoteControlServer.hpp	/^        BasicCallbackImpl* m_callback;$/;"	m	class:BasicCommand
m_callback	remoteControlServer.hpp	/^        std::auto_ptr<BasicCallbackImpl> m_callback;$/;"	m	class:RCPlayListModel
m_channelsWidget	components/epg/EPGWidget.hpp	/^    EPGChannels *m_channelsWidget;$/;"	m	class:EPGWidget
m_commands	remoteControlServer.hpp	/^        std::map<std::string,RCCommandImpl*> m_commands;$/;"	m	class:RCInvoker
m_current	components/epg/EPGItem.hpp	/^    bool        m_current;$/;"	m	class:EPGItem
m_description	components/epg/EPGItem.hpp	/^    QString     m_description;$/;"	m	class:EPGItem
m_discType	components/open_panels.hpp	/^    DiscType m_discType;$/;"	m	class:DiscOpenPanel
m_doc	remoteControlServer.hpp	/^        RCInvokerImpl* m_doc;$/;"	m	class:AudioCommand
m_doc	remoteControlServer.hpp	/^        RCInvokerImpl* m_doc;$/;"	m	class:BasicCommand
m_doc	remoteControlServer.hpp	/^        RCInvokerImpl* m_doc;$/;"	m	class:PlayListCommand
m_duration	components/epg/EPGItem.hpp	/^    int         m_duration;$/;"	m	class:EPGItem
m_duration	components/epg/EPGRuler.hpp	/^    int m_duration;$/;"	m	class:EPGRuler
m_duration	components/epg/EPGView.hpp	/^    int             m_duration;$/;"	m	class:EPGView
m_epgView	components/epg/EPGChannels.hpp	/^    EPGView *m_epgView;$/;"	m	class:EPGChannels
m_epgView	components/epg/EPGWidget.hpp	/^    EPGView* m_epgView;$/;"	m	class:EPGWidget
m_instance	util/singleton.hpp	/^    static T*      m_instance;$/;"	m	class:Singleton
m_instance	util/singleton.hpp	/^T*  Singleton<T>::m_instance = NULL;$/;"	m	class:Singleton
m_intf	remoteControlServer.hpp	/^        intf_thread_t* m_intf;$/;"	m	class:RCServer
m_invoker	remoteControlServer.hpp	/^        std::auto_ptr<RCInvokerImpl> m_invoker;$/;"	m	class:RCHandler
m_model	util/qmenuview.hpp	/^    QAbstractItemModel *m_model;$/;"	m	class:QMenuView
m_mutex	rclog.h	/^    pthread_mutex_t m_mutex;$/;"	m	class:logger
m_mutex	remoteControlServer.hpp	/^        pthread_mutex_t m_mutex;$/;"	m	class:RCPlayListModel
m_name	components/epg/EPGItem.hpp	/^    QString     m_name;$/;"	m	class:EPGItem
m_netSocket	remoteControlServer.hpp	/^        SOCKET m_netSocket;$/;"	m	class:RCServer
m_offset	components/epg/EPGChannels.hpp	/^    int m_offset;$/;"	m	class:EPGChannels
m_offset	components/epg/EPGRuler.hpp	/^    int m_offset;$/;"	m	class:EPGRuler
m_pInput	remoteControlServer.hpp	/^        input_thread_t* m_pInput;$/;"	m	class:RCPlayListModel
m_pIntf	remoteControlServer.hpp	/^        intf_thread_t* m_pIntf;$/;"	m	class:RCHandler
m_pIntf	remoteControlServer.hpp	/^        intf_thread_t* m_pIntf;$/;"	m	class:RCInvoker
m_pIntf	remoteControlServer.hpp	/^        intf_thread_t* m_pIntf;$/;"	m	class:RCStateCallback
m_pathBuffer	util/registry.hpp	/^    char m_pathBuffer[256];$/;"	m	class:QVLCRegistry
m_port	remoteControlServer.hpp	/^        int m_port;$/;"	m	class:RCServer
m_ret	thpool.h	/^        int m_ret;$/;"	m	class:Thread
m_rulerWidget	components/epg/EPGWidget.hpp	/^    EPGRuler* m_rulerWidget;$/;"	m	class:EPGWidget
m_runnable	thpool.h	/^        Runnable* m_runnable;    $/;"	m	class:Thread
m_scale	components/epg/EPGRuler.hpp	/^    qreal m_scale;$/;"	m	class:EPGRuler
m_scaleFactor	components/epg/EPGView.hpp	/^    int             m_scaleFactor;$/;"	m	class:EPGView
m_shortDescription	components/epg/EPGItem.hpp	/^    QString     m_shortDescription;$/;"	m	class:EPGItem
m_start	components/epg/EPGItem.hpp	/^    QDateTime   m_start;$/;"	m	class:EPGItem
m_startTime	components/epg/EPGRuler.hpp	/^    QDateTime m_startTime;$/;"	m	class:EPGRuler
m_startTime	components/epg/EPGView.hpp	/^    QDateTime       m_startTime;$/;"	m	class:EPGView
m_states	remoteControlServer.hpp	/^        std::stack<std::string> m_states;$/;"	m	class:RCInvoker
m_tid	thpool.h	/^        pthread_t m_tid;$/;"	m	class:Thread
m_view	components/epg/EPGItem.hpp	/^    EPGView     *m_view;$/;"	m	class:EPGItem
magnifyEnable	ui/video_effects.h	/^    QCheckBox *magnifyEnable;$/;"	m	class:Ui_ExtVideoWidget
main	ini/main.c	/^int main()$/;"	f
mainLayout	main_interface.hpp	/^    QVBoxLayout         *mainLayout;$/;"	m	class:MainInterface
mainPreview	ui/sprefs_interface.h	/^    InterfacePreviewWidget *mainPreview;$/;"	m	class:Ui_SPrefsInterface
mainSettings	qt4.hpp	/^    QSettings *mainSettings; \/* Qt State settings not messing main VLC ones *\/$/;"	m	struct:intf_sys_t
mainSize	util/qvlcframe.hpp	/^    QSize mainSize;$/;"	m	class:QVLCMW
mainTab	ui/messages_panel.h	/^    QTabWidget *mainTab;$/;"	m	class:Ui_messagesPanelWidget
mainTabW	dialogs/extended.hpp	/^    QTabWidget *mainTabW;$/;"	m	class:ExtendedDialog
mainView	components/playlist/playlist.hpp	/^    StandardPLPanel      *mainView;$/;"	m	class:PlaylistWidget
main_panel	dialogs/preferences.hpp	/^    QWidget *main_panel;$/;"	m	class:PrefsDialog
main_panel_l	dialogs/preferences.hpp	/^    QHBoxLayout *main_panel_l;$/;"	m	class:PrefsDialog
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
manualRadio	ui/streampanel.h	/^    QRadioButton *manualRadio;$/;"	m	class:Ui_BroadcastPanel
mapper	components/playlist/playlist.hpp	/^    QSignalMapper *mapper;$/;"	m	class:LocationBar
marqEnable	ui/video_effects.h	/^    QGroupBox *marqEnable;$/;"	m	class:Ui_ExtVideoWidget
marqMarqueeText	ui/video_effects.h	/^    QLineEdit *marqMarqueeText;$/;"	m	class:Ui_ExtVideoWidget
marqPositionCombo	ui/video_effects.h	/^    QComboBox *marqPositionCombo;$/;"	m	class:Ui_ExtVideoWidget
media	components/playlist/ml_item.hpp	/^    ml_media_t* media;$/;"	m	class:MLItem
mediaAdded	components/playlist/ml_model.cpp	/^static int mediaAdded( vlc_object_t *p_this, char const *psz_var,$/;"	f	file:
mediaBox	ui/vlm.h	/^    QGroupBox *mediaBox;$/;"	m	class:Ui_Vlm
mediaCodecDialog	dialogs_provider.cpp	/^void DialogsProvider::mediaCodecDialog()$/;"	f	class:DialogsProvider
mediaConfBox	ui/vlm.h	/^    QGroupBox *mediaConfBox;$/;"	m	class:Ui_Vlm
mediaDeleted	components/playlist/ml_model.cpp	/^static int mediaDeleted( vlc_object_t *p_this, char const *psz_var,$/;"	f	file:
mediaInfoDialog	dialogs_provider.cpp	/^void DialogsProvider::mediaInfoDialog()$/;"	f	class:DialogsProvider
mediaType	ui/vlm.h	/^    QComboBox *mediaType;$/;"	m	class:Ui_Vlm
mediaUpdated	components/playlist/ml_model.cpp	/^static int mediaUpdated( vlc_object_t *p_this, char const *psz_var,$/;"	f	file:
mediasPopulator	dialogs/vlm.cpp	/^void VLMDialog::mediasPopulator()$/;"	f	class:VLMDialog
mediatype	dialogs/vlm.hpp	/^    QComboBox *mediatype;$/;"	m	class:VLMDialog
menu	extensions_manager.cpp	/^void ExtensionsManager::menu( QMenu *current )$/;"	f	class:ExtensionsManager
menu	menus.hpp	/^    QMenu *menu;$/;"	m	class:MenuFunc
menuAction	dialogs_provider.cpp	/^void DialogsProvider::menuAction( QObject *data )$/;"	f	class:DialogsProvider
menuMapper	extensions_manager.hpp	/^    QSignalMapper *menuMapper;$/;"	m	class:ExtensionsManager
menuMore	components/playlist/playlist.hpp	/^    QMenu *menuMore;$/;"	m	class:LocationBar
menuUpdateAction	dialogs_provider.cpp	/^void DialogsProvider::menuUpdateAction( QObject *data )$/;"	f	class:DialogsProvider
menusMapper	dialogs_provider.hpp	/^    QSignalMapper *menusMapper;$/;"	m	class:DialogsProvider
menusUpdateMapper	dialogs_provider.hpp	/^    QSignalMapper *menusUpdateMapper;$/;"	m	class:DialogsProvider
message	util/searchlineedit.hpp	/^    bool message;$/;"	m	class:SearchLineEdit
messages	dialogs/errors.hpp	/^    QTextEdit *messages;$/;"	m	class:ErrorsDialog
messages	ui/messages_panel.h	/^    QTextEdit *messages;$/;"	m	class:Ui_messagesPanelWidget
messagesDialog	dialogs_provider.cpp	/^void DialogsProvider::messagesDialog()$/;"	f	class:DialogsProvider
messagesPanelWidget	ui/messages_panel.h	/^    class messagesPanelWidget: public Ui_messagesPanelWidget {};$/;"	c	namespace:Ui
metaChanged	extensions_manager.cpp	/^void ExtensionsManager::metaChanged( input_item_t* )$/;"	f	class:ExtensionsManager
metaChanged	input_manager.moc.cpp	/^void InputManager::metaChanged(input_item_t * _t1)$/;"	f	class:InputManager
metaObject	actions_manager.moc.cpp	/^const QMetaObject *ActionsManager::metaObject() const$/;"	f	class:ActionsManager
metaObject	adapters/seekpoints.moc.cpp	/^const QMetaObject *SeekPoints::metaObject() const$/;"	f	class:SeekPoints
metaObject	components/complete_preferences.moc.cpp	/^const QMetaObject *AdvPrefsPanel::metaObject() const$/;"	f	class:AdvPrefsPanel
metaObject	components/complete_preferences.moc.cpp	/^const QMetaObject *PrefsTree::metaObject() const$/;"	f	class:PrefsTree
metaObject	components/controller.moc.cpp	/^const QMetaObject *AbstractController::metaObject() const$/;"	f	class:AbstractController
metaObject	components/controller.moc.cpp	/^const QMetaObject *AdvControlsWidget::metaObject() const$/;"	f	class:AdvControlsWidget
metaObject	components/controller.moc.cpp	/^const QMetaObject *ControlsWidget::metaObject() const$/;"	f	class:ControlsWidget
metaObject	components/controller.moc.cpp	/^const QMetaObject *FullscreenControllerWidget::metaObject() const$/;"	f	class:FullscreenControllerWidget
metaObject	components/controller.moc.cpp	/^const QMetaObject *InputControlsWidget::metaObject() const$/;"	f	class:InputControlsWidget
metaObject	components/controller_widget.moc.cpp	/^const QMetaObject *AspectRatioComboBox::metaObject() const$/;"	f	class:AspectRatioComboBox
metaObject	components/controller_widget.moc.cpp	/^const QMetaObject *AtoB_Button::metaObject() const$/;"	f	class:AtoB_Button
metaObject	components/controller_widget.moc.cpp	/^const QMetaObject *LoopButton::metaObject() const$/;"	f	class:LoopButton
metaObject	components/controller_widget.moc.cpp	/^const QMetaObject *PlayButton::metaObject() const$/;"	f	class:PlayButton
metaObject	components/controller_widget.moc.cpp	/^const QMetaObject *SoundWidget::metaObject() const$/;"	f	class:SoundWidget
metaObject	components/epg/EPGChannels.moc.cpp	/^const QMetaObject *EPGChannels::metaObject() const$/;"	f	class:EPGChannels
metaObject	components/epg/EPGRuler.moc.cpp	/^const QMetaObject *EPGRuler::metaObject() const$/;"	f	class:EPGRuler
metaObject	components/epg/EPGView.moc.cpp	/^const QMetaObject *EPGGraphicsScene::metaObject() const$/;"	f	class:EPGGraphicsScene
metaObject	components/epg/EPGView.moc.cpp	/^const QMetaObject *EPGView::metaObject() const$/;"	f	class:EPGView
metaObject	components/epg/EPGWidget.moc.cpp	/^const QMetaObject *EPGWidget::metaObject() const$/;"	f	class:EPGWidget
metaObject	components/extended_panels.moc.cpp	/^const QMetaObject *Compressor::metaObject() const$/;"	f	class:Compressor
metaObject	components/extended_panels.moc.cpp	/^const QMetaObject *Equalizer::metaObject() const$/;"	f	class:Equalizer
metaObject	components/extended_panels.moc.cpp	/^const QMetaObject *ExtV4l2::metaObject() const$/;"	f	class:ExtV4l2
metaObject	components/extended_panels.moc.cpp	/^const QMetaObject *ExtVideo::metaObject() const$/;"	f	class:ExtVideo
metaObject	components/extended_panels.moc.cpp	/^const QMetaObject *Spatializer::metaObject() const$/;"	f	class:Spatializer
metaObject	components/extended_panels.moc.cpp	/^const QMetaObject *SyncControls::metaObject() const$/;"	f	class:SyncControls
metaObject	components/extended_panels.moc.cpp	/^const QMetaObject *SyncWidget::metaObject() const$/;"	f	class:SyncWidget
metaObject	components/info_panels.moc.cpp	/^const QMetaObject *ExtraMetaPanel::metaObject() const$/;"	f	class:ExtraMetaPanel
metaObject	components/info_panels.moc.cpp	/^const QMetaObject *InfoPanel::metaObject() const$/;"	f	class:InfoPanel
metaObject	components/info_panels.moc.cpp	/^const QMetaObject *InputStatsPanel::metaObject() const$/;"	f	class:InputStatsPanel
metaObject	components/info_panels.moc.cpp	/^const QMetaObject *MetaPanel::metaObject() const$/;"	f	class:MetaPanel
metaObject	components/interface_widgets.moc.cpp	/^const QMetaObject *BackgroundWidget::metaObject() const$/;"	f	class:BackgroundWidget
metaObject	components/interface_widgets.moc.cpp	/^const QMetaObject *CoverArtLabel::metaObject() const$/;"	f	class:CoverArtLabel
metaObject	components/interface_widgets.moc.cpp	/^const QMetaObject *SpeedControlWidget::metaObject() const$/;"	f	class:SpeedControlWidget
metaObject	components/interface_widgets.moc.cpp	/^const QMetaObject *SpeedLabel::metaObject() const$/;"	f	class:SpeedLabel
metaObject	components/interface_widgets.moc.cpp	/^const QMetaObject *TimeLabel::metaObject() const$/;"	f	class:TimeLabel
metaObject	components/interface_widgets.moc.cpp	/^const QMetaObject *VideoWidget::metaObject() const$/;"	f	class:VideoWidget
metaObject	components/open_panels.moc.cpp	/^const QMetaObject *CaptureOpenPanel::metaObject() const$/;"	f	class:CaptureOpenPanel
metaObject	components/open_panels.moc.cpp	/^const QMetaObject *DiscOpenPanel::metaObject() const$/;"	f	class:DiscOpenPanel
metaObject	components/open_panels.moc.cpp	/^const QMetaObject *FileOpenBox::metaObject() const$/;"	f	class:FileOpenBox
metaObject	components/open_panels.moc.cpp	/^const QMetaObject *FileOpenPanel::metaObject() const$/;"	f	class:FileOpenPanel
metaObject	components/open_panels.moc.cpp	/^const QMetaObject *NetOpenPanel::metaObject() const$/;"	f	class:NetOpenPanel
metaObject	components/open_panels.moc.cpp	/^const QMetaObject *OpenPanel::metaObject() const$/;"	f	class:OpenPanel
metaObject	components/open_panels.moc.cpp	/^const QMetaObject *UrlValidator::metaObject() const$/;"	f	class:UrlValidator
metaObject	components/playlist/playlist.moc.cpp	/^const QMetaObject *LocationBar::metaObject() const$/;"	f	class:LocationBar
metaObject	components/playlist/playlist.moc.cpp	/^const QMetaObject *PlaylistWidget::metaObject() const$/;"	f	class:PlaylistWidget
metaObject	components/playlist/playlist_model.moc.cpp	/^const QMetaObject *PLModel::metaObject() const$/;"	f	class:PLModel
metaObject	components/playlist/playlist_model.moc.cpp	/^const QMetaObject *PlMimeData::metaObject() const$/;"	f	class:PlMimeData
metaObject	components/playlist/selector.moc.cpp	/^const QMetaObject *PLSelItem::metaObject() const$/;"	f	class:PLSelItem
metaObject	components/playlist/selector.moc.cpp	/^const QMetaObject *PLSelector::metaObject() const$/;"	f	class:PLSelector
metaObject	components/playlist/standardpanel.moc.cpp	/^const QMetaObject *StandardPLPanel::metaObject() const$/;"	f	class:StandardPLPanel
metaObject	components/playlist/views.moc.cpp	/^const QMetaObject *PicFlowView::metaObject() const$/;"	f	class:PicFlowView
metaObject	components/playlist/views.moc.cpp	/^const QMetaObject *PlIconView::metaObject() const$/;"	f	class:PlIconView
metaObject	components/playlist/views.moc.cpp	/^const QMetaObject *PlIconViewItemDelegate::metaObject() const$/;"	f	class:PlIconViewItemDelegate
metaObject	components/playlist/views.moc.cpp	/^const QMetaObject *PlListView::metaObject() const$/;"	f	class:PlListView
metaObject	components/playlist/views.moc.cpp	/^const QMetaObject *PlListViewItemDelegate::metaObject() const$/;"	f	class:PlListViewItemDelegate
metaObject	components/playlist/views.moc.cpp	/^const QMetaObject *PlTreeView::metaObject() const$/;"	f	class:PlTreeView
metaObject	components/playlist/vlc_model.moc.cpp	/^const QMetaObject *VLCModel::metaObject() const$/;"	f	class:VLCModel
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *ColorConfigControl::metaObject() const$/;"	f	class:ColorConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *ConfigControl::metaObject() const$/;"	f	class:ConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *DirectoryConfigControl::metaObject() const$/;"	f	class:DirectoryConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *FileConfigControl::metaObject() const$/;"	f	class:FileConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *FloatConfigControl::metaObject() const$/;"	f	class:FloatConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *FloatRangeConfigControl::metaObject() const$/;"	f	class:FloatRangeConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *FontConfigControl::metaObject() const$/;"	f	class:FontConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *IntegerConfigControl::metaObject() const$/;"	f	class:IntegerConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *IntegerListConfigControl::metaObject() const$/;"	f	class:IntegerListConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *InterfacePreviewWidget::metaObject() const$/;"	f	class:InterfacePreviewWidget
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *KeySelectorControl::metaObject() const$/;"	f	class:KeySelectorControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *ModuleListConfigControl::metaObject() const$/;"	f	class:ModuleListConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *StringConfigControl::metaObject() const$/;"	f	class:StringConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *StringListConfigControl::metaObject() const$/;"	f	class:StringListConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *VFloatConfigControl::metaObject() const$/;"	f	class:VFloatConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *VIntConfigControl::metaObject() const$/;"	f	class:VIntConfigControl
metaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject *VStringConfigControl::metaObject() const$/;"	f	class:VStringConfigControl
metaObject	components/simple_preferences.moc.cpp	/^const QMetaObject *SPrefsCatList::metaObject() const$/;"	f	class:SPrefsCatList
metaObject	components/simple_preferences.moc.cpp	/^const QMetaObject *SPrefsPanel::metaObject() const$/;"	f	class:SPrefsPanel
metaObject	components/sout/profile_selector.moc.cpp	/^const QMetaObject *VLCProfileEditor::metaObject() const$/;"	f	class:VLCProfileEditor
metaObject	components/sout/profile_selector.moc.cpp	/^const QMetaObject *VLCProfileSelector::metaObject() const$/;"	f	class:VLCProfileSelector
metaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject *FileDestBox::metaObject() const$/;"	f	class:FileDestBox
metaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject *HTTPDestBox::metaObject() const$/;"	f	class:HTTPDestBox
metaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject *ICEDestBox::metaObject() const$/;"	f	class:ICEDestBox
metaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject *MMSHDestBox::metaObject() const$/;"	f	class:MMSHDestBox
metaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject *RTPDestBox::metaObject() const$/;"	f	class:RTPDestBox
metaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject *RTSPDestBox::metaObject() const$/;"	f	class:RTSPDestBox
metaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject *UDPDestBox::metaObject() const$/;"	f	class:UDPDestBox
metaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject *VirtualDestBox::metaObject() const$/;"	f	class:VirtualDestBox
metaObject	dialogs/bookmarks.moc.cpp	/^const QMetaObject *BookmarksDialog::metaObject() const$/;"	f	class:BookmarksDialog
metaObject	dialogs/convert.moc.cpp	/^const QMetaObject *ConvertDialog::metaObject() const$/;"	f	class:ConvertDialog
metaObject	dialogs/epg.moc.cpp	/^const QMetaObject *EpgDialog::metaObject() const$/;"	f	class:EpgDialog
metaObject	dialogs/errors.moc.cpp	/^const QMetaObject *ErrorsDialog::metaObject() const$/;"	f	class:ErrorsDialog
metaObject	dialogs/extended.moc.cpp	/^const QMetaObject *ExtendedDialog::metaObject() const$/;"	f	class:ExtendedDialog
metaObject	dialogs/extensions.moc.cpp	/^const QMetaObject *ExtensionDialog::metaObject() const$/;"	f	class:ExtensionDialog
metaObject	dialogs/extensions.moc.cpp	/^const QMetaObject *ExtensionsDialogProvider::metaObject() const$/;"	f	class:ExtensionsDialogProvider
metaObject	dialogs/extensions.moc.cpp	/^const QMetaObject *WidgetMapper::metaObject() const$/;"	f	class:WidgetMapper
metaObject	dialogs/external.moc.cpp	/^const QMetaObject *DialogHandler::metaObject() const$/;"	f	class:DialogHandler
metaObject	dialogs/external.moc.cpp	/^const QMetaObject *QVLCProgressDialog::metaObject() const$/;"	f	class:QVLCProgressDialog
metaObject	dialogs/firstrun.moc.cpp	/^const QMetaObject *FirstRun::metaObject() const$/;"	f	class:FirstRun
metaObject	dialogs/gototime.moc.cpp	/^const QMetaObject *GotoTimeDialog::metaObject() const$/;"	f	class:GotoTimeDialog
metaObject	dialogs/help.moc.cpp	/^const QMetaObject *AboutDialog::metaObject() const$/;"	f	class:AboutDialog
metaObject	dialogs/help.moc.cpp	/^const QMetaObject *HelpDialog::metaObject() const$/;"	f	class:HelpDialog
metaObject	dialogs/mediainfo.moc.cpp	/^const QMetaObject *MediaInfoDialog::metaObject() const$/;"	f	class:MediaInfoDialog
metaObject	dialogs/messages.moc.cpp	/^const QMetaObject *MessagesDialog::metaObject() const$/;"	f	class:MessagesDialog
metaObject	dialogs/open.moc.cpp	/^const QMetaObject *OpenDialog::metaObject() const$/;"	f	class:OpenDialog
metaObject	dialogs/openurl.moc.cpp	/^const QMetaObject *OpenUrlDialog::metaObject() const$/;"	f	class:OpenUrlDialog
metaObject	dialogs/playlist.moc.cpp	/^const QMetaObject *PlaylistDialog::metaObject() const$/;"	f	class:PlaylistDialog
metaObject	dialogs/plugins.moc.cpp	/^const QMetaObject *ExtensionListModel::metaObject() const$/;"	f	class:ExtensionListModel
metaObject	dialogs/plugins.moc.cpp	/^const QMetaObject *ExtensionTab::metaObject() const$/;"	f	class:ExtensionTab
metaObject	dialogs/plugins.moc.cpp	/^const QMetaObject *PluginDialog::metaObject() const$/;"	f	class:PluginDialog
metaObject	dialogs/plugins.moc.cpp	/^const QMetaObject *PluginTab::metaObject() const$/;"	f	class:PluginTab
metaObject	dialogs/podcast_configuration.moc.cpp	/^const QMetaObject *PodcastConfigDialog::metaObject() const$/;"	f	class:PodcastConfigDialog
metaObject	dialogs/preferences.moc.cpp	/^const QMetaObject *PrefsDialog::metaObject() const$/;"	f	class:PrefsDialog
metaObject	dialogs/sout.moc.cpp	/^const QMetaObject *SoutDialog::metaObject() const$/;"	f	class:SoutDialog
metaObject	dialogs/toolbar.moc.cpp	/^const QMetaObject *DroppingController::metaObject() const$/;"	f	class:DroppingController
metaObject	dialogs/toolbar.moc.cpp	/^const QMetaObject *ToolbarEditDialog::metaObject() const$/;"	f	class:ToolbarEditDialog
metaObject	dialogs/toolbar.moc.cpp	/^const QMetaObject *WidgetListing::metaObject() const$/;"	f	class:WidgetListing
metaObject	dialogs_provider.moc.cpp	/^const QMetaObject *DialogsProvider::metaObject() const$/;"	f	class:DialogsProvider
metaObject	extensions_manager.moc.cpp	/^const QMetaObject *ExtensionsManager::metaObject() const$/;"	f	class:ExtensionsManager
metaObject	input_manager.moc.cpp	/^const QMetaObject *InputManager::metaObject() const$/;"	f	class:InputManager
metaObject	input_manager.moc.cpp	/^const QMetaObject *MainInputManager::metaObject() const$/;"	f	class:MainInputManager
metaObject	main_interface.moc.cpp	/^const QMetaObject *MainInterface::metaObject() const$/;"	f	class:MainInterface
metaObject	menus.moc.cpp	/^const QMetaObject *MenuFunc::metaObject() const$/;"	f	class:MenuFunc
metaObject	menus.moc.cpp	/^const QMetaObject *MenuItemData::metaObject() const$/;"	f	class:MenuItemData
metaObject	menus.moc.cpp	/^const QMetaObject *VLCMenuBar::metaObject() const$/;"	f	class:VLCMenuBar
metaObject	recents.moc.cpp	/^const QMetaObject *RecentsMRL::metaObject() const$/;"	f	class:RecentsMRL
metaObject	util/buttons/BrowseButton.moc.cpp	/^const QMetaObject *BrowseButton::metaObject() const$/;"	f	class:BrowseButton
metaObject	util/buttons/DeckButtonsLayout.moc.cpp	/^const QMetaObject *DeckButtonsLayout::metaObject() const$/;"	f	class:DeckButtonsLayout
metaObject	util/buttons/RoundButton.moc.cpp	/^const QMetaObject *RoundButton::metaObject() const$/;"	f	class:RoundButton
metaObject	util/customwidgets.moc.cpp	/^const QMetaObject *AnimatedIcon::metaObject() const$/;"	f	class:AnimatedIcon
metaObject	util/customwidgets.moc.cpp	/^const QMetaObject *QFramelessButton::metaObject() const$/;"	f	class:QFramelessButton
metaObject	util/customwidgets.moc.cpp	/^const QMetaObject *QToolButtonExt::metaObject() const$/;"	f	class:QToolButtonExt
metaObject	util/customwidgets.moc.cpp	/^const QMetaObject *QVLCDebugLevelSpinBox::metaObject() const$/;"	f	class:QVLCDebugLevelSpinBox
metaObject	util/customwidgets.moc.cpp	/^const QMetaObject *SpinningIcon::metaObject() const$/;"	f	class:SpinningIcon
metaObject	util/input_slider.moc.cpp	/^const QMetaObject *SeekSlider::metaObject() const$/;"	f	class:SeekSlider
metaObject	util/input_slider.moc.cpp	/^const QMetaObject *SoundSlider::metaObject() const$/;"	f	class:SoundSlider
metaObject	util/pictureflow.moc.cpp	/^const QMetaObject *PictureFlow::metaObject() const$/;"	f	class:PictureFlow
metaObject	util/qmenuview.moc.cpp	/^const QMetaObject *QMenuView::metaObject() const$/;"	f	class:QMenuView
metaObject	util/qvlcapp.moc.cpp	/^const QMetaObject *QVLCApp::metaObject() const$/;"	f	class:QVLCApp
metaObject	util/searchlineedit.moc.cpp	/^const QMetaObject *ClickLineEdit::metaObject() const$/;"	f	class:ClickLineEdit
metaObject	util/searchlineedit.moc.cpp	/^const QMetaObject *SearchLineEdit::metaObject() const$/;"	f	class:SearchLineEdit
metaObject	util/timetooltip.moc.cpp	/^const QMetaObject *TimeTooltip::metaObject() const$/;"	f	class:TimeTooltip
metaObject	variables.moc.cpp	/^const QMetaObject *QVLCInteger::metaObject() const$/;"	f	class:QVLCInteger
metaObject	variables.moc.cpp	/^const QMetaObject *QVLCPointer::metaObject() const$/;"	f	class:QVLCPointer
metaObject	variables.moc.cpp	/^const QMetaObject *QVLCVariable::metaObject() const$/;"	f	class:QVLCVariable
meta_to_mlmeta	components/playlist/sorting.h	/^static inline ml_select_e meta_to_mlmeta( uint32_t i_column )$/;"	f
methodChanged	components/open_panels.moc.cpp	/^void OpenPanel::methodChanged(const QString & _t1)$/;"	f	class:OpenPanel
mimeData	components/playlist/ml_model.cpp	/^QMimeData* MLModel::mimeData( const QModelIndexList &indexes ) const$/;"	f	class:MLModel
mimeData	components/playlist/playlist_model.cpp	/^QMimeData *PLModel::mimeData( const QModelIndexList &indexes ) const$/;"	f	class:PLModel
mimeTypes	components/playlist/playlist_model.cpp	/^QStringList PLModel::mimeTypes() const$/;"	f	class:PLModel
mimeTypes	components/playlist/selector.cpp	/^QStringList PLSelector::mimeTypes() const$/;"	f	class:PLSelector
minimalViewToggled	main_interface.moc.cpp	/^void MainInterface::minimalViewToggled(bool _t1)$/;"	f	class:MainInterface
minimalviewBox	ui/sprefs_interface.h	/^    QCheckBox *minimalviewBox;$/;"	m	class:Ui_SPrefsInterface
minimumSizeHint	util/customwidgets.hpp	/^    QSize minimumSizeHint () const$/;"	f	class:QVLCStackedWidget
mirrorEnable	ui/video_effects.h	/^    QCheckBox *mirrorEnable;$/;"	m	class:Ui_ExtVideoWidget
miscPage	ui/sout.h	/^    QWidget *miscPage;$/;"	m	class:Ui_Sout
mkdir_p	Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkvPreloadBox	ui/sprefs_input.h	/^    QCheckBox *mkvPreloadBox;$/;"	m	class:Ui_SPrefsInputAndCodecs
mlmodel	components/playlist/standardpanel.hpp	/^    MLModel *mlmodel;$/;"	m	class:StandardPLPanel
moc_verbose	Makefile	/^moc_verbose = $(moc_verbose_$(V))$/;"	m
moc_verbose_	Makefile	/^moc_verbose_ = $(moc_verbose__$(AM_DEFAULT_VERBOSITY))$/;"	m
moc_verbose_0	Makefile	/^moc_verbose_0 = @echo "  MOC   " $@;$/;"	m
moc_verbose__0	Makefile	/^moc_verbose__0 = $(moc_verbose_0)$/;"	m
model	components/playlist/ml_item.hpp	/^    const MLModel *model;$/;"	m	class:MLItem
model	components/playlist/playlist.hpp	/^    PLModel *model;$/;"	m	class:LocationBar
model	components/playlist/standardpanel.hpp	/^    PLModel *model;$/;"	m	class:StandardPLPanel
model	dialogs/ml_configuration.hpp	/^    MLDirModel *model;$/;"	m	class:MLConfDialog
model	util/pictureflow.cpp	/^    VLCModel *model;$/;"	m	class:PictureFlowState	file:
model	util/qmenuview.hpp	/^    QAbstractItemModel * model() const { return m_model; }$/;"	f	class:QMenuView
modelIndexLessThen	components/playlist/playlist_model.cpp	/^bool modelIndexLessThen( const QModelIndex &i1, const QModelIndex &i2 )$/;"	f
modify	dialogs/vlm.cpp	/^void VLMAWidget::modify()$/;"	f	class:VLMAWidget
mods	Makefile	/^mods = qt4$/;"	m
module	dialogs/messages.cpp	/^    QString module;$/;"	m	class:MsgEvent	file:
modules	components/preferences_widgets.hpp	/^    QList<checkBoxListItem*> modules;$/;"	m	class:ModuleListConfigControl
modulesTree	ui/messages_panel.h	/^    QTreeWidget *modulesTree;$/;"	m	class:Ui_messagesPanelWidget
monitoredDirs	dialogs/ml_configuration.hpp	/^    QStringList monitoredDirs;$/;"	m	class:MLDirModel
moreInformation	dialogs/plugins.cpp	/^void ExtensionTab::moreInformation()$/;"	f	class:ExtensionTab
motionblurEnable	ui/video_effects.h	/^    QGroupBox *motionblurEnable;$/;"	m	class:Ui_ExtVideoWidget
motiondetectEnable	ui/video_effects.h	/^    QCheckBox *motiondetectEnable;$/;"	m	class:Ui_ExtVideoWidget
mouseChanged	components/controller.cpp	/^void FullscreenControllerWidget::mouseChanged( vout_thread_t *, int i_mousex, int i_mousey )$/;"	f	class:FullscreenControllerWidget
mouseDoubleClickEvent	components/interface_widgets.hpp	/^    virtual void mouseDoubleClickEvent( QMouseEvent *event )$/;"	f	class:CoverArtLabel
mouseDoubleClickEvent	components/interface_widgets.hpp	/^    virtual void mouseDoubleClickEvent( QMouseEvent *event )$/;"	f	class:TimeLabel
mouseMoveEvent	components/controller.cpp	/^void FullscreenControllerWidget::mouseMoveEvent( QMouseEvent *event )$/;"	f	class:FullscreenControllerWidget
mouseMoveEvent	util/input_slider.cpp	/^void SeekSlider::mouseMoveEvent( QMouseEvent *event )$/;"	f	class:SeekSlider
mouseMoveEvent	util/input_slider.cpp	/^void SoundSlider::mouseMoveEvent( QMouseEvent *event )$/;"	f	class:SoundSlider
mousePressEvent	components/controller.cpp	/^void FullscreenControllerWidget::mousePressEvent( QMouseEvent *event )$/;"	f	class:FullscreenControllerWidget
mousePressEvent	components/interface_widgets.hpp	/^    virtual void mousePressEvent ( QMouseEvent * event )$/;"	f	class:SpeedLabel
mousePressEvent	components/interface_widgets.hpp	/^    virtual void mousePressEvent( QMouseEvent *event )$/;"	f	class:TimeLabel
mousePressEvent	util/input_slider.cpp	/^void SeekSlider::mousePressEvent( QMouseEvent* event )$/;"	f	class:SeekSlider
mousePressEvent	util/input_slider.cpp	/^void SoundSlider::mousePressEvent( QMouseEvent *event )$/;"	f	class:SoundSlider
mousePressEvent	util/pictureflow.cpp	/^void PictureFlow::mousePressEvent(QMouseEvent* event)$/;"	f	class:PictureFlow
mouseReleaseEvent	components/controller.cpp	/^void FullscreenControllerWidget::mouseReleaseEvent( QMouseEvent *event )$/;"	f	class:FullscreenControllerWidget
mouseReleaseEvent	util/input_slider.cpp	/^void SeekSlider::mouseReleaseEvent( QMouseEvent *event )$/;"	f	class:SeekSlider
mouseReleaseEvent	util/input_slider.cpp	/^void SoundSlider::mouseReleaseEvent( QMouseEvent *event )$/;"	f	class:SoundSlider
moveCursor	components/playlist/views.cpp	/^QModelIndex PicFlowView::moveCursor(QAbstractItemView::CursorAction, Qt::KeyboardModifiers)$/;"	f	class:PicFlowView
mrl	components/sout/sout_widgets.hpp	/^        QString mrl;$/;"	m	class:VirtualDestBox
mrl	dialogs/convert.hpp	/^    QString mrl;$/;"	m	class:ConvertDialog
mrl	dialogs/sout.hpp	/^    QString mrl;$/;"	m	class:SoutDialog
mrl	dialogs/sout.hpp	/^    QString mrl;$/;"	m	class:SoutMrl
mrl	remoteControlServer.hpp	/^    std::string mrl;$/;"	m	struct:RCInputMRL
mrlEdit	ui/sout.h	/^    QTextEdit *mrlEdit;$/;"	m	class:Ui_Sout
mrlLine	ui/open.h	/^    QLineEdit *mrlLine;$/;"	m	class:Ui_Open
mrlUpdated	components/open_panels.moc.cpp	/^void OpenPanel::mrlUpdated(const QStringList & _t1, const QString & _t2)$/;"	f	class:OpenPanel
mrlUpdated	components/sout/sout_widgets.moc.cpp	/^void VirtualDestBox::mrlUpdated()$/;"	f	class:VirtualDestBox
msgLayout	ui/messages_panel.h	/^    QGridLayout *msgLayout;$/;"	m	class:Ui_messagesPanelWidget
mutex	components/epg/EPGView.hpp	/^    QMutex mutex;$/;"	m	class:EPGView
mux	components/sout/profile_selector.hpp	/^    QString mux;$/;"	m	class:VLCProfileSelector
mux	components/sout/sout_widgets.hpp	/^        const char *mux;$/;"	m	class:RTPDestBox
mux	dialogs/vlm.hpp	/^    QString mux;$/;"	m	class:VLMVod
muxLabel	dialogs/vlm.hpp	/^    QLabel *muxLabel;$/;"	m	class:VLMVod
muxLedit	ui/vlm.h	/^    QLineEdit *muxLedit;$/;"	m	class:Ui_Vlm
muxValue	components/sout/profile_selector.hpp	/^    QString muxValue;$/;"	m	class:VLCProfileEditor
muxer	ui/profiles.h	/^    QWidget *muxer;$/;"	m	class:Ui_Profiles
name	adapters/seekpoints.hpp	/^    QString name;$/;"	m	class:SeekPoint
name	components/complete_preferences.hpp	/^    QString name;$/;"	m	class:PrefsItemData
name	components/epg/EPGItem.hpp	/^    const QString& name() { return m_name; };$/;"	f	class:EPGItem
name	components/sout/profile_selector.hpp	/^    QString name;$/;"	m	class:VLCProfileEditor
name	dialogs/plugins.cpp	/^    QString name, title, description, shortdesc, author, version, url;$/;"	m	class:ExtensionCopy	file:
name	dialogs/vlm.hpp	/^    QString name;$/;"	m	class:VLMAWidget
name	remoteControlServer.hpp	/^    std::string name;$/;"	m	struct:RCInputMRL
name	variables.hpp	/^    QString name;$/;"	m	class:QVLCVariable
nameChanged	input_manager.moc.cpp	/^void InputManager::nameChanged(const QString & _t1)$/;"	f	class:InputManager
nameL	components/controller.hpp	/^static const char* const nameL[BUTTON_MAX] = { N_("Play"), N_("Stop"), N_("Open"),$/;"	v
nameLabel	dialogs/vlm.hpp	/^    QLabel *nameLabel;$/;"	m	class:VLMAWidget
nameLabel	main_interface.hpp	/^    QLabel              *nameLabel;$/;"	m	class:MainInterface
nameLabel	ui/vlm.h	/^    QLabel *nameLabel;$/;"	m	class:Ui_Vlm
nameLedit	ui/vlm.h	/^    QLineEdit *nameLedit;$/;"	m	class:Ui_Vlm
narrow	remoteControlServer.cpp	/^string narrow( const wstring& str )$/;"	f
nativePage	ui/sprefs_interface.h	/^    QWidget *nativePage;$/;"	m	class:Ui_SPrefsInterface
native_zone	ui/sprefs_interface.h	/^    QWidget *native_zone;$/;"	m	class:Ui_SPrefsInterface
netOpenPanel	dialogs/open.hpp	/^    NetOpenPanel *netOpenPanel;$/;"	m	class:OpenDialog
newCachingMethod	dialogs/open.cpp	/^void OpenDialog::newCachingMethod( const QString& method )$/;"	f	class:OpenDialog
newProfile	components/sout/profile_selector.cpp	/^void VLCProfileSelector::newProfile()$/;"	f	class:VLCProfileSelector
newProfile	dialogs/toolbar.cpp	/^void ToolbarEditDialog::newProfile()$/;"	f	class:ToolbarEditDialog
newTelexPageSet	input_manager.moc.cpp	/^void InputManager::newTelexPageSet(int _t1)$/;"	f	class:InputManager
newline	ini/inifile.c	/^	static int newline(char c)$/;"	f	file:
newval	remoteControlServer.hpp	/^    rc_value_t newval;$/;"	m	struct:RCAction
next	dialogs/sout.cpp	/^void SoutDialog::next()$/;"	f	class:SoutDialog
next	input_manager.cpp	/^void MainInputManager::next()$/;"	f	class:MainInputManager
nextButton	ui/sout.h	/^    QPushButton *nextButton;$/;"	m	class:Ui_Sout
nextButton	ui/streampanel.h	/^    QPushButton *nextButton;$/;"	m	class:Ui_BroadcastPanel
nextButton2	ui/sout.h	/^    QPushButton *nextButton2;$/;"	m	class:Ui_Sout
nodist_SOURCES_qt4	Makefile	/^nodist_SOURCES_qt4 = \\$/;"	m
nodist_libqt4_plugin_la_OBJECTS	Makefile	/^nodist_libqt4_plugin_la_OBJECTS = $(am__objects_3)$/;"	m
nodist_libqt4_plugin_la_SOURCES	Makefile	/^nodist_libqt4_plugin_la_SOURCES = $(nodist_SOURCES_qt4)$/;"	m
noinst_HEADERS	Makefile	/^noinst_HEADERS = \\$/;"	m
normalRate	input_manager.cpp	/^void InputManager::normalRate()$/;"	f	class:InputManager
normalizerChB	components/simple_preferences.hpp	/^       normalizerChB,$/;"	e	enum:__anon21
notifyRepeatLoop	input_manager.cpp	/^void MainInputManager::notifyRepeatLoop()$/;"	f	class:MainInputManager
nowplaying_text	components/info_panels.hpp	/^    QLineEdit *nowplaying_text;$/;"	m	class:MetaPanel
number	components/simple_preferences.hpp	/^    int number;$/;"	m	class:SPrefsPanel
objLayout	dialogs/vlm.hpp	/^    QGridLayout *objLayout;$/;"	m	class:VLMAWidget
object	variables.hpp	/^    vlc_object_t *object;$/;"	m	class:QVLCVariable
object_id	dialogs/messages.cpp	/^    uintptr_t object_id;$/;"	m	class:MsgEvent	file:
object_type	dialogs/messages.cpp	/^    QString object_type;$/;"	m	class:MsgEvent	file:
offsetX	util/pictureflow.cpp	/^    PFreal offsetX;$/;"	m	class:PictureFlowState	file:
offsetY	util/pictureflow.cpp	/^    PFreal offsetY;$/;"	m	class:PictureFlowState	file:
ok	dialogs/sout.cpp	/^void SoutDialog::ok()$/;"	f	class:SoutDialog
okButton	dialogs/sout.hpp	/^    QPushButton *okButton;$/;"	m	class:SoutDialog
okCancel	ui/podcast_configuration.h	/^    QDialogButtonBox *okCancel;$/;"	m	class:Ui_PodcastConfiguration
oldControlVars	components/extended_panels.hpp	/^    float oldControlVars[5];$/;"	m	class:Spatializer
oldControlVars	components/extended_panels.hpp	/^    float oldControlVars[NUM_CP_CTRL];$/;"	m	class:Compressor
oldName	input_manager.hpp	/^    QString         oldName;$/;"	m	class:InputManager
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
onAccept	components/open_panels.cpp	/^void NetOpenPanel::onAccept()$/;"	f	class:NetOpenPanel
onAccept	components/open_panels.hpp	/^    virtual void onAccept() {}$/;"	f	class:OpenPanel
onFocus	components/open_panels.cpp	/^void DiscOpenPanel::onFocus()$/;"	f	class:DiscOpenPanel
onFocus	components/open_panels.cpp	/^void NetOpenPanel::onFocus()$/;"	f	class:NetOpenPanel
onFocus	components/open_panels.hpp	/^    virtual void onFocus() {}$/;"	f	class:OpenPanel
onStart	remoteControlServer.cpp	/^int RCStateCallback::onStart( vlc_object_t *p_this, const char *, vlc_value_t, vlc_value_t newval, void *param) {$/;"	f	class:RCStateCallback
onStop	remoteControlServer.cpp	/^int RCStateCallback::onStop( vlc_object_t *p_this, const char * psz_cmd, vlc_value_t, vlc_value_t newval, void *param) {$/;"	f	class:RCStateCallback
onTimerTick	util/customwidgets.cpp	/^void AnimatedIcon::onTimerTick()$/;"	f	class:AnimatedIcon
onUpdate	components/preferences_widgets.cpp	/^void ModuleListConfigControl::onUpdate()$/;"	f	class:ModuleListConfigControl
openAPlaylist	dialogs_provider.cpp	/^void DialogsProvider::openAPlaylist()$/;"	f	class:DialogsProvider
openAndStreamingDialogs	dialogs_provider.cpp	/^void DialogsProvider::openAndStreamingDialogs()$/;"	f	class:DialogsProvider
openAndTranscodingDialogs	dialogs_provider.cpp	/^void DialogsProvider::openAndTranscodingDialogs()$/;"	f	class:DialogsProvider
openCaptureDialog	dialogs_provider.cpp	/^void DialogsProvider::openCaptureDialog()$/;"	f	class:DialogsProvider
openDialog	dialogs_provider.cpp	/^void DialogsProvider::openDialog( int i_tab )$/;"	f	class:DialogsProvider
openDialog	dialogs_provider.cpp	/^void DialogsProvider::openDialog()$/;"	f	class:DialogsProvider
openDirectory	dialogs_provider.cpp	/^static void openDirectory( intf_thread_t *p_intf, bool pl, bool go )$/;"	f	file:
openDiscDialog	dialogs_provider.cpp	/^void DialogsProvider::openDiscDialog()$/;"	f	class:DialogsProvider
openFileDialog	dialogs_provider.cpp	/^void DialogsProvider::openFileDialog()$/;"	f	class:DialogsProvider
openFileGenericDialog	dialogs_provider.cpp	/^void DialogsProvider::openFileGenericDialog( intf_dialog_args_t *p_arg )$/;"	f	class:DialogsProvider
openNetDialog	dialogs_provider.cpp	/^void DialogsProvider::openNetDialog()$/;"	f	class:DialogsProvider
openUrlDialog	dialogs_provider.cpp	/^void DialogsProvider::openUrlDialog()$/;"	f	class:DialogsProvider
operator ()	qt4.cpp	/^    bool operator()(const pair<int,string>& lh,const pair<int,string>& rh) {$/;"	f	struct:TrackListCmp
operator <	components/playlist/ml_item.cpp	/^bool MLItem::operator<( MLItem* item )$/;"	f	class:MLItem
operator <	components/playlist/playlist_item.cpp	/^bool PLItem::operator< ( PLItem& other )$/;"	f	class:PLItem
operator <	dialogs/plugins.cpp	/^bool PluginTreeItem::operator< ( const QTreeWidgetItem & other ) const$/;"	f	class:PluginTreeItem
option	dialogs/sout.hpp	/^    void option( const QString& name, const QString& base, const int i_value, const int i_precision = 10 )$/;"	f	class:SoutMrl
option	dialogs/sout.hpp	/^    void option( const QString& name, const double f_value )$/;"	f	class:SoutMrl
option	dialogs/sout.hpp	/^    void option( const QString& name, const int i_value, const int i_precision = 10 )$/;"	f	class:SoutMrl
option	dialogs/sout.hpp	/^    void option( const QString& option, const QString& value = "" )$/;"	f	class:SoutMrl
optionWidgets	components/simple_preferences.hpp	/^    QWidgetList optionWidgets;$/;"	m	class:SPrefsPanel
optionsBox	ui/open_capture.h	/^    QGroupBox *optionsBox;$/;"	m	class:Ui_OpenCapture
optionsChanged	components/sout/profile_selector.moc.cpp	/^void VLCProfileSelector::optionsChanged()$/;"	f	class:VLCProfileSelector
optionsMRL	dialogs/open.hpp	/^    QString optionsMRL;$/;"	m	class:OpenDialog
outlineColor	ui/sprefs_subtitles.h	/^    QPushButton *outlineColor;$/;"	m	class:Ui_SPrefsSubtitles
outlineColorLabel	ui/sprefs_subtitles.h	/^    QLabel *outlineColorLabel;$/;"	m	class:Ui_SPrefsSubtitles
output	dialogs/vlm.hpp	/^    QString output;$/;"	m	class:VLMAWidget
outputAudioBox	ui/sprefs_audio.h	/^    QGroupBox *outputAudioBox;$/;"	m	class:Ui_SPrefsAudio
outputAudioLayout	ui/sprefs_audio.h	/^    QGridLayout *outputAudioLayout;$/;"	m	class:Ui_SPrefsAudio
outputButton	ui/vlm.h	/^    QPushButton *outputButton;$/;"	m	class:Ui_Vlm
outputLabel	ui/sprefs_audio.h	/^    QLabel *outputLabel;$/;"	m	class:Ui_SPrefsAudio
outputLabel	ui/vlm.h	/^    QLabel *outputLabel;$/;"	m	class:Ui_Vlm
outputLedit	ui/vlm.h	/^    QLineEdit *outputLedit;$/;"	m	class:Ui_Vlm
outputModule	ui/sprefs_audio.h	/^    QComboBox *outputModule;$/;"	m	class:Ui_SPrefsAudio
outputModule	ui/sprefs_video.h	/^    QComboBox *outputModule;$/;"	m	class:Ui_SPrefsVideo
overlay	ui/sprefs_video.h	/^    QCheckBox *overlay;$/;"	m	class:Ui_SPrefsVideo
pRemoteControl	qt4.cpp	/^    static RCServer* pRemoteControl=NULL;$/;"	v	file:
p_app	qt4.hpp	/^    QVLCApp *p_app;          \/* Main Qt Application *\/$/;"	m	struct:intf_sys_t
p_arg	dialogs_provider.hpp	/^    intf_dialog_args_t *p_arg;$/;"	m	class:DialogEvent
p_cached_item	components/playlist/playlist_model.hpp	/^    PLItem *p_cached_item;$/;"	m	class:PLModel
p_cached_item_bi	components/playlist/playlist_model.hpp	/^    PLItem *p_cached_item_bi;$/;"	m	class:PLModel
p_dialog	dialogs/extensions.hpp	/^    extension_dialog_t *p_dialog;$/;"	m	class:ExtensionDialog
p_edp	extensions_manager.hpp	/^    ExtensionsDialogProvider *p_edp;$/;"	m	class:ExtensionsManager
p_extension	dialogs/extensions.hpp	/^    extension_t *p_extension;$/;"	m	class:ExtensionDialog
p_extensions_manager	dialogs/extensions.hpp	/^    extensions_manager_t *p_extensions_manager;$/;"	m	class:ExtensionDialog
p_extensions_manager	dialogs/extensions.hpp	/^    extensions_manager_t *p_extensions_manager;$/;"	m	class:ExtensionsDialogProvider
p_extensions_manager	extensions_manager.hpp	/^    extensions_manager_t *p_extensions_manager;$/;"	m	class:ExtensionsManager
p_hideTimer	components/controller.hpp	/^    QTimer *p_hideTimer;$/;"	m	class:FullscreenControllerWidget
p_input	components/info_panels.hpp	/^    input_item_t *p_input;$/;"	m	class:MetaPanel
p_input	components/playlist/playlist_item.hpp	/^    input_item_t *p_input;$/;"	m	class:PLItem
p_input	dialogs/open.hpp	/^    input_thread_t *p_input;$/;"	m	class:OpenDialog
p_input	input_manager.hpp	/^    input_thread_t          *p_input;$/;"	m	class:MainInputManager
p_input	input_manager.hpp	/^    input_thread_t *p_input;$/;"	m	class:InputManager
p_input_vbi	input_manager.hpp	/^    vlc_object_t   *p_input_vbi;$/;"	m	class:InputManager
p_intf	actions_manager.hpp	/^    intf_thread_t       *p_intf;$/;"	m	class:ActionsManager
p_intf	adapters/seekpoints.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:SeekPoints
p_intf	components/complete_preferences.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:AdvPrefsPanel
p_intf	components/complete_preferences.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:PrefsTree
p_intf	components/controller.hpp	/^    intf_thread_t       *p_intf;$/;"	m	class:AbstractController
p_intf	components/controller_widget.hpp	/^    intf_thread_t       *p_intf;$/;"	m	class:SoundWidget
p_intf	components/controller_widget.hpp	/^    intf_thread_t* p_intf;$/;"	m	class:AspectRatioComboBox
p_intf	components/extended_panels.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:Compressor
p_intf	components/extended_panels.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:Equalizer
p_intf	components/extended_panels.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:ExtV4l2
p_intf	components/extended_panels.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:ExtVideo
p_intf	components/extended_panels.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:Spatializer
p_intf	components/extended_panels.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:SyncControls
p_intf	components/info_panels.hpp	/^    struct intf_thread_t *p_intf;$/;"	m	class:ExtraMetaPanel	typeref:struct:ExtraMetaPanel::intf_thread_t
p_intf	components/info_panels.hpp	/^    struct intf_thread_t *p_intf;$/;"	m	class:InfoPanel	typeref:struct:InfoPanel::intf_thread_t
p_intf	components/info_panels.hpp	/^    struct intf_thread_t *p_intf;$/;"	m	class:InputStatsPanel	typeref:struct:InputStatsPanel::intf_thread_t
p_intf	components/info_panels.hpp	/^    struct intf_thread_t *p_intf;$/;"	m	class:MetaPanel	typeref:struct:MetaPanel::intf_thread_t
p_intf	components/interface_widgets.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:BackgroundWidget
p_intf	components/interface_widgets.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:CoverArtLabel
p_intf	components/interface_widgets.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:SpeedLabel
p_intf	components/interface_widgets.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:TimeLabel
p_intf	components/interface_widgets.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:VideoWidget
p_intf	components/interface_widgets.hpp	/^    intf_thread_t* p_intf;$/;"	m	class:SpeedControlWidget
p_intf	components/open_panels.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:OpenPanel
p_intf	components/playlist/ml_item.hpp	/^    intf_thread_t* p_intf;$/;"	m	class:MLItem
p_intf	components/playlist/playlist.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:PlaylistWidget
p_intf	components/playlist/selector.hpp	/^    intf_thread_t    *p_intf;$/;"	m	class:PLSelector
p_intf	components/playlist/standardpanel.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:StandardPLPanel
p_intf	components/playlist/vlc_model.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:VLCModel
p_intf	components/simple_preferences.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:SPrefsCatList
p_intf	components/simple_preferences.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:SPrefsPanel
p_intf	dialogs/extensions.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:ExtensionDialog
p_intf	dialogs/extensions.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:ExtensionsDialogProvider
p_intf	dialogs/firstrun.hpp	/^        intf_thread_t *p_intf;$/;"	m	class:FirstRun
p_intf	dialogs/ml_configuration.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:MLConfDialog
p_intf	dialogs/ml_configuration.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:MLDirModel
p_intf	dialogs/plugins.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:ExtensionItemDelegate
p_intf	dialogs/plugins.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:ExtensionListModel
p_intf	dialogs_provider.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:DialogsProvider
p_intf	extensions_manager.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:ExtensionsManager
p_intf	input_manager.hpp	/^    intf_thread_t           *p_intf;$/;"	m	class:MainInputManager
p_intf	input_manager.hpp	/^    intf_thread_t  *p_intf;$/;"	m	class:InputManager
p_intf	recents.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:RecentsMRL
p_intf	remoteControlServer.hpp	/^    intf_thread_t* p_intf;$/;"	m	struct:RCPlayListThreadPara
p_intf	util/qvlcframe.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:QVLCDialog
p_intf	util/qvlcframe.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:QVLCFrame
p_intf	util/qvlcframe.hpp	/^    intf_thread_t *p_intf;$/;"	m	class:QVLCMW
p_item	components/preferences_widgets.hpp	/^    module_config_t *p_item;$/;"	m	class:ConfigControl
p_item	input_manager.hpp	/^    input_item_t   *p_item;$/;"	m	class:InputManager
p_item	input_manager.hpp	/^    input_item_t *p_item;$/;"	m	class:IMEvent
p_mi	qt4.hpp	/^    MainInterface *p_mi;     \/* Main Interface, NULL if DialogProvider Mode *\/$/;"	m	struct:intf_sys_t
p_ml	components/playlist/ml_item.hpp	/^    media_library_t* p_ml;$/;"	m	class:MLItem
p_ml	components/playlist/ml_model.hpp	/^    media_library_t* p_ml;$/;"	m	class:MLModel
p_ml	dialogs/ml_configuration.hpp	/^    media_library_t *p_ml;$/;"	m	class:MLConfDialog
p_ml	dialogs/ml_configuration.hpp	/^    media_library_t* p_ml;$/;"	m	class:MLDirModel
p_monitored_dirs	dialogs/ml_configuration.hpp	/^    vlc_array_t *p_monitored_dirs;$/;"	m	class:MLConfDialog
p_obj	menus.hpp	/^    vlc_object_t *p_obj;$/;"	m	class:MenuItemData
p_playlist	components/playlist/playlist_model.hpp	/^    playlist_t *p_playlist;$/;"	m	class:PLModel
p_selector	components/playlist/standardpanel.hpp	/^    PLSelector  *p_selector;$/;"	m	class:StandardPLPanel
p_slowHideTimer	components/controller.hpp	/^    QTimer *p_slowHideTimer;$/;"	m	class:FullscreenControllerWidget
p_taskbl	main_interface.hpp	/^    ITaskbarList3 *p_taskbl;$/;"	m	class:MainInterface
p_this	components/preferences_widgets.hpp	/^    vlc_object_t *p_this;$/;"	m	class:ConfigControl
p_update	dialogs/help.hpp	/^    update_t *p_update;$/;"	m	class:UpdateDialog
p_vlm	dialogs/vlm.cpp	/^vlm_t * VLMWrapper::p_vlm = NULL;$/;"	m	class:VLMWrapper	file:
p_vlm	dialogs/vlm.hpp	/^    static vlm_t *p_vlm;$/;"	m	class:VLMWrapper
p_vlm	dialogs/vlm.hpp	/^    vlm_t *p_vlm;$/;"	m	class:VLMDialog
p_widget	dialogs/extensions.hpp	/^    extension_widget_t *p_widget;$/;"	m	class:WidgetMapper
paddingL	util/input_slider.hpp	/^    const static int paddingL = 3;$/;"	m	class:SoundSlider
paddingR	util/input_slider.hpp	/^    const static int paddingR = 2;$/;"	m	class:SoundSlider
paint	components/epg/EPGItem.cpp	/^void EPGItem::paint( QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget*)$/;"	f	class:EPGItem
paint	components/playlist/views.cpp	/^void PlIconViewItemDelegate::paint( QPainter * painter, const QStyleOptionViewItem & option, const QModelIndex & index ) const$/;"	f	class:PlIconViewItemDelegate
paint	components/playlist/views.cpp	/^void PlListViewItemDelegate::paint( QPainter * painter, const QStyleOptionViewItem & option, const QModelIndex & index ) const$/;"	f	class:PlListViewItemDelegate
paint	dialogs/plugins.cpp	/^void ExtensionItemDelegate::paint( QPainter *painter,$/;"	f	class:ExtensionItemDelegate
paint	util/pictureflow.cpp	/^void PictureFlowSoftwareRenderer::paint()$/;"	f	class:PictureFlowSoftwareRenderer
paintBackground	components/playlist/views.cpp	/^void AbstractPlViewItemDelegate::paintBackground($/;"	f	class:AbstractPlViewItemDelegate
paintEngine	components/interface_widgets.hpp	/^    virtual QPaintEngine *paintEngine() const$/;"	f	class:VideoWidget
paintEvent	components/epg/EPGChannels.cpp	/^void EPGChannels::paintEvent( QPaintEvent *event )$/;"	f	class:EPGChannels
paintEvent	components/epg/EPGRuler.cpp	/^void EPGRuler::paintEvent( QPaintEvent *event )$/;"	f	class:EPGRuler
paintEvent	components/interface_widgets.cpp	/^void BackgroundWidget::paintEvent( QPaintEvent *e )$/;"	f	class:BackgroundWidget
paintEvent	components/interface_widgets.cpp	/^void TimeLabel::paintEvent( QPaintEvent* event )$/;"	f	class:TimeLabel
paintEvent	components/playlist/playlist.cpp	/^void LocationButton::paintEvent ( QPaintEvent * )$/;"	f	class:LocationButton
paintEvent	components/playlist/playlist.cpp	/^void SplitterHandle::paintEvent(QPaintEvent *event)$/;"	f	class:SplitterHandle
paintEvent	components/playlist/selector.cpp	/^void SelectorActionButton::paintEvent( QPaintEvent *event )$/;"	f	class:SelectorActionButton
paintEvent	util/buttons/BrowseButton.cpp	/^void BrowseButton::paintEvent( QPaintEvent* event )$/;"	f	class:BrowseButton
paintEvent	util/buttons/RoundButton.cpp	/^void RoundButton::paintEvent( QPaintEvent* event )$/;"	f	class:RoundButton
paintEvent	util/customwidgets.cpp	/^void QElidingLabel::paintEvent( QPaintEvent * )$/;"	f	class:QElidingLabel
paintEvent	util/customwidgets.cpp	/^void QFramelessButton::paintEvent( QPaintEvent * )$/;"	f	class:QFramelessButton
paintEvent	util/input_slider.cpp	/^void SeekSlider::paintEvent( QPaintEvent *event )$/;"	f	class:SeekSlider
paintEvent	util/input_slider.cpp	/^void SoundSlider::paintEvent( QPaintEvent *e )$/;"	f	class:SoundSlider
paintEvent	util/pictureflow.cpp	/^void PictureFlow::paintEvent(QPaintEvent* event)$/;"	f	class:PictureFlow
paintEvent	util/searchlineedit.cpp	/^void ClickLineEdit::paintEvent( QPaintEvent *pe )$/;"	f	class:ClickLineEdit
paintEvent	util/searchlineedit.cpp	/^void SearchLineEdit::paintEvent( QPaintEvent *event )$/;"	f	class:SearchLineEdit
paintEvent	util/timetooltip.cpp	/^void TimeTooltip::paintEvent( QPaintEvent * )$/;"	f	class:TimeTooltip
panel	components/complete_preferences.hpp	/^    AdvPrefsPanel *panel;$/;"	m	class:PrefsItemData
parent	components/playlist/ml_item.cpp	/^MLItem* MLItem::parent() const$/;"	f	class:MLItem
parent	components/playlist/ml_model.cpp	/^QModelIndex MLModel::parent(const QModelIndex & ) const$/;"	f	class:MLModel
parent	components/playlist/playlist_item.hpp	/^    PLItem *parent() { return parentItem; }$/;"	f	class:PLItem
parent	components/playlist/playlist_model.cpp	/^QModelIndex PLModel::parent( const QModelIndex &index ) const$/;"	f	class:PLModel
parent	dialogs/toolbar.hpp	/^    ToolbarEditDialog *parent;$/;"	m	class:WidgetListing
parent	dialogs/vlm.hpp	/^    VLMDialog *parent;$/;"	m	class:VLMAWidget
parentDestroyed	dialogs/extensions.cpp	/^void ExtensionDialog::parentDestroyed()$/;"	f	class:ExtensionDialog
parentItem	components/playlist/ml_item.hpp	/^    MLItem *parentItem;$/;"	m	class:MLItem
parentItem	components/playlist/playlist_item.hpp	/^    PLItem *parentItem;$/;"	m	class:PLItem
parse	remoteControlServer.cpp	/^bool RCPlayListModel::parse(const char* cmd,vector<string>& result) {$/;"	f	class:RCPlayListModel
parseAndCreate	components/controller.cpp	/^void AbstractController::parseAndCreate( const QString& config,$/;"	f	class:AbstractController
parseFullMrl	remoteControlServer.cpp	/^const char* RCPlayListModel::parseFullMrl(const char* rcmrl){$/;"	f	class:RCPlayListModel
parseList	remoteControlServer.cpp	/^int RCUtil::parseList(std::string src,std::vector<std::string>& dst) {$/;"	f	class:RCUtil
parseMsg	remoteControlServer.cpp	/^bool RCUtil::parseMsg(char* msgRcv,rc_value_t& val){$/;"	f	class:RCUtil
parseName	remoteControlServer.cpp	/^const char* RCPlayListModel::parseName(const char* mrl) {$/;"	f	class:RCPlayListModel
parse_MRL	remoteControlServer.cpp	/^input_item_t *RCUtil::parse_MRL( const char *mrl ) {$/;"	f	class:RCUtil
parse_file	ini/inifile.c	/^	static int parse_file(const char *section, const char *key, const char *buf,int *sec_s,int *sec_e,$/;"	f	file:
pause	input_manager.cpp	/^void MainInputManager::pause()$/;"	f	class:MainInputManager
pauseMinimizedBox	ui/sprefs_interface.h	/^    QCheckBox *pauseMinimizedBox;$/;"	m	class:Ui_SPrefsInterface
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pen	util/buttons/RoundButton.cpp	/^QBrush RoundButton::pen( QStyleOptionToolButton* option ) const$/;"	f	class:RoundButton
picFlow	components/playlist/views.hpp	/^    PictureFlow *picFlow;$/;"	m	class:PicFlowView
picFlowView	components/playlist/standardpanel.hpp	/^    PicFlowView       *picFlowView;$/;"	m	class:StandardPLPanel
pixGradient	util/input_slider.hpp	/^    QPixmap pixGradient; \/* Gradient pix storage *\/$/;"	m	class:SoundSlider
pixGradient2	util/input_slider.hpp	/^    QPixmap pixGradient2; \/* Muted Gradient pix storage *\/$/;"	m	class:SoundSlider
pixOutside	util/input_slider.hpp	/^    QPixmap pixOutside; \/* OutLine pix storage *\/$/;"	m	class:SoundSlider
pixmapUrl	components/interface_widgets.hpp	/^    QString pixmapUrl;$/;"	m	class:BackgroundWidget
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/vlc$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/vlc$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/vlc$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/vlc$/;"	m
plItemAdded	components/playlist/selector.cpp	/^void PLSelector::plItemAdded( int item, int parent )$/;"	f	class:PLSelector
plItemRemoved	components/playlist/selector.cpp	/^void PLSelector::plItemRemoved( int id )$/;"	f	class:PLSelector
plViewDragMoveEvent	components/playlist/views.cpp	/^static void plViewDragMoveEvent( QAbstractItemView *, QDragMoveEvent * event )$/;"	f	file:
plViewStartDrag	components/playlist/views.cpp	/^static inline void plViewStartDrag( QAbstractItemView *view, const Qt::DropActions & supportedActions )$/;"	f	file:
pl_model	qt4.hpp	/^    PLModel *pl_model;$/;"	m	struct:intf_sys_t
placeholderText	util/searchlineedit.hpp	/^    const QString& placeholderText() const { return mClickMessage; }$/;"	f	class:ClickLineEdit
planHideFSC	components/controller.cpp	/^void FullscreenControllerWidget::planHideFSC()$/;"	f	class:FullscreenControllerWidget
play	actions_manager.cpp	/^void ActionsManager::play()$/;"	f	class:ActionsManager
play	components/playlist/ml_model.cpp	/^void MLModel::play( const QModelIndex &idx )$/;"	f	class:MLModel
play	dialogs/open.cpp	/^void OpenDialog::play()$/;"	f	class:OpenDialog
play	dialogs/openurl.cpp	/^void OpenUrlDialog::play()$/;"	f	class:OpenUrlDialog
play	input_manager.cpp	/^void MainInputManager::play()$/;"	f	class:MainInputManager
play	util/customwidgets.cpp	/^void AnimatedIcon::play( int loops, int interval )$/;"	f	class:AnimatedIcon
playButton	dialogs/open.hpp	/^    QToolButton *playButton;$/;"	m	class:OpenDialog
playButton	dialogs/vlm.hpp	/^    QToolButton *loopButton, *playButton;$/;"	m	class:VLMBroadcast
playButton	ui/open.h	/^    QToolButton *playButton;$/;"	m	class:Ui_Open
playItem	components/playlist/views.cpp	/^void PicFlowView::playItem( int i_item )$/;"	f	class:PicFlowView
playListInsert	remoteControlServer.cpp	/^int PlayListCommand::playListInsert(playlist_t* p_playlist,playlist_item_t* p_item,int pos) {$/;"	f	class:PlayListCommand
playListJump	remoteControlServer.cpp	/^int PlayListCommand::playListJump(playlist_t* p_playlist,int i_pos) {$/;"	f	class:PlayListCommand
playListMove	remoteControlServer.cpp	/^int PlayListCommand::playListMove(playlist_t* p_playlist,int from,int to) {$/;"	f	class:PlayListCommand
playListMove	remoteControlServer.cpp	/^int PlayListCommand::playListMove(playlist_t* p_playlist,int to,vector<string>& item) {$/;"	f	class:PlayListCommand
playListRemove	remoteControlServer.cpp	/^int PlayListCommand::playListRemove(playlist_t* p_playlist,int index) {$/;"	f	class:PlayListCommand
playListRemove	remoteControlServer.cpp	/^int PlayListCommand::playListRemove(playlist_t* p_playlist,vector<string>& indexes){$/;"	f	class:PlayListCommand
playListRemoveAll	remoteControlServer.cpp	/^int PlayListCommand::playListRemoveAll(playlist_t* p_playlist){$/;"	f	class:PlayListCommand
playListTop	remoteControlServer.cpp	/^int PlayListCommand::playListTop(playlist_t* p_playlist,int from) {$/;"	f	class:PlayListCommand
playMRL	dialogs_provider.cpp	/^void DialogsProvider::playMRL( const QString &mrl )$/;"	f	class:DialogsProvider
playPauseBox	ui/sprefs_interface.h	/^    QCheckBox *playPauseBox;$/;"	m	class:Ui_SPrefsInterface
playPauseButton	ui/streampanel.h	/^    QPushButton *playPauseButton;$/;"	m	class:Ui_BroadcastPanel
playingChanged	extensions_manager.cpp	/^void ExtensionsManager::playingChanged( int state )$/;"	f	class:ExtensionsManager
playingStatus	input_manager.cpp	/^int InputManager::playingStatus()$/;"	f	class:InputManager
playingStatusChanged	input_manager.moc.cpp	/^void InputManager::playingStatusChanged(int _t1)$/;"	f	class:InputManager
playlist	actions_manager.cpp	/^void ActionsManager::playlist()$/;"	f	class:ActionsManager
playlistDialog	dialogs_provider.cpp	/^void DialogsProvider::playlistDialog()$/;"	f	class:DialogsProvider
playlistGroupBox	ui/sprefs_interface.h	/^    QGroupBox *playlistGroupBox;$/;"	m	class:Ui_SPrefsInterface
playlistItemAppended	input_manager.moc.cpp	/^void MainInputManager::playlistItemAppended(int _t1, int _t2)$/;"	f	class:MainInputManager
playlistItemRemoved	input_manager.moc.cpp	/^void MainInputManager::playlistItemRemoved(int _t1)$/;"	f	class:MainInputManager
playlistNotEmpty	input_manager.moc.cpp	/^void MainInputManager::playlistNotEmpty(bool _t1)$/;"	f	class:MainInputManager
playlistVisible	main_interface.hpp	/^    bool                 playlistVisible;       \/\/\/< Is the playlist visible ?$/;"	m	class:MainInterface
playlistWidget	dialogs/playlist.hpp	/^    PlaylistWidget *playlistWidget;$/;"	m	class:PlaylistDialog
playlistWidget	main_interface.hpp	/^    PlaylistWidget      *playlistWidget;$/;"	m	class:MainInterface
playsAt	components/epg/EPGItem.cpp	/^bool EPGItem::playsAt( const QDateTime & ref ) const$/;"	f	class:EPGItem
pluginDialog	dialogs_provider.cpp	/^void DialogsProvider::pluginDialog()$/;"	f	class:DialogsProvider
pluginTab	dialogs/plugins.hpp	/^    PluginTab *pluginTab;$/;"	m	class:PluginDialog
podcastAdd	components/playlist/selector.cpp	/^void PLSelector::podcastAdd( PLSelItem * )$/;"	f	class:PLSelector
podcastAdd	ui/podcast_configuration.h	/^    QPushButton *podcastAdd;$/;"	m	class:Ui_PodcastConfiguration
podcastConfigureDialog	dialogs_provider.cpp	/^void DialogsProvider::podcastConfigureDialog()$/;"	f	class:DialogsProvider
podcastDelete	ui/podcast_configuration.h	/^    QPushButton *podcastDelete;$/;"	m	class:Ui_PodcastConfiguration
podcastList	ui/podcast_configuration.h	/^    QListWidget *podcastList;$/;"	m	class:Ui_PodcastConfiguration
podcastRemove	components/playlist/selector.cpp	/^void PLSelector::podcastRemove( PLSelItem* item )$/;"	f	class:PLSelector
podcastURL	ui/podcast_configuration.h	/^    QLineEdit *podcastURL;$/;"	m	class:Ui_PodcastConfiguration
podcastsParent	components/playlist/selector.hpp	/^    QTreeWidgetItem  *podcastsParent;$/;"	m	class:PLSelector
podcastsParentId	components/playlist/selector.hpp	/^    int               podcastsParentId;$/;"	m	class:PLSelector
pointerChanged	variables.moc.cpp	/^void QVLCPointer::pointerChanged(vlc_object_t * _t1, void * _t2)$/;"	f	class:QVLCPointer
pointerChanged	variables.moc.cpp	/^void QVLCPointer::pointerChanged(vlc_object_t * _t1, void * _t2, void * _t3)$/;"	f	class:QVLCPointer
pointsList	adapters/seekpoints.hpp	/^    QList<SeekPoint> pointsList;$/;"	m	class:SeekPoints
popAction	remoteControlServer.cpp	/^void RCInvoker::popAction() {$/;"	f	class:RCInvoker
popState	remoteControlServer.cpp	/^void RCInvoker::popState() {$/;"	f	class:RCInvoker
popup	components/playlist/ml_model.cpp	/^bool MLModel::popup( const QModelIndex & index, const QPoint &point, const QModelIndexList &list )$/;"	f	class:MLModel
popup	components/playlist/playlist_model.cpp	/^bool PLModel::popup( const QModelIndex & index, const QPoint &point, const QModelIndexList &list )$/;"	f	class:PLModel
popupAddNode	components/playlist/playlist_model.cpp	/^void PLModel::popupAddNode()$/;"	f	class:PLModel
popupAddToPlaylist	components/playlist/playlist_model.cpp	/^void PLModel::popupAddToPlaylist()$/;"	f	class:PLModel
popupDel	components/playlist/ml_model.cpp	/^void MLModel::popupDel()$/;"	f	class:MLModel
popupDel	components/playlist/playlist_model.cpp	/^void PLModel::popupDel()$/;"	f	class:PLModel
popupExplore	components/playlist/playlist_model.cpp	/^void PLModel::popupExplore()$/;"	f	class:PLModel
popupInfo	components/playlist/ml_model.cpp	/^void MLModel::popupInfo()$/;"	f	class:MLModel
popupInfo	components/playlist/playlist_model.cpp	/^void PLModel::popupInfo()$/;"	f	class:PLModel
popupMenu	main_interface.cpp	/^void MainInterface::popupMenu( const QPoint & )$/;"	f	class:MainInterface
popupPlView	components/playlist/standardpanel.cpp	/^void StandardPLPanel::popupPlView( const QPoint &point )$/;"	f	class:StandardPLPanel
popupPlay	components/playlist/ml_model.cpp	/^void MLModel::popupPlay()$/;"	f	class:MLModel
popupPlay	components/playlist/playlist_model.cpp	/^void PLModel::popupPlay()$/;"	f	class:PLModel
popupSave	components/playlist/ml_model.cpp	/^void MLModel::popupSave()$/;"	f	class:MLModel
popupSave	components/playlist/playlist_model.cpp	/^void PLModel::popupSave()$/;"	f	class:PLModel
popupSelectColumn	components/playlist/standardpanel.cpp	/^void StandardPLPanel::popupSelectColumn( QPoint )$/;"	f	class:StandardPLPanel
popupSort	components/playlist/playlist_model.cpp	/^void PLModel::popupSort( int column )$/;"	f	class:PLModel
popupStream	components/playlist/ml_model.cpp	/^void MLModel::popupStream()$/;"	f	class:MLModel
popupStream	components/playlist/playlist_model.cpp	/^void PLModel::popupStream()$/;"	f	class:PLModel
port	remoteControlServer.hpp	/^    int port;$/;"	m	struct:RC_CONFIG
positionCombo	dialogs/toolbar.hpp	/^    QComboBox *positionCombo, *profileCombo;$/;"	m	class:ToolbarEditDialog
positionUpdated	input_manager.moc.cpp	/^void InputManager::positionUpdated(float _t1, int64_t _t2, int _t3)$/;"	f	class:InputManager
posterizeEnable	ui/video_effects.h	/^    QCheckBox *posterizeEnable;$/;"	m	class:Ui_ExtVideoWidget
ppLabel	ui/sprefs_input.h	/^    QLabel *ppLabel;$/;"	m	class:Ui_SPrefsInputAndCodecs
preampLabel	ui/equalizer.h	/^    QLabel *preampLabel;$/;"	m	class:Ui_EqualizerWidget
preampSlider	ui/equalizer.h	/^    QSlider *preampSlider;$/;"	m	class:Ui_EqualizerWidget
preferredAudioLanguage	ui/sprefs_audio.h	/^    QLineEdit *preferredAudioLanguage;$/;"	m	class:Ui_SPrefsAudio
preferredLanguage	ui/sprefs_subtitles.h	/^    QLineEdit *preferredLanguage;$/;"	m	class:Ui_SPrefsSubtitles
prefix	Makefile	/^prefix = \/home\/ylwang\/msvc\/vlc-2.0.6\/_win32$/;"	m
prefixLabel	ui/sprefs_video.h	/^    QLabel *prefixLabel;$/;"	m	class:Ui_SPrefsVideo
prefsDialog	dialogs_provider.cpp	/^void DialogsProvider::prefsDialog()$/;"	f	class:DialogsProvider
prepareSurface	util/pictureflow.cpp	/^static QImage* prepareSurface(const QImage* slideImage, int w, int h, QRgb bgcolor,$/;"	f	file:
presetBox	ui/sprefs_input.h	/^    QComboBox *presetBox;$/;"	m	class:Ui_SPrefsInputAndCodecs
presetLabel	ui/equalizer.h	/^    QLabel *presetLabel;$/;"	m	class:Ui_EqualizerWidget
presetsCombo	ui/equalizer.h	/^    QComboBox *presetsCombo;$/;"	m	class:Ui_EqualizerWidget
presetsComboBox	components/extended_panels.hpp	/^    QComboBox *presetsComboBox;$/;"	m	class:Equalizer
prev	dialogs/sout.cpp	/^void SoutDialog::prev()$/;"	f	class:SoutDialog
prev	input_manager.cpp	/^void MainInputManager::prev()$/;"	f	class:MainInputManager
prevButton	ui/sout.h	/^    QPushButton *prevButton;$/;"	m	class:Ui_Sout
prevButton	ui/streampanel.h	/^    QPushButton *prevButton;$/;"	m	class:Ui_BroadcastPanel
prevButton2	ui/sout.h	/^    QPushButton *prevButton2;$/;"	m	class:Ui_Sout
prevOrReset	input_manager.cpp	/^void MainInputManager::prevOrReset()$/;"	f	class:MainInputManager
previousPosition	components/controller.hpp	/^    QPoint previousPosition;$/;"	m	class:FullscreenControllerWidget
previousScreenRes	components/controller.hpp	/^    QRect previousScreenRes;$/;"	m	class:FullscreenControllerWidget
priority	dialogs/messages.cpp	/^    int priority;$/;"	m	class:MsgEvent	file:
processInputItemUpdate	components/playlist/playlist_model.cpp	/^void PLModel::processInputItemUpdate( input_item_t *p_item )$/;"	f	class:PLModel
processInputItemUpdate	components/playlist/playlist_model.cpp	/^void PLModel::processInputItemUpdate( input_thread_t *p_input )$/;"	f	class:PLModel
processItemAppend	components/playlist/playlist_model.cpp	/^void PLModel::processItemAppend( int i_item, int i_parent )$/;"	f	class:PLModel
processItemRemoval	components/playlist/playlist_model.cpp	/^void PLModel::processItemRemoval( int i_id )$/;"	f	class:PLModel
profile	dialogs/convert.hpp	/^    VLCProfileSelector *profile;$/;"	m	class:ConvertDialog
profileBox	components/sout/profile_selector.hpp	/^    QComboBox *profileBox;$/;"	m	class:VLCProfileSelector
profileBox	ui/sprefs_input.h	/^    QComboBox *profileBox;$/;"	m	class:Ui_SPrefsInputAndCodecs
profileCombo	dialogs/toolbar.hpp	/^    QComboBox *positionCombo, *profileCombo;$/;"	m	class:ToolbarEditDialog
profileLine	ui/profiles.h	/^    QLineEdit *profileLine;$/;"	m	class:Ui_Profiles
profileSelect	ui/sout.h	/^    VLCProfileSelector *profileSelect;$/;"	m	class:Ui_Sout
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
progressBar	dialogs/external.hpp	/^    QVLCPointer progressBar;$/;"	m	class:DialogHandler
progressBar	ui/update.h	/^    QProgressBar *progressBar;$/;"	m	class:Ui_updateWidget
progressed	dialogs/external.moc.cpp	/^void QVLCProgressDialog::progressed(int _t1)$/;"	f	class:QVLCProgressDialog
proxy	ui/sprefs_input.h	/^    QLineEdit *proxy;$/;"	m	class:Ui_SPrefsInputAndCodecs
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psychedelicEnable	ui/video_effects.h	/^    QCheckBox *psychedelicEnable;$/;"	m	class:Ui_ExtVideoWidget
psz_cddadiscpath	components/open_panels.hpp	/^    char *psz_dvddiscpath, *psz_vcddiscpath, *psz_cddadiscpath;$/;"	m	class:DiscOpenPanel
psz_cmd	remoteControlServer.hpp	/^    std::string psz_cmd;$/;"	m	struct:RCAction
psz_column_meta	components/playlist/sorting.h	/^static inline char * psz_column_meta( input_item_t *p_item, uint32_t i_column )$/;"	f
psz_column_title	components/playlist/sorting.h	/^static inline const char * psz_column_title( uint32_t i_column )$/;"	f
psz_desc	components/extended_panels.cpp	/^    const char *psz_desc;$/;"	m	struct:__anon12	file:
psz_descs	components/extended_panels.cpp	/^    const char *psz_descs;$/;"	m	struct:__anon11	file:
psz_devModule	components/open_panels.cpp	/^static const char psz_devModule[][8] = { "v4l2", "pvr", "dtv",$/;"	v	file:
psz_dvddiscpath	components/open_panels.hpp	/^    char *psz_dvddiscpath, *psz_vcddiscpath, *psz_cddadiscpath;$/;"	m	class:DiscOpenPanel
psz_length	components/interface_widgets.hpp	/^    char psz_length[MSTRTIME_MAX_SIZE];$/;"	m	class:TimeLabel
psz_length	util/input_slider.hpp	/^    char psz_length[MSTRTIME_MAX_SIZE];               \/* Used for the ToolTip *\/$/;"	m	class:SeekSlider
psz_module	components/preferences_widgets.hpp	/^    char *psz_module;$/;"	m	struct:checkBoxListItem
psz_name	components/complete_preferences.hpp	/^    char *psz_name;$/;"	m	class:PrefsItemData
psz_name	components/extended_panels.cpp	/^    const char *psz_name;$/;"	m	struct:__anon11	file:
psz_name	components/extended_panels.cpp	/^    const char *psz_name;$/;"	m	struct:__anon12	file:
psz_string	remoteControlServer.hpp	/^    std::string         psz_string;$/;"	m	struct:rc_value_t
psz_time	components/interface_widgets.hpp	/^    char psz_time[MSTRTIME_MAX_SIZE];$/;"	m	class:TimeLabel
psz_units	components/extended_panels.cpp	/^    const char *psz_units;$/;"	m	struct:__anon11	file:
psz_var	menus.hpp	/^    char *psz_var;$/;"	m	class:MenuItemData
psz_vcddiscpath	components/open_panels.hpp	/^    char *psz_dvddiscpath, *psz_vcddiscpath, *psz_cddadiscpath;$/;"	m	class:DiscOpenPanel
publisher_text	components/info_panels.hpp	/^    QLineEdit *publisher_text;$/;"	m	class:MetaPanel
putPLData	components/playlist/selector.cpp	/^PLSelItem * putPLData( PLSelItem* item, playlist_item_t* plItem )$/;"	f
putSDData	components/playlist/selector.cpp	/^PLSelItem * putSDData( PLSelItem* item, const char* name, const char* longname )$/;"	f
puzzleBlackSlotCheck	ui/video_effects.h	/^    QCheckBox *puzzleBlackSlotCheck;$/;"	m	class:Ui_ExtVideoWidget
puzzleColsSpin	ui/video_effects.h	/^    QSpinBox *puzzleColsSpin;$/;"	m	class:Ui_ExtVideoWidget
puzzleEnable	ui/video_effects.h	/^    QGroupBox *puzzleEnable;$/;"	m	class:Ui_ExtVideoWidget
puzzleRowsSpin	ui/video_effects.h	/^    QSpinBox *puzzleRowsSpin;$/;"	m	class:Ui_ExtVideoWidget
pvrBitr	components/open_panels.hpp	/^    QSpinBox  *pvrFreq, *pvrBitr;$/;"	m	class:CaptureOpenPanel
pvrDevice	components/open_panels.hpp	/^    QLineEdit *pvrDevice, *pvrRadioDevice;$/;"	m	class:CaptureOpenPanel
pvrFreq	components/open_panels.hpp	/^    QSpinBox  *pvrFreq, *pvrBitr;$/;"	m	class:CaptureOpenPanel
pvrNormBox	components/open_panels.hpp	/^    QComboBox *v4l2StdBox, *pvrNormBox;$/;"	m	class:CaptureOpenPanel
pvrRadioDevice	components/open_panels.hpp	/^    QLineEdit *pvrDevice, *pvrRadioDevice;$/;"	m	class:CaptureOpenPanel
qCleanupResources_vlc	resources.cpp	/^int QT_MANGLE_NAMESPACE(qCleanupResources_vlc)()$/;"	f
qInitResources_vlc	resources.cpp	/^int QT_MANGLE_NAMESPACE(qInitResources_vlc)()$/;"	f
qfu	qt4.hpp	89;"	d
qitem	components/playlist/selector.hpp	/^    QTreeWidgetItem*     qitem;$/;"	m	class:PLSelItem
qs_filter	components/simple_preferences.hpp	/^    QStringList qs_filter;$/;"	m	class:SPrefsPanel
qt	util/customwidgets.cpp	/^    int      qt;$/;"	m	struct:__anon3	file:
qt4	ui/sprefs_interface.h	/^    QRadioButton *qt4;$/;"	m	class:Ui_SPrefsInterface
qtEventToVLCKey	util/customwidgets.cpp	/^int qtEventToVLCKey( QKeyEvent *e )$/;"	f
qtKeyModifiersToVLC	util/customwidgets.cpp	/^int qtKeyModifiersToVLC( QInputEvent* e )$/;"	f
qtRB	components/simple_preferences.hpp	/^enum { skinRB, qtRB, styleCB };$/;"	e	enum:__anon23
qtWheelEventToVLCKey	util/customwidgets.cpp	/^int qtWheelEventToVLCKey( QWheelEvent *e )$/;"	f
qt_meta_data_AboutDialog	dialogs/help.moc.cpp	/^static const uint qt_meta_data_AboutDialog[] = {$/;"	v	file:
qt_meta_data_AbstractController	components/controller.moc.cpp	/^static const uint qt_meta_data_AbstractController[] = {$/;"	v	file:
qt_meta_data_ActionsManager	actions_manager.moc.cpp	/^static const uint qt_meta_data_ActionsManager[] = {$/;"	v	file:
qt_meta_data_AdvControlsWidget	components/controller.moc.cpp	/^static const uint qt_meta_data_AdvControlsWidget[] = {$/;"	v	file:
qt_meta_data_AdvPrefsPanel	components/complete_preferences.moc.cpp	/^static const uint qt_meta_data_AdvPrefsPanel[] = {$/;"	v	file:
qt_meta_data_AnimatedIcon	util/customwidgets.moc.cpp	/^static const uint qt_meta_data_AnimatedIcon[] = {$/;"	v	file:
qt_meta_data_AspectRatioComboBox	components/controller_widget.moc.cpp	/^static const uint qt_meta_data_AspectRatioComboBox[] = {$/;"	v	file:
qt_meta_data_AtoB_Button	components/controller_widget.moc.cpp	/^static const uint qt_meta_data_AtoB_Button[] = {$/;"	v	file:
qt_meta_data_BackgroundWidget	components/interface_widgets.moc.cpp	/^static const uint qt_meta_data_BackgroundWidget[] = {$/;"	v	file:
qt_meta_data_BookmarksDialog	dialogs/bookmarks.moc.cpp	/^static const uint qt_meta_data_BookmarksDialog[] = {$/;"	v	file:
qt_meta_data_BrowseButton	util/buttons/BrowseButton.moc.cpp	/^static const uint qt_meta_data_BrowseButton[] = {$/;"	v	file:
qt_meta_data_CaptureOpenPanel	components/open_panels.moc.cpp	/^static const uint qt_meta_data_CaptureOpenPanel[] = {$/;"	v	file:
qt_meta_data_ClickLineEdit	util/searchlineedit.moc.cpp	/^static const uint qt_meta_data_ClickLineEdit[] = {$/;"	v	file:
qt_meta_data_ColorConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_ColorConfigControl[] = {$/;"	v	file:
qt_meta_data_Compressor	components/extended_panels.moc.cpp	/^static const uint qt_meta_data_Compressor[] = {$/;"	v	file:
qt_meta_data_ConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_ConfigControl[] = {$/;"	v	file:
qt_meta_data_ControlsWidget	components/controller.moc.cpp	/^static const uint qt_meta_data_ControlsWidget[] = {$/;"	v	file:
qt_meta_data_ConvertDialog	dialogs/convert.moc.cpp	/^static const uint qt_meta_data_ConvertDialog[] = {$/;"	v	file:
qt_meta_data_CoverArtLabel	components/interface_widgets.moc.cpp	/^static const uint qt_meta_data_CoverArtLabel[] = {$/;"	v	file:
qt_meta_data_DeckButtonsLayout	util/buttons/DeckButtonsLayout.moc.cpp	/^static const uint qt_meta_data_DeckButtonsLayout[] = {$/;"	v	file:
qt_meta_data_DialogHandler	dialogs/external.moc.cpp	/^static const uint qt_meta_data_DialogHandler[] = {$/;"	v	file:
qt_meta_data_DialogsProvider	dialogs_provider.moc.cpp	/^static const uint qt_meta_data_DialogsProvider[] = {$/;"	v	file:
qt_meta_data_DirectoryConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_DirectoryConfigControl[] = {$/;"	v	file:
qt_meta_data_DiscOpenPanel	components/open_panels.moc.cpp	/^static const uint qt_meta_data_DiscOpenPanel[] = {$/;"	v	file:
qt_meta_data_DroppingController	dialogs/toolbar.moc.cpp	/^static const uint qt_meta_data_DroppingController[] = {$/;"	v	file:
qt_meta_data_EPGChannels	components/epg/EPGChannels.moc.cpp	/^static const uint qt_meta_data_EPGChannels[] = {$/;"	v	file:
qt_meta_data_EPGGraphicsScene	components/epg/EPGView.moc.cpp	/^static const uint qt_meta_data_EPGGraphicsScene[] = {$/;"	v	file:
qt_meta_data_EPGRuler	components/epg/EPGRuler.moc.cpp	/^static const uint qt_meta_data_EPGRuler[] = {$/;"	v	file:
qt_meta_data_EPGView	components/epg/EPGView.moc.cpp	/^static const uint qt_meta_data_EPGView[] = {$/;"	v	file:
qt_meta_data_EPGWidget	components/epg/EPGWidget.moc.cpp	/^static const uint qt_meta_data_EPGWidget[] = {$/;"	v	file:
qt_meta_data_EpgDialog	dialogs/epg.moc.cpp	/^static const uint qt_meta_data_EpgDialog[] = {$/;"	v	file:
qt_meta_data_Equalizer	components/extended_panels.moc.cpp	/^static const uint qt_meta_data_Equalizer[] = {$/;"	v	file:
qt_meta_data_ErrorsDialog	dialogs/errors.moc.cpp	/^static const uint qt_meta_data_ErrorsDialog[] = {$/;"	v	file:
qt_meta_data_ExtV4l2	components/extended_panels.moc.cpp	/^static const uint qt_meta_data_ExtV4l2[] = {$/;"	v	file:
qt_meta_data_ExtVideo	components/extended_panels.moc.cpp	/^static const uint qt_meta_data_ExtVideo[] = {$/;"	v	file:
qt_meta_data_ExtendedDialog	dialogs/extended.moc.cpp	/^static const uint qt_meta_data_ExtendedDialog[] = {$/;"	v	file:
qt_meta_data_ExtensionDialog	dialogs/extensions.moc.cpp	/^static const uint qt_meta_data_ExtensionDialog[] = {$/;"	v	file:
qt_meta_data_ExtensionListModel	dialogs/plugins.moc.cpp	/^static const uint qt_meta_data_ExtensionListModel[] = {$/;"	v	file:
qt_meta_data_ExtensionTab	dialogs/plugins.moc.cpp	/^static const uint qt_meta_data_ExtensionTab[] = {$/;"	v	file:
qt_meta_data_ExtensionsDialogProvider	dialogs/extensions.moc.cpp	/^static const uint qt_meta_data_ExtensionsDialogProvider[] = {$/;"	v	file:
qt_meta_data_ExtensionsManager	extensions_manager.moc.cpp	/^static const uint qt_meta_data_ExtensionsManager[] = {$/;"	v	file:
qt_meta_data_ExtraMetaPanel	components/info_panels.moc.cpp	/^static const uint qt_meta_data_ExtraMetaPanel[] = {$/;"	v	file:
qt_meta_data_FileConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_FileConfigControl[] = {$/;"	v	file:
qt_meta_data_FileDestBox	components/sout/sout_widgets.moc.cpp	/^static const uint qt_meta_data_FileDestBox[] = {$/;"	v	file:
qt_meta_data_FileOpenBox	components/open_panels.moc.cpp	/^static const uint qt_meta_data_FileOpenBox[] = {$/;"	v	file:
qt_meta_data_FileOpenPanel	components/open_panels.moc.cpp	/^static const uint qt_meta_data_FileOpenPanel[] = {$/;"	v	file:
qt_meta_data_FirstRun	dialogs/firstrun.moc.cpp	/^static const uint qt_meta_data_FirstRun[] = {$/;"	v	file:
qt_meta_data_FloatConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_FloatConfigControl[] = {$/;"	v	file:
qt_meta_data_FloatRangeConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_FloatRangeConfigControl[] = {$/;"	v	file:
qt_meta_data_FontConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_FontConfigControl[] = {$/;"	v	file:
qt_meta_data_FullscreenControllerWidget	components/controller.moc.cpp	/^static const uint qt_meta_data_FullscreenControllerWidget[] = {$/;"	v	file:
qt_meta_data_GotoTimeDialog	dialogs/gototime.moc.cpp	/^static const uint qt_meta_data_GotoTimeDialog[] = {$/;"	v	file:
qt_meta_data_HTTPDestBox	components/sout/sout_widgets.moc.cpp	/^static const uint qt_meta_data_HTTPDestBox[] = {$/;"	v	file:
qt_meta_data_HelpDialog	dialogs/help.moc.cpp	/^static const uint qt_meta_data_HelpDialog[] = {$/;"	v	file:
qt_meta_data_ICEDestBox	components/sout/sout_widgets.moc.cpp	/^static const uint qt_meta_data_ICEDestBox[] = {$/;"	v	file:
qt_meta_data_InfoPanel	components/info_panels.moc.cpp	/^static const uint qt_meta_data_InfoPanel[] = {$/;"	v	file:
qt_meta_data_InputControlsWidget	components/controller.moc.cpp	/^static const uint qt_meta_data_InputControlsWidget[] = {$/;"	v	file:
qt_meta_data_InputManager	input_manager.moc.cpp	/^static const uint qt_meta_data_InputManager[] = {$/;"	v	file:
qt_meta_data_InputStatsPanel	components/info_panels.moc.cpp	/^static const uint qt_meta_data_InputStatsPanel[] = {$/;"	v	file:
qt_meta_data_IntegerConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_IntegerConfigControl[] = {$/;"	v	file:
qt_meta_data_IntegerListConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_IntegerListConfigControl[] = {$/;"	v	file:
qt_meta_data_InterfacePreviewWidget	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_InterfacePreviewWidget[] = {$/;"	v	file:
qt_meta_data_KeySelectorControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_KeySelectorControl[] = {$/;"	v	file:
qt_meta_data_LocationBar	components/playlist/playlist.moc.cpp	/^static const uint qt_meta_data_LocationBar[] = {$/;"	v	file:
qt_meta_data_LoopButton	components/controller_widget.moc.cpp	/^static const uint qt_meta_data_LoopButton[] = {$/;"	v	file:
qt_meta_data_MMSHDestBox	components/sout/sout_widgets.moc.cpp	/^static const uint qt_meta_data_MMSHDestBox[] = {$/;"	v	file:
qt_meta_data_MainInputManager	input_manager.moc.cpp	/^static const uint qt_meta_data_MainInputManager[] = {$/;"	v	file:
qt_meta_data_MainInterface	main_interface.moc.cpp	/^static const uint qt_meta_data_MainInterface[] = {$/;"	v	file:
qt_meta_data_MediaInfoDialog	dialogs/mediainfo.moc.cpp	/^static const uint qt_meta_data_MediaInfoDialog[] = {$/;"	v	file:
qt_meta_data_MenuFunc	menus.moc.cpp	/^static const uint qt_meta_data_MenuFunc[] = {$/;"	v	file:
qt_meta_data_MenuItemData	menus.moc.cpp	/^static const uint qt_meta_data_MenuItemData[] = {$/;"	v	file:
qt_meta_data_MessagesDialog	dialogs/messages.moc.cpp	/^static const uint qt_meta_data_MessagesDialog[] = {$/;"	v	file:
qt_meta_data_MetaPanel	components/info_panels.moc.cpp	/^static const uint qt_meta_data_MetaPanel[] = {$/;"	v	file:
qt_meta_data_ModuleListConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_ModuleListConfigControl[] = {$/;"	v	file:
qt_meta_data_NetOpenPanel	components/open_panels.moc.cpp	/^static const uint qt_meta_data_NetOpenPanel[] = {$/;"	v	file:
qt_meta_data_OpenDialog	dialogs/open.moc.cpp	/^static const uint qt_meta_data_OpenDialog[] = {$/;"	v	file:
qt_meta_data_OpenPanel	components/open_panels.moc.cpp	/^static const uint qt_meta_data_OpenPanel[] = {$/;"	v	file:
qt_meta_data_OpenUrlDialog	dialogs/openurl.moc.cpp	/^static const uint qt_meta_data_OpenUrlDialog[] = {$/;"	v	file:
qt_meta_data_PLModel	components/playlist/playlist_model.moc.cpp	/^static const uint qt_meta_data_PLModel[] = {$/;"	v	file:
qt_meta_data_PLSelItem	components/playlist/selector.moc.cpp	/^static const uint qt_meta_data_PLSelItem[] = {$/;"	v	file:
qt_meta_data_PLSelector	components/playlist/selector.moc.cpp	/^static const uint qt_meta_data_PLSelector[] = {$/;"	v	file:
qt_meta_data_PicFlowView	components/playlist/views.moc.cpp	/^static const uint qt_meta_data_PicFlowView[] = {$/;"	v	file:
qt_meta_data_PictureFlow	util/pictureflow.moc.cpp	/^static const uint qt_meta_data_PictureFlow[] = {$/;"	v	file:
qt_meta_data_PlIconView	components/playlist/views.moc.cpp	/^static const uint qt_meta_data_PlIconView[] = {$/;"	v	file:
qt_meta_data_PlIconViewItemDelegate	components/playlist/views.moc.cpp	/^static const uint qt_meta_data_PlIconViewItemDelegate[] = {$/;"	v	file:
qt_meta_data_PlListView	components/playlist/views.moc.cpp	/^static const uint qt_meta_data_PlListView[] = {$/;"	v	file:
qt_meta_data_PlListViewItemDelegate	components/playlist/views.moc.cpp	/^static const uint qt_meta_data_PlListViewItemDelegate[] = {$/;"	v	file:
qt_meta_data_PlMimeData	components/playlist/playlist_model.moc.cpp	/^static const uint qt_meta_data_PlMimeData[] = {$/;"	v	file:
qt_meta_data_PlTreeView	components/playlist/views.moc.cpp	/^static const uint qt_meta_data_PlTreeView[] = {$/;"	v	file:
qt_meta_data_PlayButton	components/controller_widget.moc.cpp	/^static const uint qt_meta_data_PlayButton[] = {$/;"	v	file:
qt_meta_data_PlaylistDialog	dialogs/playlist.moc.cpp	/^static const uint qt_meta_data_PlaylistDialog[] = {$/;"	v	file:
qt_meta_data_PlaylistWidget	components/playlist/playlist.moc.cpp	/^static const uint qt_meta_data_PlaylistWidget[] = {$/;"	v	file:
qt_meta_data_PluginDialog	dialogs/plugins.moc.cpp	/^static const uint qt_meta_data_PluginDialog[] = {$/;"	v	file:
qt_meta_data_PluginTab	dialogs/plugins.moc.cpp	/^static const uint qt_meta_data_PluginTab[] = {$/;"	v	file:
qt_meta_data_PodcastConfigDialog	dialogs/podcast_configuration.moc.cpp	/^static const uint qt_meta_data_PodcastConfigDialog[] = {$/;"	v	file:
qt_meta_data_PrefsDialog	dialogs/preferences.moc.cpp	/^static const uint qt_meta_data_PrefsDialog[] = {$/;"	v	file:
qt_meta_data_PrefsTree	components/complete_preferences.moc.cpp	/^static const uint qt_meta_data_PrefsTree[] = {$/;"	v	file:
qt_meta_data_QFramelessButton	util/customwidgets.moc.cpp	/^static const uint qt_meta_data_QFramelessButton[] = {$/;"	v	file:
qt_meta_data_QMenuView	util/qmenuview.moc.cpp	/^static const uint qt_meta_data_QMenuView[] = {$/;"	v	file:
qt_meta_data_QToolButtonExt	util/customwidgets.moc.cpp	/^static const uint qt_meta_data_QToolButtonExt[] = {$/;"	v	file:
qt_meta_data_QVLCApp	util/qvlcapp.moc.cpp	/^static const uint qt_meta_data_QVLCApp[] = {$/;"	v	file:
qt_meta_data_QVLCDebugLevelSpinBox	util/customwidgets.moc.cpp	/^static const uint qt_meta_data_QVLCDebugLevelSpinBox[] = {$/;"	v	file:
qt_meta_data_QVLCInteger	variables.moc.cpp	/^static const uint qt_meta_data_QVLCInteger[] = {$/;"	v	file:
qt_meta_data_QVLCPointer	variables.moc.cpp	/^static const uint qt_meta_data_QVLCPointer[] = {$/;"	v	file:
qt_meta_data_QVLCProgressDialog	dialogs/external.moc.cpp	/^static const uint qt_meta_data_QVLCProgressDialog[] = {$/;"	v	file:
qt_meta_data_QVLCVariable	variables.moc.cpp	/^static const uint qt_meta_data_QVLCVariable[] = {$/;"	v	file:
qt_meta_data_RTPDestBox	components/sout/sout_widgets.moc.cpp	/^static const uint qt_meta_data_RTPDestBox[] = {$/;"	v	file:
qt_meta_data_RTSPDestBox	components/sout/sout_widgets.moc.cpp	/^static const uint qt_meta_data_RTSPDestBox[] = {$/;"	v	file:
qt_meta_data_RecentsMRL	recents.moc.cpp	/^static const uint qt_meta_data_RecentsMRL[] = {$/;"	v	file:
qt_meta_data_RoundButton	util/buttons/RoundButton.moc.cpp	/^static const uint qt_meta_data_RoundButton[] = {$/;"	v	file:
qt_meta_data_SPrefsCatList	components/simple_preferences.moc.cpp	/^static const uint qt_meta_data_SPrefsCatList[] = {$/;"	v	file:
qt_meta_data_SPrefsPanel	components/simple_preferences.moc.cpp	/^static const uint qt_meta_data_SPrefsPanel[] = {$/;"	v	file:
qt_meta_data_SearchLineEdit	util/searchlineedit.moc.cpp	/^static const uint qt_meta_data_SearchLineEdit[] = {$/;"	v	file:
qt_meta_data_SeekPoints	adapters/seekpoints.moc.cpp	/^static const uint qt_meta_data_SeekPoints[] = {$/;"	v	file:
qt_meta_data_SeekSlider	util/input_slider.moc.cpp	/^static const uint qt_meta_data_SeekSlider[] = {$/;"	v	file:
qt_meta_data_SoundSlider	util/input_slider.moc.cpp	/^static const uint qt_meta_data_SoundSlider[] = {$/;"	v	file:
qt_meta_data_SoundWidget	components/controller_widget.moc.cpp	/^static const uint qt_meta_data_SoundWidget[] = {$/;"	v	file:
qt_meta_data_SoutDialog	dialogs/sout.moc.cpp	/^static const uint qt_meta_data_SoutDialog[] = {$/;"	v	file:
qt_meta_data_Spatializer	components/extended_panels.moc.cpp	/^static const uint qt_meta_data_Spatializer[] = {$/;"	v	file:
qt_meta_data_SpeedControlWidget	components/interface_widgets.moc.cpp	/^static const uint qt_meta_data_SpeedControlWidget[] = {$/;"	v	file:
qt_meta_data_SpeedLabel	components/interface_widgets.moc.cpp	/^static const uint qt_meta_data_SpeedLabel[] = {$/;"	v	file:
qt_meta_data_SpinningIcon	util/customwidgets.moc.cpp	/^static const uint qt_meta_data_SpinningIcon[] = {$/;"	v	file:
qt_meta_data_StandardPLPanel	components/playlist/standardpanel.moc.cpp	/^static const uint qt_meta_data_StandardPLPanel[] = {$/;"	v	file:
qt_meta_data_StringConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_StringConfigControl[] = {$/;"	v	file:
qt_meta_data_StringListConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_StringListConfigControl[] = {$/;"	v	file:
qt_meta_data_SyncControls	components/extended_panels.moc.cpp	/^static const uint qt_meta_data_SyncControls[] = {$/;"	v	file:
qt_meta_data_SyncWidget	components/extended_panels.moc.cpp	/^static const uint qt_meta_data_SyncWidget[] = {$/;"	v	file:
qt_meta_data_TimeLabel	components/interface_widgets.moc.cpp	/^static const uint qt_meta_data_TimeLabel[] = {$/;"	v	file:
qt_meta_data_TimeTooltip	util/timetooltip.moc.cpp	/^static const uint qt_meta_data_TimeTooltip[] = {$/;"	v	file:
qt_meta_data_ToolbarEditDialog	dialogs/toolbar.moc.cpp	/^static const uint qt_meta_data_ToolbarEditDialog[] = {$/;"	v	file:
qt_meta_data_UDPDestBox	components/sout/sout_widgets.moc.cpp	/^static const uint qt_meta_data_UDPDestBox[] = {$/;"	v	file:
qt_meta_data_UrlValidator	components/open_panels.moc.cpp	/^static const uint qt_meta_data_UrlValidator[] = {$/;"	v	file:
qt_meta_data_VFloatConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_VFloatConfigControl[] = {$/;"	v	file:
qt_meta_data_VIntConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_VIntConfigControl[] = {$/;"	v	file:
qt_meta_data_VLCMenuBar	menus.moc.cpp	/^static const uint qt_meta_data_VLCMenuBar[] = {$/;"	v	file:
qt_meta_data_VLCModel	components/playlist/vlc_model.moc.cpp	/^static const uint qt_meta_data_VLCModel[] = {$/;"	v	file:
qt_meta_data_VLCProfileEditor	components/sout/profile_selector.moc.cpp	/^static const uint qt_meta_data_VLCProfileEditor[] = {$/;"	v	file:
qt_meta_data_VLCProfileSelector	components/sout/profile_selector.moc.cpp	/^static const uint qt_meta_data_VLCProfileSelector[] = {$/;"	v	file:
qt_meta_data_VStringConfigControl	components/preferences_widgets.moc.cpp	/^static const uint qt_meta_data_VStringConfigControl[] = {$/;"	v	file:
qt_meta_data_VideoWidget	components/interface_widgets.moc.cpp	/^static const uint qt_meta_data_VideoWidget[] = {$/;"	v	file:
qt_meta_data_VirtualDestBox	components/sout/sout_widgets.moc.cpp	/^static const uint qt_meta_data_VirtualDestBox[] = {$/;"	v	file:
qt_meta_data_WidgetListing	dialogs/toolbar.moc.cpp	/^static const uint qt_meta_data_WidgetListing[] = {$/;"	v	file:
qt_meta_data_WidgetMapper	dialogs/extensions.moc.cpp	/^static const uint qt_meta_data_WidgetMapper[] = {$/;"	v	file:
qt_meta_stringdata_AboutDialog	dialogs/help.moc.cpp	/^static const char qt_meta_stringdata_AboutDialog[] = {$/;"	v	file:
qt_meta_stringdata_AbstractController	components/controller.moc.cpp	/^static const char qt_meta_stringdata_AbstractController[] = {$/;"	v	file:
qt_meta_stringdata_ActionsManager	actions_manager.moc.cpp	/^static const char qt_meta_stringdata_ActionsManager[] = {$/;"	v	file:
qt_meta_stringdata_AdvControlsWidget	components/controller.moc.cpp	/^static const char qt_meta_stringdata_AdvControlsWidget[] = {$/;"	v	file:
qt_meta_stringdata_AdvPrefsPanel	components/complete_preferences.moc.cpp	/^static const char qt_meta_stringdata_AdvPrefsPanel[] = {$/;"	v	file:
qt_meta_stringdata_AnimatedIcon	util/customwidgets.moc.cpp	/^static const char qt_meta_stringdata_AnimatedIcon[] = {$/;"	v	file:
qt_meta_stringdata_AspectRatioComboBox	components/controller_widget.moc.cpp	/^static const char qt_meta_stringdata_AspectRatioComboBox[] = {$/;"	v	file:
qt_meta_stringdata_AtoB_Button	components/controller_widget.moc.cpp	/^static const char qt_meta_stringdata_AtoB_Button[] = {$/;"	v	file:
qt_meta_stringdata_BackgroundWidget	components/interface_widgets.moc.cpp	/^static const char qt_meta_stringdata_BackgroundWidget[] = {$/;"	v	file:
qt_meta_stringdata_BookmarksDialog	dialogs/bookmarks.moc.cpp	/^static const char qt_meta_stringdata_BookmarksDialog[] = {$/;"	v	file:
qt_meta_stringdata_BrowseButton	util/buttons/BrowseButton.moc.cpp	/^static const char qt_meta_stringdata_BrowseButton[] = {$/;"	v	file:
qt_meta_stringdata_CaptureOpenPanel	components/open_panels.moc.cpp	/^static const char qt_meta_stringdata_CaptureOpenPanel[] = {$/;"	v	file:
qt_meta_stringdata_ClickLineEdit	util/searchlineedit.moc.cpp	/^static const char qt_meta_stringdata_ClickLineEdit[] = {$/;"	v	file:
qt_meta_stringdata_ColorConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_ColorConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_Compressor	components/extended_panels.moc.cpp	/^static const char qt_meta_stringdata_Compressor[] = {$/;"	v	file:
qt_meta_stringdata_ConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_ConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_ControlsWidget	components/controller.moc.cpp	/^static const char qt_meta_stringdata_ControlsWidget[] = {$/;"	v	file:
qt_meta_stringdata_ConvertDialog	dialogs/convert.moc.cpp	/^static const char qt_meta_stringdata_ConvertDialog[] = {$/;"	v	file:
qt_meta_stringdata_CoverArtLabel	components/interface_widgets.moc.cpp	/^static const char qt_meta_stringdata_CoverArtLabel[] = {$/;"	v	file:
qt_meta_stringdata_DeckButtonsLayout	util/buttons/DeckButtonsLayout.moc.cpp	/^static const char qt_meta_stringdata_DeckButtonsLayout[] = {$/;"	v	file:
qt_meta_stringdata_DialogHandler	dialogs/external.moc.cpp	/^static const char qt_meta_stringdata_DialogHandler[] = {$/;"	v	file:
qt_meta_stringdata_DialogsProvider	dialogs_provider.moc.cpp	/^static const char qt_meta_stringdata_DialogsProvider[] = {$/;"	v	file:
qt_meta_stringdata_DirectoryConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_DirectoryConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_DiscOpenPanel	components/open_panels.moc.cpp	/^static const char qt_meta_stringdata_DiscOpenPanel[] = {$/;"	v	file:
qt_meta_stringdata_DroppingController	dialogs/toolbar.moc.cpp	/^static const char qt_meta_stringdata_DroppingController[] = {$/;"	v	file:
qt_meta_stringdata_EPGChannels	components/epg/EPGChannels.moc.cpp	/^static const char qt_meta_stringdata_EPGChannels[] = {$/;"	v	file:
qt_meta_stringdata_EPGGraphicsScene	components/epg/EPGView.moc.cpp	/^static const char qt_meta_stringdata_EPGGraphicsScene[] = {$/;"	v	file:
qt_meta_stringdata_EPGRuler	components/epg/EPGRuler.moc.cpp	/^static const char qt_meta_stringdata_EPGRuler[] = {$/;"	v	file:
qt_meta_stringdata_EPGView	components/epg/EPGView.moc.cpp	/^static const char qt_meta_stringdata_EPGView[] = {$/;"	v	file:
qt_meta_stringdata_EPGWidget	components/epg/EPGWidget.moc.cpp	/^static const char qt_meta_stringdata_EPGWidget[] = {$/;"	v	file:
qt_meta_stringdata_EpgDialog	dialogs/epg.moc.cpp	/^static const char qt_meta_stringdata_EpgDialog[] = {$/;"	v	file:
qt_meta_stringdata_Equalizer	components/extended_panels.moc.cpp	/^static const char qt_meta_stringdata_Equalizer[] = {$/;"	v	file:
qt_meta_stringdata_ErrorsDialog	dialogs/errors.moc.cpp	/^static const char qt_meta_stringdata_ErrorsDialog[] = {$/;"	v	file:
qt_meta_stringdata_ExtV4l2	components/extended_panels.moc.cpp	/^static const char qt_meta_stringdata_ExtV4l2[] = {$/;"	v	file:
qt_meta_stringdata_ExtVideo	components/extended_panels.moc.cpp	/^static const char qt_meta_stringdata_ExtVideo[] = {$/;"	v	file:
qt_meta_stringdata_ExtendedDialog	dialogs/extended.moc.cpp	/^static const char qt_meta_stringdata_ExtendedDialog[] = {$/;"	v	file:
qt_meta_stringdata_ExtensionDialog	dialogs/extensions.moc.cpp	/^static const char qt_meta_stringdata_ExtensionDialog[] = {$/;"	v	file:
qt_meta_stringdata_ExtensionListModel	dialogs/plugins.moc.cpp	/^static const char qt_meta_stringdata_ExtensionListModel[] = {$/;"	v	file:
qt_meta_stringdata_ExtensionTab	dialogs/plugins.moc.cpp	/^static const char qt_meta_stringdata_ExtensionTab[] = {$/;"	v	file:
qt_meta_stringdata_ExtensionsDialogProvider	dialogs/extensions.moc.cpp	/^static const char qt_meta_stringdata_ExtensionsDialogProvider[] = {$/;"	v	file:
qt_meta_stringdata_ExtensionsManager	extensions_manager.moc.cpp	/^static const char qt_meta_stringdata_ExtensionsManager[] = {$/;"	v	file:
qt_meta_stringdata_ExtraMetaPanel	components/info_panels.moc.cpp	/^static const char qt_meta_stringdata_ExtraMetaPanel[] = {$/;"	v	file:
qt_meta_stringdata_FileConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_FileConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_FileDestBox	components/sout/sout_widgets.moc.cpp	/^static const char qt_meta_stringdata_FileDestBox[] = {$/;"	v	file:
qt_meta_stringdata_FileOpenBox	components/open_panels.moc.cpp	/^static const char qt_meta_stringdata_FileOpenBox[] = {$/;"	v	file:
qt_meta_stringdata_FileOpenPanel	components/open_panels.moc.cpp	/^static const char qt_meta_stringdata_FileOpenPanel[] = {$/;"	v	file:
qt_meta_stringdata_FirstRun	dialogs/firstrun.moc.cpp	/^static const char qt_meta_stringdata_FirstRun[] = {$/;"	v	file:
qt_meta_stringdata_FloatConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_FloatConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_FloatRangeConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_FloatRangeConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_FontConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_FontConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_FullscreenControllerWidget	components/controller.moc.cpp	/^static const char qt_meta_stringdata_FullscreenControllerWidget[] = {$/;"	v	file:
qt_meta_stringdata_GotoTimeDialog	dialogs/gototime.moc.cpp	/^static const char qt_meta_stringdata_GotoTimeDialog[] = {$/;"	v	file:
qt_meta_stringdata_HTTPDestBox	components/sout/sout_widgets.moc.cpp	/^static const char qt_meta_stringdata_HTTPDestBox[] = {$/;"	v	file:
qt_meta_stringdata_HelpDialog	dialogs/help.moc.cpp	/^static const char qt_meta_stringdata_HelpDialog[] = {$/;"	v	file:
qt_meta_stringdata_ICEDestBox	components/sout/sout_widgets.moc.cpp	/^static const char qt_meta_stringdata_ICEDestBox[] = {$/;"	v	file:
qt_meta_stringdata_InfoPanel	components/info_panels.moc.cpp	/^static const char qt_meta_stringdata_InfoPanel[] = {$/;"	v	file:
qt_meta_stringdata_InputControlsWidget	components/controller.moc.cpp	/^static const char qt_meta_stringdata_InputControlsWidget[] = {$/;"	v	file:
qt_meta_stringdata_InputManager	input_manager.moc.cpp	/^static const char qt_meta_stringdata_InputManager[] = {$/;"	v	file:
qt_meta_stringdata_InputStatsPanel	components/info_panels.moc.cpp	/^static const char qt_meta_stringdata_InputStatsPanel[] = {$/;"	v	file:
qt_meta_stringdata_IntegerConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_IntegerConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_IntegerListConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_IntegerListConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_InterfacePreviewWidget	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_InterfacePreviewWidget[] = {$/;"	v	file:
qt_meta_stringdata_KeySelectorControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_KeySelectorControl[] = {$/;"	v	file:
qt_meta_stringdata_LocationBar	components/playlist/playlist.moc.cpp	/^static const char qt_meta_stringdata_LocationBar[] = {$/;"	v	file:
qt_meta_stringdata_LoopButton	components/controller_widget.moc.cpp	/^static const char qt_meta_stringdata_LoopButton[] = {$/;"	v	file:
qt_meta_stringdata_MMSHDestBox	components/sout/sout_widgets.moc.cpp	/^static const char qt_meta_stringdata_MMSHDestBox[] = {$/;"	v	file:
qt_meta_stringdata_MainInputManager	input_manager.moc.cpp	/^static const char qt_meta_stringdata_MainInputManager[] = {$/;"	v	file:
qt_meta_stringdata_MainInterface	main_interface.moc.cpp	/^static const char qt_meta_stringdata_MainInterface[] = {$/;"	v	file:
qt_meta_stringdata_MediaInfoDialog	dialogs/mediainfo.moc.cpp	/^static const char qt_meta_stringdata_MediaInfoDialog[] = {$/;"	v	file:
qt_meta_stringdata_MenuFunc	menus.moc.cpp	/^static const char qt_meta_stringdata_MenuFunc[] = {$/;"	v	file:
qt_meta_stringdata_MenuItemData	menus.moc.cpp	/^static const char qt_meta_stringdata_MenuItemData[] = {$/;"	v	file:
qt_meta_stringdata_MessagesDialog	dialogs/messages.moc.cpp	/^static const char qt_meta_stringdata_MessagesDialog[] = {$/;"	v	file:
qt_meta_stringdata_MetaPanel	components/info_panels.moc.cpp	/^static const char qt_meta_stringdata_MetaPanel[] = {$/;"	v	file:
qt_meta_stringdata_ModuleListConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_ModuleListConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_NetOpenPanel	components/open_panels.moc.cpp	/^static const char qt_meta_stringdata_NetOpenPanel[] = {$/;"	v	file:
qt_meta_stringdata_OpenDialog	dialogs/open.moc.cpp	/^static const char qt_meta_stringdata_OpenDialog[] = {$/;"	v	file:
qt_meta_stringdata_OpenPanel	components/open_panels.moc.cpp	/^static const char qt_meta_stringdata_OpenPanel[] = {$/;"	v	file:
qt_meta_stringdata_OpenUrlDialog	dialogs/openurl.moc.cpp	/^static const char qt_meta_stringdata_OpenUrlDialog[] = {$/;"	v	file:
qt_meta_stringdata_PLModel	components/playlist/playlist_model.moc.cpp	/^static const char qt_meta_stringdata_PLModel[] = {$/;"	v	file:
qt_meta_stringdata_PLSelItem	components/playlist/selector.moc.cpp	/^static const char qt_meta_stringdata_PLSelItem[] = {$/;"	v	file:
qt_meta_stringdata_PLSelector	components/playlist/selector.moc.cpp	/^static const char qt_meta_stringdata_PLSelector[] = {$/;"	v	file:
qt_meta_stringdata_PicFlowView	components/playlist/views.moc.cpp	/^static const char qt_meta_stringdata_PicFlowView[] = {$/;"	v	file:
qt_meta_stringdata_PictureFlow	util/pictureflow.moc.cpp	/^static const char qt_meta_stringdata_PictureFlow[] = {$/;"	v	file:
qt_meta_stringdata_PlIconView	components/playlist/views.moc.cpp	/^static const char qt_meta_stringdata_PlIconView[] = {$/;"	v	file:
qt_meta_stringdata_PlIconViewItemDelegate	components/playlist/views.moc.cpp	/^static const char qt_meta_stringdata_PlIconViewItemDelegate[] = {$/;"	v	file:
qt_meta_stringdata_PlListView	components/playlist/views.moc.cpp	/^static const char qt_meta_stringdata_PlListView[] = {$/;"	v	file:
qt_meta_stringdata_PlListViewItemDelegate	components/playlist/views.moc.cpp	/^static const char qt_meta_stringdata_PlListViewItemDelegate[] = {$/;"	v	file:
qt_meta_stringdata_PlMimeData	components/playlist/playlist_model.moc.cpp	/^static const char qt_meta_stringdata_PlMimeData[] = {$/;"	v	file:
qt_meta_stringdata_PlTreeView	components/playlist/views.moc.cpp	/^static const char qt_meta_stringdata_PlTreeView[] = {$/;"	v	file:
qt_meta_stringdata_PlayButton	components/controller_widget.moc.cpp	/^static const char qt_meta_stringdata_PlayButton[] = {$/;"	v	file:
qt_meta_stringdata_PlaylistDialog	dialogs/playlist.moc.cpp	/^static const char qt_meta_stringdata_PlaylistDialog[] = {$/;"	v	file:
qt_meta_stringdata_PlaylistWidget	components/playlist/playlist.moc.cpp	/^static const char qt_meta_stringdata_PlaylistWidget[] = {$/;"	v	file:
qt_meta_stringdata_PluginDialog	dialogs/plugins.moc.cpp	/^static const char qt_meta_stringdata_PluginDialog[] = {$/;"	v	file:
qt_meta_stringdata_PluginTab	dialogs/plugins.moc.cpp	/^static const char qt_meta_stringdata_PluginTab[] = {$/;"	v	file:
qt_meta_stringdata_PodcastConfigDialog	dialogs/podcast_configuration.moc.cpp	/^static const char qt_meta_stringdata_PodcastConfigDialog[] = {$/;"	v	file:
qt_meta_stringdata_PrefsDialog	dialogs/preferences.moc.cpp	/^static const char qt_meta_stringdata_PrefsDialog[] = {$/;"	v	file:
qt_meta_stringdata_PrefsTree	components/complete_preferences.moc.cpp	/^static const char qt_meta_stringdata_PrefsTree[] = {$/;"	v	file:
qt_meta_stringdata_QFramelessButton	util/customwidgets.moc.cpp	/^static const char qt_meta_stringdata_QFramelessButton[] = {$/;"	v	file:
qt_meta_stringdata_QMenuView	util/qmenuview.moc.cpp	/^static const char qt_meta_stringdata_QMenuView[] = {$/;"	v	file:
qt_meta_stringdata_QToolButtonExt	util/customwidgets.moc.cpp	/^static const char qt_meta_stringdata_QToolButtonExt[] = {$/;"	v	file:
qt_meta_stringdata_QVLCApp	util/qvlcapp.moc.cpp	/^static const char qt_meta_stringdata_QVLCApp[] = {$/;"	v	file:
qt_meta_stringdata_QVLCDebugLevelSpinBox	util/customwidgets.moc.cpp	/^static const char qt_meta_stringdata_QVLCDebugLevelSpinBox[] = {$/;"	v	file:
qt_meta_stringdata_QVLCInteger	variables.moc.cpp	/^static const char qt_meta_stringdata_QVLCInteger[] = {$/;"	v	file:
qt_meta_stringdata_QVLCPointer	variables.moc.cpp	/^static const char qt_meta_stringdata_QVLCPointer[] = {$/;"	v	file:
qt_meta_stringdata_QVLCProgressDialog	dialogs/external.moc.cpp	/^static const char qt_meta_stringdata_QVLCProgressDialog[] = {$/;"	v	file:
qt_meta_stringdata_QVLCVariable	variables.moc.cpp	/^static const char qt_meta_stringdata_QVLCVariable[] = {$/;"	v	file:
qt_meta_stringdata_RTPDestBox	components/sout/sout_widgets.moc.cpp	/^static const char qt_meta_stringdata_RTPDestBox[] = {$/;"	v	file:
qt_meta_stringdata_RTSPDestBox	components/sout/sout_widgets.moc.cpp	/^static const char qt_meta_stringdata_RTSPDestBox[] = {$/;"	v	file:
qt_meta_stringdata_RecentsMRL	recents.moc.cpp	/^static const char qt_meta_stringdata_RecentsMRL[] = {$/;"	v	file:
qt_meta_stringdata_RoundButton	util/buttons/RoundButton.moc.cpp	/^static const char qt_meta_stringdata_RoundButton[] = {$/;"	v	file:
qt_meta_stringdata_SPrefsCatList	components/simple_preferences.moc.cpp	/^static const char qt_meta_stringdata_SPrefsCatList[] = {$/;"	v	file:
qt_meta_stringdata_SPrefsPanel	components/simple_preferences.moc.cpp	/^static const char qt_meta_stringdata_SPrefsPanel[] = {$/;"	v	file:
qt_meta_stringdata_SearchLineEdit	util/searchlineedit.moc.cpp	/^static const char qt_meta_stringdata_SearchLineEdit[] = {$/;"	v	file:
qt_meta_stringdata_SeekPoints	adapters/seekpoints.moc.cpp	/^static const char qt_meta_stringdata_SeekPoints[] = {$/;"	v	file:
qt_meta_stringdata_SeekSlider	util/input_slider.moc.cpp	/^static const char qt_meta_stringdata_SeekSlider[] = {$/;"	v	file:
qt_meta_stringdata_SoundSlider	util/input_slider.moc.cpp	/^static const char qt_meta_stringdata_SoundSlider[] = {$/;"	v	file:
qt_meta_stringdata_SoundWidget	components/controller_widget.moc.cpp	/^static const char qt_meta_stringdata_SoundWidget[] = {$/;"	v	file:
qt_meta_stringdata_SoutDialog	dialogs/sout.moc.cpp	/^static const char qt_meta_stringdata_SoutDialog[] = {$/;"	v	file:
qt_meta_stringdata_Spatializer	components/extended_panels.moc.cpp	/^static const char qt_meta_stringdata_Spatializer[] = {$/;"	v	file:
qt_meta_stringdata_SpeedControlWidget	components/interface_widgets.moc.cpp	/^static const char qt_meta_stringdata_SpeedControlWidget[] = {$/;"	v	file:
qt_meta_stringdata_SpeedLabel	components/interface_widgets.moc.cpp	/^static const char qt_meta_stringdata_SpeedLabel[] = {$/;"	v	file:
qt_meta_stringdata_SpinningIcon	util/customwidgets.moc.cpp	/^static const char qt_meta_stringdata_SpinningIcon[] = {$/;"	v	file:
qt_meta_stringdata_StandardPLPanel	components/playlist/standardpanel.moc.cpp	/^static const char qt_meta_stringdata_StandardPLPanel[] = {$/;"	v	file:
qt_meta_stringdata_StringConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_StringConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_StringListConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_StringListConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_SyncControls	components/extended_panels.moc.cpp	/^static const char qt_meta_stringdata_SyncControls[] = {$/;"	v	file:
qt_meta_stringdata_SyncWidget	components/extended_panels.moc.cpp	/^static const char qt_meta_stringdata_SyncWidget[] = {$/;"	v	file:
qt_meta_stringdata_TimeLabel	components/interface_widgets.moc.cpp	/^static const char qt_meta_stringdata_TimeLabel[] = {$/;"	v	file:
qt_meta_stringdata_TimeTooltip	util/timetooltip.moc.cpp	/^static const char qt_meta_stringdata_TimeTooltip[] = {$/;"	v	file:
qt_meta_stringdata_ToolbarEditDialog	dialogs/toolbar.moc.cpp	/^static const char qt_meta_stringdata_ToolbarEditDialog[] = {$/;"	v	file:
qt_meta_stringdata_UDPDestBox	components/sout/sout_widgets.moc.cpp	/^static const char qt_meta_stringdata_UDPDestBox[] = {$/;"	v	file:
qt_meta_stringdata_UrlValidator	components/open_panels.moc.cpp	/^static const char qt_meta_stringdata_UrlValidator[] = {$/;"	v	file:
qt_meta_stringdata_VFloatConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_VFloatConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_VIntConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_VIntConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_VLCMenuBar	menus.moc.cpp	/^static const char qt_meta_stringdata_VLCMenuBar[] = {$/;"	v	file:
qt_meta_stringdata_VLCModel	components/playlist/vlc_model.moc.cpp	/^static const char qt_meta_stringdata_VLCModel[] = {$/;"	v	file:
qt_meta_stringdata_VLCProfileEditor	components/sout/profile_selector.moc.cpp	/^static const char qt_meta_stringdata_VLCProfileEditor[] = {$/;"	v	file:
qt_meta_stringdata_VLCProfileSelector	components/sout/profile_selector.moc.cpp	/^static const char qt_meta_stringdata_VLCProfileSelector[] = {$/;"	v	file:
qt_meta_stringdata_VStringConfigControl	components/preferences_widgets.moc.cpp	/^static const char qt_meta_stringdata_VStringConfigControl[] = {$/;"	v	file:
qt_meta_stringdata_VideoWidget	components/interface_widgets.moc.cpp	/^static const char qt_meta_stringdata_VideoWidget[] = {$/;"	v	file:
qt_meta_stringdata_VirtualDestBox	components/sout/sout_widgets.moc.cpp	/^static const char qt_meta_stringdata_VirtualDestBox[] = {$/;"	v	file:
qt_meta_stringdata_WidgetListing	dialogs/toolbar.moc.cpp	/^static const char qt_meta_stringdata_WidgetListing[] = {$/;"	v	file:
qt_meta_stringdata_WidgetMapper	dialogs/extensions.moc.cpp	/^static const char qt_meta_stringdata_WidgetMapper[] = {$/;"	v	file:
qt_metacall	actions_manager.moc.cpp	/^int ActionsManager::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ActionsManager
qt_metacall	adapters/seekpoints.moc.cpp	/^int SeekPoints::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SeekPoints
qt_metacall	components/complete_preferences.moc.cpp	/^int AdvPrefsPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdvPrefsPanel
qt_metacall	components/complete_preferences.moc.cpp	/^int PrefsTree::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PrefsTree
qt_metacall	components/controller.moc.cpp	/^int AbstractController::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AbstractController
qt_metacall	components/controller.moc.cpp	/^int AdvControlsWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdvControlsWidget
qt_metacall	components/controller.moc.cpp	/^int ControlsWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ControlsWidget
qt_metacall	components/controller.moc.cpp	/^int FullscreenControllerWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FullscreenControllerWidget
qt_metacall	components/controller.moc.cpp	/^int InputControlsWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InputControlsWidget
qt_metacall	components/controller_widget.moc.cpp	/^int AspectRatioComboBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AspectRatioComboBox
qt_metacall	components/controller_widget.moc.cpp	/^int AtoB_Button::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AtoB_Button
qt_metacall	components/controller_widget.moc.cpp	/^int LoopButton::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LoopButton
qt_metacall	components/controller_widget.moc.cpp	/^int PlayButton::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlayButton
qt_metacall	components/controller_widget.moc.cpp	/^int SoundWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SoundWidget
qt_metacall	components/epg/EPGChannels.moc.cpp	/^int EPGChannels::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGChannels
qt_metacall	components/epg/EPGRuler.moc.cpp	/^int EPGRuler::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGRuler
qt_metacall	components/epg/EPGView.moc.cpp	/^int EPGGraphicsScene::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGGraphicsScene
qt_metacall	components/epg/EPGView.moc.cpp	/^int EPGView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGView
qt_metacall	components/epg/EPGWidget.moc.cpp	/^int EPGWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGWidget
qt_metacall	components/extended_panels.moc.cpp	/^int Compressor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Compressor
qt_metacall	components/extended_panels.moc.cpp	/^int Equalizer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Equalizer
qt_metacall	components/extended_panels.moc.cpp	/^int ExtV4l2::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtV4l2
qt_metacall	components/extended_panels.moc.cpp	/^int ExtVideo::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtVideo
qt_metacall	components/extended_panels.moc.cpp	/^int Spatializer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Spatializer
qt_metacall	components/extended_panels.moc.cpp	/^int SyncControls::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SyncControls
qt_metacall	components/extended_panels.moc.cpp	/^int SyncWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SyncWidget
qt_metacall	components/info_panels.moc.cpp	/^int ExtraMetaPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtraMetaPanel
qt_metacall	components/info_panels.moc.cpp	/^int InfoPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InfoPanel
qt_metacall	components/info_panels.moc.cpp	/^int InputStatsPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InputStatsPanel
qt_metacall	components/info_panels.moc.cpp	/^int MetaPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MetaPanel
qt_metacall	components/interface_widgets.moc.cpp	/^int BackgroundWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BackgroundWidget
qt_metacall	components/interface_widgets.moc.cpp	/^int CoverArtLabel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CoverArtLabel
qt_metacall	components/interface_widgets.moc.cpp	/^int SpeedControlWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SpeedControlWidget
qt_metacall	components/interface_widgets.moc.cpp	/^int SpeedLabel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SpeedLabel
qt_metacall	components/interface_widgets.moc.cpp	/^int TimeLabel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:TimeLabel
qt_metacall	components/interface_widgets.moc.cpp	/^int VideoWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VideoWidget
qt_metacall	components/open_panels.moc.cpp	/^int CaptureOpenPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CaptureOpenPanel
qt_metacall	components/open_panels.moc.cpp	/^int DiscOpenPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DiscOpenPanel
qt_metacall	components/open_panels.moc.cpp	/^int FileOpenBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileOpenBox
qt_metacall	components/open_panels.moc.cpp	/^int FileOpenPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileOpenPanel
qt_metacall	components/open_panels.moc.cpp	/^int NetOpenPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:NetOpenPanel
qt_metacall	components/open_panels.moc.cpp	/^int OpenPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:OpenPanel
qt_metacall	components/open_panels.moc.cpp	/^int UrlValidator::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UrlValidator
qt_metacall	components/playlist/playlist.moc.cpp	/^int LocationBar::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LocationBar
qt_metacall	components/playlist/playlist.moc.cpp	/^int PlaylistWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlaylistWidget
qt_metacall	components/playlist/playlist_model.moc.cpp	/^int PLModel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PLModel
qt_metacall	components/playlist/playlist_model.moc.cpp	/^int PlMimeData::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlMimeData
qt_metacall	components/playlist/selector.moc.cpp	/^int PLSelItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PLSelItem
qt_metacall	components/playlist/selector.moc.cpp	/^int PLSelector::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PLSelector
qt_metacall	components/playlist/standardpanel.moc.cpp	/^int StandardPLPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:StandardPLPanel
qt_metacall	components/playlist/views.moc.cpp	/^int PicFlowView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PicFlowView
qt_metacall	components/playlist/views.moc.cpp	/^int PlIconView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlIconView
qt_metacall	components/playlist/views.moc.cpp	/^int PlIconViewItemDelegate::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlIconViewItemDelegate
qt_metacall	components/playlist/views.moc.cpp	/^int PlListView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlListView
qt_metacall	components/playlist/views.moc.cpp	/^int PlListViewItemDelegate::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlListViewItemDelegate
qt_metacall	components/playlist/views.moc.cpp	/^int PlTreeView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlTreeView
qt_metacall	components/playlist/vlc_model.moc.cpp	/^int VLCModel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VLCModel
qt_metacall	components/preferences_widgets.moc.cpp	/^int ColorConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ColorConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int ConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int DirectoryConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DirectoryConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int FileConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int FloatConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FloatConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int FloatRangeConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FloatRangeConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int FontConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FontConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int IntegerConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:IntegerConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int IntegerListConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:IntegerListConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int InterfacePreviewWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InterfacePreviewWidget
qt_metacall	components/preferences_widgets.moc.cpp	/^int KeySelectorControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KeySelectorControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int ModuleListConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ModuleListConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int StringConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:StringConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int StringListConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:StringListConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int VFloatConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VFloatConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int VIntConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VIntConfigControl
qt_metacall	components/preferences_widgets.moc.cpp	/^int VStringConfigControl::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VStringConfigControl
qt_metacall	components/simple_preferences.moc.cpp	/^int SPrefsCatList::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SPrefsCatList
qt_metacall	components/simple_preferences.moc.cpp	/^int SPrefsPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SPrefsPanel
qt_metacall	components/sout/profile_selector.moc.cpp	/^int VLCProfileEditor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VLCProfileEditor
qt_metacall	components/sout/profile_selector.moc.cpp	/^int VLCProfileSelector::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VLCProfileSelector
qt_metacall	components/sout/sout_widgets.moc.cpp	/^int FileDestBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileDestBox
qt_metacall	components/sout/sout_widgets.moc.cpp	/^int HTTPDestBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:HTTPDestBox
qt_metacall	components/sout/sout_widgets.moc.cpp	/^int ICEDestBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ICEDestBox
qt_metacall	components/sout/sout_widgets.moc.cpp	/^int MMSHDestBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MMSHDestBox
qt_metacall	components/sout/sout_widgets.moc.cpp	/^int RTPDestBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RTPDestBox
qt_metacall	components/sout/sout_widgets.moc.cpp	/^int RTSPDestBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RTSPDestBox
qt_metacall	components/sout/sout_widgets.moc.cpp	/^int UDPDestBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UDPDestBox
qt_metacall	components/sout/sout_widgets.moc.cpp	/^int VirtualDestBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VirtualDestBox
qt_metacall	dialogs/bookmarks.moc.cpp	/^int BookmarksDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BookmarksDialog
qt_metacall	dialogs/convert.moc.cpp	/^int ConvertDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ConvertDialog
qt_metacall	dialogs/epg.moc.cpp	/^int EpgDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EpgDialog
qt_metacall	dialogs/errors.moc.cpp	/^int ErrorsDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ErrorsDialog
qt_metacall	dialogs/extended.moc.cpp	/^int ExtendedDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtendedDialog
qt_metacall	dialogs/extensions.moc.cpp	/^int ExtensionDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionDialog
qt_metacall	dialogs/extensions.moc.cpp	/^int ExtensionsDialogProvider::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionsDialogProvider
qt_metacall	dialogs/extensions.moc.cpp	/^int WidgetMapper::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetMapper
qt_metacall	dialogs/external.moc.cpp	/^int DialogHandler::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DialogHandler
qt_metacall	dialogs/external.moc.cpp	/^int QVLCProgressDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCProgressDialog
qt_metacall	dialogs/firstrun.moc.cpp	/^int FirstRun::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FirstRun
qt_metacall	dialogs/gototime.moc.cpp	/^int GotoTimeDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GotoTimeDialog
qt_metacall	dialogs/help.moc.cpp	/^int AboutDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AboutDialog
qt_metacall	dialogs/help.moc.cpp	/^int HelpDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:HelpDialog
qt_metacall	dialogs/mediainfo.moc.cpp	/^int MediaInfoDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MediaInfoDialog
qt_metacall	dialogs/messages.moc.cpp	/^int MessagesDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MessagesDialog
qt_metacall	dialogs/open.moc.cpp	/^int OpenDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:OpenDialog
qt_metacall	dialogs/openurl.moc.cpp	/^int OpenUrlDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:OpenUrlDialog
qt_metacall	dialogs/playlist.moc.cpp	/^int PlaylistDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlaylistDialog
qt_metacall	dialogs/plugins.moc.cpp	/^int ExtensionListModel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionListModel
qt_metacall	dialogs/plugins.moc.cpp	/^int ExtensionTab::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionTab
qt_metacall	dialogs/plugins.moc.cpp	/^int PluginDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PluginDialog
qt_metacall	dialogs/plugins.moc.cpp	/^int PluginTab::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PluginTab
qt_metacall	dialogs/podcast_configuration.moc.cpp	/^int PodcastConfigDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PodcastConfigDialog
qt_metacall	dialogs/preferences.moc.cpp	/^int PrefsDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PrefsDialog
qt_metacall	dialogs/sout.moc.cpp	/^int SoutDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SoutDialog
qt_metacall	dialogs/toolbar.moc.cpp	/^int DroppingController::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DroppingController
qt_metacall	dialogs/toolbar.moc.cpp	/^int ToolbarEditDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ToolbarEditDialog
qt_metacall	dialogs/toolbar.moc.cpp	/^int WidgetListing::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetListing
qt_metacall	dialogs_provider.moc.cpp	/^int DialogsProvider::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DialogsProvider
qt_metacall	extensions_manager.moc.cpp	/^int ExtensionsManager::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionsManager
qt_metacall	input_manager.moc.cpp	/^int InputManager::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InputManager
qt_metacall	input_manager.moc.cpp	/^int MainInputManager::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MainInputManager
qt_metacall	main_interface.moc.cpp	/^int MainInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MainInterface
qt_metacall	menus.moc.cpp	/^int MenuFunc::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MenuFunc
qt_metacall	menus.moc.cpp	/^int MenuItemData::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MenuItemData
qt_metacall	menus.moc.cpp	/^int VLCMenuBar::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VLCMenuBar
qt_metacall	recents.moc.cpp	/^int RecentsMRL::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RecentsMRL
qt_metacall	util/buttons/BrowseButton.moc.cpp	/^int BrowseButton::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BrowseButton
qt_metacall	util/buttons/DeckButtonsLayout.moc.cpp	/^int DeckButtonsLayout::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DeckButtonsLayout
qt_metacall	util/buttons/RoundButton.moc.cpp	/^int RoundButton::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RoundButton
qt_metacall	util/customwidgets.moc.cpp	/^int AnimatedIcon::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AnimatedIcon
qt_metacall	util/customwidgets.moc.cpp	/^int QFramelessButton::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QFramelessButton
qt_metacall	util/customwidgets.moc.cpp	/^int QToolButtonExt::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QToolButtonExt
qt_metacall	util/customwidgets.moc.cpp	/^int QVLCDebugLevelSpinBox::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCDebugLevelSpinBox
qt_metacall	util/customwidgets.moc.cpp	/^int SpinningIcon::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SpinningIcon
qt_metacall	util/input_slider.moc.cpp	/^int SeekSlider::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SeekSlider
qt_metacall	util/input_slider.moc.cpp	/^int SoundSlider::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SoundSlider
qt_metacall	util/pictureflow.moc.cpp	/^int PictureFlow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PictureFlow
qt_metacall	util/qmenuview.moc.cpp	/^int QMenuView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QMenuView
qt_metacall	util/qvlcapp.moc.cpp	/^int QVLCApp::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCApp
qt_metacall	util/searchlineedit.moc.cpp	/^int ClickLineEdit::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ClickLineEdit
qt_metacall	util/searchlineedit.moc.cpp	/^int SearchLineEdit::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SearchLineEdit
qt_metacall	util/timetooltip.moc.cpp	/^int TimeTooltip::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:TimeTooltip
qt_metacall	variables.moc.cpp	/^int QVLCInteger::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCInteger
qt_metacall	variables.moc.cpp	/^int QVLCPointer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCPointer
qt_metacall	variables.moc.cpp	/^int QVLCVariable::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCVariable
qt_metacast	actions_manager.moc.cpp	/^void *ActionsManager::qt_metacast(const char *_clname)$/;"	f	class:ActionsManager
qt_metacast	adapters/seekpoints.moc.cpp	/^void *SeekPoints::qt_metacast(const char *_clname)$/;"	f	class:SeekPoints
qt_metacast	components/complete_preferences.moc.cpp	/^void *AdvPrefsPanel::qt_metacast(const char *_clname)$/;"	f	class:AdvPrefsPanel
qt_metacast	components/complete_preferences.moc.cpp	/^void *PrefsTree::qt_metacast(const char *_clname)$/;"	f	class:PrefsTree
qt_metacast	components/controller.moc.cpp	/^void *AbstractController::qt_metacast(const char *_clname)$/;"	f	class:AbstractController
qt_metacast	components/controller.moc.cpp	/^void *AdvControlsWidget::qt_metacast(const char *_clname)$/;"	f	class:AdvControlsWidget
qt_metacast	components/controller.moc.cpp	/^void *ControlsWidget::qt_metacast(const char *_clname)$/;"	f	class:ControlsWidget
qt_metacast	components/controller.moc.cpp	/^void *FullscreenControllerWidget::qt_metacast(const char *_clname)$/;"	f	class:FullscreenControllerWidget
qt_metacast	components/controller.moc.cpp	/^void *InputControlsWidget::qt_metacast(const char *_clname)$/;"	f	class:InputControlsWidget
qt_metacast	components/controller_widget.moc.cpp	/^void *AspectRatioComboBox::qt_metacast(const char *_clname)$/;"	f	class:AspectRatioComboBox
qt_metacast	components/controller_widget.moc.cpp	/^void *AtoB_Button::qt_metacast(const char *_clname)$/;"	f	class:AtoB_Button
qt_metacast	components/controller_widget.moc.cpp	/^void *LoopButton::qt_metacast(const char *_clname)$/;"	f	class:LoopButton
qt_metacast	components/controller_widget.moc.cpp	/^void *PlayButton::qt_metacast(const char *_clname)$/;"	f	class:PlayButton
qt_metacast	components/controller_widget.moc.cpp	/^void *SoundWidget::qt_metacast(const char *_clname)$/;"	f	class:SoundWidget
qt_metacast	components/epg/EPGChannels.moc.cpp	/^void *EPGChannels::qt_metacast(const char *_clname)$/;"	f	class:EPGChannels
qt_metacast	components/epg/EPGRuler.moc.cpp	/^void *EPGRuler::qt_metacast(const char *_clname)$/;"	f	class:EPGRuler
qt_metacast	components/epg/EPGView.moc.cpp	/^void *EPGGraphicsScene::qt_metacast(const char *_clname)$/;"	f	class:EPGGraphicsScene
qt_metacast	components/epg/EPGView.moc.cpp	/^void *EPGView::qt_metacast(const char *_clname)$/;"	f	class:EPGView
qt_metacast	components/epg/EPGWidget.moc.cpp	/^void *EPGWidget::qt_metacast(const char *_clname)$/;"	f	class:EPGWidget
qt_metacast	components/extended_panels.moc.cpp	/^void *Compressor::qt_metacast(const char *_clname)$/;"	f	class:Compressor
qt_metacast	components/extended_panels.moc.cpp	/^void *Equalizer::qt_metacast(const char *_clname)$/;"	f	class:Equalizer
qt_metacast	components/extended_panels.moc.cpp	/^void *ExtV4l2::qt_metacast(const char *_clname)$/;"	f	class:ExtV4l2
qt_metacast	components/extended_panels.moc.cpp	/^void *ExtVideo::qt_metacast(const char *_clname)$/;"	f	class:ExtVideo
qt_metacast	components/extended_panels.moc.cpp	/^void *Spatializer::qt_metacast(const char *_clname)$/;"	f	class:Spatializer
qt_metacast	components/extended_panels.moc.cpp	/^void *SyncControls::qt_metacast(const char *_clname)$/;"	f	class:SyncControls
qt_metacast	components/extended_panels.moc.cpp	/^void *SyncWidget::qt_metacast(const char *_clname)$/;"	f	class:SyncWidget
qt_metacast	components/info_panels.moc.cpp	/^void *ExtraMetaPanel::qt_metacast(const char *_clname)$/;"	f	class:ExtraMetaPanel
qt_metacast	components/info_panels.moc.cpp	/^void *InfoPanel::qt_metacast(const char *_clname)$/;"	f	class:InfoPanel
qt_metacast	components/info_panels.moc.cpp	/^void *InputStatsPanel::qt_metacast(const char *_clname)$/;"	f	class:InputStatsPanel
qt_metacast	components/info_panels.moc.cpp	/^void *MetaPanel::qt_metacast(const char *_clname)$/;"	f	class:MetaPanel
qt_metacast	components/interface_widgets.moc.cpp	/^void *BackgroundWidget::qt_metacast(const char *_clname)$/;"	f	class:BackgroundWidget
qt_metacast	components/interface_widgets.moc.cpp	/^void *CoverArtLabel::qt_metacast(const char *_clname)$/;"	f	class:CoverArtLabel
qt_metacast	components/interface_widgets.moc.cpp	/^void *SpeedControlWidget::qt_metacast(const char *_clname)$/;"	f	class:SpeedControlWidget
qt_metacast	components/interface_widgets.moc.cpp	/^void *SpeedLabel::qt_metacast(const char *_clname)$/;"	f	class:SpeedLabel
qt_metacast	components/interface_widgets.moc.cpp	/^void *TimeLabel::qt_metacast(const char *_clname)$/;"	f	class:TimeLabel
qt_metacast	components/interface_widgets.moc.cpp	/^void *VideoWidget::qt_metacast(const char *_clname)$/;"	f	class:VideoWidget
qt_metacast	components/open_panels.moc.cpp	/^void *CaptureOpenPanel::qt_metacast(const char *_clname)$/;"	f	class:CaptureOpenPanel
qt_metacast	components/open_panels.moc.cpp	/^void *DiscOpenPanel::qt_metacast(const char *_clname)$/;"	f	class:DiscOpenPanel
qt_metacast	components/open_panels.moc.cpp	/^void *FileOpenBox::qt_metacast(const char *_clname)$/;"	f	class:FileOpenBox
qt_metacast	components/open_panels.moc.cpp	/^void *FileOpenPanel::qt_metacast(const char *_clname)$/;"	f	class:FileOpenPanel
qt_metacast	components/open_panels.moc.cpp	/^void *NetOpenPanel::qt_metacast(const char *_clname)$/;"	f	class:NetOpenPanel
qt_metacast	components/open_panels.moc.cpp	/^void *OpenPanel::qt_metacast(const char *_clname)$/;"	f	class:OpenPanel
qt_metacast	components/open_panels.moc.cpp	/^void *UrlValidator::qt_metacast(const char *_clname)$/;"	f	class:UrlValidator
qt_metacast	components/playlist/playlist.moc.cpp	/^void *LocationBar::qt_metacast(const char *_clname)$/;"	f	class:LocationBar
qt_metacast	components/playlist/playlist.moc.cpp	/^void *PlaylistWidget::qt_metacast(const char *_clname)$/;"	f	class:PlaylistWidget
qt_metacast	components/playlist/playlist_model.moc.cpp	/^void *PLModel::qt_metacast(const char *_clname)$/;"	f	class:PLModel
qt_metacast	components/playlist/playlist_model.moc.cpp	/^void *PlMimeData::qt_metacast(const char *_clname)$/;"	f	class:PlMimeData
qt_metacast	components/playlist/selector.moc.cpp	/^void *PLSelItem::qt_metacast(const char *_clname)$/;"	f	class:PLSelItem
qt_metacast	components/playlist/selector.moc.cpp	/^void *PLSelector::qt_metacast(const char *_clname)$/;"	f	class:PLSelector
qt_metacast	components/playlist/standardpanel.moc.cpp	/^void *StandardPLPanel::qt_metacast(const char *_clname)$/;"	f	class:StandardPLPanel
qt_metacast	components/playlist/views.moc.cpp	/^void *PicFlowView::qt_metacast(const char *_clname)$/;"	f	class:PicFlowView
qt_metacast	components/playlist/views.moc.cpp	/^void *PlIconView::qt_metacast(const char *_clname)$/;"	f	class:PlIconView
qt_metacast	components/playlist/views.moc.cpp	/^void *PlIconViewItemDelegate::qt_metacast(const char *_clname)$/;"	f	class:PlIconViewItemDelegate
qt_metacast	components/playlist/views.moc.cpp	/^void *PlListView::qt_metacast(const char *_clname)$/;"	f	class:PlListView
qt_metacast	components/playlist/views.moc.cpp	/^void *PlListViewItemDelegate::qt_metacast(const char *_clname)$/;"	f	class:PlListViewItemDelegate
qt_metacast	components/playlist/views.moc.cpp	/^void *PlTreeView::qt_metacast(const char *_clname)$/;"	f	class:PlTreeView
qt_metacast	components/playlist/vlc_model.moc.cpp	/^void *VLCModel::qt_metacast(const char *_clname)$/;"	f	class:VLCModel
qt_metacast	components/preferences_widgets.moc.cpp	/^void *ColorConfigControl::qt_metacast(const char *_clname)$/;"	f	class:ColorConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *ConfigControl::qt_metacast(const char *_clname)$/;"	f	class:ConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *DirectoryConfigControl::qt_metacast(const char *_clname)$/;"	f	class:DirectoryConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *FileConfigControl::qt_metacast(const char *_clname)$/;"	f	class:FileConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *FloatConfigControl::qt_metacast(const char *_clname)$/;"	f	class:FloatConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *FloatRangeConfigControl::qt_metacast(const char *_clname)$/;"	f	class:FloatRangeConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *FontConfigControl::qt_metacast(const char *_clname)$/;"	f	class:FontConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *IntegerConfigControl::qt_metacast(const char *_clname)$/;"	f	class:IntegerConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *IntegerListConfigControl::qt_metacast(const char *_clname)$/;"	f	class:IntegerListConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *InterfacePreviewWidget::qt_metacast(const char *_clname)$/;"	f	class:InterfacePreviewWidget
qt_metacast	components/preferences_widgets.moc.cpp	/^void *KeySelectorControl::qt_metacast(const char *_clname)$/;"	f	class:KeySelectorControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *ModuleListConfigControl::qt_metacast(const char *_clname)$/;"	f	class:ModuleListConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *StringConfigControl::qt_metacast(const char *_clname)$/;"	f	class:StringConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *StringListConfigControl::qt_metacast(const char *_clname)$/;"	f	class:StringListConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *VFloatConfigControl::qt_metacast(const char *_clname)$/;"	f	class:VFloatConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *VIntConfigControl::qt_metacast(const char *_clname)$/;"	f	class:VIntConfigControl
qt_metacast	components/preferences_widgets.moc.cpp	/^void *VStringConfigControl::qt_metacast(const char *_clname)$/;"	f	class:VStringConfigControl
qt_metacast	components/simple_preferences.moc.cpp	/^void *SPrefsCatList::qt_metacast(const char *_clname)$/;"	f	class:SPrefsCatList
qt_metacast	components/simple_preferences.moc.cpp	/^void *SPrefsPanel::qt_metacast(const char *_clname)$/;"	f	class:SPrefsPanel
qt_metacast	components/sout/profile_selector.moc.cpp	/^void *VLCProfileEditor::qt_metacast(const char *_clname)$/;"	f	class:VLCProfileEditor
qt_metacast	components/sout/profile_selector.moc.cpp	/^void *VLCProfileSelector::qt_metacast(const char *_clname)$/;"	f	class:VLCProfileSelector
qt_metacast	components/sout/sout_widgets.moc.cpp	/^void *FileDestBox::qt_metacast(const char *_clname)$/;"	f	class:FileDestBox
qt_metacast	components/sout/sout_widgets.moc.cpp	/^void *HTTPDestBox::qt_metacast(const char *_clname)$/;"	f	class:HTTPDestBox
qt_metacast	components/sout/sout_widgets.moc.cpp	/^void *ICEDestBox::qt_metacast(const char *_clname)$/;"	f	class:ICEDestBox
qt_metacast	components/sout/sout_widgets.moc.cpp	/^void *MMSHDestBox::qt_metacast(const char *_clname)$/;"	f	class:MMSHDestBox
qt_metacast	components/sout/sout_widgets.moc.cpp	/^void *RTPDestBox::qt_metacast(const char *_clname)$/;"	f	class:RTPDestBox
qt_metacast	components/sout/sout_widgets.moc.cpp	/^void *RTSPDestBox::qt_metacast(const char *_clname)$/;"	f	class:RTSPDestBox
qt_metacast	components/sout/sout_widgets.moc.cpp	/^void *UDPDestBox::qt_metacast(const char *_clname)$/;"	f	class:UDPDestBox
qt_metacast	components/sout/sout_widgets.moc.cpp	/^void *VirtualDestBox::qt_metacast(const char *_clname)$/;"	f	class:VirtualDestBox
qt_metacast	dialogs/bookmarks.moc.cpp	/^void *BookmarksDialog::qt_metacast(const char *_clname)$/;"	f	class:BookmarksDialog
qt_metacast	dialogs/convert.moc.cpp	/^void *ConvertDialog::qt_metacast(const char *_clname)$/;"	f	class:ConvertDialog
qt_metacast	dialogs/epg.moc.cpp	/^void *EpgDialog::qt_metacast(const char *_clname)$/;"	f	class:EpgDialog
qt_metacast	dialogs/errors.moc.cpp	/^void *ErrorsDialog::qt_metacast(const char *_clname)$/;"	f	class:ErrorsDialog
qt_metacast	dialogs/extended.moc.cpp	/^void *ExtendedDialog::qt_metacast(const char *_clname)$/;"	f	class:ExtendedDialog
qt_metacast	dialogs/extensions.moc.cpp	/^void *ExtensionDialog::qt_metacast(const char *_clname)$/;"	f	class:ExtensionDialog
qt_metacast	dialogs/extensions.moc.cpp	/^void *ExtensionsDialogProvider::qt_metacast(const char *_clname)$/;"	f	class:ExtensionsDialogProvider
qt_metacast	dialogs/extensions.moc.cpp	/^void *WidgetMapper::qt_metacast(const char *_clname)$/;"	f	class:WidgetMapper
qt_metacast	dialogs/external.moc.cpp	/^void *DialogHandler::qt_metacast(const char *_clname)$/;"	f	class:DialogHandler
qt_metacast	dialogs/external.moc.cpp	/^void *QVLCProgressDialog::qt_metacast(const char *_clname)$/;"	f	class:QVLCProgressDialog
qt_metacast	dialogs/firstrun.moc.cpp	/^void *FirstRun::qt_metacast(const char *_clname)$/;"	f	class:FirstRun
qt_metacast	dialogs/gototime.moc.cpp	/^void *GotoTimeDialog::qt_metacast(const char *_clname)$/;"	f	class:GotoTimeDialog
qt_metacast	dialogs/help.moc.cpp	/^void *AboutDialog::qt_metacast(const char *_clname)$/;"	f	class:AboutDialog
qt_metacast	dialogs/help.moc.cpp	/^void *HelpDialog::qt_metacast(const char *_clname)$/;"	f	class:HelpDialog
qt_metacast	dialogs/mediainfo.moc.cpp	/^void *MediaInfoDialog::qt_metacast(const char *_clname)$/;"	f	class:MediaInfoDialog
qt_metacast	dialogs/messages.moc.cpp	/^void *MessagesDialog::qt_metacast(const char *_clname)$/;"	f	class:MessagesDialog
qt_metacast	dialogs/open.moc.cpp	/^void *OpenDialog::qt_metacast(const char *_clname)$/;"	f	class:OpenDialog
qt_metacast	dialogs/openurl.moc.cpp	/^void *OpenUrlDialog::qt_metacast(const char *_clname)$/;"	f	class:OpenUrlDialog
qt_metacast	dialogs/playlist.moc.cpp	/^void *PlaylistDialog::qt_metacast(const char *_clname)$/;"	f	class:PlaylistDialog
qt_metacast	dialogs/plugins.moc.cpp	/^void *ExtensionListModel::qt_metacast(const char *_clname)$/;"	f	class:ExtensionListModel
qt_metacast	dialogs/plugins.moc.cpp	/^void *ExtensionTab::qt_metacast(const char *_clname)$/;"	f	class:ExtensionTab
qt_metacast	dialogs/plugins.moc.cpp	/^void *PluginDialog::qt_metacast(const char *_clname)$/;"	f	class:PluginDialog
qt_metacast	dialogs/plugins.moc.cpp	/^void *PluginTab::qt_metacast(const char *_clname)$/;"	f	class:PluginTab
qt_metacast	dialogs/podcast_configuration.moc.cpp	/^void *PodcastConfigDialog::qt_metacast(const char *_clname)$/;"	f	class:PodcastConfigDialog
qt_metacast	dialogs/preferences.moc.cpp	/^void *PrefsDialog::qt_metacast(const char *_clname)$/;"	f	class:PrefsDialog
qt_metacast	dialogs/sout.moc.cpp	/^void *SoutDialog::qt_metacast(const char *_clname)$/;"	f	class:SoutDialog
qt_metacast	dialogs/toolbar.moc.cpp	/^void *DroppingController::qt_metacast(const char *_clname)$/;"	f	class:DroppingController
qt_metacast	dialogs/toolbar.moc.cpp	/^void *ToolbarEditDialog::qt_metacast(const char *_clname)$/;"	f	class:ToolbarEditDialog
qt_metacast	dialogs/toolbar.moc.cpp	/^void *WidgetListing::qt_metacast(const char *_clname)$/;"	f	class:WidgetListing
qt_metacast	dialogs_provider.moc.cpp	/^void *DialogsProvider::qt_metacast(const char *_clname)$/;"	f	class:DialogsProvider
qt_metacast	extensions_manager.moc.cpp	/^void *ExtensionsManager::qt_metacast(const char *_clname)$/;"	f	class:ExtensionsManager
qt_metacast	input_manager.moc.cpp	/^void *InputManager::qt_metacast(const char *_clname)$/;"	f	class:InputManager
qt_metacast	input_manager.moc.cpp	/^void *MainInputManager::qt_metacast(const char *_clname)$/;"	f	class:MainInputManager
qt_metacast	main_interface.moc.cpp	/^void *MainInterface::qt_metacast(const char *_clname)$/;"	f	class:MainInterface
qt_metacast	menus.moc.cpp	/^void *MenuFunc::qt_metacast(const char *_clname)$/;"	f	class:MenuFunc
qt_metacast	menus.moc.cpp	/^void *MenuItemData::qt_metacast(const char *_clname)$/;"	f	class:MenuItemData
qt_metacast	menus.moc.cpp	/^void *VLCMenuBar::qt_metacast(const char *_clname)$/;"	f	class:VLCMenuBar
qt_metacast	recents.moc.cpp	/^void *RecentsMRL::qt_metacast(const char *_clname)$/;"	f	class:RecentsMRL
qt_metacast	util/buttons/BrowseButton.moc.cpp	/^void *BrowseButton::qt_metacast(const char *_clname)$/;"	f	class:BrowseButton
qt_metacast	util/buttons/DeckButtonsLayout.moc.cpp	/^void *DeckButtonsLayout::qt_metacast(const char *_clname)$/;"	f	class:DeckButtonsLayout
qt_metacast	util/buttons/RoundButton.moc.cpp	/^void *RoundButton::qt_metacast(const char *_clname)$/;"	f	class:RoundButton
qt_metacast	util/customwidgets.moc.cpp	/^void *AnimatedIcon::qt_metacast(const char *_clname)$/;"	f	class:AnimatedIcon
qt_metacast	util/customwidgets.moc.cpp	/^void *QFramelessButton::qt_metacast(const char *_clname)$/;"	f	class:QFramelessButton
qt_metacast	util/customwidgets.moc.cpp	/^void *QToolButtonExt::qt_metacast(const char *_clname)$/;"	f	class:QToolButtonExt
qt_metacast	util/customwidgets.moc.cpp	/^void *QVLCDebugLevelSpinBox::qt_metacast(const char *_clname)$/;"	f	class:QVLCDebugLevelSpinBox
qt_metacast	util/customwidgets.moc.cpp	/^void *SpinningIcon::qt_metacast(const char *_clname)$/;"	f	class:SpinningIcon
qt_metacast	util/input_slider.moc.cpp	/^void *SeekSlider::qt_metacast(const char *_clname)$/;"	f	class:SeekSlider
qt_metacast	util/input_slider.moc.cpp	/^void *SoundSlider::qt_metacast(const char *_clname)$/;"	f	class:SoundSlider
qt_metacast	util/pictureflow.moc.cpp	/^void *PictureFlow::qt_metacast(const char *_clname)$/;"	f	class:PictureFlow
qt_metacast	util/qmenuview.moc.cpp	/^void *QMenuView::qt_metacast(const char *_clname)$/;"	f	class:QMenuView
qt_metacast	util/qvlcapp.moc.cpp	/^void *QVLCApp::qt_metacast(const char *_clname)$/;"	f	class:QVLCApp
qt_metacast	util/searchlineedit.moc.cpp	/^void *ClickLineEdit::qt_metacast(const char *_clname)$/;"	f	class:ClickLineEdit
qt_metacast	util/searchlineedit.moc.cpp	/^void *SearchLineEdit::qt_metacast(const char *_clname)$/;"	f	class:SearchLineEdit
qt_metacast	util/timetooltip.moc.cpp	/^void *TimeTooltip::qt_metacast(const char *_clname)$/;"	f	class:TimeTooltip
qt_metacast	variables.moc.cpp	/^void *QVLCInteger::qt_metacast(const char *_clname)$/;"	f	class:QVLCInteger
qt_metacast	variables.moc.cpp	/^void *QVLCPointer::qt_metacast(const char *_clname)$/;"	f	class:QVLCPointer
qt_metacast	variables.moc.cpp	/^void *QVLCVariable::qt_metacast(const char *_clname)$/;"	f	class:QVLCVariable
qt_resource_data	resources.cpp	/^static const unsigned char qt_resource_data[] = {$/;"	v	file:
qt_resource_name	resources.cpp	/^static const unsigned char qt_resource_name[] = {$/;"	v	file:
qt_resource_struct	resources.cpp	/^static const unsigned char qt_resource_struct[] = {$/;"	v	file:
qt_static_metacall	actions_manager.moc.cpp	/^void ActionsManager::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ActionsManager
qt_static_metacall	adapters/seekpoints.moc.cpp	/^void SeekPoints::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SeekPoints
qt_static_metacall	components/complete_preferences.moc.cpp	/^void AdvPrefsPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdvPrefsPanel
qt_static_metacall	components/complete_preferences.moc.cpp	/^void PrefsTree::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PrefsTree
qt_static_metacall	components/controller.moc.cpp	/^void AbstractController::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AbstractController
qt_static_metacall	components/controller.moc.cpp	/^void AdvControlsWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AdvControlsWidget
qt_static_metacall	components/controller.moc.cpp	/^void ControlsWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ControlsWidget
qt_static_metacall	components/controller.moc.cpp	/^void FullscreenControllerWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FullscreenControllerWidget
qt_static_metacall	components/controller.moc.cpp	/^void InputControlsWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InputControlsWidget
qt_static_metacall	components/controller_widget.moc.cpp	/^void AspectRatioComboBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AspectRatioComboBox
qt_static_metacall	components/controller_widget.moc.cpp	/^void AtoB_Button::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AtoB_Button
qt_static_metacall	components/controller_widget.moc.cpp	/^void LoopButton::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LoopButton
qt_static_metacall	components/controller_widget.moc.cpp	/^void PlayButton::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlayButton
qt_static_metacall	components/controller_widget.moc.cpp	/^void SoundWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SoundWidget
qt_static_metacall	components/epg/EPGChannels.moc.cpp	/^void EPGChannels::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGChannels
qt_static_metacall	components/epg/EPGRuler.moc.cpp	/^void EPGRuler::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGRuler
qt_static_metacall	components/epg/EPGView.moc.cpp	/^void EPGGraphicsScene::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGGraphicsScene
qt_static_metacall	components/epg/EPGView.moc.cpp	/^void EPGView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGView
qt_static_metacall	components/epg/EPGWidget.moc.cpp	/^void EPGWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EPGWidget
qt_static_metacall	components/extended_panels.moc.cpp	/^void Compressor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Compressor
qt_static_metacall	components/extended_panels.moc.cpp	/^void Equalizer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Equalizer
qt_static_metacall	components/extended_panels.moc.cpp	/^void ExtV4l2::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtV4l2
qt_static_metacall	components/extended_panels.moc.cpp	/^void ExtVideo::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtVideo
qt_static_metacall	components/extended_panels.moc.cpp	/^void Spatializer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Spatializer
qt_static_metacall	components/extended_panels.moc.cpp	/^void SyncControls::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SyncControls
qt_static_metacall	components/extended_panels.moc.cpp	/^void SyncWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SyncWidget
qt_static_metacall	components/info_panels.moc.cpp	/^void ExtraMetaPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtraMetaPanel
qt_static_metacall	components/info_panels.moc.cpp	/^void InfoPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InfoPanel
qt_static_metacall	components/info_panels.moc.cpp	/^void InputStatsPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InputStatsPanel
qt_static_metacall	components/info_panels.moc.cpp	/^void MetaPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MetaPanel
qt_static_metacall	components/interface_widgets.moc.cpp	/^void BackgroundWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BackgroundWidget
qt_static_metacall	components/interface_widgets.moc.cpp	/^void CoverArtLabel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CoverArtLabel
qt_static_metacall	components/interface_widgets.moc.cpp	/^void SpeedControlWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SpeedControlWidget
qt_static_metacall	components/interface_widgets.moc.cpp	/^void SpeedLabel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SpeedLabel
qt_static_metacall	components/interface_widgets.moc.cpp	/^void TimeLabel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:TimeLabel
qt_static_metacall	components/interface_widgets.moc.cpp	/^void VideoWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VideoWidget
qt_static_metacall	components/open_panels.moc.cpp	/^void CaptureOpenPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CaptureOpenPanel
qt_static_metacall	components/open_panels.moc.cpp	/^void DiscOpenPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DiscOpenPanel
qt_static_metacall	components/open_panels.moc.cpp	/^void FileOpenBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileOpenBox
qt_static_metacall	components/open_panels.moc.cpp	/^void FileOpenPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileOpenPanel
qt_static_metacall	components/open_panels.moc.cpp	/^void NetOpenPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:NetOpenPanel
qt_static_metacall	components/open_panels.moc.cpp	/^void OpenPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:OpenPanel
qt_static_metacall	components/open_panels.moc.cpp	/^void UrlValidator::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UrlValidator
qt_static_metacall	components/playlist/playlist.moc.cpp	/^void LocationBar::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LocationBar
qt_static_metacall	components/playlist/playlist.moc.cpp	/^void PlaylistWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlaylistWidget
qt_static_metacall	components/playlist/playlist_model.moc.cpp	/^void PLModel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PLModel
qt_static_metacall	components/playlist/playlist_model.moc.cpp	/^void PlMimeData::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlMimeData
qt_static_metacall	components/playlist/selector.moc.cpp	/^void PLSelItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PLSelItem
qt_static_metacall	components/playlist/selector.moc.cpp	/^void PLSelector::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PLSelector
qt_static_metacall	components/playlist/standardpanel.moc.cpp	/^void StandardPLPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:StandardPLPanel
qt_static_metacall	components/playlist/views.moc.cpp	/^void PicFlowView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PicFlowView
qt_static_metacall	components/playlist/views.moc.cpp	/^void PlIconView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlIconView
qt_static_metacall	components/playlist/views.moc.cpp	/^void PlIconViewItemDelegate::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlIconViewItemDelegate
qt_static_metacall	components/playlist/views.moc.cpp	/^void PlListView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlListView
qt_static_metacall	components/playlist/views.moc.cpp	/^void PlListViewItemDelegate::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlListViewItemDelegate
qt_static_metacall	components/playlist/views.moc.cpp	/^void PlTreeView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlTreeView
qt_static_metacall	components/playlist/vlc_model.moc.cpp	/^void VLCModel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VLCModel
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void ColorConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ColorConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void ConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void DirectoryConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DirectoryConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void FileConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void FloatConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FloatConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void FloatRangeConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FloatRangeConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void FontConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FontConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void IntegerConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:IntegerConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void IntegerListConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:IntegerListConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void InterfacePreviewWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InterfacePreviewWidget
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void KeySelectorControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KeySelectorControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void ModuleListConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ModuleListConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void StringConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:StringConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void StringListConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:StringListConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void VFloatConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VFloatConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void VIntConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VIntConfigControl
qt_static_metacall	components/preferences_widgets.moc.cpp	/^void VStringConfigControl::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VStringConfigControl
qt_static_metacall	components/simple_preferences.moc.cpp	/^void SPrefsCatList::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SPrefsCatList
qt_static_metacall	components/simple_preferences.moc.cpp	/^void SPrefsPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SPrefsPanel
qt_static_metacall	components/sout/profile_selector.moc.cpp	/^void VLCProfileEditor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VLCProfileEditor
qt_static_metacall	components/sout/profile_selector.moc.cpp	/^void VLCProfileSelector::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VLCProfileSelector
qt_static_metacall	components/sout/sout_widgets.moc.cpp	/^void FileDestBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FileDestBox
qt_static_metacall	components/sout/sout_widgets.moc.cpp	/^void HTTPDestBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:HTTPDestBox
qt_static_metacall	components/sout/sout_widgets.moc.cpp	/^void ICEDestBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ICEDestBox
qt_static_metacall	components/sout/sout_widgets.moc.cpp	/^void MMSHDestBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MMSHDestBox
qt_static_metacall	components/sout/sout_widgets.moc.cpp	/^void RTPDestBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RTPDestBox
qt_static_metacall	components/sout/sout_widgets.moc.cpp	/^void RTSPDestBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RTSPDestBox
qt_static_metacall	components/sout/sout_widgets.moc.cpp	/^void UDPDestBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UDPDestBox
qt_static_metacall	components/sout/sout_widgets.moc.cpp	/^void VirtualDestBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VirtualDestBox
qt_static_metacall	dialogs/bookmarks.moc.cpp	/^void BookmarksDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BookmarksDialog
qt_static_metacall	dialogs/convert.moc.cpp	/^void ConvertDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ConvertDialog
qt_static_metacall	dialogs/epg.moc.cpp	/^void EpgDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EpgDialog
qt_static_metacall	dialogs/errors.moc.cpp	/^void ErrorsDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ErrorsDialog
qt_static_metacall	dialogs/extended.moc.cpp	/^void ExtendedDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtendedDialog
qt_static_metacall	dialogs/extensions.moc.cpp	/^void ExtensionDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionDialog
qt_static_metacall	dialogs/extensions.moc.cpp	/^void ExtensionsDialogProvider::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionsDialogProvider
qt_static_metacall	dialogs/extensions.moc.cpp	/^void WidgetMapper::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetMapper
qt_static_metacall	dialogs/external.moc.cpp	/^void DialogHandler::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DialogHandler
qt_static_metacall	dialogs/external.moc.cpp	/^void QVLCProgressDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCProgressDialog
qt_static_metacall	dialogs/firstrun.moc.cpp	/^void FirstRun::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:FirstRun
qt_static_metacall	dialogs/gototime.moc.cpp	/^void GotoTimeDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GotoTimeDialog
qt_static_metacall	dialogs/help.moc.cpp	/^void AboutDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AboutDialog
qt_static_metacall	dialogs/help.moc.cpp	/^void HelpDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:HelpDialog
qt_static_metacall	dialogs/mediainfo.moc.cpp	/^void MediaInfoDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MediaInfoDialog
qt_static_metacall	dialogs/messages.moc.cpp	/^void MessagesDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MessagesDialog
qt_static_metacall	dialogs/open.moc.cpp	/^void OpenDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:OpenDialog
qt_static_metacall	dialogs/openurl.moc.cpp	/^void OpenUrlDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:OpenUrlDialog
qt_static_metacall	dialogs/playlist.moc.cpp	/^void PlaylistDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PlaylistDialog
qt_static_metacall	dialogs/plugins.moc.cpp	/^void ExtensionListModel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionListModel
qt_static_metacall	dialogs/plugins.moc.cpp	/^void ExtensionTab::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionTab
qt_static_metacall	dialogs/plugins.moc.cpp	/^void PluginDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PluginDialog
qt_static_metacall	dialogs/plugins.moc.cpp	/^void PluginTab::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PluginTab
qt_static_metacall	dialogs/podcast_configuration.moc.cpp	/^void PodcastConfigDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PodcastConfigDialog
qt_static_metacall	dialogs/preferences.moc.cpp	/^void PrefsDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PrefsDialog
qt_static_metacall	dialogs/sout.moc.cpp	/^void SoutDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SoutDialog
qt_static_metacall	dialogs/toolbar.moc.cpp	/^void DroppingController::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DroppingController
qt_static_metacall	dialogs/toolbar.moc.cpp	/^void ToolbarEditDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ToolbarEditDialog
qt_static_metacall	dialogs/toolbar.moc.cpp	/^void WidgetListing::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WidgetListing
qt_static_metacall	dialogs_provider.moc.cpp	/^void DialogsProvider::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DialogsProvider
qt_static_metacall	extensions_manager.moc.cpp	/^void ExtensionsManager::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ExtensionsManager
qt_static_metacall	input_manager.moc.cpp	/^void InputManager::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:InputManager
qt_static_metacall	input_manager.moc.cpp	/^void MainInputManager::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MainInputManager
qt_static_metacall	main_interface.moc.cpp	/^void MainInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MainInterface
qt_static_metacall	menus.moc.cpp	/^void MenuFunc::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MenuFunc
qt_static_metacall	menus.moc.cpp	/^void MenuItemData::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MenuItemData
qt_static_metacall	menus.moc.cpp	/^void VLCMenuBar::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:VLCMenuBar
qt_static_metacall	recents.moc.cpp	/^void RecentsMRL::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RecentsMRL
qt_static_metacall	util/buttons/BrowseButton.moc.cpp	/^void BrowseButton::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BrowseButton
qt_static_metacall	util/buttons/DeckButtonsLayout.moc.cpp	/^void DeckButtonsLayout::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DeckButtonsLayout
qt_static_metacall	util/buttons/RoundButton.moc.cpp	/^void RoundButton::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RoundButton
qt_static_metacall	util/customwidgets.moc.cpp	/^void AnimatedIcon::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AnimatedIcon
qt_static_metacall	util/customwidgets.moc.cpp	/^void QFramelessButton::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QFramelessButton
qt_static_metacall	util/customwidgets.moc.cpp	/^void QToolButtonExt::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QToolButtonExt
qt_static_metacall	util/customwidgets.moc.cpp	/^void QVLCDebugLevelSpinBox::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCDebugLevelSpinBox
qt_static_metacall	util/customwidgets.moc.cpp	/^void SpinningIcon::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SpinningIcon
qt_static_metacall	util/input_slider.moc.cpp	/^void SeekSlider::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SeekSlider
qt_static_metacall	util/input_slider.moc.cpp	/^void SoundSlider::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SoundSlider
qt_static_metacall	util/pictureflow.moc.cpp	/^void PictureFlow::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PictureFlow
qt_static_metacall	util/qmenuview.moc.cpp	/^void QMenuView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QMenuView
qt_static_metacall	util/qvlcapp.moc.cpp	/^void QVLCApp::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCApp
qt_static_metacall	util/searchlineedit.moc.cpp	/^void ClickLineEdit::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ClickLineEdit
qt_static_metacall	util/searchlineedit.moc.cpp	/^void SearchLineEdit::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SearchLineEdit
qt_static_metacall	util/timetooltip.moc.cpp	/^void TimeTooltip::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:TimeTooltip
qt_static_metacall	variables.moc.cpp	/^void QVLCInteger::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCInteger
qt_static_metacall	variables.moc.cpp	/^void QVLCPointer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCPointer
qt_static_metacall	variables.moc.cpp	/^void QVLCVariable::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:QVLCVariable
qtr	qt4.hpp	90;"	d
qtu	qt4.hpp	91;"	d
question	dialogs/external.hpp	/^    QVLCPointer question;$/;"	m	class:DialogHandler
quit	dialogs_provider.cpp	/^void DialogsProvider::quit()$/;"	f	class:DialogsProvider
quitSignal	util/qvlcapp.moc.cpp	/^void QVLCApp::quitSignal()$/;"	f	class:QVLCApp
rDays	dialogs/vlm.hpp	/^    int rDays;$/;"	m	class:VLMSchedule
rNumber	dialogs/vlm.hpp	/^    int rNumber;$/;"	m	class:VLMSchedule
radioGroup	components/simple_preferences.hpp	/^    QButtonGroup *radioGroup;$/;"	m	class:SPrefsPanel
randomChanged	input_manager.moc.cpp	/^void MainInputManager::randomChanged(bool _t1)$/;"	f	class:MainInputManager
rateChanged	input_manager.moc.cpp	/^void InputManager::rateChanged(float _t1)$/;"	f	class:InputManager
rays	util/pictureflow.cpp	/^    QVector<PFreal> rays;$/;"	m	class:PictureFlowSoftwareRenderer	file:
rc_debug_buf	rclog.cpp	/^char rc_debug_buf[RC_LOGGER_MAX_LEN];$/;"	v
rc_log_buf	rclog.cpp	/^char rc_log_buf[RC_LOGGER_MAX_LEN];$/;"	v
rc_value_t	remoteControlServer.hpp	/^    rc_value_t() {$/;"	f	struct:rc_value_t
rc_value_t	remoteControlServer.hpp	/^struct rc_value_t$/;"	s
readConfig	remoteControlServer.cpp	/^void readConfig(RC_CONFIG& config,const char* file) {$/;"	f
readSettings	util/qvlcframe.hpp	/^    void readSettings( QSettings *settings )$/;"	f	class:QVLCMW
readSettings	util/qvlcframe.hpp	/^    void readSettings( QSettings *settings, QSize defSize)$/;"	f	class:QVLCMW
readSettings	util/qvlcframe.hpp	/^    void readSettings( const QString& name )$/;"	f	class:QVLCMW
readSettings	util/qvlcframe.hpp	/^    void readSettings( const QString& name, QSize defSize )$/;"	f	class:QVLCMW
readSettings	util/qvlcframe.hpp	/^    void readSettings( const QString& name,$/;"	f	class:QVLCFrame
read_media_stat	components/info_panels.hpp	/^    QTreeWidgetItem *read_media_stat;$/;"	m	class:InputStatsPanel
read_profile_int	ini/inifile.c	/^	int read_profile_int( const char *section, const char *key,int default_value, $/;"	f
read_profile_string	ini/inifile.c	/^	int read_profile_string( const char *section, const char *key,char *value, $/;"	f
ready	qt4.cpp	/^    static vlc_sem_t ready;$/;"	v	file:
rebuild	components/playlist/playlist_model.cpp	/^void PLModel::rebuild( playlist_item_t *p_root )$/;"	f	class:PLModel
rebuild	util/qmenuview.cpp	/^void QMenuView::rebuild()$/;"	f	class:QMenuView
recentlyPlayedFilters	ui/sprefs_interface.h	/^    QLineEdit *recentlyPlayedFilters;$/;"	m	class:Ui_SPrefsInterface
recents	recents.cpp	/^QStringList RecentsMRL::recents()$/;"	f	class:RecentsMRL
recentsMenu	menus.cpp	/^QMenu *VLCMenuBar::recentsMenu = NULL;$/;"	m	class:VLCMenuBar	file:
recentsMenu	menus.hpp	/^    static QMenu *recentsMenu;$/;"	m	class:VLCMenuBar
record	actions_manager.cpp	/^void ActionsManager::record()$/;"	f	class:ActionsManager
recordBrowse	ui/sprefs_input.h	/^    QPushButton *recordBrowse;$/;"	m	class:Ui_SPrefsInputAndCodecs
recordLabel	ui/sprefs_input.h	/^    QLabel *recordLabel;$/;"	m	class:Ui_SPrefsInputAndCodecs
recordPath	ui/sprefs_input.h	/^    QLineEdit *recordPath;$/;"	m	class:Ui_SPrefsInputAndCodecs
recordingStateChanged	input_manager.moc.cpp	/^void InputManager::recordingStateChanged(bool _t1)$/;"	f	class:InputManager
recreateToolbars	main_interface.cpp	/^void MainInterface::recreateToolbars()$/;"	f	class:MainInterface
recurseDelete	components/playlist/playlist_model.cpp	/^void PLModel::recurseDelete( QList<PLItem*> children, QModelIndexList *fullList )$/;"	f	class:PLModel
recursivity	dialogs/ml_configuration.hpp	/^    QCheckBox *recursivity;$/;"	m	class:MLConfDialog
reflectionEffect	util/pictureflow.cpp	/^    PictureFlow::ReflectionEffect reflectionEffect;$/;"	m	class:PictureFlowState	file:
reflectionEffect	util/pictureflow.cpp	/^PictureFlow::ReflectionEffect PictureFlow::reflectionEffect() const$/;"	f	class:PictureFlow
refreshLabels	components/controller_widget.cpp	/^void SoundWidget::refreshLabels()$/;"	f	class:SoundWidget
registerCodecs	components/sout/profile_selector.cpp	/^inline void VLCProfileEditor::registerCodecs()$/;"	f	class:VLCProfileEditor
reject	components/open_panels.hpp	/^    void reject(){}$/;"	f	class:FileOpenBox
release	adapters/seekpoints.hpp	/^    void release() { listMutex.unlock(); }$/;"	f	class:SeekPoints
release	components/interface_widgets.cpp	/^void VideoWidget::release( void )$/;"	f	class:VideoWidget
releaseVideo	main_interface.cpp	/^void MainInterface::releaseVideo( void )$/;"	f	class:MainInterface
releaseVideoSlot	main_interface.cpp	/^void MainInterface::releaseVideoSlot( void )$/;"	f	class:MainInterface
released	dialogs/external.moc.cpp	/^void QVLCProgressDialog::released()$/;"	f	class:QVLCProgressDialog
releasedSlot	util/customwidgets.cpp	/^void QToolButtonExt::releasedSlot()$/;"	f	class:QToolButtonExt
reloadExtensions	extensions_manager.cpp	/^void ExtensionsManager::reloadExtensions()$/;"	f	class:ExtensionsManager
reloadPrefs	main_interface.cpp	/^void MainInterface::reloadPrefs()$/;"	f	class:MainInterface
remove	components/playlist/ml_model.cpp	/^void MLModel::remove( MLItem *item )$/;"	f	class:MLModel
remove	components/playlist/ml_model.cpp	/^void MLModel::remove( QModelIndex idx )$/;"	f	class:MLModel
remove	dialogs/podcast_configuration.cpp	/^void PodcastConfigDialog::remove()$/;"	f	class:PodcastConfigDialog
remove	remoteControlServer.cpp	/^int RCPlayListModel::remove(const char* name) {$/;"	f	class:RCPlayListModel
removeCallback	remoteControlServer.cpp	/^void RCPlayListModel::removeCallback(input_thread_t* p_input) {$/;"	f	class:RCPlayListModel
removeCallback	remoteControlServer.cpp	/^void RCPlayListModel::removeCallback(intf_thread_t* p_intf) {$/;"	f	class:RCPlayListModel
removeChannel	components/epg/EPGChannels.cpp	/^void EPGChannels::removeChannel( QString channelName )$/;"	f	class:EPGChannels
removeChild	components/playlist/playlist_item.cpp	/^void PLItem::removeChild( PLItem *item )$/;"	f	class:PLItem
removeChildren	components/playlist/playlist_item.cpp	/^void PLItem::removeChildren()$/;"	f	class:PLItem
removeEPGEvent	components/epg/EPGView.cpp	/^void EPGView::removeEPGEvent( vlc_epg_event_t *data, QString channelName )$/;"	f	class:EPGView
removeFile	components/open_panels.cpp	/^void FileOpenPanel::removeFile()$/;"	f	class:FileOpenPanel
removeFileButton	ui/open_file.h	/^    QPushButton *removeFileButton;$/;"	m	class:Ui_OpenFile
removeItem	components/playlist/playlist_model.cpp	/^void PLModel::removeItem( PLItem *item )$/;"	f	class:PLModel
removeItem	components/playlist/playlist_model.cpp	/^void PLModel::removeItem( int i_id )$/;"	f	class:PLModel
removeTrailingSlash	util/qt_dirs.hpp	/^static inline QString removeTrailingSlash( QString s )$/;"	f
removeVLMItem	dialogs/vlm.cpp	/^void VLMDialog::removeVLMItem( VLMAWidget *vlmObj )$/;"	f	class:VLMDialog
render	util/pictureflow.cpp	/^void PictureFlow::render()$/;"	f	class:PictureFlow
render	util/pictureflow.cpp	/^void PictureFlowSoftwareRenderer::render()$/;"	f	class:PictureFlowSoftwareRenderer
renderSlide	util/pictureflow.cpp	/^QRect PictureFlowSoftwareRenderer::renderSlide(const SlideInfo &slide, int col1, int col2)$/;"	f	class:PictureFlowSoftwareRenderer
renderSlides	util/pictureflow.cpp	/^void PictureFlowSoftwareRenderer::renderSlides()$/;"	f	class:PictureFlowSoftwareRenderer
renderer	util/pictureflow.cpp	/^    PictureFlowAbstractRenderer* renderer;$/;"	m	class:PictureFlowPrivate	file:
repeatDays	dialogs/vlm.hpp	/^    QSpinBox *scherepeatnumber, *repeatDays;$/;"	m	class:VLMDialog
repeatLoopChanged	input_manager.moc.cpp	/^void MainInputManager::repeatLoopChanged(int _t1)$/;"	f	class:MainInputManager
repeatTime	dialogs/vlm.hpp	/^    QDateTimeEdit *time, *date, *repeatTime;$/;"	m	class:VLMDialog
replayCombo	ui/sprefs_audio.h	/^    QComboBox *replayCombo;$/;"	m	class:Ui_SPrefsAudio
replayLabel	ui/sprefs_audio.h	/^    QLabel *replayLabel;$/;"	m	class:Ui_SPrefsAudio
reposition	util/pictureflow.cpp	/^void PictureFlowState::reposition()$/;"	f	class:PictureFlowState
request	components/interface_widgets.cpp	/^WId VideoWidget::request( int *pi_x, int *pi_y,$/;"	f	class:VideoWidget
requestAnswer	dialogs/external.cpp	/^void DialogHandler::requestAnswer (vlc_object_t *, void *value)$/;"	f	class:DialogHandler
requestArtUpdate	input_manager.cpp	/^void InputManager::requestArtUpdate()$/;"	f	class:InputManager
requestLogin	dialogs/external.cpp	/^void DialogHandler::requestLogin (vlc_object_t *, void *value)$/;"	f	class:DialogHandler
requestUpdate	components/interface_widgets.hpp	/^    void requestUpdate() { emit updateRequested(); }$/;"	f	class:CoverArtLabel
requestVoutUpdate	input_manager.hpp	/^    void requestVoutUpdate() { return im->UpdateVout(); }$/;"	f	class:MainInputManager
reset	components/epg/EPGView.cpp	/^void EPGView::reset()$/;"	f	class:EPGView
reset	components/epg/EPGWidget.cpp	/^void EPGWidget::reset()$/;"	f	class:EPGWidget
reset	dialogs/gototime.cpp	/^void GotoTimeDialog::reset()$/;"	f	class:GotoTimeDialog
reset	dialogs/ml_configuration.cpp	/^void MLConfDialog::reset()$/;"	f	class:MLConfDialog
reset	dialogs/ml_configuration.cpp	/^void MLDirModel::reset( bool _b_recursive, vlc_array_t *p_array )$/;"	f	class:MLDirModel
reset	dialogs/preferences.cpp	/^void PrefsDialog::reset()$/;"	f	class:PrefsDialog
reset	rclog.cpp	/^void logger::reset() {$/;"	f	class:logger
reset	util/pictureflow.cpp	/^void PictureFlowState::reset()$/;"	f	class:PictureFlowState
resetLine	dialogs/toolbar.cpp	/^void DroppingController::resetLine( const QString& line )$/;"	f	class:DroppingController
resetRate	components/interface_widgets.cpp	/^void SpeedControlWidget::resetRate()$/;"	f	class:SpeedControlWidget
resetVolumeRadio	ui/sprefs_audio.h	/^    QRadioButton *resetVolumeRadio;$/;"	m	class:Ui_SPrefsAudio
resizeColumns	components/complete_preferences.cpp	/^void PrefsTree::resizeColumns()$/;"	f	class:PrefsTree
resizeEvent	components/playlist/playlist.cpp	/^void LocationBar::resizeEvent ( QResizeEvent * event )$/;"	f	class:LocationBar
resizeEvent	util/pictureflow.cpp	/^void PictureFlow::resizeEvent(QResizeEvent* event)$/;"	f	class:PictureFlow
resizeEvent	util/searchlineedit.cpp	/^void SearchLineEdit::resizeEvent ( QResizeEvent * event )$/;"	f	class:SearchLineEdit
resizeStack	main_interface.hpp	/^    void resizeStack( int w, int h )$/;"	f	class:MainInterface
resizingBox	ui/sprefs_interface.h	/^    QCheckBox *resizingBox;$/;"	m	class:Ui_SPrefsInterface
restoreFSC	components/controller.cpp	/^void FullscreenControllerWidget::restoreFSC()$/;"	f	class:FullscreenControllerWidget
restoreStackOldWidget	main_interface.cpp	/^inline void MainInterface::restoreStackOldWidget()$/;"	f	class:MainInterface
restoreWidgetPosition	util/qvlcframe.hpp	/^       static bool restoreWidgetPosition( intf_thread_t *p_intf,$/;"	f	class:QVLCTools
restoreWidgetPosition	util/qvlcframe.hpp	/^       static bool restoreWidgetPosition(QSettings *settings,$/;"	f	class:QVLCTools
retranslateUi	ui/about.h	/^    void retranslateUi(QWidget *aboutWidget)$/;"	f	class:Ui_aboutWidget
retranslateUi	ui/equalizer.h	/^    void retranslateUi(QWidget *EqualizerWidget)$/;"	f	class:Ui_EqualizerWidget
retranslateUi	ui/messages_panel.h	/^    void retranslateUi(QWidget *messagesPanelWidget)$/;"	f	class:Ui_messagesPanelWidget
retranslateUi	ui/open.h	/^    void retranslateUi(QWidget *Open)$/;"	f	class:Ui_Open
retranslateUi	ui/open_capture.h	/^    void retranslateUi(QWidget *OpenCapture)$/;"	f	class:Ui_OpenCapture
retranslateUi	ui/open_disk.h	/^    void retranslateUi(QWidget *OpenDisk)$/;"	f	class:Ui_OpenDisk
retranslateUi	ui/open_file.h	/^    void retranslateUi(QWidget *OpenFile)$/;"	f	class:Ui_OpenFile
retranslateUi	ui/open_net.h	/^    void retranslateUi(QWidget *OpenNetwork)$/;"	f	class:Ui_OpenNetwork
retranslateUi	ui/podcast_configuration.h	/^    void retranslateUi(QWidget *PodcastConfiguration)$/;"	f	class:Ui_PodcastConfiguration
retranslateUi	ui/profiles.h	/^    void retranslateUi(QWidget *Profiles)$/;"	f	class:Ui_Profiles
retranslateUi	ui/sout.h	/^    void retranslateUi(QWidget *Sout)$/;"	f	class:Ui_Sout
retranslateUi	ui/sprefs_audio.h	/^    void retranslateUi(QWidget *SPrefsAudio)$/;"	f	class:Ui_SPrefsAudio
retranslateUi	ui/sprefs_input.h	/^    void retranslateUi(QWidget *SPrefsInputAndCodecs)$/;"	f	class:Ui_SPrefsInputAndCodecs
retranslateUi	ui/sprefs_interface.h	/^    void retranslateUi(QWidget *SPrefsInterface)$/;"	f	class:Ui_SPrefsInterface
retranslateUi	ui/sprefs_subtitles.h	/^    void retranslateUi(QWidget *SPrefsSubtitles)$/;"	f	class:Ui_SPrefsSubtitles
retranslateUi	ui/sprefs_video.h	/^    void retranslateUi(QWidget *SPrefsVideo)$/;"	f	class:Ui_SPrefsVideo
retranslateUi	ui/streampanel.h	/^    void retranslateUi(QWidget *BroadcastPanel)$/;"	f	class:Ui_BroadcastPanel
retranslateUi	ui/update.h	/^    void retranslateUi(QWidget *updateWidget)$/;"	f	class:Ui_updateWidget
retranslateUi	ui/video_effects.h	/^    void retranslateUi(QTabWidget *ExtVideoWidget)$/;"	f	class:Ui_ExtVideoWidget
retranslateUi	ui/vlm.h	/^    void retranslateUi(QWidget *Vlm)$/;"	f	class:Ui_Vlm
reverse	input_manager.cpp	/^void InputManager::reverse()$/;"	f	class:InputManager
rightSlides	util/pictureflow.cpp	/^    QVector<SlideInfo> rightSlides;$/;"	m	class:PictureFlowState	file:
rippleEnable	ui/video_effects.h	/^    QCheckBox *rippleEnable;$/;"	m	class:Ui_ExtVideoWidget
root	dialogs_provider.hpp	/^    QWidget* root;$/;"	m	class:DialogsProvider
rootIndexChanged	components/playlist/playlist_model.moc.cpp	/^void PLModel::rootIndexChanged()$/;"	f	class:PLModel
rootItem	components/playlist/playlist_model.hpp	/^    PLItem *rootItem;$/;"	m	class:PLModel
rootWidget	components/epg/EPGWidget.hpp	/^    QStackedWidget *rootWidget;$/;"	m	class:EPGWidget
rotateAngleDial	ui/video_effects.h	/^    QDial *rotateAngleDial;$/;"	m	class:Ui_ExtVideoWidget
rotateEnable	ui/video_effects.h	/^    QGroupBox *rotateEnable;$/;"	m	class:Ui_ExtVideoWidget
row	components/playlist/playlist_item.cpp	/^int PLItem::row() const$/;"	f	class:PLItem
rowCount	components/playlist/ml_model.cpp	/^int MLModel::rowCount( const QModelIndex & parent ) const$/;"	f	class:MLModel
rowCount	components/playlist/playlist_model.cpp	/^int PLModel::rowCount( const QModelIndex &parent ) const$/;"	f	class:PLModel
rowCount	dialogs/plugins.cpp	/^int ExtensionListModel::rowCount( const QModelIndex& ) const$/;"	f	class:ExtensionListModel
rowOfChild	components/playlist/ml_item.cpp	/^int MLItem::rowOfChild( MLItem *item ) const$/;"	f	class:MLItem
rubberband	dialogs/toolbar.hpp	/^    QRubberBand *rubberband;$/;"	m	class:DroppingController
run	remoteControlServer.cpp	/^void RCServer::run(void *p) {$/;"	f	class:RCServer
run	thpool.c	/^void Thread::run(void* arg) {$/;"	f	class:Thread
sap	ui/sout.h	/^    QCheckBox *sap;$/;"	m	class:Ui_Sout
sapGroup	ui/sout.h	/^    QLineEdit *sapGroup;$/;"	m	class:Ui_Sout
sapGroupLabel	ui/sout.h	/^    QLabel *sapGroupLabel;$/;"	m	class:Ui_Sout
sapName	ui/sout.h	/^    QLineEdit *sapName;$/;"	m	class:Ui_Sout
saturationSlider	ui/video_effects.h	/^    QSlider *saturationSlider;$/;"	m	class:Ui_ExtVideoWidget
save	dialogs/firstrun.cpp	/^void FirstRun::save()$/;"	f	class:FirstRun
save	dialogs/messages.cpp	/^bool MessagesDialog::save()$/;"	f	class:MessagesDialog
save	dialogs/ml_configuration.cpp	/^void MLConfDialog::save()$/;"	f	class:MLConfDialog
save	dialogs/preferences.cpp	/^void PrefsDialog::save()$/;"	f	class:PrefsDialog
save	recents.cpp	/^void RecentsMRL::save()$/;"	f	class:RecentsMRL
saveAPlaylist	dialogs_provider.cpp	/^void DialogsProvider::saveAPlaylist()$/;"	f	class:DialogsProvider
saveAsso	components/simple_preferences.cpp	/^void SPrefsPanel::saveAsso()$/;"	f	class:SPrefsPanel
saveButton	ui/vlm.h	/^    QPushButton *saveButton;$/;"	m	class:Ui_Vlm
saveCancel	dialogs/external.cpp	/^void QVLCProgressDialog::saveCancel (void)$/;"	f	class:QVLCProgressDialog
saveLogButton	ui/messages_panel.h	/^    QPushButton *saveLogButton;$/;"	m	class:Ui_messagesPanelWidget
saveMeta	components/info_panels.cpp	/^void MetaPanel::saveMeta()$/;"	f	class:MetaPanel
saveMeta	dialogs/mediainfo.cpp	/^void MediaInfoDialog::saveMeta()$/;"	f	class:MediaInfoDialog
saveMetaButton	dialogs/mediainfo.hpp	/^    QPushButton *saveMetaButton;$/;"	m	class:MediaInfoDialog
saveModifications	dialogs/vlm.cpp	/^void VLMDialog::saveModifications()$/;"	f	class:VLMDialog
saveProfiles	components/sout/profile_selector.cpp	/^void VLCProfileSelector::saveProfiles()$/;"	f	class:VLCProfileSelector
saveRecentlyPlayed	ui/sprefs_interface.h	/^    QCheckBox *saveRecentlyPlayed;$/;"	m	class:Ui_SPrefsInterface
saveState	remoteControlServer.cpp	/^void RCInvoker::saveState(const char* state){$/;"	f	class:RCInvoker
saveWidgetPosition	util/qvlcframe.hpp	/^       static void saveWidgetPosition( QSettings *settings, QWidget *widget)$/;"	f	class:QVLCTools
saveWidgetPosition	util/qvlcframe.hpp	/^       static void saveWidgetPosition( intf_thread_t *p_intf,$/;"	f	class:QVLCTools
savedirpathFromFile	util/qt_dirs.hpp	39;"	d
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
schedBox	ui/vlm.h	/^    QGroupBox *schedBox;$/;"	m	class:Ui_Vlm
schedate	dialogs/vlm.hpp	/^    QDateTime schedate;$/;"	m	class:VLMSchedule
scheduleRadio	ui/streampanel.h	/^    QRadioButton *scheduleRadio;$/;"	m	class:Ui_BroadcastPanel
scherepeatnumber	dialogs/vlm.hpp	/^    QSpinBox *scherepeatnumber, *repeatDays;$/;"	m	class:VLMDialog
schetime	dialogs/vlm.hpp	/^    QDateTime schetime;$/;"	m	class:VLMSchedule
scomp	components/playlist/ml_item.cpp	54;"	d	file:
scomp	components/playlist/ml_item.cpp	81;"	d	file:
screenFPS	components/open_panels.hpp	/^    QDoubleSpinBox *screenFPS;$/;"	m	class:CaptureOpenPanel
screenRes	components/controller.hpp	/^    QRect screenRes;$/;"	m	class:FullscreenControllerWidget
scrollTo	components/playlist/views.cpp	/^void PicFlowView::scrollTo(const QModelIndex &index, QAbstractItemView::ScrollHint)$/;"	f	class:PicFlowView
search	components/playlist/playlist_model.cpp	/^void PLModel::search( const QString& search_text, const QModelIndex & idx, bool b_recursive )$/;"	f	class:PLModel
search	components/playlist/standardpanel.cpp	/^void StandardPLPanel::search( const QString& searchText )$/;"	f	class:StandardPLPanel
search	dialogs/plugins.cpp	/^void PluginTab::search( const QString& qs )$/;"	f	class:PluginTab
searchDelayed	components/playlist/standardpanel.cpp	/^void StandardPLPanel::searchDelayed( const QString& searchText )$/;"	f	class:StandardPLPanel
searchDelayedChanged	util/searchlineedit.moc.cpp	/^void SearchLineEdit::searchDelayedChanged(const QString & _t1)$/;"	f	class:SearchLineEdit
searchEdit	components/playlist/playlist.hpp	/^    SearchLineEdit       *searchEdit;$/;"	m	class:PlaylistWidget
searchEditingFinished	util/searchlineedit.cpp	/^void SearchLineEdit::searchEditingFinished()$/;"	f	class:SearchLineEdit
sectionMenu	input_manager.cpp	/^void InputManager::sectionMenu()$/;"	f	class:InputManager
sectionNext	input_manager.cpp	/^void InputManager::sectionNext()$/;"	f	class:InputManager
sectionPrev	input_manager.cpp	/^void InputManager::sectionPrev()$/;"	f	class:InputManager
seekLimitTimer	util/input_slider.hpp	/^    QTimer *seekLimitTimer;$/;"	m	class:SeekSlider
seekRequested	input_manager.moc.cpp	/^void InputManager::seekRequested(float _t1)$/;"	f	class:InputManager
selectButton	dialogs/open.hpp	/^    QPushButton *cancelButton, *selectButton;$/;"	m	class:OpenDialog
selectColor	components/preferences_widgets.cpp	/^void ColorConfigControl::selectColor()$/;"	f	class:ColorConfigControl
selectColumnsSigMapper	components/playlist/standardpanel.hpp	/^    QSignalMapper *selectColumnsSigMapper;$/;"	m	class:StandardPLPanel
selectInput	dialogs/vlm.cpp	/^void VLMDialog::selectInput()$/;"	f	class:VLMDialog
selectKey	components/preferences_widgets.cpp	/^void KeySelectorControl::selectKey( QTreeWidgetItem *keyItem, int column )$/;"	f	class:KeySelectorControl
selectMapper	dialogs/extensions.hpp	/^    QSignalMapper *selectMapper;$/;"	m	class:ExtensionDialog
selectOutput	dialogs/vlm.cpp	/^void VLMDialog::selectOutput()$/;"	f	class:VLMDialog
selectSlots	dialogs/open.cpp	/^void OpenDialog::selectSlots()$/;"	f	class:OpenDialog
selectVLMItem	dialogs/vlm.cpp	/^void VLMDialog::selectVLMItem( int i )$/;"	f	class:VLMDialog
selected	components/preferences_widgets.hpp	/^    QLabel *selected, *warning;$/;"	m	class:KeyInputDialog
selectedURIs	components/playlist/ml_model.cpp	/^QStringList MLModel::selectedURIs()$/;"	f	class:MLModel
selectedURIs	components/playlist/playlist_model.cpp	/^QStringList PLModel::selectedURIs()$/;"	f	class:PLModel
selector	components/playlist/playlist.hpp	/^    PLSelector           *selector;$/;"	m	class:PlaylistWidget
sendPacket	remoteControlServer.cpp	/^bool RCServer::sendPacket(sockaddr to, void *data, int size, int maxSize) {$/;"	f	class:RCServer
send_bitrate_stat	components/info_panels.hpp	/^    QTreeWidgetItem *send_bitrate_stat;$/;"	m	class:InputStatsPanel
send_bytes_stat	components/info_panels.hpp	/^    QTreeWidgetItem *send_bytes_stat;$/;"	m	class:InputStatsPanel
send_stat	components/info_panels.hpp	/^    QTreeWidgetItem *send_stat;$/;"	m	class:InputStatsPanel
sepiaEnable	ui/video_effects.h	/^    QGroupBox *sepiaEnable;$/;"	m	class:Ui_ExtVideoWidget
sepiaIntensitySpin	ui/video_effects.h	/^    QSpinBox *sepiaIntensitySpin;$/;"	m	class:Ui_ExtVideoWidget
seqnum_text	components/info_panels.hpp	/^    QLineEdit *seqnum_text;$/;"	m	class:MetaPanel
seqtot_text	components/info_panels.hpp	/^    QLineEdit *seqtot_text;$/;"	m	class:MetaPanel
set2Pass	components/extended_panels.cpp	/^void Equalizer::set2Pass()$/;"	f	class:Equalizer
setATranscodeOptions	components/sout/profile_selector.cpp	/^void VLCProfileEditor::setATranscodeOptions( bool b_trans )$/;"	f	class:VLCProfileEditor
setAdvanced	dialogs/preferences.cpp	/^void PrefsDialog::setAdvanced()$/;"	f	class:PrefsDialog
setAtoB	input_manager.cpp	/^void InputManager::setAtoB()$/;"	f	class:InputManager
setAudioOutput	remoteControlServer.cpp	/^int AudioCommand::setAudioOutput(intf_thread_t* p_intf, input_thread_t *p_input,vlc_object_t* p_aout,const rc_value_t& val)$/;"	f	class:AudioCommand
setAudioOutputOld	remoteControlServer.cpp	/^int AudioCommand::setAudioOutputOld(intf_thread_t* p_intf, input_thread_t *p_input,vlc_object_t* p_aout,const rc_value_t& val)$/;"	f	class:AudioCommand
setBackgroundColor	util/pictureflow.cpp	/^void PictureFlow::setBackgroundColor(const QColor& c)$/;"	f	class:PictureFlow
setBackwardButton	util/buttons/DeckButtonsLayout.cpp	/^void DeckButtonsLayout::setBackwardButton( QAbstractButton* button )$/;"	f	class:DeckButtonsLayout
setBoss	main_interface.cpp	/^void MainInterface::setBoss()$/;"	f	class:MainInterface
setCenterIndex	util/pictureflow.cpp	/^void PictureFlow::setCenterIndex(int index)$/;"	f	class:PictureFlow
setChapters	util/input_slider.cpp	/^void SeekSlider::setChapters( SeekPoints *chapters_ )$/;"	f	class:SeekSlider
setCoreBands	components/extended_panels.cpp	/^void Equalizer::setCoreBands()$/;"	f	class:Equalizer
setCorePreset	components/extended_panels.cpp	/^void Equalizer::setCorePreset( int i_preset )$/;"	f	class:Equalizer
setCurrent	components/epg/EPGItem.cpp	/^void EPGItem::setCurrent( bool b_current )$/;"	f	class:EPGItem
setData	components/epg/EPGItem.cpp	/^bool EPGItem::setData( vlc_epg_event_t *data )$/;"	f	class:EPGItem
setData	components/playlist/ml_item.cpp	/^bool MLItem::setData( ml_select_e meta, const QVariant &data )$/;"	f	class:MLItem
setData	components/playlist/ml_model.cpp	/^bool MLModel::setData( const QModelIndex &idx, const QVariant &value,$/;"	f	class:MLModel
setData	dialogs/ml_configuration.cpp	/^bool MLDirModel::setData( const QModelIndex &index, const QVariant &value,$/;"	f	class:MLDirModel
setDebug	rclog.cpp	/^void logger::setDebug(int d) {$/;"	f	class:logger
setDisplayPosition	components/interface_widgets.cpp	/^void TimeLabel::setDisplayPosition( float pos )$/;"	f	class:TimeLabel
setDisplayPosition	components/interface_widgets.cpp	/^void TimeLabel::setDisplayPosition( float pos, int64_t t, int length )$/;"	f	class:TimeLabel
setDrive	components/open_panels.cpp	467;"	d	file:
setDrive	components/open_panels.cpp	471;"	d	file:
setDrive	components/open_panels.cpp	535;"	d	file:
setDuration	components/epg/EPGItem.cpp	/^void EPGItem::setDuration( int duration )$/;"	f	class:EPGItem
setDuration	components/epg/EPGRuler.cpp	/^void EPGRuler::setDuration( int duration )$/;"	f	class:EPGRuler
setEditMode	components/info_panels.cpp	/^void MetaPanel::setEditMode( bool b_editing )$/;"	f	class:MetaPanel
setElideMode	util/customwidgets.cpp	/^void QElidingLabel::setElideMode( Qt::TextElideMode mode )$/;"	f	class:QElidingLabel
setExpandstoHeight	components/interface_widgets.hpp	/^    void setExpandstoHeight( bool b_expand ) { b_expandPixmap = b_expand; }$/;"	f	class:BackgroundWidget
setForwardButton	util/buttons/DeckButtonsLayout.cpp	/^void DeckButtonsLayout::setForwardButton( QAbstractButton* button )$/;"	f	class:DeckButtonsLayout
setGeometry	util/buttons/DeckButtonsLayout.cpp	/^void DeckButtonsLayout::setGeometry( const QRect& _r )$/;"	f	class:DeckButtonsLayout
setGripVisible	components/controller.hpp	/^    void setGripVisible( bool b_visible )$/;"	f	class:ControlsWidget
setHandleOpacity	util/input_slider.cpp	/^void SeekSlider::setHandleOpacity(qreal opacity)$/;"	f	class:SeekSlider
setIndex	components/playlist/playlist.cpp	/^void LocationBar::setIndex( const QModelIndex &index )$/;"	f	class:LocationBar
setInitValues	components/extended_panels.cpp	/^void Compressor::setInitValues()$/;"	f	class:Compressor
setInitValues	components/extended_panels.cpp	/^void Spatializer::setInitValues()$/;"	f	class:Spatializer
setInput	input_manager.cpp	/^void InputManager::setInput( input_thread_t *_p_input )$/;"	f	class:InputManager
setInput	remoteControlServer.cpp	/^void RCPlayListModel::setInput(input_thread_t* p_input) {$/;"	f	class:RCPlayListModel
setInterfaceFullScreen	main_interface.cpp	/^void MainInterface::setInterfaceFullScreen( bool fs )$/;"	f	class:MainInterface
setMRL	components/sout/sout_widgets.cpp	/^void SoutInputBox::setMRL( const QString& mrl )$/;"	f	class:SoutInputBox
setMaximumItemCount	util/qmenuview.hpp	/^    void setMaximumItemCount( int count ) { iMaxVisibleCount = count; }$/;"	f	class:QMenuView
setMenuAction	dialogs/open.cpp	/^void OpenDialog::setMenuAction()$/;"	f	class:OpenDialog
setMessageVisible	util/searchlineedit.cpp	/^void SearchLineEdit::setMessageVisible( bool on )$/;"	f	class:SearchLineEdit
setMinimalView	main_interface.cpp	/^void MainInterface::setMinimalView( bool b_minimal )$/;"	f	class:MainInterface
setModel	util/qmenuview.hpp	/^    void setModel( QAbstractItemModel * model ) { m_model = model; }$/;"	f	class:QMenuView
setMuted	components/controller_widget.cpp	/^void SoundWidget::setMuted( bool mute )$/;"	f	class:SoundWidget
setMuted	util/input_slider.cpp	/^void SoundSlider::setMuted( bool m )$/;"	f	class:SoundSlider
setName	main_interface.cpp	/^void MainInterface::setName( const QString& name )$/;"	f	class:MainInterface
setNormalPreview	components/preferences_widgets.cpp	/^void InterfacePreviewWidget::setNormalPreview( bool b_minimal )$/;"	f	class:InterfacePreviewWidget
setOffset	components/epg/EPGChannels.cpp	/^void EPGChannels::setOffset( int offset )$/;"	f	class:EPGChannels
setOffset	components/epg/EPGRuler.cpp	/^void EPGRuler::setOffset( int offset )$/;"	f	class:EPGRuler
setPlaceholderText	util/searchlineedit.cpp	/^void ClickLineEdit::setPlaceholderText( const QString &msg )$/;"	f	class:ClickLineEdit
setPosition	util/input_slider.cpp	/^void SeekSlider::setPosition( float pos, int64_t time, int length )$/;"	f	class:SeekSlider
setPreamp	components/extended_panels.cpp	/^void Equalizer::setPreamp()$/;"	f	class:Equalizer
setPreview	components/preferences_widgets.cpp	/^void InterfacePreviewWidget::setPreview( enum_style e_style )$/;"	f	class:InterfacePreviewWidget
setRaise	main_interface.cpp	/^void MainInterface::setRaise()$/;"	f	class:MainInterface
setRate	components/interface_widgets.cpp	/^void SpeedLabel::setRate( float rate )$/;"	f	class:SpeedLabel
setRate	input_manager.cpp	/^void InputManager::setRate( int new_rate )$/;"	f	class:InputManager
setRecursivity	dialogs/ml_configuration.cpp	/^void MLDirModel::setRecursivity( bool _b_recursive )$/;"	f	class:MLDirModel
setReflectionEffect	util/pictureflow.cpp	/^void PictureFlow::setReflectionEffect(ReflectionEffect effect)$/;"	f	class:PictureFlow
setRootIndex	components/playlist/playlist.cpp	/^void LocationBar::setRootIndex()$/;"	f	class:LocationBar
setRootItem	components/playlist/standardpanel.cpp	/^void StandardPLPanel::setRootItem( playlist_item_t *p_item, bool b )$/;"	f	class:StandardPLPanel
setRoundButton	util/buttons/DeckButtonsLayout.cpp	/^void DeckButtonsLayout::setRoundButton( QAbstractButton* button )$/;"	f	class:DeckButtonsLayout
setRow	components/epg/EPGItem.cpp	/^void EPGItem::setRow( unsigned int i_row_ )$/;"	f	class:EPGItem
setSTranscodeOptions	components/sout/profile_selector.cpp	/^void VLCProfileEditor::setSTranscodeOptions( bool b_trans )$/;"	f	class:VLCProfileEditor
setScale	components/epg/EPGRuler.cpp	/^void EPGRuler::setScale( double scale )$/;"	f	class:EPGRuler
setScale	components/epg/EPGView.cpp	/^void EPGView::setScale( double scaleFactor )$/;"	f	class:EPGView
setSelection	components/playlist/views.cpp	/^void PicFlowView::setSelection(const QRect &, QFlags<QItemSelectionModel::SelectionFlag>)$/;"	f	class:PicFlowView
setSlideSize	util/pictureflow.cpp	/^void PictureFlow::setSlideSize(QSize size)$/;"	f	class:PictureFlow
setSmall	dialogs/preferences.cpp	/^void PrefsDialog::setSmall()$/;"	f	class:PrefsDialog
setSource	components/playlist/selector.cpp	/^void PLSelector::setSource( QTreeWidgetItem *item )$/;"	f	class:PLSelector
setSpinBounds	components/info_panels.hpp	40;"	d
setSpinBoxFreq	components/open_panels.hpp	46;"	d
setStartTime	components/epg/EPGRuler.cpp	/^void EPGRuler::setStartTime( const QDateTime& startTime )$/;"	f	class:EPGRuler
setStatus	components/controller.cpp	/^void AbstractController::setStatus( int status )$/;"	f	class:AbstractController
setStatusBarVisibility	main_interface.cpp	/^void MainInterface::setStatusBarVisibility( bool b_visible )$/;"	f	class:MainInterface
setText	components/playlist/selector.hpp	/^    void setText( const QString& text ) { lbl->setText( text ); }$/;"	f	class:PLSelItem
setText	util/searchlineedit.cpp	/^void ClickLineEdit::setText( const QString &txt )$/;"	f	class:ClickLineEdit
setText	util/timetooltip.cpp	/^void TimeTooltip::setText( const QString& time, const QString& text )$/;"	f	class:TimeTooltip
setType	util/buttons/BrowseButton.cpp	/^void BrowseButton::setType( BrowseButton::Type type )$/;"	f	class:BrowseButton
setVLCWindowsTitle	main_interface.cpp	/^void MainInterface::setVLCWindowsTitle( const QString& aTitle )$/;"	f	class:MainInterface
setVTranscodeOptions	components/sout/profile_selector.cpp	/^void VLCProfileEditor::setVTranscodeOptions( bool b_trans )$/;"	f	class:VLCProfileEditor
setValue	components/extended_panels.cpp	/^void SyncWidget::setValue( double d )$/;"	f	class:SyncWidget
setValues	components/extended_panels.cpp	/^void Compressor::setValues()$/;"	f	class:Compressor
setValues	components/extended_panels.cpp	/^void Spatializer::setValues()$/;"	f	class:Spatializer
setVideoFullScreen	main_interface.cpp	/^void MainInterface::setVideoFullScreen( bool fs )$/;"	f	class:MainInterface
setVideoOnTop	main_interface.cpp	/^void MainInterface::setVideoOnTop( bool on_top )$/;"	f	class:MainInterface
setVideoSize	main_interface.cpp	/^void MainInterface::setVideoSize( unsigned int w, unsigned int h )$/;"	f	class:MainInterface
setVoutList	components/controller.cpp	/^void FullscreenControllerWidget::setVoutList( vout_thread_t **pp_vout, int i_vout )$/;"	f	class:FullscreenControllerWidget
setWidgetValue	components/extended_panels.cpp	/^void ExtVideo::setWidgetValue( QObject *widget )$/;"	f	class:ExtVideo
setWithArt	components/interface_widgets.hpp	/^    void setWithArt( bool b_withart_ ) { b_withart = b_withart_; };$/;"	f	class:BackgroundWidget
setZoom	components/epg/EPGWidget.cpp	/^void EPGWidget::setZoom( int level )$/;"	f	class:EPGWidget
setfillVLCConfigCombo	components/preferences_widgets.cpp	/^void setfillVLCConfigCombo( const char *configname, intf_thread_t *p_intf,$/;"	f
setmeta	components/playlist/ml_item.cpp	255;"	d	file:
setmeta	components/playlist/ml_item.cpp	287;"	d	file:
settings	main_interface.hpp	/^    QSettings           *settings;$/;"	m	class:MainInterface
setupButton	components/controller.cpp	/^void AbstractController::setupButton( QAbstractButton *aButton )$/;"	f	class:AbstractController
setupUi	ui/about.h	/^    void setupUi(QWidget *aboutWidget)$/;"	f	class:Ui_aboutWidget
setupUi	ui/equalizer.h	/^    void setupUi(QWidget *EqualizerWidget)$/;"	f	class:Ui_EqualizerWidget
setupUi	ui/messages_panel.h	/^    void setupUi(QWidget *messagesPanelWidget)$/;"	f	class:Ui_messagesPanelWidget
setupUi	ui/open.h	/^    void setupUi(QWidget *Open)$/;"	f	class:Ui_Open
setupUi	ui/open_capture.h	/^    void setupUi(QWidget *OpenCapture)$/;"	f	class:Ui_OpenCapture
setupUi	ui/open_disk.h	/^    void setupUi(QWidget *OpenDisk)$/;"	f	class:Ui_OpenDisk
setupUi	ui/open_file.h	/^    void setupUi(QWidget *OpenFile)$/;"	f	class:Ui_OpenFile
setupUi	ui/open_net.h	/^    void setupUi(QWidget *OpenNetwork)$/;"	f	class:Ui_OpenNetwork
setupUi	ui/podcast_configuration.h	/^    void setupUi(QWidget *PodcastConfiguration)$/;"	f	class:Ui_PodcastConfiguration
setupUi	ui/profiles.h	/^    void setupUi(QWidget *Profiles)$/;"	f	class:Ui_Profiles
setupUi	ui/sout.h	/^    void setupUi(QWidget *Sout)$/;"	f	class:Ui_Sout
setupUi	ui/sprefs_audio.h	/^    void setupUi(QWidget *SPrefsAudio)$/;"	f	class:Ui_SPrefsAudio
setupUi	ui/sprefs_input.h	/^    void setupUi(QWidget *SPrefsInputAndCodecs)$/;"	f	class:Ui_SPrefsInputAndCodecs
setupUi	ui/sprefs_interface.h	/^    void setupUi(QWidget *SPrefsInterface)$/;"	f	class:Ui_SPrefsInterface
setupUi	ui/sprefs_subtitles.h	/^    void setupUi(QWidget *SPrefsSubtitles)$/;"	f	class:Ui_SPrefsSubtitles
setupUi	ui/sprefs_video.h	/^    void setupUi(QWidget *SPrefsVideo)$/;"	f	class:Ui_SPrefsVideo
setupUi	ui/streampanel.h	/^    void setupUi(QWidget *BroadcastPanel)$/;"	f	class:Ui_BroadcastPanel
setupUi	ui/update.h	/^    void setupUi(QWidget *updateWidget)$/;"	f	class:Ui_updateWidget
setupUi	ui/video_effects.h	/^    void setupUi(QTabWidget *ExtVideoWidget)$/;"	f	class:Ui_ExtVideoWidget
setupUi	ui/vlm.h	/^    void setupUi(QWidget *Vlm)$/;"	f	class:Ui_Vlm
shadowCB	components/simple_preferences.hpp	/^enum { shadowCB, backgroundCB };$/;"	e	enum:__anon24
shadowCheck	ui/sprefs_subtitles.h	/^    QCheckBox *shadowCheck;$/;"	m	class:Ui_SPrefsSubtitles
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharpenEnable	ui/video_effects.h	/^    QGroupBox *sharpenEnable;$/;"	m	class:Ui_ExtVideoWidget
sharpenSigmaSlider	ui/video_effects.h	/^    QSlider *sharpenSigmaSlider;$/;"	m	class:Ui_ExtVideoWidget
shinyBox	dialogs/toolbar.hpp	/^    QCheckBox *flatBox, *bigBox, *shinyBox;$/;"	m	class:ToolbarEditDialog
shortClick	util/customwidgets.hpp	/^    bool shortClick;$/;"	m	class:QToolButtonExt
shortClicked	util/customwidgets.moc.cpp	/^void QToolButtonExt::shortClicked()$/;"	f	class:QToolButtonExt
shortdesc	dialogs/plugins.cpp	/^    QString name, title, description, shortdesc, author, version, url;$/;"	m	class:ExtensionCopy	file:
shouldEnqueue	dialogs/openurl.cpp	/^bool OpenUrlDialog::shouldEnqueue() const$/;"	f	class:OpenUrlDialog
show	components/preferences_widgets.cpp	/^void ModuleListConfigControl::show()$/;"	f	class:ModuleListConfigControl
show	components/preferences_widgets.hpp	/^    virtual void show() { checkbox->show(); }$/;"	f	class:BoolConfigControl
show	components/preferences_widgets.hpp	/^    virtual void show() { combo->show(); if( label ) label->show(); }$/;"	f	class:IntegerListConfigControl
show	components/preferences_widgets.hpp	/^    virtual void show() { combo->show(); if( label ) label->show(); }$/;"	f	class:ModuleConfigControl
show	components/preferences_widgets.hpp	/^    virtual void show() { combo->show(); if( label ) label->show(); }$/;"	f	class:StringListConfigControl
show	components/preferences_widgets.hpp	/^    virtual void show() { getWidget()->show(); };$/;"	f	class:ConfigControl
show	components/preferences_widgets.hpp	/^    virtual void show() { spin->show(); if( label ) label->show(); }$/;"	f	class:FloatConfigControl
show	components/preferences_widgets.hpp	/^    virtual void show() { spin->show(); if( label ) label->show(); }$/;"	f	class:IntegerConfigControl
show	components/preferences_widgets.hpp	/^    virtual void show() { table->show(); if( label ) label->show(); }$/;"	f	class:KeySelectorControl
show	components/preferences_widgets.hpp	/^    virtual void show() { text->show(); if( label ) label->show(); browse->show(); }$/;"	f	class:FileConfigControl
show	components/preferences_widgets.hpp	/^    virtual void show() { text->show(); if( label ) label->show(); }$/;"	f	class:StringConfigControl
show	util/timetooltip.cpp	/^void TimeTooltip::show()$/;"	f	class:TimeTooltip
showAction	components/playlist/selector.hpp	/^    void showAction() { if( lblAction ) lblAction->show();  }$/;"	f	class:PLSelItem
showArtUpdate	components/interface_widgets.cpp	/^void CoverArtLabel::showArtUpdate( const QString& url )$/;"	f	class:CoverArtLabel
showBuffering	components/interface_widgets.hpp	/^    bool showBuffering;$/;"	m	class:TimeLabel
showBuffering	main_interface.cpp	/^void MainInterface::showBuffering( float f_cache )$/;"	f	class:MainInterface
showCryptedLabel	main_interface.cpp	/^void MainInterface::showCryptedLabel( bool b_show )$/;"	f	class:MainInterface
showEvent	components/extended_panels.cpp	/^void ExtV4l2::showEvent( QShowEvent *event )$/;"	f	class:ExtV4l2
showEvent	dialogs/openurl.cpp	/^void OpenUrlDialog::showEvent( QShowEvent *ev )$/;"	f	class:OpenUrlDialog
showFSC	components/controller.cpp	/^void FullscreenControllerWidget::showFSC()$/;"	f	class:FullscreenControllerWidget
showNext	util/pictureflow.cpp	/^void PictureFlow::showNext()$/;"	f	class:PictureFlow
showPrevious	util/pictureflow.cpp	/^void PictureFlow::showPrevious()$/;"	f	class:PictureFlow
showScheduleWidget	dialogs/vlm.cpp	/^void VLMDialog::showScheduleWidget( int i )$/;"	f	class:VLMDialog
showSimpleOpen	dialogs_provider.cpp	/^QStringList DialogsProvider::showSimpleOpen( const QString& help,$/;"	f	class:DialogsProvider
showSlide	util/pictureflow.cpp	/^void PictureFlow::showSlide(int index)$/;"	f	class:PictureFlow
showSpeedMenu	components/interface_widgets.cpp	/^void SpeedLabel::showSpeedMenu( QPoint pos )$/;"	f	class:SpeedLabel
showTab	dialogs/extended.cpp	/^void ExtendedDialog::showTab( int i )$/;"	f	class:ExtendedDialog
showTab	dialogs/mediainfo.cpp	/^void MediaInfoDialog::showTab( int i_tab = 0 )$/;"	f	class:MediaInfoDialog
showTab	dialogs/open.cpp	/^void OpenDialog::showTab( int i_tab )$/;"	f	class:OpenDialog
showTab	main_interface.cpp	/^inline void MainInterface::showTab( QWidget *widget )$/;"	f	class:MainInterface
showUpdateSystrayMenu	main_interface.cpp	/^void MainInterface::showUpdateSystrayMenu()$/;"	f	class:MainInterface
showVideo	main_interface.cpp	/^inline void MainInterface::showVideo() { showTab( videoWidget ); }$/;"	f	class:MainInterface
showView	components/playlist/standardpanel.cpp	/^void StandardPLPanel::showView( int i_view )$/;"	f	class:StandardPLPanel
showVolumeMenu	components/controller_widget.cpp	/^void SoundWidget::showVolumeMenu( QPoint pos )$/;"	f	class:SoundWidget
signalCurrent	dialogs/open.cpp	/^void OpenDialog::signalCurrent( int i_tab )$/;"	f	class:OpenDialog
signalMapper	recents.hpp	/^    QSignalMapper *signalMapper;$/;"	m	class:RecentsMRL
simpleMLAppendDialog	dialogs_provider.cpp	/^void DialogsProvider::simpleMLAppendDialog()$/;"	f	class:DialogsProvider
simpleOpenDialog	dialogs_provider.cpp	/^void DialogsProvider::simpleOpenDialog()$/;"	f	class:DialogsProvider
simplePLAppendDialog	dialogs_provider.cpp	/^void DialogsProvider::simplePLAppendDialog()$/;"	f	class:DialogsProvider
simple_panels	dialogs/preferences.hpp	/^    SPrefsPanel *simple_panels[SPrefsMax];$/;"	m	class:PrefsDialog
simple_tree	dialogs/preferences.hpp	/^    SPrefsCatList *simple_tree;$/;"	m	class:PrefsDialog
sinkMessage	dialogs/messages.cpp	/^void MessagesDialog::sinkMessage( const MsgEvent *msg )$/;"	f	class:MessagesDialog
size	util/pictureflow.cpp	/^    QSize size;$/;"	m	class:PictureFlowSoftwareRenderer	file:
sizeChanged	components/interface_widgets.moc.cpp	/^void VideoWidget::sizeChanged(int _t1, int _t2)$/;"	f	class:VideoWidget
sizeHint	components/playlist/playlist.cpp	/^QSize LocationBar::sizeHint() const$/;"	f	class:LocationBar
sizeHint	components/playlist/playlist.cpp	/^QSize LocationButton::sizeHint() const$/;"	f	class:LocationButton
sizeHint	components/playlist/playlist.cpp	/^QSize SplitterHandle::sizeHint() const$/;"	f	class:SplitterHandle
sizeHint	components/playlist/views.cpp	/^QSize PlIconViewItemDelegate::sizeHint ( const QStyleOptionViewItem &, const QModelIndex & index ) const$/;"	f	class:PlIconViewItemDelegate
sizeHint	components/playlist/views.cpp	/^QSize PlListViewItemDelegate::sizeHint ( const QStyleOptionViewItem &, const QModelIndex & ) const$/;"	f	class:PlListViewItemDelegate
sizeHint	dialogs/plugins.cpp	/^QSize ExtensionItemDelegate::sizeHint( const QStyleOptionViewItem &option,$/;"	f	class:ExtensionItemDelegate
sizeHint	util/buttons/BrowseButton.cpp	/^QSize BrowseButton::sizeHint() const$/;"	f	class:BrowseButton
sizeHint	util/buttons/DeckButtonsLayout.cpp	/^QSize DeckButtonsLayout::sizeHint() const$/;"	f	class:DeckButtonsLayout
sizeHint	util/buttons/RoundButton.cpp	/^QSize RoundButton::sizeHint() const$/;"	f	class:RoundButton
sizeHint	util/customwidgets.hpp	/^    virtual QSize sizeHint() const { return iconSize(); }$/;"	f	class:QFramelessButton
sizeHint	util/input_slider.cpp	/^QSize SeekSlider::sizeHint() const$/;"	f	class:SeekSlider
sizeHint	util/searchlineedit.hpp	/^    virtual QSize sizeHint() const { return QSize(150, 40); }$/;"	f	class:SearchLineEdit
skinBrowse	ui/sprefs_interface.h	/^    QPushButton *skinBrowse;$/;"	m	class:Ui_SPrefsInterface
skinFileLabel	ui/sprefs_interface.h	/^    QLabel *skinFileLabel;$/;"	m	class:Ui_SPrefsInterface
skinRB	components/simple_preferences.hpp	/^enum { skinRB, qtRB, styleCB };$/;"	e	enum:__anon23
skins	ui/sprefs_interface.h	/^    QRadioButton *skins;$/;"	m	class:Ui_SPrefsInterface
skinsLabel	ui/sprefs_interface.h	/^    QLabel *skinsLabel;$/;"	m	class:Ui_SPrefsInterface
skinsPage	ui/sprefs_interface.h	/^    QWidget *skinsPage;$/;"	m	class:Ui_SPrefsInterface
skinsPreview	ui/sprefs_interface.h	/^    InterfacePreviewWidget *skinsPreview;$/;"	m	class:Ui_SPrefsInterface
skins_zone	ui/sprefs_interface.h	/^    QWidget *skins_zone;$/;"	m	class:Ui_SPrefsInterface
skipBackward	actions_manager.cpp	/^void ActionsManager::skipBackward()$/;"	f	class:ActionsManager
skipForward	actions_manager.cpp	/^void ActionsManager::skipForward()$/;"	f	class:ActionsManager
slaveBrowseButton	ui/open.h	/^    QPushButton *slaveBrowseButton;$/;"	m	class:Ui_Open
slaveCheckbox	ui/open.h	/^    QCheckBox *slaveCheckbox;$/;"	m	class:Ui_Open
slaveLabel	ui/open.h	/^    QLabel *slaveLabel;$/;"	m	class:Ui_Open
slaveText	ui/open.h	/^    QLineEdit *slaveText;$/;"	m	class:Ui_Open
slideCount	util/pictureflow.cpp	/^int PictureFlow::slideCount() const$/;"	f	class:PictureFlow
slideHeight	util/pictureflow.cpp	/^    int slideHeight;$/;"	m	class:PictureFlowState	file:
slideIndex	util/pictureflow.cpp	/^    int slideIndex;$/;"	m	struct:SlideInfo	file:
slideSize	util/pictureflow.cpp	/^QSize PictureFlow::slideSize() const$/;"	f	class:PictureFlow
slideWidth	util/pictureflow.cpp	/^    int slideWidth;$/;"	m	class:PictureFlowState	file:
slider	components/preferences_widgets.hpp	/^    QSlider *slider;$/;"	m	class:IntegerRangeSliderConfigControl
sliderDragged	util/input_slider.moc.cpp	/^void SeekSlider::sliderDragged(float _t1)$/;"	f	class:SeekSlider
sliderUpdate	input_manager.cpp	/^void InputManager::sliderUpdate( float new_pos )$/;"	f	class:InputManager
slowHideFSC	components/controller.cpp	/^void FullscreenControllerWidget::slowHideFSC()$/;"	f	class:FullscreenControllerWidget
slower	input_manager.cpp	/^void InputManager::slower()$/;"	f	class:InputManager
small	dialogs/preferences.hpp	/^    QRadioButton *small,*all;$/;"	m	class:PrefsDialog
snapshot	actions_manager.cpp	/^void ActionsManager::snapshot()$/;"	f	class:ActionsManager
snapshotsDirectory	ui/sprefs_video.h	/^    QLineEdit *snapshotsDirectory;$/;"	m	class:Ui_SPrefsVideo
snapshotsDirectoryBrowse	ui/sprefs_video.h	/^    QPushButton *snapshotsDirectoryBrowse;$/;"	m	class:Ui_SPrefsVideo
snapshotsFormat	ui/sprefs_video.h	/^    QComboBox *snapshotsFormat;$/;"	m	class:Ui_SPrefsVideo
snapshotsPrefix	ui/sprefs_video.h	/^    QLineEdit *snapshotsPrefix;$/;"	m	class:Ui_SPrefsVideo
snapshotsSequentialNumbering	ui/sprefs_video.h	/^    QCheckBox *snapshotsSequentialNumbering;$/;"	m	class:Ui_SPrefsVideo
soliddatadir	Makefile	/^soliddatadir = $/;"	m
sort	components/playlist/playlist_model.cpp	/^void PLModel::sort( const int column, Qt::SortOrder order )$/;"	f	class:PLModel
sort	components/playlist/playlist_model.cpp	/^void PLModel::sort( const int i_root_id, const int column, Qt::SortOrder order )$/;"	f	class:PLModel
sortingMapper	components/playlist/playlist_model.hpp	/^    QSignalMapper *sortingMapper;$/;"	m	class:PLModel
sortingMenu	components/playlist/playlist_model.hpp	/^    QMenu *sortingMenu;$/;"	m	class:PLModel
soundMuteChanged	input_manager.moc.cpp	/^void MainInputManager::soundMuteChanged()$/;"	f	class:MainInputManager
sourceLine	components/sout/sout_widgets.hpp	/^        QLineEdit *sourceLine;$/;"	m	class:SoutInputBox
sourcePage	ui/sout.h	/^    QWidget *sourcePage;$/;"	m	class:Ui_Sout
sourceValueLabel	components/sout/sout_widgets.hpp	/^        QLabel *sourceValueLabel;$/;"	m	class:SoutInputBox
soutAll	ui/sout.h	/^    QCheckBox *soutAll;$/;"	m	class:Ui_Sout
spacerItem	ui/equalizer.h	/^    QSpacerItem *spacerItem;$/;"	m	class:Ui_EqualizerWidget
spacerItem	ui/open.h	/^    QSpacerItem *spacerItem;$/;"	m	class:Ui_Open
spacerItem	ui/open_capture.h	/^    QSpacerItem *spacerItem;$/;"	m	class:Ui_OpenCapture
spacerItem	ui/open_disk.h	/^    QSpacerItem *spacerItem;$/;"	m	class:Ui_OpenDisk
spacerItem	ui/open_file.h	/^    QSpacerItem *spacerItem;$/;"	m	class:Ui_OpenFile
spacerItem	ui/open_net.h	/^    QSpacerItem *spacerItem;$/;"	m	class:Ui_OpenNetwork
spacerItem	ui/video_effects.h	/^    QSpacerItem *spacerItem;$/;"	m	class:Ui_ExtVideoWidget
spacerItem	ui/vlm.h	/^    QSpacerItem *spacerItem;$/;"	m	class:Ui_Vlm
spacerItem1	ui/open_disk.h	/^    QSpacerItem *spacerItem1;$/;"	m	class:Ui_OpenDisk
spacerItem1	ui/vlm.h	/^    QSpacerItem *spacerItem1;$/;"	m	class:Ui_Vlm
spacerItem2	ui/open_disk.h	/^    QSpacerItem *spacerItem2;$/;"	m	class:Ui_OpenDisk
spacerItem2	ui/vlm.h	/^    QSpacerItem *spacerItem2;$/;"	m	class:Ui_Vlm
spacerItem3	ui/open_disk.h	/^    QSpacerItem *spacerItem3;$/;"	m	class:Ui_OpenDisk
spacerItem4	ui/open_disk.h	/^    QSpacerItem *spacerItem4;$/;"	m	class:Ui_OpenDisk
spacing	util/pictureflow.cpp	/^    int spacing;$/;"	m	class:PictureFlowState	file:
spatCtrl	components/extended_panels.hpp	/^    QSlider *spatCtrl[NUM_SP_CTRL];$/;"	m	class:Spatializer
spat_controls	components/extended_panels.cpp	/^static const spat_controls_t spat_controls[] =$/;"	v	file:
spat_controls_t	components/extended_panels.cpp	/^} spat_controls_t;$/;"	t	typeref:struct:__anon12	file:
spdifBox	ui/sprefs_audio.h	/^    QCheckBox *spdifBox;$/;"	m	class:Ui_SPrefsAudio
spdifChB	components/simple_preferences.hpp	/^       spdifChB,$/;"	e	enum:__anon21
speedControl	components/interface_widgets.hpp	/^    SpeedControlWidget *speedControl;$/;"	m	class:SpeedLabel
speedControlMenu	components/interface_widgets.hpp	/^    QMenu *speedControlMenu;$/;"	m	class:SpeedLabel
speedSlider	components/interface_widgets.hpp	/^    QSlider* speedSlider;$/;"	m	class:SpeedControlWidget
spin	components/preferences_widgets.hpp	/^    QDoubleSpinBox *spin;$/;"	m	class:FloatConfigControl
spin	components/preferences_widgets.hpp	/^    QSpinBox *spin;$/;"	m	class:IntegerConfigControl
spinBox	components/extended_panels.hpp	/^    QDoubleSpinBox spinBox;$/;"	m	class:SyncWidget
spinBox	components/interface_widgets.hpp	/^    QDoubleSpinBox* spinBox;$/;"	m	class:SpeedControlWidget
spinLabel	components/extended_panels.hpp	/^    QLabel spinLabel;$/;"	m	class:SyncWidget
split	components/playlist/playlist.hpp	/^    QSplitter            *split;$/;"	m	class:PlaylistWidget
sqlMLbtn	ui/sprefs_interface.h	/^    QPushButton *sqlMLbtn;$/;"	m	class:Ui_SPrefsInterface
srcdir	Makefile	/^srcdir = .$/;"	m
sreturn	components/playlist/ml_item.cpp	165;"	d	file:
sreturn	components/playlist/ml_item.cpp	249;"	d	file:
stable	components/interface_widgets.hpp	/^    QWidget *stable;$/;"	m	class:VideoWidget
stack	recents.hpp	/^    QStringList   *stack;$/;"	m	class:RecentsMRL
stackCentralOldWidget	main_interface.hpp	/^    QWidget             *stackCentralOldWidget;$/;"	m	class:MainInterface
stackCentralW	main_interface.hpp	/^    QStackedWidget      *stackCentralW;$/;"	m	class:MainInterface
stackWidgetsSizes	main_interface.hpp	/^    QMap<QWidget *, QSize> stackWidgetsSizes;$/;"	m	class:MainInterface
stackedWidget	ui/update.h	/^    QStackedWidget *stackedWidget;$/;"	m	class:Ui_updateWidget
start	components/epg/EPGItem.cpp	/^const QDateTime& EPGItem::start() const$/;"	f	class:EPGItem
start	thpool.c	/^void Thread::start() {$/;"	f	class:Thread
start	util/pictureflow.cpp	/^void PictureFlowAnimator::start(int slide)$/;"	f	class:PictureFlowAnimator
startDrag	components/playlist/views.cpp	/^void PlIconView::startDrag ( Qt::DropActions supportedActions )$/;"	f	class:PlIconView
startDrag	components/playlist/views.cpp	/^void PlListView::startDrag ( Qt::DropActions supportedActions )$/;"	f	class:PlListView
startDrag	components/playlist/views.cpp	/^void PlTreeView::startDrag ( Qt::DropActions supportedActions )$/;"	f	class:PlTreeView
startDrag	dialogs/toolbar.cpp	/^void WidgetListing::startDrag( Qt::DropActions \/*supportedActions*\/ )$/;"	f	class:WidgetListing
startModifyVLMItem	dialogs/vlm.cpp	/^void VLMDialog::startModifyVLMItem( VLMAWidget *vlmObj )$/;"	f	class:VLMDialog
startProgressBar	dialogs/external.cpp	/^void DialogHandler::startProgressBar (vlc_object_t *, void *value)$/;"	f	class:DialogHandler
startSeekTimer	util/input_slider.cpp	/^void SeekSlider::startSeekTimer()$/;"	f	class:SeekSlider
startTime	components/epg/EPGView.cpp	/^const QDateTime& EPGView::startTime()$/;"	f	class:EPGView
startTimeChanged	components/epg/EPGView.moc.cpp	/^void EPGView::startTimeChanged(const QDateTime & _t1)$/;"	f	class:EPGView
startTimeTimeEdit	ui/open.h	/^    QTimeEdit *startTimeTimeEdit;$/;"	m	class:Ui_Open
state	util/pictureflow.cpp	/^    PictureFlowState* state;$/;"	m	class:PictureFlowAbstractRenderer	file:
state	util/pictureflow.cpp	/^    PictureFlowState* state;$/;"	m	class:PictureFlowAnimator	file:
state	util/pictureflow.cpp	/^    PictureFlowState* state;$/;"	m	class:PictureFlowPrivate	file:
staticMetaObject	actions_manager.moc.cpp	/^const QMetaObject ActionsManager::staticMetaObject = {$/;"	m	class:ActionsManager	file:
staticMetaObject	adapters/seekpoints.moc.cpp	/^const QMetaObject SeekPoints::staticMetaObject = {$/;"	m	class:SeekPoints	file:
staticMetaObject	components/complete_preferences.moc.cpp	/^const QMetaObject AdvPrefsPanel::staticMetaObject = {$/;"	m	class:AdvPrefsPanel	file:
staticMetaObject	components/complete_preferences.moc.cpp	/^const QMetaObject PrefsTree::staticMetaObject = {$/;"	m	class:PrefsTree	file:
staticMetaObject	components/controller.moc.cpp	/^const QMetaObject AbstractController::staticMetaObject = {$/;"	m	class:AbstractController	file:
staticMetaObject	components/controller.moc.cpp	/^const QMetaObject AdvControlsWidget::staticMetaObject = {$/;"	m	class:AdvControlsWidget	file:
staticMetaObject	components/controller.moc.cpp	/^const QMetaObject ControlsWidget::staticMetaObject = {$/;"	m	class:ControlsWidget	file:
staticMetaObject	components/controller.moc.cpp	/^const QMetaObject FullscreenControllerWidget::staticMetaObject = {$/;"	m	class:FullscreenControllerWidget	file:
staticMetaObject	components/controller.moc.cpp	/^const QMetaObject InputControlsWidget::staticMetaObject = {$/;"	m	class:InputControlsWidget	file:
staticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject AspectRatioComboBox::staticMetaObject = {$/;"	m	class:AspectRatioComboBox	file:
staticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject AtoB_Button::staticMetaObject = {$/;"	m	class:AtoB_Button	file:
staticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject LoopButton::staticMetaObject = {$/;"	m	class:LoopButton	file:
staticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject PlayButton::staticMetaObject = {$/;"	m	class:PlayButton	file:
staticMetaObject	components/controller_widget.moc.cpp	/^const QMetaObject SoundWidget::staticMetaObject = {$/;"	m	class:SoundWidget	file:
staticMetaObject	components/epg/EPGChannels.moc.cpp	/^const QMetaObject EPGChannels::staticMetaObject = {$/;"	m	class:EPGChannels	file:
staticMetaObject	components/epg/EPGRuler.moc.cpp	/^const QMetaObject EPGRuler::staticMetaObject = {$/;"	m	class:EPGRuler	file:
staticMetaObject	components/epg/EPGView.moc.cpp	/^const QMetaObject EPGGraphicsScene::staticMetaObject = {$/;"	m	class:EPGGraphicsScene	file:
staticMetaObject	components/epg/EPGView.moc.cpp	/^const QMetaObject EPGView::staticMetaObject = {$/;"	m	class:EPGView	file:
staticMetaObject	components/epg/EPGWidget.moc.cpp	/^const QMetaObject EPGWidget::staticMetaObject = {$/;"	m	class:EPGWidget	file:
staticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject Compressor::staticMetaObject = {$/;"	m	class:Compressor	file:
staticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject Equalizer::staticMetaObject = {$/;"	m	class:Equalizer	file:
staticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject ExtV4l2::staticMetaObject = {$/;"	m	class:ExtV4l2	file:
staticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject ExtVideo::staticMetaObject = {$/;"	m	class:ExtVideo	file:
staticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject Spatializer::staticMetaObject = {$/;"	m	class:Spatializer	file:
staticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject SyncControls::staticMetaObject = {$/;"	m	class:SyncControls	file:
staticMetaObject	components/extended_panels.moc.cpp	/^const QMetaObject SyncWidget::staticMetaObject = {$/;"	m	class:SyncWidget	file:
staticMetaObject	components/info_panels.moc.cpp	/^const QMetaObject ExtraMetaPanel::staticMetaObject = {$/;"	m	class:ExtraMetaPanel	file:
staticMetaObject	components/info_panels.moc.cpp	/^const QMetaObject InfoPanel::staticMetaObject = {$/;"	m	class:InfoPanel	file:
staticMetaObject	components/info_panels.moc.cpp	/^const QMetaObject InputStatsPanel::staticMetaObject = {$/;"	m	class:InputStatsPanel	file:
staticMetaObject	components/info_panels.moc.cpp	/^const QMetaObject MetaPanel::staticMetaObject = {$/;"	m	class:MetaPanel	file:
staticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject BackgroundWidget::staticMetaObject = {$/;"	m	class:BackgroundWidget	file:
staticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject CoverArtLabel::staticMetaObject = {$/;"	m	class:CoverArtLabel	file:
staticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject SpeedControlWidget::staticMetaObject = {$/;"	m	class:SpeedControlWidget	file:
staticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject SpeedLabel::staticMetaObject = {$/;"	m	class:SpeedLabel	file:
staticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject TimeLabel::staticMetaObject = {$/;"	m	class:TimeLabel	file:
staticMetaObject	components/interface_widgets.moc.cpp	/^const QMetaObject VideoWidget::staticMetaObject = {$/;"	m	class:VideoWidget	file:
staticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject CaptureOpenPanel::staticMetaObject = {$/;"	m	class:CaptureOpenPanel	file:
staticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject DiscOpenPanel::staticMetaObject = {$/;"	m	class:DiscOpenPanel	file:
staticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject FileOpenBox::staticMetaObject = {$/;"	m	class:FileOpenBox	file:
staticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject FileOpenPanel::staticMetaObject = {$/;"	m	class:FileOpenPanel	file:
staticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject NetOpenPanel::staticMetaObject = {$/;"	m	class:NetOpenPanel	file:
staticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject OpenPanel::staticMetaObject = {$/;"	m	class:OpenPanel	file:
staticMetaObject	components/open_panels.moc.cpp	/^const QMetaObject UrlValidator::staticMetaObject = {$/;"	m	class:UrlValidator	file:
staticMetaObject	components/playlist/playlist.moc.cpp	/^const QMetaObject LocationBar::staticMetaObject = {$/;"	m	class:LocationBar	file:
staticMetaObject	components/playlist/playlist.moc.cpp	/^const QMetaObject PlaylistWidget::staticMetaObject = {$/;"	m	class:PlaylistWidget	file:
staticMetaObject	components/playlist/playlist_model.moc.cpp	/^const QMetaObject PLModel::staticMetaObject = {$/;"	m	class:PLModel	file:
staticMetaObject	components/playlist/playlist_model.moc.cpp	/^const QMetaObject PlMimeData::staticMetaObject = {$/;"	m	class:PlMimeData	file:
staticMetaObject	components/playlist/selector.moc.cpp	/^const QMetaObject PLSelItem::staticMetaObject = {$/;"	m	class:PLSelItem	file:
staticMetaObject	components/playlist/selector.moc.cpp	/^const QMetaObject PLSelector::staticMetaObject = {$/;"	m	class:PLSelector	file:
staticMetaObject	components/playlist/standardpanel.moc.cpp	/^const QMetaObject StandardPLPanel::staticMetaObject = {$/;"	m	class:StandardPLPanel	file:
staticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject PicFlowView::staticMetaObject = {$/;"	m	class:PicFlowView	file:
staticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject PlIconView::staticMetaObject = {$/;"	m	class:PlIconView	file:
staticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject PlIconViewItemDelegate::staticMetaObject = {$/;"	m	class:PlIconViewItemDelegate	file:
staticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject PlListView::staticMetaObject = {$/;"	m	class:PlListView	file:
staticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject PlListViewItemDelegate::staticMetaObject = {$/;"	m	class:PlListViewItemDelegate	file:
staticMetaObject	components/playlist/views.moc.cpp	/^const QMetaObject PlTreeView::staticMetaObject = {$/;"	m	class:PlTreeView	file:
staticMetaObject	components/playlist/vlc_model.moc.cpp	/^const QMetaObject VLCModel::staticMetaObject = {$/;"	m	class:VLCModel	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject ColorConfigControl::staticMetaObject = {$/;"	m	class:ColorConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject ConfigControl::staticMetaObject = {$/;"	m	class:ConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject DirectoryConfigControl::staticMetaObject = {$/;"	m	class:DirectoryConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject FileConfigControl::staticMetaObject = {$/;"	m	class:FileConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject FloatConfigControl::staticMetaObject = {$/;"	m	class:FloatConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject FloatRangeConfigControl::staticMetaObject = {$/;"	m	class:FloatRangeConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject FontConfigControl::staticMetaObject = {$/;"	m	class:FontConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject IntegerConfigControl::staticMetaObject = {$/;"	m	class:IntegerConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject IntegerListConfigControl::staticMetaObject = {$/;"	m	class:IntegerListConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject InterfacePreviewWidget::staticMetaObject = {$/;"	m	class:InterfacePreviewWidget	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject KeySelectorControl::staticMetaObject = {$/;"	m	class:KeySelectorControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject ModuleListConfigControl::staticMetaObject = {$/;"	m	class:ModuleListConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject StringConfigControl::staticMetaObject = {$/;"	m	class:StringConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject StringListConfigControl::staticMetaObject = {$/;"	m	class:StringListConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject VFloatConfigControl::staticMetaObject = {$/;"	m	class:VFloatConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject VIntConfigControl::staticMetaObject = {$/;"	m	class:VIntConfigControl	file:
staticMetaObject	components/preferences_widgets.moc.cpp	/^const QMetaObject VStringConfigControl::staticMetaObject = {$/;"	m	class:VStringConfigControl	file:
staticMetaObject	components/simple_preferences.moc.cpp	/^const QMetaObject SPrefsCatList::staticMetaObject = {$/;"	m	class:SPrefsCatList	file:
staticMetaObject	components/simple_preferences.moc.cpp	/^const QMetaObject SPrefsPanel::staticMetaObject = {$/;"	m	class:SPrefsPanel	file:
staticMetaObject	components/sout/profile_selector.moc.cpp	/^const QMetaObject VLCProfileEditor::staticMetaObject = {$/;"	m	class:VLCProfileEditor	file:
staticMetaObject	components/sout/profile_selector.moc.cpp	/^const QMetaObject VLCProfileSelector::staticMetaObject = {$/;"	m	class:VLCProfileSelector	file:
staticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject FileDestBox::staticMetaObject = {$/;"	m	class:FileDestBox	file:
staticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject HTTPDestBox::staticMetaObject = {$/;"	m	class:HTTPDestBox	file:
staticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject ICEDestBox::staticMetaObject = {$/;"	m	class:ICEDestBox	file:
staticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject MMSHDestBox::staticMetaObject = {$/;"	m	class:MMSHDestBox	file:
staticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject RTPDestBox::staticMetaObject = {$/;"	m	class:RTPDestBox	file:
staticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject RTSPDestBox::staticMetaObject = {$/;"	m	class:RTSPDestBox	file:
staticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject UDPDestBox::staticMetaObject = {$/;"	m	class:UDPDestBox	file:
staticMetaObject	components/sout/sout_widgets.moc.cpp	/^const QMetaObject VirtualDestBox::staticMetaObject = {$/;"	m	class:VirtualDestBox	file:
staticMetaObject	dialogs/bookmarks.moc.cpp	/^const QMetaObject BookmarksDialog::staticMetaObject = {$/;"	m	class:BookmarksDialog	file:
staticMetaObject	dialogs/convert.moc.cpp	/^const QMetaObject ConvertDialog::staticMetaObject = {$/;"	m	class:ConvertDialog	file:
staticMetaObject	dialogs/epg.moc.cpp	/^const QMetaObject EpgDialog::staticMetaObject = {$/;"	m	class:EpgDialog	file:
staticMetaObject	dialogs/errors.moc.cpp	/^const QMetaObject ErrorsDialog::staticMetaObject = {$/;"	m	class:ErrorsDialog	file:
staticMetaObject	dialogs/extended.moc.cpp	/^const QMetaObject ExtendedDialog::staticMetaObject = {$/;"	m	class:ExtendedDialog	file:
staticMetaObject	dialogs/extensions.moc.cpp	/^const QMetaObject ExtensionDialog::staticMetaObject = {$/;"	m	class:ExtensionDialog	file:
staticMetaObject	dialogs/extensions.moc.cpp	/^const QMetaObject ExtensionsDialogProvider::staticMetaObject = {$/;"	m	class:ExtensionsDialogProvider	file:
staticMetaObject	dialogs/extensions.moc.cpp	/^const QMetaObject WidgetMapper::staticMetaObject = {$/;"	m	class:WidgetMapper	file:
staticMetaObject	dialogs/external.moc.cpp	/^const QMetaObject DialogHandler::staticMetaObject = {$/;"	m	class:DialogHandler	file:
staticMetaObject	dialogs/external.moc.cpp	/^const QMetaObject QVLCProgressDialog::staticMetaObject = {$/;"	m	class:QVLCProgressDialog	file:
staticMetaObject	dialogs/firstrun.moc.cpp	/^const QMetaObject FirstRun::staticMetaObject = {$/;"	m	class:FirstRun	file:
staticMetaObject	dialogs/gototime.moc.cpp	/^const QMetaObject GotoTimeDialog::staticMetaObject = {$/;"	m	class:GotoTimeDialog	file:
staticMetaObject	dialogs/help.moc.cpp	/^const QMetaObject AboutDialog::staticMetaObject = {$/;"	m	class:AboutDialog	file:
staticMetaObject	dialogs/help.moc.cpp	/^const QMetaObject HelpDialog::staticMetaObject = {$/;"	m	class:HelpDialog	file:
staticMetaObject	dialogs/mediainfo.moc.cpp	/^const QMetaObject MediaInfoDialog::staticMetaObject = {$/;"	m	class:MediaInfoDialog	file:
staticMetaObject	dialogs/messages.moc.cpp	/^const QMetaObject MessagesDialog::staticMetaObject = {$/;"	m	class:MessagesDialog	file:
staticMetaObject	dialogs/open.moc.cpp	/^const QMetaObject OpenDialog::staticMetaObject = {$/;"	m	class:OpenDialog	file:
staticMetaObject	dialogs/openurl.moc.cpp	/^const QMetaObject OpenUrlDialog::staticMetaObject = {$/;"	m	class:OpenUrlDialog	file:
staticMetaObject	dialogs/playlist.moc.cpp	/^const QMetaObject PlaylistDialog::staticMetaObject = {$/;"	m	class:PlaylistDialog	file:
staticMetaObject	dialogs/plugins.moc.cpp	/^const QMetaObject ExtensionListModel::staticMetaObject = {$/;"	m	class:ExtensionListModel	file:
staticMetaObject	dialogs/plugins.moc.cpp	/^const QMetaObject ExtensionTab::staticMetaObject = {$/;"	m	class:ExtensionTab	file:
staticMetaObject	dialogs/plugins.moc.cpp	/^const QMetaObject PluginDialog::staticMetaObject = {$/;"	m	class:PluginDialog	file:
staticMetaObject	dialogs/plugins.moc.cpp	/^const QMetaObject PluginTab::staticMetaObject = {$/;"	m	class:PluginTab	file:
staticMetaObject	dialogs/podcast_configuration.moc.cpp	/^const QMetaObject PodcastConfigDialog::staticMetaObject = {$/;"	m	class:PodcastConfigDialog	file:
staticMetaObject	dialogs/preferences.moc.cpp	/^const QMetaObject PrefsDialog::staticMetaObject = {$/;"	m	class:PrefsDialog	file:
staticMetaObject	dialogs/sout.moc.cpp	/^const QMetaObject SoutDialog::staticMetaObject = {$/;"	m	class:SoutDialog	file:
staticMetaObject	dialogs/toolbar.moc.cpp	/^const QMetaObject DroppingController::staticMetaObject = {$/;"	m	class:DroppingController	file:
staticMetaObject	dialogs/toolbar.moc.cpp	/^const QMetaObject ToolbarEditDialog::staticMetaObject = {$/;"	m	class:ToolbarEditDialog	file:
staticMetaObject	dialogs/toolbar.moc.cpp	/^const QMetaObject WidgetListing::staticMetaObject = {$/;"	m	class:WidgetListing	file:
staticMetaObject	dialogs_provider.moc.cpp	/^const QMetaObject DialogsProvider::staticMetaObject = {$/;"	m	class:DialogsProvider	file:
staticMetaObject	extensions_manager.moc.cpp	/^const QMetaObject ExtensionsManager::staticMetaObject = {$/;"	m	class:ExtensionsManager	file:
staticMetaObject	input_manager.moc.cpp	/^const QMetaObject InputManager::staticMetaObject = {$/;"	m	class:InputManager	file:
staticMetaObject	input_manager.moc.cpp	/^const QMetaObject MainInputManager::staticMetaObject = {$/;"	m	class:MainInputManager	file:
staticMetaObject	main_interface.moc.cpp	/^const QMetaObject MainInterface::staticMetaObject = {$/;"	m	class:MainInterface	file:
staticMetaObject	menus.moc.cpp	/^const QMetaObject MenuFunc::staticMetaObject = {$/;"	m	class:MenuFunc	file:
staticMetaObject	menus.moc.cpp	/^const QMetaObject MenuItemData::staticMetaObject = {$/;"	m	class:MenuItemData	file:
staticMetaObject	menus.moc.cpp	/^const QMetaObject VLCMenuBar::staticMetaObject = {$/;"	m	class:VLCMenuBar	file:
staticMetaObject	recents.moc.cpp	/^const QMetaObject RecentsMRL::staticMetaObject = {$/;"	m	class:RecentsMRL	file:
staticMetaObject	util/buttons/BrowseButton.moc.cpp	/^const QMetaObject BrowseButton::staticMetaObject = {$/;"	m	class:BrowseButton	file:
staticMetaObject	util/buttons/DeckButtonsLayout.moc.cpp	/^const QMetaObject DeckButtonsLayout::staticMetaObject = {$/;"	m	class:DeckButtonsLayout	file:
staticMetaObject	util/buttons/RoundButton.moc.cpp	/^const QMetaObject RoundButton::staticMetaObject = {$/;"	m	class:RoundButton	file:
staticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject AnimatedIcon::staticMetaObject = {$/;"	m	class:AnimatedIcon	file:
staticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject QFramelessButton::staticMetaObject = {$/;"	m	class:QFramelessButton	file:
staticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject QToolButtonExt::staticMetaObject = {$/;"	m	class:QToolButtonExt	file:
staticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject QVLCDebugLevelSpinBox::staticMetaObject = {$/;"	m	class:QVLCDebugLevelSpinBox	file:
staticMetaObject	util/customwidgets.moc.cpp	/^const QMetaObject SpinningIcon::staticMetaObject = {$/;"	m	class:SpinningIcon	file:
staticMetaObject	util/input_slider.moc.cpp	/^const QMetaObject SeekSlider::staticMetaObject = {$/;"	m	class:SeekSlider	file:
staticMetaObject	util/input_slider.moc.cpp	/^const QMetaObject SoundSlider::staticMetaObject = {$/;"	m	class:SoundSlider	file:
staticMetaObject	util/pictureflow.moc.cpp	/^const QMetaObject PictureFlow::staticMetaObject = {$/;"	m	class:PictureFlow	file:
staticMetaObject	util/qmenuview.moc.cpp	/^const QMetaObject QMenuView::staticMetaObject = {$/;"	m	class:QMenuView	file:
staticMetaObject	util/qvlcapp.moc.cpp	/^const QMetaObject QVLCApp::staticMetaObject = {$/;"	m	class:QVLCApp	file:
staticMetaObject	util/searchlineedit.moc.cpp	/^const QMetaObject ClickLineEdit::staticMetaObject = {$/;"	m	class:ClickLineEdit	file:
staticMetaObject	util/searchlineedit.moc.cpp	/^const QMetaObject SearchLineEdit::staticMetaObject = {$/;"	m	class:SearchLineEdit	file:
staticMetaObject	util/timetooltip.moc.cpp	/^const QMetaObject TimeTooltip::staticMetaObject = {$/;"	m	class:TimeTooltip	file:
staticMetaObject	variables.moc.cpp	/^const QMetaObject QVLCInteger::staticMetaObject = {$/;"	m	class:QVLCInteger	file:
staticMetaObject	variables.moc.cpp	/^const QMetaObject QVLCPointer::staticMetaObject = {$/;"	m	class:QVLCPointer	file:
staticMetaObject	variables.moc.cpp	/^const QMetaObject QVLCVariable::staticMetaObject = {$/;"	m	class:QVLCVariable	file:
staticMetaObjectExtraData	actions_manager.moc.cpp	/^const QMetaObjectExtraData ActionsManager::staticMetaObjectExtraData = {$/;"	m	class:ActionsManager	file:
staticMetaObjectExtraData	adapters/seekpoints.moc.cpp	/^const QMetaObjectExtraData SeekPoints::staticMetaObjectExtraData = {$/;"	m	class:SeekPoints	file:
staticMetaObjectExtraData	components/complete_preferences.moc.cpp	/^const QMetaObjectExtraData AdvPrefsPanel::staticMetaObjectExtraData = {$/;"	m	class:AdvPrefsPanel	file:
staticMetaObjectExtraData	components/complete_preferences.moc.cpp	/^const QMetaObjectExtraData PrefsTree::staticMetaObjectExtraData = {$/;"	m	class:PrefsTree	file:
staticMetaObjectExtraData	components/controller.moc.cpp	/^const QMetaObjectExtraData AbstractController::staticMetaObjectExtraData = {$/;"	m	class:AbstractController	file:
staticMetaObjectExtraData	components/controller.moc.cpp	/^const QMetaObjectExtraData AdvControlsWidget::staticMetaObjectExtraData = {$/;"	m	class:AdvControlsWidget	file:
staticMetaObjectExtraData	components/controller.moc.cpp	/^const QMetaObjectExtraData ControlsWidget::staticMetaObjectExtraData = {$/;"	m	class:ControlsWidget	file:
staticMetaObjectExtraData	components/controller.moc.cpp	/^const QMetaObjectExtraData FullscreenControllerWidget::staticMetaObjectExtraData = {$/;"	m	class:FullscreenControllerWidget	file:
staticMetaObjectExtraData	components/controller.moc.cpp	/^const QMetaObjectExtraData InputControlsWidget::staticMetaObjectExtraData = {$/;"	m	class:InputControlsWidget	file:
staticMetaObjectExtraData	components/controller_widget.moc.cpp	/^const QMetaObjectExtraData AspectRatioComboBox::staticMetaObjectExtraData = {$/;"	m	class:AspectRatioComboBox	file:
staticMetaObjectExtraData	components/controller_widget.moc.cpp	/^const QMetaObjectExtraData AtoB_Button::staticMetaObjectExtraData = {$/;"	m	class:AtoB_Button	file:
staticMetaObjectExtraData	components/controller_widget.moc.cpp	/^const QMetaObjectExtraData LoopButton::staticMetaObjectExtraData = {$/;"	m	class:LoopButton	file:
staticMetaObjectExtraData	components/controller_widget.moc.cpp	/^const QMetaObjectExtraData PlayButton::staticMetaObjectExtraData = {$/;"	m	class:PlayButton	file:
staticMetaObjectExtraData	components/controller_widget.moc.cpp	/^const QMetaObjectExtraData SoundWidget::staticMetaObjectExtraData = {$/;"	m	class:SoundWidget	file:
staticMetaObjectExtraData	components/epg/EPGChannels.moc.cpp	/^const QMetaObjectExtraData EPGChannels::staticMetaObjectExtraData = {$/;"	m	class:EPGChannels	file:
staticMetaObjectExtraData	components/epg/EPGRuler.moc.cpp	/^const QMetaObjectExtraData EPGRuler::staticMetaObjectExtraData = {$/;"	m	class:EPGRuler	file:
staticMetaObjectExtraData	components/epg/EPGView.moc.cpp	/^const QMetaObjectExtraData EPGGraphicsScene::staticMetaObjectExtraData = {$/;"	m	class:EPGGraphicsScene	file:
staticMetaObjectExtraData	components/epg/EPGView.moc.cpp	/^const QMetaObjectExtraData EPGView::staticMetaObjectExtraData = {$/;"	m	class:EPGView	file:
staticMetaObjectExtraData	components/epg/EPGWidget.moc.cpp	/^const QMetaObjectExtraData EPGWidget::staticMetaObjectExtraData = {$/;"	m	class:EPGWidget	file:
staticMetaObjectExtraData	components/extended_panels.moc.cpp	/^const QMetaObjectExtraData Compressor::staticMetaObjectExtraData = {$/;"	m	class:Compressor	file:
staticMetaObjectExtraData	components/extended_panels.moc.cpp	/^const QMetaObjectExtraData Equalizer::staticMetaObjectExtraData = {$/;"	m	class:Equalizer	file:
staticMetaObjectExtraData	components/extended_panels.moc.cpp	/^const QMetaObjectExtraData ExtV4l2::staticMetaObjectExtraData = {$/;"	m	class:ExtV4l2	file:
staticMetaObjectExtraData	components/extended_panels.moc.cpp	/^const QMetaObjectExtraData ExtVideo::staticMetaObjectExtraData = {$/;"	m	class:ExtVideo	file:
staticMetaObjectExtraData	components/extended_panels.moc.cpp	/^const QMetaObjectExtraData Spatializer::staticMetaObjectExtraData = {$/;"	m	class:Spatializer	file:
staticMetaObjectExtraData	components/extended_panels.moc.cpp	/^const QMetaObjectExtraData SyncControls::staticMetaObjectExtraData = {$/;"	m	class:SyncControls	file:
staticMetaObjectExtraData	components/extended_panels.moc.cpp	/^const QMetaObjectExtraData SyncWidget::staticMetaObjectExtraData = {$/;"	m	class:SyncWidget	file:
staticMetaObjectExtraData	components/info_panels.moc.cpp	/^const QMetaObjectExtraData ExtraMetaPanel::staticMetaObjectExtraData = {$/;"	m	class:ExtraMetaPanel	file:
staticMetaObjectExtraData	components/info_panels.moc.cpp	/^const QMetaObjectExtraData InfoPanel::staticMetaObjectExtraData = {$/;"	m	class:InfoPanel	file:
staticMetaObjectExtraData	components/info_panels.moc.cpp	/^const QMetaObjectExtraData InputStatsPanel::staticMetaObjectExtraData = {$/;"	m	class:InputStatsPanel	file:
staticMetaObjectExtraData	components/info_panels.moc.cpp	/^const QMetaObjectExtraData MetaPanel::staticMetaObjectExtraData = {$/;"	m	class:MetaPanel	file:
staticMetaObjectExtraData	components/interface_widgets.moc.cpp	/^const QMetaObjectExtraData BackgroundWidget::staticMetaObjectExtraData = {$/;"	m	class:BackgroundWidget	file:
staticMetaObjectExtraData	components/interface_widgets.moc.cpp	/^const QMetaObjectExtraData CoverArtLabel::staticMetaObjectExtraData = {$/;"	m	class:CoverArtLabel	file:
staticMetaObjectExtraData	components/interface_widgets.moc.cpp	/^const QMetaObjectExtraData SpeedControlWidget::staticMetaObjectExtraData = {$/;"	m	class:SpeedControlWidget	file:
staticMetaObjectExtraData	components/interface_widgets.moc.cpp	/^const QMetaObjectExtraData SpeedLabel::staticMetaObjectExtraData = {$/;"	m	class:SpeedLabel	file:
staticMetaObjectExtraData	components/interface_widgets.moc.cpp	/^const QMetaObjectExtraData TimeLabel::staticMetaObjectExtraData = {$/;"	m	class:TimeLabel	file:
staticMetaObjectExtraData	components/interface_widgets.moc.cpp	/^const QMetaObjectExtraData VideoWidget::staticMetaObjectExtraData = {$/;"	m	class:VideoWidget	file:
staticMetaObjectExtraData	components/open_panels.moc.cpp	/^const QMetaObjectExtraData CaptureOpenPanel::staticMetaObjectExtraData = {$/;"	m	class:CaptureOpenPanel	file:
staticMetaObjectExtraData	components/open_panels.moc.cpp	/^const QMetaObjectExtraData DiscOpenPanel::staticMetaObjectExtraData = {$/;"	m	class:DiscOpenPanel	file:
staticMetaObjectExtraData	components/open_panels.moc.cpp	/^const QMetaObjectExtraData FileOpenBox::staticMetaObjectExtraData = {$/;"	m	class:FileOpenBox	file:
staticMetaObjectExtraData	components/open_panels.moc.cpp	/^const QMetaObjectExtraData FileOpenPanel::staticMetaObjectExtraData = {$/;"	m	class:FileOpenPanel	file:
staticMetaObjectExtraData	components/open_panels.moc.cpp	/^const QMetaObjectExtraData NetOpenPanel::staticMetaObjectExtraData = {$/;"	m	class:NetOpenPanel	file:
staticMetaObjectExtraData	components/open_panels.moc.cpp	/^const QMetaObjectExtraData OpenPanel::staticMetaObjectExtraData = {$/;"	m	class:OpenPanel	file:
staticMetaObjectExtraData	components/open_panels.moc.cpp	/^const QMetaObjectExtraData UrlValidator::staticMetaObjectExtraData = {$/;"	m	class:UrlValidator	file:
staticMetaObjectExtraData	components/playlist/playlist.moc.cpp	/^const QMetaObjectExtraData LocationBar::staticMetaObjectExtraData = {$/;"	m	class:LocationBar	file:
staticMetaObjectExtraData	components/playlist/playlist.moc.cpp	/^const QMetaObjectExtraData PlaylistWidget::staticMetaObjectExtraData = {$/;"	m	class:PlaylistWidget	file:
staticMetaObjectExtraData	components/playlist/playlist_model.moc.cpp	/^const QMetaObjectExtraData PLModel::staticMetaObjectExtraData = {$/;"	m	class:PLModel	file:
staticMetaObjectExtraData	components/playlist/playlist_model.moc.cpp	/^const QMetaObjectExtraData PlMimeData::staticMetaObjectExtraData = {$/;"	m	class:PlMimeData	file:
staticMetaObjectExtraData	components/playlist/selector.moc.cpp	/^const QMetaObjectExtraData PLSelItem::staticMetaObjectExtraData = {$/;"	m	class:PLSelItem	file:
staticMetaObjectExtraData	components/playlist/selector.moc.cpp	/^const QMetaObjectExtraData PLSelector::staticMetaObjectExtraData = {$/;"	m	class:PLSelector	file:
staticMetaObjectExtraData	components/playlist/standardpanel.moc.cpp	/^const QMetaObjectExtraData StandardPLPanel::staticMetaObjectExtraData = {$/;"	m	class:StandardPLPanel	file:
staticMetaObjectExtraData	components/playlist/views.moc.cpp	/^const QMetaObjectExtraData PicFlowView::staticMetaObjectExtraData = {$/;"	m	class:PicFlowView	file:
staticMetaObjectExtraData	components/playlist/views.moc.cpp	/^const QMetaObjectExtraData PlIconView::staticMetaObjectExtraData = {$/;"	m	class:PlIconView	file:
staticMetaObjectExtraData	components/playlist/views.moc.cpp	/^const QMetaObjectExtraData PlIconViewItemDelegate::staticMetaObjectExtraData = {$/;"	m	class:PlIconViewItemDelegate	file:
staticMetaObjectExtraData	components/playlist/views.moc.cpp	/^const QMetaObjectExtraData PlListView::staticMetaObjectExtraData = {$/;"	m	class:PlListView	file:
staticMetaObjectExtraData	components/playlist/views.moc.cpp	/^const QMetaObjectExtraData PlListViewItemDelegate::staticMetaObjectExtraData = {$/;"	m	class:PlListViewItemDelegate	file:
staticMetaObjectExtraData	components/playlist/views.moc.cpp	/^const QMetaObjectExtraData PlTreeView::staticMetaObjectExtraData = {$/;"	m	class:PlTreeView	file:
staticMetaObjectExtraData	components/playlist/vlc_model.moc.cpp	/^const QMetaObjectExtraData VLCModel::staticMetaObjectExtraData = {$/;"	m	class:VLCModel	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData ColorConfigControl::staticMetaObjectExtraData = {$/;"	m	class:ColorConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData ConfigControl::staticMetaObjectExtraData = {$/;"	m	class:ConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData DirectoryConfigControl::staticMetaObjectExtraData = {$/;"	m	class:DirectoryConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData FileConfigControl::staticMetaObjectExtraData = {$/;"	m	class:FileConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData FloatConfigControl::staticMetaObjectExtraData = {$/;"	m	class:FloatConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData FloatRangeConfigControl::staticMetaObjectExtraData = {$/;"	m	class:FloatRangeConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData FontConfigControl::staticMetaObjectExtraData = {$/;"	m	class:FontConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData IntegerConfigControl::staticMetaObjectExtraData = {$/;"	m	class:IntegerConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData IntegerListConfigControl::staticMetaObjectExtraData = {$/;"	m	class:IntegerListConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData InterfacePreviewWidget::staticMetaObjectExtraData = {$/;"	m	class:InterfacePreviewWidget	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData KeySelectorControl::staticMetaObjectExtraData = {$/;"	m	class:KeySelectorControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData ModuleListConfigControl::staticMetaObjectExtraData = {$/;"	m	class:ModuleListConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData StringConfigControl::staticMetaObjectExtraData = {$/;"	m	class:StringConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData StringListConfigControl::staticMetaObjectExtraData = {$/;"	m	class:StringListConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData VFloatConfigControl::staticMetaObjectExtraData = {$/;"	m	class:VFloatConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData VIntConfigControl::staticMetaObjectExtraData = {$/;"	m	class:VIntConfigControl	file:
staticMetaObjectExtraData	components/preferences_widgets.moc.cpp	/^const QMetaObjectExtraData VStringConfigControl::staticMetaObjectExtraData = {$/;"	m	class:VStringConfigControl	file:
staticMetaObjectExtraData	components/simple_preferences.moc.cpp	/^const QMetaObjectExtraData SPrefsCatList::staticMetaObjectExtraData = {$/;"	m	class:SPrefsCatList	file:
staticMetaObjectExtraData	components/simple_preferences.moc.cpp	/^const QMetaObjectExtraData SPrefsPanel::staticMetaObjectExtraData = {$/;"	m	class:SPrefsPanel	file:
staticMetaObjectExtraData	components/sout/profile_selector.moc.cpp	/^const QMetaObjectExtraData VLCProfileEditor::staticMetaObjectExtraData = {$/;"	m	class:VLCProfileEditor	file:
staticMetaObjectExtraData	components/sout/profile_selector.moc.cpp	/^const QMetaObjectExtraData VLCProfileSelector::staticMetaObjectExtraData = {$/;"	m	class:VLCProfileSelector	file:
staticMetaObjectExtraData	components/sout/sout_widgets.moc.cpp	/^const QMetaObjectExtraData FileDestBox::staticMetaObjectExtraData = {$/;"	m	class:FileDestBox	file:
staticMetaObjectExtraData	components/sout/sout_widgets.moc.cpp	/^const QMetaObjectExtraData HTTPDestBox::staticMetaObjectExtraData = {$/;"	m	class:HTTPDestBox	file:
staticMetaObjectExtraData	components/sout/sout_widgets.moc.cpp	/^const QMetaObjectExtraData ICEDestBox::staticMetaObjectExtraData = {$/;"	m	class:ICEDestBox	file:
staticMetaObjectExtraData	components/sout/sout_widgets.moc.cpp	/^const QMetaObjectExtraData MMSHDestBox::staticMetaObjectExtraData = {$/;"	m	class:MMSHDestBox	file:
staticMetaObjectExtraData	components/sout/sout_widgets.moc.cpp	/^const QMetaObjectExtraData RTPDestBox::staticMetaObjectExtraData = {$/;"	m	class:RTPDestBox	file:
staticMetaObjectExtraData	components/sout/sout_widgets.moc.cpp	/^const QMetaObjectExtraData RTSPDestBox::staticMetaObjectExtraData = {$/;"	m	class:RTSPDestBox	file:
staticMetaObjectExtraData	components/sout/sout_widgets.moc.cpp	/^const QMetaObjectExtraData UDPDestBox::staticMetaObjectExtraData = {$/;"	m	class:UDPDestBox	file:
staticMetaObjectExtraData	components/sout/sout_widgets.moc.cpp	/^const QMetaObjectExtraData VirtualDestBox::staticMetaObjectExtraData = {$/;"	m	class:VirtualDestBox	file:
staticMetaObjectExtraData	dialogs/bookmarks.moc.cpp	/^const QMetaObjectExtraData BookmarksDialog::staticMetaObjectExtraData = {$/;"	m	class:BookmarksDialog	file:
staticMetaObjectExtraData	dialogs/convert.moc.cpp	/^const QMetaObjectExtraData ConvertDialog::staticMetaObjectExtraData = {$/;"	m	class:ConvertDialog	file:
staticMetaObjectExtraData	dialogs/epg.moc.cpp	/^const QMetaObjectExtraData EpgDialog::staticMetaObjectExtraData = {$/;"	m	class:EpgDialog	file:
staticMetaObjectExtraData	dialogs/errors.moc.cpp	/^const QMetaObjectExtraData ErrorsDialog::staticMetaObjectExtraData = {$/;"	m	class:ErrorsDialog	file:
staticMetaObjectExtraData	dialogs/extended.moc.cpp	/^const QMetaObjectExtraData ExtendedDialog::staticMetaObjectExtraData = {$/;"	m	class:ExtendedDialog	file:
staticMetaObjectExtraData	dialogs/extensions.moc.cpp	/^const QMetaObjectExtraData ExtensionDialog::staticMetaObjectExtraData = {$/;"	m	class:ExtensionDialog	file:
staticMetaObjectExtraData	dialogs/extensions.moc.cpp	/^const QMetaObjectExtraData ExtensionsDialogProvider::staticMetaObjectExtraData = {$/;"	m	class:ExtensionsDialogProvider	file:
staticMetaObjectExtraData	dialogs/extensions.moc.cpp	/^const QMetaObjectExtraData WidgetMapper::staticMetaObjectExtraData = {$/;"	m	class:WidgetMapper	file:
staticMetaObjectExtraData	dialogs/external.moc.cpp	/^const QMetaObjectExtraData DialogHandler::staticMetaObjectExtraData = {$/;"	m	class:DialogHandler	file:
staticMetaObjectExtraData	dialogs/external.moc.cpp	/^const QMetaObjectExtraData QVLCProgressDialog::staticMetaObjectExtraData = {$/;"	m	class:QVLCProgressDialog	file:
staticMetaObjectExtraData	dialogs/firstrun.moc.cpp	/^const QMetaObjectExtraData FirstRun::staticMetaObjectExtraData = {$/;"	m	class:FirstRun	file:
staticMetaObjectExtraData	dialogs/gototime.moc.cpp	/^const QMetaObjectExtraData GotoTimeDialog::staticMetaObjectExtraData = {$/;"	m	class:GotoTimeDialog	file:
staticMetaObjectExtraData	dialogs/help.moc.cpp	/^const QMetaObjectExtraData AboutDialog::staticMetaObjectExtraData = {$/;"	m	class:AboutDialog	file:
staticMetaObjectExtraData	dialogs/help.moc.cpp	/^const QMetaObjectExtraData HelpDialog::staticMetaObjectExtraData = {$/;"	m	class:HelpDialog	file:
staticMetaObjectExtraData	dialogs/mediainfo.moc.cpp	/^const QMetaObjectExtraData MediaInfoDialog::staticMetaObjectExtraData = {$/;"	m	class:MediaInfoDialog	file:
staticMetaObjectExtraData	dialogs/messages.moc.cpp	/^const QMetaObjectExtraData MessagesDialog::staticMetaObjectExtraData = {$/;"	m	class:MessagesDialog	file:
staticMetaObjectExtraData	dialogs/open.moc.cpp	/^const QMetaObjectExtraData OpenDialog::staticMetaObjectExtraData = {$/;"	m	class:OpenDialog	file:
staticMetaObjectExtraData	dialogs/openurl.moc.cpp	/^const QMetaObjectExtraData OpenUrlDialog::staticMetaObjectExtraData = {$/;"	m	class:OpenUrlDialog	file:
staticMetaObjectExtraData	dialogs/playlist.moc.cpp	/^const QMetaObjectExtraData PlaylistDialog::staticMetaObjectExtraData = {$/;"	m	class:PlaylistDialog	file:
staticMetaObjectExtraData	dialogs/plugins.moc.cpp	/^const QMetaObjectExtraData ExtensionListModel::staticMetaObjectExtraData = {$/;"	m	class:ExtensionListModel	file:
staticMetaObjectExtraData	dialogs/plugins.moc.cpp	/^const QMetaObjectExtraData ExtensionTab::staticMetaObjectExtraData = {$/;"	m	class:ExtensionTab	file:
staticMetaObjectExtraData	dialogs/plugins.moc.cpp	/^const QMetaObjectExtraData PluginDialog::staticMetaObjectExtraData = {$/;"	m	class:PluginDialog	file:
staticMetaObjectExtraData	dialogs/plugins.moc.cpp	/^const QMetaObjectExtraData PluginTab::staticMetaObjectExtraData = {$/;"	m	class:PluginTab	file:
staticMetaObjectExtraData	dialogs/podcast_configuration.moc.cpp	/^const QMetaObjectExtraData PodcastConfigDialog::staticMetaObjectExtraData = {$/;"	m	class:PodcastConfigDialog	file:
staticMetaObjectExtraData	dialogs/preferences.moc.cpp	/^const QMetaObjectExtraData PrefsDialog::staticMetaObjectExtraData = {$/;"	m	class:PrefsDialog	file:
staticMetaObjectExtraData	dialogs/sout.moc.cpp	/^const QMetaObjectExtraData SoutDialog::staticMetaObjectExtraData = {$/;"	m	class:SoutDialog	file:
staticMetaObjectExtraData	dialogs/toolbar.moc.cpp	/^const QMetaObjectExtraData DroppingController::staticMetaObjectExtraData = {$/;"	m	class:DroppingController	file:
staticMetaObjectExtraData	dialogs/toolbar.moc.cpp	/^const QMetaObjectExtraData ToolbarEditDialog::staticMetaObjectExtraData = {$/;"	m	class:ToolbarEditDialog	file:
staticMetaObjectExtraData	dialogs/toolbar.moc.cpp	/^const QMetaObjectExtraData WidgetListing::staticMetaObjectExtraData = {$/;"	m	class:WidgetListing	file:
staticMetaObjectExtraData	dialogs_provider.moc.cpp	/^const QMetaObjectExtraData DialogsProvider::staticMetaObjectExtraData = {$/;"	m	class:DialogsProvider	file:
staticMetaObjectExtraData	extensions_manager.moc.cpp	/^const QMetaObjectExtraData ExtensionsManager::staticMetaObjectExtraData = {$/;"	m	class:ExtensionsManager	file:
staticMetaObjectExtraData	input_manager.moc.cpp	/^const QMetaObjectExtraData InputManager::staticMetaObjectExtraData = {$/;"	m	class:InputManager	file:
staticMetaObjectExtraData	input_manager.moc.cpp	/^const QMetaObjectExtraData MainInputManager::staticMetaObjectExtraData = {$/;"	m	class:MainInputManager	file:
staticMetaObjectExtraData	main_interface.moc.cpp	/^const QMetaObjectExtraData MainInterface::staticMetaObjectExtraData = {$/;"	m	class:MainInterface	file:
staticMetaObjectExtraData	menus.moc.cpp	/^const QMetaObjectExtraData MenuFunc::staticMetaObjectExtraData = {$/;"	m	class:MenuFunc	file:
staticMetaObjectExtraData	menus.moc.cpp	/^const QMetaObjectExtraData MenuItemData::staticMetaObjectExtraData = {$/;"	m	class:MenuItemData	file:
staticMetaObjectExtraData	menus.moc.cpp	/^const QMetaObjectExtraData VLCMenuBar::staticMetaObjectExtraData = {$/;"	m	class:VLCMenuBar	file:
staticMetaObjectExtraData	recents.moc.cpp	/^const QMetaObjectExtraData RecentsMRL::staticMetaObjectExtraData = {$/;"	m	class:RecentsMRL	file:
staticMetaObjectExtraData	util/buttons/BrowseButton.moc.cpp	/^const QMetaObjectExtraData BrowseButton::staticMetaObjectExtraData = {$/;"	m	class:BrowseButton	file:
staticMetaObjectExtraData	util/buttons/DeckButtonsLayout.moc.cpp	/^const QMetaObjectExtraData DeckButtonsLayout::staticMetaObjectExtraData = {$/;"	m	class:DeckButtonsLayout	file:
staticMetaObjectExtraData	util/buttons/RoundButton.moc.cpp	/^const QMetaObjectExtraData RoundButton::staticMetaObjectExtraData = {$/;"	m	class:RoundButton	file:
staticMetaObjectExtraData	util/customwidgets.moc.cpp	/^const QMetaObjectExtraData AnimatedIcon::staticMetaObjectExtraData = {$/;"	m	class:AnimatedIcon	file:
staticMetaObjectExtraData	util/customwidgets.moc.cpp	/^const QMetaObjectExtraData QFramelessButton::staticMetaObjectExtraData = {$/;"	m	class:QFramelessButton	file:
staticMetaObjectExtraData	util/customwidgets.moc.cpp	/^const QMetaObjectExtraData QToolButtonExt::staticMetaObjectExtraData = {$/;"	m	class:QToolButtonExt	file:
staticMetaObjectExtraData	util/customwidgets.moc.cpp	/^const QMetaObjectExtraData QVLCDebugLevelSpinBox::staticMetaObjectExtraData = {$/;"	m	class:QVLCDebugLevelSpinBox	file:
staticMetaObjectExtraData	util/customwidgets.moc.cpp	/^const QMetaObjectExtraData SpinningIcon::staticMetaObjectExtraData = {$/;"	m	class:SpinningIcon	file:
staticMetaObjectExtraData	util/input_slider.moc.cpp	/^const QMetaObjectExtraData SeekSlider::staticMetaObjectExtraData = {$/;"	m	class:SeekSlider	file:
staticMetaObjectExtraData	util/input_slider.moc.cpp	/^const QMetaObjectExtraData SoundSlider::staticMetaObjectExtraData = {$/;"	m	class:SoundSlider	file:
staticMetaObjectExtraData	util/pictureflow.moc.cpp	/^const QMetaObjectExtraData PictureFlow::staticMetaObjectExtraData = {$/;"	m	class:PictureFlow	file:
staticMetaObjectExtraData	util/qmenuview.moc.cpp	/^const QMetaObjectExtraData QMenuView::staticMetaObjectExtraData = {$/;"	m	class:QMenuView	file:
staticMetaObjectExtraData	util/qvlcapp.moc.cpp	/^const QMetaObjectExtraData QVLCApp::staticMetaObjectExtraData = {$/;"	m	class:QVLCApp	file:
staticMetaObjectExtraData	util/searchlineedit.moc.cpp	/^const QMetaObjectExtraData ClickLineEdit::staticMetaObjectExtraData = {$/;"	m	class:ClickLineEdit	file:
staticMetaObjectExtraData	util/searchlineedit.moc.cpp	/^const QMetaObjectExtraData SearchLineEdit::staticMetaObjectExtraData = {$/;"	m	class:SearchLineEdit	file:
staticMetaObjectExtraData	util/timetooltip.moc.cpp	/^const QMetaObjectExtraData TimeTooltip::staticMetaObjectExtraData = {$/;"	m	class:TimeTooltip	file:
staticMetaObjectExtraData	variables.moc.cpp	/^const QMetaObjectExtraData QVLCInteger::staticMetaObjectExtraData = {$/;"	m	class:QVLCInteger	file:
staticMetaObjectExtraData	variables.moc.cpp	/^const QMetaObjectExtraData QVLCPointer::staticMetaObjectExtraData = {$/;"	m	class:QVLCPointer	file:
staticMetaObjectExtraData	variables.moc.cpp	/^const QMetaObjectExtraData QVLCVariable::staticMetaObjectExtraData = {$/;"	m	class:QVLCVariable	file:
statisticsUpdated	input_manager.moc.cpp	/^void InputManager::statisticsUpdated(input_item_t * _t1)$/;"	f	class:InputManager
statsBox	ui/streampanel.h	/^    QGroupBox *statsBox;$/;"	m	class:Ui_BroadcastPanel
statusBox	ui/streampanel.h	/^    QGroupBox *statusBox;$/;"	m	class:Ui_BroadcastPanel
step	util/pictureflow.cpp	/^    int step;$/;"	m	class:PictureFlowAnimator	file:
stop	dialogs/vlm.cpp	/^void VLMBroadcast::stop()$/;"	f	class:VLMBroadcast
stop	input_manager.cpp	/^void MainInputManager::stop()$/;"	f	class:MainInputManager
stop	util/customwidgets.hpp	/^    inline void stop()$/;"	f	class:AnimatedIcon
stop	util/pictureflow.cpp	/^void PictureFlowAnimator::stop(int slide)$/;"	f	class:PictureFlowAnimator
stopButton	ui/streampanel.h	/^    QPushButton *stopButton;$/;"	m	class:Ui_BroadcastPanel
stopProgressBar	dialogs/external.cpp	/^void DialogHandler::stopProgressBar (QWidget *dlg)$/;"	f	class:DialogHandler
stopShowing	dialogs/errors.hpp	/^    QCheckBox *stopShowing;$/;"	m	class:ErrorsDialog
storedMethod	dialogs/open.hpp	/^    QString storedMethod;$/;"	m	class:OpenDialog
stream	dialogs/open.cpp	/^void OpenDialog::stream( bool b_transcode_only )$/;"	f	class:OpenDialog
stream_bitrate_stat	components/info_panels.hpp	/^    QTreeWidgetItem *stream_bitrate_stat;$/;"	m	class:InputStatsPanel
streaming	components/info_panels.hpp	/^    QTreeWidgetItem *streaming;$/;"	m	class:InputStatsPanel
streamingDialog	dialogs_provider.cpp	/^void DialogsProvider::streamingDialog( QWidget *parent,$/;"	f	class:DialogsProvider
stuffBox	ui/streampanel.h	/^    QGroupBox *stuffBox;$/;"	m	class:Ui_BroadcastPanel
styleCB	components/simple_preferences.hpp	/^enum { skinRB, qtRB, styleCB };$/;"	e	enum:__anon23
styleStackedWidget	ui/sprefs_interface.h	/^    QStackedWidget *styleStackedWidget;$/;"	m	class:Ui_SPrefsInterface
stylesCombo	ui/sprefs_interface.h	/^    QComboBox *stylesCombo;$/;"	m	class:Ui_SPrefsInterface
stylesLabel	ui/sprefs_interface.h	/^    QLabel *stylesLabel;$/;"	m	class:Ui_SPrefsInterface
sub	dialogs/messages.hpp	/^    msg_subscription_t *sub;$/;"	m	class:MessagesDialog
subBrowseButton	ui/open_file.h	/^    QPushButton *subBrowseButton;$/;"	m	class:Ui_OpenFile
subCheckBox	ui/open_file.h	/^    QCheckBox *subCheckBox;$/;"	m	class:Ui_OpenFile
subDurationSpin	components/extended_panels.hpp	/^    QDoubleSpinBox *subDurationSpin;$/;"	m	class:SyncControls
subFrame	ui/open_file.h	/^    QFrame *subFrame;$/;"	m	class:Ui_OpenFile
subInput	ui/open_file.h	/^    QLineEdit *subInput;$/;"	m	class:Ui_OpenFile
subLangLabel	ui/sprefs_subtitles.h	/^    QLabel *subLangLabel;$/;"	m	class:Ui_SPrefsSubtitles
subSpeedSpin	components/extended_panels.hpp	/^    QDoubleSpinBox *subSpeedSpin;$/;"	m	class:SyncControls
subdir	Makefile	/^subdir = modules\/gui\/qt4$/;"	m
subsCodecBox	ui/profiles.h	/^    QComboBox *subsCodecBox;$/;"	m	class:Ui_Profiles
subsOverlay	ui/profiles.h	/^    QCheckBox *subsOverlay;$/;"	m	class:Ui_Profiles
subsPosLabel	ui/sprefs_subtitles.h	/^    QLabel *subsPosLabel;$/;"	m	class:Ui_SPrefsSubtitles
subsPosition	ui/sprefs_subtitles.h	/^    QSpinBox *subsPosition;$/;"	m	class:Ui_SPrefsSubtitles
subsSpin	components/extended_panels.hpp	/^    SyncWidget *subsSpin;$/;"	m	class:SyncControls
subsdelayClean	components/extended_panels.cpp	/^void SyncControls::subsdelayClean()$/;"	f	class:SyncControls
subsdelaySetFactor	components/extended_panels.cpp	/^void SyncControls::subsdelaySetFactor( double f_factor )$/;"	f	class:SyncControls
subtitles	ui/profiles.h	/^    QWidget *subtitles;$/;"	m	class:Ui_Profiles
subtitlesLabel	ui/open_disk.h	/^    QLabel *subtitlesLabel;$/;"	m	class:Ui_OpenDisk
subtitlesSpin	ui/open_disk.h	/^    QSpinBox *subtitlesSpin;$/;"	m	class:Ui_OpenDisk
supportedDropActions	components/playlist/playlist_model.cpp	/^Qt::DropActions PLModel::supportedDropActions() const$/;"	f	class:PLModel
surface	util/pictureflow.cpp	/^QImage* PictureFlowSoftwareRenderer::surface(QModelIndex index)$/;"	f	class:PictureFlowSoftwareRenderer
switchPanel	components/simple_preferences.cpp	/^void SPrefsCatList::switchPanel( int i )$/;"	f	class:SPrefsCatList
sync	components/interface_widgets.cpp	/^void VideoWidget::sync( void )$/;"	f	class:VideoWidget
syncW	dialogs/extended.hpp	/^    SyncControls *syncW;$/;"	m	class:ExtendedDialog
synchroChanged	input_manager.moc.cpp	/^void InputManager::synchroChanged()$/;"	f	class:InputManager
synchroDialog	dialogs_provider.cpp	/^void DialogsProvider::synchroDialog()$/;"	f	class:DialogsProvider
sysPop	ui/sprefs_interface.h	/^    QCheckBox *sysPop;$/;"	m	class:Ui_SPrefsInterface
sysTray	main_interface.hpp	/^    QSystemTrayIcon     *sysTray;$/;"	m	class:MainInterface
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
systrayBox	ui/sprefs_interface.h	/^    QCheckBox *systrayBox;$/;"	m	class:Ui_SPrefsInterface
systrayMenu	main_interface.hpp	/^    QMenu               *systrayMenu;$/;"	m	class:MainInterface
tab	ui/about.h	/^    QWidget *tab;$/;"	m	class:Ui_aboutWidget
tab	ui/messages_panel.h	/^    QWidget *tab;$/;"	m	class:Ui_messagesPanelWidget
tab	ui/sout.h	/^    QWidget *tab;$/;"	m	class:Ui_Sout
tab	ui/video_effects.h	/^    QWidget *tab;$/;"	m	class:Ui_ExtVideoWidget
tabChanged	dialogs/messages.cpp	/^void MessagesDialog::tabChanged( int i )$/;"	f	class:MessagesDialog
tabChanged	dialogs/sout.cpp	/^void SoutDialog::tabChanged( int i )$/;"	f	class:SoutDialog
tabWidget	ui/about.h	/^    QTabWidget *tabWidget;$/;"	m	class:Ui_aboutWidget
tabWidget	ui/profiles.h	/^    QTabWidget *tabWidget;$/;"	m	class:Ui_Profiles
tab_2	ui/about.h	/^    QWidget *tab_2;$/;"	m	class:Ui_aboutWidget
tab_2	ui/messages_panel.h	/^    QWidget *tab_2;$/;"	m	class:Ui_messagesPanelWidget
tab_2	ui/video_effects.h	/^    QWidget *tab_2;$/;"	m	class:Ui_ExtVideoWidget
tab_3	ui/about.h	/^    QWidget *tab_3;$/;"	m	class:Ui_aboutWidget
tab_3	ui/video_effects.h	/^    QWidget *tab_3;$/;"	m	class:Ui_ExtVideoWidget
tab_4	ui/about.h	/^    QWidget *tab_4;$/;"	m	class:Ui_aboutWidget
tab_5	ui/video_effects.h	/^    QWidget *tab_5;$/;"	m	class:Ui_ExtVideoWidget
tab_8	ui/video_effects.h	/^    QWidget *tab_8;$/;"	m	class:Ui_ExtVideoWidget
tab_9	ui/video_effects.h	/^    QWidget *tab_9;$/;"	m	class:Ui_ExtVideoWidget
tab_atmo	ui/video_effects.h	/^    QWidget *tab_atmo;$/;"	m	class:Ui_ExtVideoWidget
table	components/preferences_widgets.hpp	/^    QTreeWidget *table;$/;"	m	class:KeyInputDialog
table	components/preferences_widgets.hpp	/^    QTreeWidget *table;$/;"	m	class:KeySelectorControl
tabs	dialogs/plugins.hpp	/^    QTabWidget *tabs;$/;"	m	class:PluginDialog
takeAt	util/buttons/DeckButtonsLayout.cpp	/^QLayoutItem* DeckButtonsLayout::takeAt( int index )$/;"	f	class:DeckButtonsLayout
takeChildAt	components/playlist/playlist_item.cpp	/^void PLItem::takeChildAt( int index )$/;"	f	class:PLItem
takeItem	components/playlist/playlist_model.cpp	/^void PLModel::takeItem( PLItem *item )$/;"	f	class:PLModel
target	util/pictureflow.cpp	/^    int target;$/;"	m	class:PictureFlowAnimator	file:
targetScreen	components/controller.cpp	/^int FullscreenControllerWidget::targetScreen()$/;"	f	class:FullscreenControllerWidget
target_alias	Makefile	/^target_alias = $/;"	m
taskbar_wmsg	main_interface.hpp	/^    UINT taskbar_wmsg;$/;"	m	class:MainInterface
teletextActivated	input_manager.moc.cpp	/^void InputManager::teletextActivated(bool _t1)$/;"	f	class:InputManager
teletextPossible	input_manager.moc.cpp	/^void InputManager::teletextPossible(bool _t1)$/;"	f	class:InputManager
teletextTransparencyActivated	input_manager.moc.cpp	/^void InputManager::teletextTransparencyActivated(bool _t1)$/;"	f	class:InputManager
telexFrame	components/controller.cpp	/^QFrame *AbstractController::telexFrame()$/;"	f	class:AbstractController
telexSetPage	input_manager.cpp	/^void InputManager::telexSetPage( int page )$/;"	f	class:InputManager
telexSetTransparency	input_manager.cpp	/^void InputManager::telexSetTransparency( bool b_transparentTelextext )$/;"	f	class:InputManager
tempWidget	ui/open_file.h	/^    QGroupBox *tempWidget;$/;"	m	class:Ui_OpenFile
text	components/playlist/selector.hpp	/^    QString text() const { return lbl->text(); }$/;"	f	class:PLSelItem
text	components/preferences_widgets.hpp	/^    QLineEdit *text;$/;"	m	class:FileConfigControl
text	components/preferences_widgets.hpp	/^    QLineEdit *text;$/;"	m	class:ModuleListConfigControl
text	components/preferences_widgets.hpp	/^    QLineEdit *text;$/;"	m	class:StringConfigControl
text	dialogs/messages.cpp	/^    QString text;$/;"	m	class:MsgEvent	file:
textFromValue	util/customwidgets.cpp	/^QString QVLCDebugLevelSpinBox::textFromValue( int v ) const$/;"	f	class:QVLCDebugLevelSpinBox
thanksEdit	ui/about.h	/^    QTextEdit *thanksEdit;$/;"	m	class:Ui_aboutWidget
thread	qt4.hpp	/^    vlc_thread_t thread;$/;"	m	struct:intf_sys_t
threadpool	thpool.h	/^typedef struct thpool_* threadpool;$/;"	t	typeref:struct:thpool_
time	adapters/seekpoints.hpp	/^    int64_t time;$/;"	m	class:SeekPoint
time	dialogs/vlm.hpp	/^    QDateTimeEdit *time, *date, *repeatTime;$/;"	m	class:VLMDialog
timeA	input_manager.hpp	/^    mtime_t         timeA, timeB;$/;"	m	class:InputManager
timeB	input_manager.hpp	/^    mtime_t         timeA, timeB;$/;"	m	class:InputManager
timeEdit	dialogs/gototime.hpp	/^    QTimeEdit *timeEdit;$/;"	m	class:GotoTimeDialog
timeLabelDoubleClicked	components/interface_widgets.moc.cpp	/^void TimeLabel::timeLabelDoubleClicked()$/;"	f	class:TimeLabel
timer	dialogs/epg.hpp	/^    QTimer *timer;$/;"	m	class:EpgDialog
title	dialogs/epg.hpp	/^    QLabel *title;$/;"	m	class:EpgDialog
title	dialogs/plugins.cpp	/^    QString name, title, description, shortdesc, author, version, url;$/;"	m	class:ExtensionCopy	file:
titleChanged	input_manager.moc.cpp	/^void InputManager::titleChanged(bool _t1)$/;"	f	class:InputManager
titleLabel	ui/open_disk.h	/^    QLabel *titleLabel;$/;"	m	class:Ui_OpenDisk
titleSpin	ui/open_disk.h	/^    QSpinBox *titleSpin;$/;"	m	class:Ui_OpenDisk
title_text	components/info_panels.hpp	/^    QLineEdit *title_text;$/;"	m	class:MetaPanel
toNativeSepNoSlash	util/qt_dirs.hpp	40;"	d
toNativeSeparators	util/qt_dirs.hpp	30;"	d
toURI	util/qt_dirs.cpp	/^QString toURI( const QString& s )$/;"	f
toggle	components/interface_widgets.hpp	/^    void toggle(){ TOGGLEV( this ); }$/;"	f	class:BackgroundWidget
toggleAdvanced	components/controller.cpp	/^void ControlsWidget::toggleAdvanced()$/;"	f	class:ControlsWidget
toggleAdvancedButtons	main_interface.cpp	/^void MainInterface::toggleAdvancedButtons()$/;"	f	class:MainInterface
toggleAdvancedPanel	dialogs/open.cpp	/^void OpenDialog::toggleAdvancedPanel()$/;"	f	class:OpenDialog
toggleColumnShown	components/playlist/standardpanel.cpp	/^void StandardPLPanel::toggleColumnShown( int i )$/;"	f	class:StandardPLPanel
toggleEnabled	dialogs/vlm.cpp	/^void VLMAWidget::toggleEnabled( bool b_enable )$/;"	f	class:VLMAWidget
toggleFSC	main_interface.cpp	/^void MainInterface::toggleFSC()$/;"	f	class:MainInterface
toggleFullwidth	components/controller.cpp	/^void FullscreenControllerWidget::toggleFullwidth()$/;"	f	class:FullscreenControllerWidget
toggleInterfaceFullScreen	main_interface.cpp	/^void MainInterface::toggleInterfaceFullScreen()$/;"	f	class:MainInterface
toggleLoop	dialogs/vlm.cpp	/^void VLMBroadcast::toggleLoop()$/;"	f	class:VLMBroadcast
toggleMinimalView	main_interface.cpp	/^void MainInterface::toggleMinimalView( bool b_minimal )$/;"	f	class:MainInterface
toggleMuteAudio	actions_manager.cpp	/^void ActionsManager::toggleMuteAudio()$/;"	f	class:ActionsManager
togglePlayPause	dialogs/vlm.cpp	/^void VLMBroadcast::togglePlayPause()$/;"	f	class:VLMBroadcast
togglePlayPause	input_manager.cpp	/^void MainInputManager::togglePlayPause()$/;"	f	class:MainInputManager
togglePlaylist	main_interface.cpp	/^void MainInterface::togglePlaylist()$/;"	f	class:MainInterface
toggleRandom	input_manager.cpp	/^void MainInputManager::toggleRandom()$/;"	f	class:MainInputManager
toggleSubtitleFrame	components/open_panels.cpp	/^void FileOpenPanel::toggleSubtitleFrame( bool b )$/;"	f	class:FileOpenPanel
toggleTimeDisplay	components/interface_widgets.cpp	/^void TimeLabel::toggleTimeDisplay()$/;"	f	class:TimeLabel
toggleUpdateSystrayMenu	main_interface.cpp	/^void MainInterface::toggleUpdateSystrayMenu()$/;"	f	class:MainInterface
toggleVisible	dialogs/gototime.cpp	/^void GotoTimeDialog::toggleVisible()$/;"	f	class:GotoTimeDialog
toggleVisible	dialogs/vlm.cpp	/^void VLMDialog::toggleVisible()$/;"	f	class:VLMDialog
toggleVisible	util/qvlcframe.hpp	/^    void toggleVisible()$/;"	f	class:QVLCDialog
toggleVisible	util/qvlcframe.hpp	/^    void toggleVisible()$/;"	f	class:QVLCFrame
toggleVisible	util/qvlcframe.hpp	/^    void toggleVisible()$/;"	f	class:QVLCMW
toolBarConfUpdated	dialogs_provider.moc.cpp	/^void DialogsProvider::toolBarConfUpdated()$/;"	f	class:DialogsProvider
toolBox	ui/sout.h	/^    QToolBox *toolBox;$/;"	m	class:Ui_Sout
toolbarActionsMapper	components/controller.hpp	/^    QSignalMapper       *toolbarActionsMapper;$/;"	m	class:AbstractController
toolbarDialog	dialogs_provider.cpp	/^void DialogsProvider::toolbarDialog()$/;"	f	class:DialogsProvider
tooltipL	components/controller.hpp	/^static const char* const tooltipL[BUTTON_MAX] = { I_PLAY_TOOLTIP,$/;"	v
tooltipStringPattern	components/interface_widgets.hpp	/^    QString tooltipStringPattern;$/;"	m	class:SpeedLabel
topBotCropSync	ui/video_effects.h	/^    QCheckBox *topBotCropSync;$/;"	m	class:Ui_ExtVideoWidget
top_build_prefix	Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_builddir	Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..\/..\/..$/;"	m
trace	remoteControlServer.cpp	/^void RCUtil::trace(const vlc_object_t* obj)$/;"	f	class:RCUtil
transcode	components/sout/profile_selector.hpp	/^    QString transcode;$/;"	m	class:VLCProfileSelector
transcode	dialogs/open.cpp	/^void OpenDialog::transcode()$/;"	f	class:OpenDialog
transcodeAudio	ui/profiles.h	/^    QCheckBox *transcodeAudio;$/;"	m	class:Ui_Profiles
transcodeBox	ui/sout.h	/^    QCheckBox *transcodeBox;$/;"	m	class:Ui_Sout
transcodeSubs	ui/profiles.h	/^    QCheckBox *transcodeSubs;$/;"	m	class:Ui_Profiles
transcodeValue	components/sout/profile_selector.cpp	/^QString VLCProfileEditor::transcodeValue()$/;"	f	class:VLCProfileEditor
transcodeVideo	ui/profiles.h	/^    QCheckBox *transcodeVideo;$/;"	m	class:Ui_Profiles
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transformEnable	ui/video_effects.h	/^    QGroupBox *transformEnable;$/;"	m	class:Ui_ExtVideoWidget
transformTypeCombo	ui/video_effects.h	/^    QComboBox *transformTypeCombo;$/;"	m	class:Ui_ExtVideoWidget
treeItem	components/playlist/selector.hpp	/^    QTreeWidgetItem *treeItem() { return qitem; }$/;"	f	class:PLSelItem
treePlaylist	ui/sprefs_interface.h	/^    QCheckBox *treePlaylist;$/;"	m	class:Ui_SPrefsInterface
treePlugins	dialogs/plugins.hpp	/^    QTreeWidget *treePlugins;$/;"	m	class:PluginTab
treeView	components/playlist/standardpanel.hpp	/^    QTreeView         *treeView;$/;"	m	class:StandardPLPanel
tree_filter	dialogs/preferences.hpp	/^    SearchLineEdit *tree_filter;$/;"	m	class:PrefsDialog
tree_panel	dialogs/preferences.hpp	/^    QWidget *tree_panel;$/;"	m	class:PrefsDialog
tree_panel_l	dialogs/preferences.hpp	/^    QVBoxLayout *tree_panel_l;$/;"	m	class:PrefsDialog
trigger	variables.cpp	/^void QVLCInteger::trigger (vlc_object_t *obj, vlc_value_t old, vlc_value_t cur)$/;"	f	class:QVLCInteger
trigger	variables.cpp	/^void QVLCPointer::trigger (vlc_object_t *obj, vlc_value_t old, vlc_value_t cur)$/;"	f	class:QVLCPointer
triggerAction	components/playlist/selector.hpp	/^    void triggerAction() { emit action( this ); }$/;"	f	class:PLSelItem
triggerMenu	extensions_manager.cpp	/^void ExtensionsManager::triggerMenu( int id )$/;"	f	class:ExtensionsManager
triggerQuit	util/qvlcapp.hpp	/^    static void triggerQuit()$/;"	f	class:QVLCApp
triggerRender	util/pictureflow.cpp	/^void PictureFlow::triggerRender()$/;"	f	class:PictureFlow
triggerTimer	util/pictureflow.cpp	/^    QTimer triggerTimer;$/;"	m	class:PictureFlowPrivate	file:
ttl	ui/sout.h	/^    QSpinBox *ttl;$/;"	m	class:Ui_Sout
ttlLabel	ui/sout.h	/^    QLabel *ttlLabel;$/;"	m	class:Ui_Sout
tuneBox	ui/sprefs_input.h	/^    QComboBox *tuneBox;$/;"	m	class:Ui_SPrefsInputAndCodecs
type	dialogs/vlm.hpp	/^    int type;$/;"	m	class:VLMAWidget
type	util/buttons/BrowseButton.cpp	/^BrowseButton::Type BrowseButton::type() const$/;"	f	class:BrowseButton
types	dialogs/preferences.hpp	/^    QGroupBox *types;$/;"	m	class:PrefsDialog
ui	components/extended_panels.hpp	/^    Ui::EqualizerWidget ui;$/;"	m	class:Equalizer
ui	components/extended_panels.hpp	/^    Ui::ExtVideoWidget ui;$/;"	m	class:ExtVideo
ui	components/open_panels.hpp	/^    Ui::OpenCapture ui;$/;"	m	class:CaptureOpenPanel
ui	components/open_panels.hpp	/^    Ui::OpenDisk ui;$/;"	m	class:DiscOpenPanel
ui	components/open_panels.hpp	/^    Ui::OpenFile ui;$/;"	m	class:FileOpenPanel
ui	components/open_panels.hpp	/^    Ui::OpenNetwork ui;$/;"	m	class:NetOpenPanel
ui	components/sout/profile_selector.hpp	/^    Ui::Profiles ui;$/;"	m	class:VLCProfileEditor
ui	dialogs/help.hpp	/^    Ui::aboutWidget ui;$/;"	m	class:AboutDialog
ui	dialogs/help.hpp	/^    Ui::updateWidget ui;$/;"	m	class:UpdateDialog
ui	dialogs/messages.hpp	/^    Ui::messagesPanelWidget ui;$/;"	m	class:MessagesDialog
ui	dialogs/open.hpp	/^    Ui::Open ui;$/;"	m	class:OpenDialog
ui	dialogs/podcast_configuration.hpp	/^    Ui::PodcastConfiguration ui;$/;"	m	class:PodcastConfigDialog
ui	dialogs/sout.hpp	/^    Ui::Sout ui;$/;"	m	class:SoutDialog
ui	dialogs/vlm.hpp	/^    Ui::Vlm ui;$/;"	m	class:VLMDialog
uic_verbose	Makefile	/^uic_verbose = $(uic_verbose_$(V))$/;"	m
uic_verbose_	Makefile	/^uic_verbose_ = $(uic_verbose__$(AM_DEFAULT_VERBOSITY))$/;"	m
uic_verbose_0	Makefile	/^uic_verbose_0 = @echo "  UIC   " $@;$/;"	m
uic_verbose__0	Makefile	/^uic_verbose__0 = $(uic_verbose_0)$/;"	m
unloadExtensions	extensions_manager.cpp	/^void ExtensionsManager::unloadExtensions()$/;"	f	class:ExtensionsManager
update	adapters/seekpoints.cpp	/^void SeekPoints::update()$/;"	f	class:SeekPoints
update	components/extended_panels.cpp	/^void SyncControls::update()$/;"	f	class:SyncControls
update	components/info_panels.cpp	/^void ExtraMetaPanel::update( input_item_t *p_item )$/;"	f	class:ExtraMetaPanel
update	components/info_panels.cpp	/^void InfoPanel::update( input_item_t *p_item)$/;"	f	class:InfoPanel
update	components/info_panels.cpp	/^void InputStatsPanel::update( input_item_t *p_item )$/;"	f	class:InputStatsPanel
update	components/info_panels.cpp	/^void MetaPanel::update( input_item_t *p_item )$/;"	f	class:MetaPanel
update	components/interface_widgets.hpp	/^    void update( )$/;"	f	class:CoverArtLabel
update	dialogs/bookmarks.cpp	/^void BookmarksDialog::update()$/;"	f	class:BookmarksDialog
update	dialogs/external.cpp	/^void QVLCProgressDialog::update (void *priv, const char *text, float value)$/;"	f	class:QVLCProgressDialog
update	dialogs/vlm.cpp	/^void VLMBroadcast::update()$/;"	f	class:VLMBroadcast
update	dialogs/vlm.cpp	/^void VLMSchedule::update()$/;"	f	class:VLMSchedule
update	dialogs/vlm.cpp	/^void VLMVod::update()$/;"	f	class:VLMVod
update	util/pictureflow.cpp	/^void PictureFlowAnimator::update()$/;"	f	class:PictureFlowAnimator
updateAllTabs	dialogs/mediainfo.cpp	/^void MediaInfoDialog::updateAllTabs( input_item_t *p_item )$/;"	f	class:MediaInfoDialog
updateAnimation	util/pictureflow.cpp	/^void PictureFlow::updateAnimation()$/;"	f	class:PictureFlow
updateArt	components/interface_widgets.cpp	/^void BackgroundWidget::updateArt( const QString& url )$/;"	f	class:BackgroundWidget
updateAspectRatio	components/controller_widget.cpp	/^void AspectRatioComboBox::updateAspectRatio( int x )$/;"	f	class:AspectRatioComboBox
updateAudioOptions	components/simple_preferences.cpp	/^void SPrefsPanel::updateAudioOptions( int number)$/;"	f	class:SPrefsPanel
updateAudioVolume	components/simple_preferences.cpp	/^void SPrefsPanel::updateAudioVolume( int volume )$/;"	f	class:SPrefsPanel
updateBuffering	components/interface_widgets.cpp	/^void TimeLabel::updateBuffering( float _buffered )$/;"	f	class:TimeLabel
updateBuffering	components/interface_widgets.cpp	/^void TimeLabel::updateBuffering()$/;"	f	class:TimeLabel
updateBuffering	util/input_slider.cpp	/^void SeekSlider::updateBuffering( float f_buffering_ )$/;"	f	class:SeekSlider
updateButton	dialogs/messages.hpp	/^    QPushButton *updateButton;$/;"	m	class:MessagesDialog
updateButtonIcons	components/controller_widget.cpp	/^void AtoB_Button::updateButtonIcons( bool timeA, bool timeB )$/;"	f	class:AtoB_Button
updateButtonIcons	components/controller_widget.cpp	/^void LoopButton::updateButtonIcons( int value )$/;"	f	class:LoopButton
updateButtonIcons	components/controller_widget.cpp	/^void PlayButton::updateButtonIcons( bool b_playing )$/;"	f	class:PlayButton
updateButtons	components/open_panels.cpp	/^void CaptureOpenPanel::updateButtons()$/;"	f	class:CaptureOpenPanel
updateButtons	components/open_panels.cpp	/^void DiscOpenPanel::updateButtons()$/;"	f	class:DiscOpenPanel
updateButtons	components/open_panels.cpp	/^void FileOpenPanel::updateButtons()$/;"	f	class:FileOpenPanel
updateButtons	dialogs/mediainfo.cpp	/^void MediaInfoDialog::updateButtons( int i_tab )$/;"	f	class:MediaInfoDialog
updateChannels	components/epg/EPGView.cpp	/^void EPGView::updateChannels()$/;"	f	class:EPGView
updateChildren	components/playlist/playlist_model.cpp	/^void PLModel::updateChildren( PLItem *root )$/;"	f	class:PLModel
updateChildren	components/playlist/playlist_model.cpp	/^void PLModel::updateChildren( playlist_item_t *p_node, PLItem *root )$/;"	f	class:PLModel
updateConfig	dialogs/messages.cpp	/^void MessagesDialog::updateConfig()$/;"	f	class:MessagesDialog
updateControls	components/interface_widgets.cpp	/^void SpeedControlWidget::updateControls( float rate )$/;"	f	class:SpeedControlWidget
updateDialog	dialogs_provider.cpp	/^void DialogsProvider::updateDialog()$/;"	f	class:DialogsProvider
updateDialogButtonBox	ui/update.h	/^    QDialogButtonBox *updateDialogButtonBox;$/;"	m	class:Ui_updateWidget
updateDialogLabel	ui/update.h	/^    QLabel *updateDialogLabel;$/;"	m	class:Ui_updateWidget
updateDialogPage	ui/update.h	/^    QWidget *updateDialogPage;$/;"	m	class:Ui_updateWidget
updateDuration	components/epg/EPGView.cpp	/^void EPGView::updateDuration()$/;"	f	class:EPGView
updateEPG	components/epg/EPGWidget.cpp	/^void EPGWidget::updateEPG( input_item_t *p_input_item )$/;"	f	class:EPGWidget
updateField	components/preferences_widgets.cpp	/^void DirectoryConfigControl::updateField()$/;"	f	class:DirectoryConfigControl
updateField	components/preferences_widgets.cpp	/^void FileConfigControl::updateField()$/;"	f	class:FileConfigControl
updateFilterOptions	components/extended_panels.cpp	/^void ExtVideo::updateFilterOptions()$/;"	f	class:ExtVideo
updateFilters	components/extended_panels.cpp	/^void ExtVideo::updateFilters()$/;"	f	class:ExtVideo
updateFullwidthGeometry	components/controller.cpp	/^void FullscreenControllerWidget::updateFullwidthGeometry( int number )$/;"	f	class:FullscreenControllerWidget
updateInfos	dialogs/epg.cpp	/^void EpgDialog::updateInfos()$/;"	f	class:EpgDialog
updateInput	remoteControlServer.cpp	/^void RCPlayListModel::updateInput(playlist_t* p_playlist) {$/;"	f	class:RCPlayListModel
updateList	dialogs/plugins.cpp	/^void ExtensionListModel::updateList()$/;"	f	class:ExtensionListModel
updateMRL	components/open_panels.cpp	/^void CaptureOpenPanel::updateMRL()$/;"	f	class:CaptureOpenPanel
updateMRL	components/open_panels.cpp	/^void DiscOpenPanel::updateMRL()$/;"	f	class:DiscOpenPanel
updateMRL	components/open_panels.cpp	/^void FileOpenPanel::updateMRL()$/;"	f	class:FileOpenPanel
updateMRL	components/open_panels.cpp	/^void NetOpenPanel::updateMRL()$/;"	f	class:NetOpenPanel
updateMRL	dialogs/open.cpp	/^void OpenDialog::updateMRL( const QStringList& item, const QString& tempMRL )$/;"	f	class:OpenDialog
updateMRL	dialogs/open.cpp	/^void OpenDialog::updateMRL() {$/;"	f	class:OpenDialog
updateMRL	dialogs/sout.cpp	/^void SoutDialog::updateMRL()$/;"	f	class:SoutDialog
updateMuteStatus	components/controller_widget.cpp	/^void SoundWidget::updateMuteStatus()$/;"	f	class:SoundWidget
updateNotify	dialogs/help.cpp	/^void UpdateDialog::updateNotify( bool b_result )$/;"	f	class:UpdateDialog
updateNotifyButtonBox	ui/update.h	/^    QDialogButtonBox *updateNotifyButtonBox;$/;"	m	class:Ui_updateWidget
updateNotifyLabel	ui/update.h	/^    QLabel *updateNotifyLabel;$/;"	m	class:Ui_updateWidget
updateNotifyPage	ui/update.h	/^    QWidget *updateNotifyPage;$/;"	m	class:Ui_updateWidget
updateNotifyTextEdit	ui/update.h	/^    QTextEdit *updateNotifyTextEdit;$/;"	m	class:Ui_updateWidget
updateOptions	components/sout/profile_selector.cpp	/^void VLCProfileSelector::updateOptions( int i )$/;"	f	class:VLCProfileSelector
updatePos	components/epg/EPGItem.cpp	/^void EPGItem::updatePos()$/;"	f	class:EPGItem
updatePos	util/input_slider.cpp	/^void SeekSlider::updatePos()$/;"	f	class:SeekSlider
updateRate	components/interface_widgets.cpp	/^void SpeedControlWidget::updateRate( int sliderValue )$/;"	f	class:SpeedControlWidget
updateRatios	components/controller_widget.cpp	/^void AspectRatioComboBox::updateRatios()$/;"	f	class:AspectRatioComboBox
updateRecents	menus.cpp	/^void VLCMenuBar::updateRecents( intf_thread_t *p_intf )$/;"	f	class:VLCMenuBar
updateRequestPage	ui/update.h	/^    QWidget *updateRequestPage;$/;"	m	class:Ui_updateWidget
updateRequested	components/interface_widgets.moc.cpp	/^void CoverArtLabel::updateRequested()$/;"	f	class:CoverArtLabel
updateSliders	components/extended_panels.cpp	/^void Compressor::updateSliders( float * controlVars )$/;"	f	class:Compressor
updateSpinBoxRate	components/interface_widgets.cpp	/^void SpeedControlWidget::updateSpinBoxRate( double r )$/;"	f	class:SpeedControlWidget
updateStartTime	components/epg/EPGView.cpp	/^void EPGView::updateStartTime()$/;"	f	class:EPGView
updateSystrayMenu	menus.cpp	/^void VLCMenuBar::updateSystrayMenu( MainInterface *mi,$/;"	f	class:VLCMenuBar
updateSystrayTooltipName	main_interface.cpp	/^void MainInterface::updateSystrayTooltipName( const QString& name )$/;"	f	class:MainInterface
updateSystrayTooltipStatus	main_interface.cpp	/^void MainInterface::updateSystrayTooltipStatus( int i_status )$/;"	f	class:MainInterface
updateText	util/searchlineedit.cpp	/^void SearchLineEdit::updateText( const QString& text )$/;"	f	class:SearchLineEdit
updateTree	dialogs/messages.cpp	/^void MessagesDialog::updateTree()$/;"	f	class:MessagesDialog
updateTreeItem	components/playlist/playlist_model.cpp	/^void PLModel::updateTreeItem( PLItem *item )$/;"	f	class:PLModel
updateUIFromCore	components/extended_panels.cpp	/^void Equalizer::updateUIFromCore()$/;"	f	class:Equalizer
updateURI	dialogs/mediainfo.cpp	/^void MediaInfoDialog::updateURI( const QString& uri )$/;"	f	class:MediaInfoDialog
updateWidget	ui/update.h	/^    class updateWidget: public Ui_updateWidget {};$/;"	c	namespace:Ui
updatesBox	ui/sprefs_interface.h	/^    QCheckBox *updatesBox;$/;"	m	class:Ui_SPrefsInterface
updatesDays	ui/sprefs_interface.h	/^    QSpinBox *updatesDays;$/;"	m	class:Ui_SPrefsInterface
uriLine	dialogs/mediainfo.hpp	/^    QLineEdit   *uriLine;$/;"	m	class:MediaInfoDialog
uriSet	components/info_panels.moc.cpp	/^void MetaPanel::uriSet(const QString & _t1)$/;"	f	class:MetaPanel
url	dialogs/openurl.cpp	/^QString OpenUrlDialog::url() const$/;"	f	class:OpenUrlDialog
url	dialogs/plugins.cpp	/^    QString name, title, description, shortdesc, author, version, url;$/;"	m	class:ExtensionCopy	file:
urlComboBox	ui/open_net.h	/^    QComboBox *urlComboBox;$/;"	m	class:Ui_OpenNetwork
userUpdateVolume	components/controller_widget.cpp	/^void SoundWidget::userUpdateVolume( int i_sliderVolume )$/;"	f	class:SoundWidget
v4l2AudioDevice	components/open_panels.hpp	/^    QComboBox *v4l2VideoDevice, *v4l2AudioDevice;$/;"	m	class:CaptureOpenPanel
v4l2StdBox	components/open_panels.hpp	/^    QComboBox *v4l2StdBox, *pvrNormBox;$/;"	m	class:CaptureOpenPanel
v4l2VideoDevice	components/open_panels.hpp	/^    QComboBox *v4l2VideoDevice, *v4l2AudioDevice;$/;"	m	class:CaptureOpenPanel
vBitrateLabel	ui/profiles.h	/^    QLabel *vBitrateLabel;$/;"	m	class:Ui_Profiles
vBitrateSpin	ui/profiles.h	/^    QSpinBox *vBitrateSpin;$/;"	m	class:Ui_Profiles
vCodecBox	ui/profiles.h	/^    QComboBox *vCodecBox;$/;"	m	class:Ui_Profiles
vCodecLabel	ui/profiles.h	/^    QLabel *vCodecLabel;$/;"	m	class:Ui_Profiles
vFrameBox	ui/profiles.h	/^    QDoubleSpinBox *vFrameBox;$/;"	m	class:Ui_Profiles
vFrameLabel	ui/profiles.h	/^    QLabel *vFrameLabel;$/;"	m	class:Ui_Profiles
vScaleBox	ui/profiles.h	/^    QComboBox *vScaleBox;$/;"	m	class:Ui_Profiles
vScaleLabel	ui/profiles.h	/^    QLabel *vScaleLabel;$/;"	m	class:Ui_Profiles
val	menus.hpp	/^    vlc_value_t val;$/;"	m	class:MenuItemData
validate	components/open_panels.cpp	/^QValidator::State UrlValidator::validate( QString& str, int& ) const$/;"	f	class:UrlValidator
valueChanged	components/extended_panels.moc.cpp	/^void SyncWidget::valueChanged(double _t1)$/;"	f	class:SyncWidget
valueChangedFilter	components/controller_widget.cpp	/^void SoundWidget::valueChangedFilter( int i_val )$/;"	f	class:SoundWidget
valueChangedHandler	components/extended_panels.cpp	/^void SyncWidget::valueChangedHandler( double d )$/;"	f	class:SyncWidget
valueFromText	util/customwidgets.hpp	/^    virtual int valueFromText( const QString& ) const { return -1; }$/;"	f	class:QVLCDebugLevelSpinBox
valueReallyChanged	components/controller_widget.moc.cpp	/^void SoundWidget::valueReallyChanged(int _t1)$/;"	f	class:SoundWidget
values	components/preferences_widgets.hpp	/^    QList<module_config_t *> values;$/;"	m	class:KeySelectorControl
vbobjectsEdit	ui/messages_panel.h	/^    QLineEdit *vbobjectsEdit;$/;"	m	class:Ui_messagesPanelWidget
vboxLayout	ui/open_net.h	/^    QVBoxLayout *vboxLayout;$/;"	m	class:Ui_OpenNetwork
vboxLayout	ui/sprefs_video.h	/^    QVBoxLayout *vboxLayout;$/;"	m	class:Ui_SPrefsVideo
vcdRadioButton	ui/open_disk.h	/^    QRadioButton *vcdRadioButton;$/;"	m	class:Ui_OpenDisk
vdecoded_stat	components/info_panels.hpp	/^    QTreeWidgetItem *vdecoded_stat;$/;"	m	class:InputStatsPanel
vdevDshowW	components/open_panels.hpp	/^    StringListConfigControl *vdevDshowW, *adevDshowW;$/;"	m	class:CaptureOpenPanel
vdisplayed_stat	components/info_panels.hpp	/^    QTreeWidgetItem *vdisplayed_stat;$/;"	m	class:InputStatsPanel
verbosity	dialogs/messages.hpp	/^    vlc_atomic_t verbosity;$/;"	m	class:MessagesDialog
verbosityBox	ui/messages_panel.h	/^    QVLCDebugLevelSpinBox *verbosityBox;$/;"	m	class:Ui_messagesPanelWidget
version	dialogs/plugins.cpp	/^    QString name, title, description, shortdesc, author, version, url;$/;"	m	class:ExtensionCopy	file:
verticalLayout	ui/about.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_aboutWidget
verticalLayout	ui/open_disk.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_OpenDisk
verticalLayout	ui/open_file.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_OpenFile
verticalLayout	ui/sout.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_Sout
verticalLayout	ui/sprefs_audio.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_SPrefsAudio
verticalLayout	ui/sprefs_input.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_SPrefsInputAndCodecs
verticalLayout	ui/sprefs_subtitles.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_SPrefsSubtitles
verticalLayout	ui/update.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_updateWidget
verticalLayout_2	ui/about.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_aboutWidget
verticalLayout_2	ui/messages_panel.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_messagesPanelWidget
verticalLayout_2	ui/sprefs_audio.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_SPrefsAudio
verticalLayout_2	ui/update.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_updateWidget
verticalLayout_3	ui/about.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_aboutWidget
verticalLayout_3	ui/update.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_updateWidget
verticalLayout_4	ui/update.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_updateWidget
verticalOffset	components/playlist/views.cpp	/^int PicFlowView::verticalOffset() const$/;"	f	class:PicFlowView
verticalSpacer	ui/profiles.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_Profiles
verticalSpacer	ui/sout.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_Sout
verticalSpacer	ui/update.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_updateWidget
verticalSpacer	ui/video_effects.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_ExtVideoWidget
verticalSpacer_2	ui/sout.h	/^    QSpacerItem *verticalSpacer_2;$/;"	m	class:Ui_Sout
verticalSpacer_2	ui/update.h	/^    QSpacerItem *verticalSpacer_2;$/;"	m	class:Ui_updateWidget
verticalSpacer_3	ui/video_effects.h	/^    QSpacerItem *verticalSpacer_3;$/;"	m	class:Ui_ExtVideoWidget
verticalSpacer_4	ui/video_effects.h	/^    QSpacerItem *verticalSpacer_4;$/;"	m	class:Ui_ExtVideoWidget
vfps_stat	components/info_panels.hpp	/^    QTreeWidgetItem *vfps_stat;$/;"	m	class:InputStatsPanel
video	components/info_panels.hpp	/^    QTreeWidgetItem *video;$/;"	m	class:InputStatsPanel
videoCodec	ui/profiles.h	/^    QWidget *videoCodec;$/;"	m	class:Ui_Profiles
videoEffect	dialogs/extended.hpp	/^    ExtVideo *videoEffect;$/;"	m	class:ExtendedDialog
videoSizeChanged	main_interface.cpp	/^void MainInterface::videoSizeChanged( int w, int h )$/;"	f	class:MainInterface
videoWidget	main_interface.hpp	/^    VideoWidget         *videoWidget;$/;"	m	class:MainInterface
video_profile_name_list	components/sout/profiles.hpp	/^static const char video_profile_name_list[][35] = {$/;"	v
video_profile_value_list	components/sout/profiles.hpp	/^static const char video_profile_value_list[][53] = {$/;"	v
view	dialogs/plugins.hpp	/^    QListView *view;$/;"	m	class:ExtensionItemDelegate
viewActions	components/playlist/playlist.hpp	/^    QAction *viewActions[ 4 \/* StandardPLPanel::VIEW_COUNT*\/ ];$/;"	m	class:PlaylistWidget
viewChanged	components/playlist/standardpanel.moc.cpp	/^void StandardPLPanel::viewChanged(const QModelIndex & _t1)$/;"	f	class:StandardPLPanel
viewNames	components/playlist/standardpanel.hpp	/^static const QString viewNames[ StandardPLPanel::VIEW_COUNT ]$/;"	v
viewStack	components/playlist/standardpanel.hpp	/^    QStackedLayout    *viewStack;$/;"	m	class:StandardPLPanel
visuLabel	ui/sprefs_audio.h	/^    QLabel *visuLabel;$/;"	m	class:Ui_SPrefsAudio
visualRect	components/playlist/views.cpp	/^QRect PicFlowView::visualRect(const QModelIndex & ) const$/;"	f	class:PicFlowView
visualRegionForSelection	components/playlist/views.cpp	/^QRegion PicFlowView::visualRegionForSelection(const QItemSelection &) const$/;"	f	class:PicFlowView
visualisation	ui/sprefs_audio.h	/^    QComboBox *visualisation;$/;"	m	class:Ui_SPrefsAudio
vlc	util/customwidgets.cpp	/^    uint32_t vlc;$/;"	m	struct:__anon3	file:
vlc_qt_key_t	util/customwidgets.cpp	/^} vlc_qt_key_t;$/;"	t	typeref:struct:__anon3	file:
vlcdatadir	Makefile	/^vlcdatadir = ${datadir}\/${PKGDIR}$/;"	m
vlclibdir	Makefile	/^vlclibdir = ${libdir}\/${PKGDIR}$/;"	m
vlmDialog	dialogs_provider.cpp	/^void DialogsProvider::vlmDialog()$/;"	f	class:DialogsProvider
vlmItemLayout	dialogs/vlm.hpp	/^    QVBoxLayout *vlmItemLayout;$/;"	m	class:VLMDialog
vlmItemScroll	ui/vlm.h	/^    QScrollArea *vlmItemScroll;$/;"	m	class:Ui_Vlm
vlmItemWidget	dialogs/vlm.hpp	/^    QWidget *vlmItemWidget;$/;"	m	class:VLMDialog
vlmItems	dialogs/vlm.hpp	/^    QList<VLMAWidget *> vlmItems;$/;"	m	class:VLMDialog
vlmListItem	ui/vlm.h	/^    QListWidget *vlmListItem;$/;"	m	class:Ui_Vlm
vlmWrapper	dialogs/vlm.hpp	/^    VLMWrapper *vlmWrapper;$/;"	m	class:VLMDialog
vlost_frames_stat	components/info_panels.hpp	/^    QTreeWidgetItem *vlost_frames_stat;$/;"	m	class:InputStatsPanel
vodBox	ui/vlm.h	/^    QGroupBox *vodBox;$/;"	m	class:Ui_Vlm
volLW	components/simple_preferences.hpp	/^       volLW,$/;"	e	enum:__anon21
volMuteLabel	components/controller_widget.hpp	/^    QLabel              *volMuteLabel;$/;"	m	class:SoundWidget
volNormBox	ui/sprefs_audio.h	/^    QCheckBox *volNormBox;$/;"	m	class:Ui_SPrefsAudio
volNormSpin	ui/sprefs_audio.h	/^    QDoubleSpinBox *volNormSpin;$/;"	m	class:Ui_SPrefsAudio
volumeChanged	input_manager.moc.cpp	/^void MainInputManager::volumeChanged()$/;"	f	class:MainInputManager
volumeControlWidget	components/controller_widget.hpp	/^    QFrame              *volumeControlWidget;$/;"	m	class:SoundWidget
volumeMenu	components/controller_widget.hpp	/^    QMenu               *volumeMenu;$/;"	m	class:SoundWidget
volumeSlider	components/controller_widget.hpp	/^    QAbstractSlider     *volumeSlider;$/;"	m	class:SoundWidget
volumeValue	ui/sprefs_audio.h	/^    QSpinBox *volumeValue;$/;"	m	class:Ui_SPrefsAudio
vout	components/controller.hpp	/^    QList<vout_thread_t *> vout;$/;"	m	class:FullscreenControllerWidget
voutChanged	input_manager.moc.cpp	/^void InputManager::voutChanged(bool _t1)$/;"	f	class:InputManager
voutLabel	ui/sprefs_video.h	/^    QLabel *voutLabel;$/;"	m	class:Ui_SPrefsVideo
voutListChanged	input_manager.moc.cpp	/^void InputManager::voutListChanged(vout_thread_t * * _t1, int _t2)$/;"	f	class:InputManager
wallColsSpin	ui/video_effects.h	/^    QSpinBox *wallColsSpin;$/;"	m	class:Ui_ExtVideoWidget
wallEnable	ui/video_effects.h	/^    QGroupBox *wallEnable;$/;"	m	class:Ui_ExtVideoWidget
wallRowsSpin	ui/video_effects.h	/^    QSpinBox *wallRowsSpin;$/;"	m	class:Ui_ExtVideoWidget
warning	components/preferences_widgets.hpp	/^    QLabel *selected, *warning;$/;"	m	class:KeyInputDialog
waveEnable	ui/video_effects.h	/^    QCheckBox *waveEnable;$/;"	m	class:Ui_ExtVideoWidget
wheelEvent	components/playlist/selector.cpp	/^void PLSelector::wheelEvent( QWheelEvent *e )$/;"	f	class:PLSelector
wheelEvent	components/playlist/standardpanel.cpp	/^void StandardPLPanel::wheelEvent( QWheelEvent *e )$/;"	f	class:StandardPLPanel
wheelEvent	components/preferences_widgets.cpp	/^void KeyInputDialog::wheelEvent( QWheelEvent *e )$/;"	f	class:KeyInputDialog
wheelEvent	main_interface.cpp	/^void MainInterface::wheelEvent( QWheelEvent *e )$/;"	f	class:MainInterface
wheelEvent	util/input_slider.cpp	/^void SeekSlider::wheelEvent( QWheelEvent *event )$/;"	f	class:SeekSlider
wheelEvent	util/input_slider.cpp	/^void SoundSlider::wheelEvent( QWheelEvent *event )$/;"	f	class:SoundSlider
widen	remoteControlServer.cpp	/^wstring widen( const string& str )$/;"	f
widget	components/preferences_widgets.hpp	/^    QWidget *widget;$/;"	m	class:ConfigControl
widget	ui/open_file.h	/^    QWidget *widget;$/;"	m	class:Ui_OpenFile
widget	util/pictureflow.cpp	/^    QWidget* widget;$/;"	m	class:PictureFlowAbstractRenderer	file:
widgetList	dialogs/toolbar.hpp	/^    QList <doubleInt *> widgetList;$/;"	m	class:DroppingController
widgetListing	dialogs/toolbar.hpp	/^    WidgetListing *widgetListing;$/;"	m	class:ToolbarEditDialog
widthBox	ui/profiles.h	/^    QLineEdit *widthBox;$/;"	m	class:Ui_Profiles
widthLabel	ui/profiles.h	/^    QLabel *widthLabel;$/;"	m	class:Ui_Profiles
widths	components/playlist/playlist.hpp	/^    QList<int> widths;$/;"	m	class:LocationBar
winEvent	main_interface_win32.cpp	/^bool MainInterface::winEvent ( MSG * msg, long * result )$/;"	f	class:MainInterface
windowDecorations	ui/sprefs_video.h	/^    QCheckBox *windowDecorations;$/;"	m	class:Ui_SPrefsVideo
write	rclog.cpp	/^void logger::write(RC_TAG tag,const char* format,...) {$/;"	f	class:logger
write	rclog.cpp	/^void logger::write(RC_TAG tag,const char* format,const char* data,...){$/;"	f	class:logger
writeAction	remoteControlServer.cpp	/^int RCInvoker::writeAction(RCAction& action) {$/;"	f	class:RCInvoker
writeSettings	util/qvlcframe.hpp	/^    void writeSettings( const QString& name )$/;"	f	class:QVLCFrame
writeSettings	util/qvlcframe.hpp	/^    void writeSettings( const QString& name )$/;"	f	class:QVLCMW
writeSettings	util/qvlcframe.hpp	/^    void writeSettings(QSettings *settings )$/;"	f	class:QVLCMW
write_profile_string	ini/inifile.c	/^	int write_profile_string(const char *section, const char *key,$/;"	f
x264Label	ui/sprefs_input.h	/^    QLabel *x264Label;$/;"	m	class:Ui_SPrefsInputAndCodecs
x264profileLabel	ui/sprefs_input.h	/^    QLabel *x264profileLabel;$/;"	m	class:Ui_SPrefsInputAndCodecs
~ActionsManager	actions_manager.cpp	/^ActionsManager::~ActionsManager(){}$/;"	f	class:ActionsManager
~AdvPrefsPanel	components/complete_preferences.cpp	/^AdvPrefsPanel::~AdvPrefsPanel()$/;"	f	class:AdvPrefsPanel
~AnimatedIcon	util/customwidgets.cpp	/^AnimatedIcon::~AnimatedIcon()$/;"	f	class:AnimatedIcon
~BookmarksDialog	dialogs/bookmarks.cpp	/^BookmarksDialog::~BookmarksDialog()$/;"	f	class:BookmarksDialog
~CaptureOpenPanel	components/open_panels.cpp	/^CaptureOpenPanel::~CaptureOpenPanel()$/;"	f	class:CaptureOpenPanel
~ColorConfigControl	components/preferences_widgets.hpp	/^    virtual ~ColorConfigControl() { delete color_px; }$/;"	f	class:ColorConfigControl
~ConvertDialog	dialogs/convert.hpp	/^    virtual ~ConvertDialog(){}$/;"	f	class:ConvertDialog
~CoverArtLabel	components/interface_widgets.cpp	/^CoverArtLabel::~CoverArtLabel()$/;"	f	class:CoverArtLabel
~DeckButtonsLayout	util/buttons/DeckButtonsLayout.cpp	/^DeckButtonsLayout::~DeckButtonsLayout()$/;"	f	class:DeckButtonsLayout
~DialogEvent	dialogs_provider.hpp	/^    virtual ~DialogEvent() { }$/;"	f	class:DialogEvent
~DialogHandler	dialogs/external.cpp	/^DialogHandler::~DialogHandler (void)$/;"	f	class:DialogHandler
~DialogsProvider	dialogs_provider.cpp	/^DialogsProvider::~DialogsProvider()$/;"	f	class:DialogsProvider
~DiscOpenPanel	components/open_panels.cpp	/^DiscOpenPanel::~DiscOpenPanel()$/;"	f	class:DiscOpenPanel
~DroppingController	dialogs/toolbar.cpp	/^DroppingController::~DroppingController()$/;"	f	class:DroppingController
~EPGRuler	components/epg/EPGRuler.hpp	/^    virtual ~EPGRuler() { }$/;"	f	class:EPGRuler
~EPGView	components/epg/EPGView.cpp	/^EPGView::~EPGView()$/;"	f	class:EPGView
~EpgDialog	dialogs/epg.cpp	/^EpgDialog::~EpgDialog()$/;"	f	class:EpgDialog
~ErrorsDialog	dialogs/errors.hpp	/^    virtual ~ErrorsDialog() {}$/;"	f	class:ErrorsDialog
~ExtendedDialog	dialogs/extended.cpp	/^ExtendedDialog::~ExtendedDialog()$/;"	f	class:ExtendedDialog
~ExtensionCopy	dialogs/plugins.cpp	/^    ~ExtensionCopy() {}$/;"	f	class:ExtensionCopy
~ExtensionDialog	dialogs/extensions.cpp	/^ExtensionDialog::~ExtensionDialog()$/;"	f	class:ExtensionDialog
~ExtensionItemDelegate	dialogs/plugins.cpp	/^ExtensionItemDelegate::~ExtensionItemDelegate()$/;"	f	class:ExtensionItemDelegate
~ExtensionListModel	dialogs/plugins.cpp	/^ExtensionListModel::~ExtensionListModel()$/;"	f	class:ExtensionListModel
~ExtensionTab	dialogs/plugins.cpp	/^ExtensionTab::~ExtensionTab()$/;"	f	class:ExtensionTab
~ExtensionsDialogProvider	dialogs/extensions.cpp	/^ExtensionsDialogProvider::~ExtensionsDialogProvider()$/;"	f	class:ExtensionsDialogProvider
~ExtensionsManager	extensions_manager.cpp	/^ExtensionsManager::~ExtensionsManager()$/;"	f	class:ExtensionsManager
~FileOpenPanel	components/open_panels.cpp	/^FileOpenPanel::~FileOpenPanel()$/;"	f	class:FileOpenPanel
~FullscreenControllerWidget	components/controller.cpp	/^FullscreenControllerWidget::~FullscreenControllerWidget()$/;"	f	class:FullscreenControllerWidget
~GotoTimeDialog	dialogs/gototime.cpp	/^GotoTimeDialog::~GotoTimeDialog()$/;"	f	class:GotoTimeDialog
~HelpDialog	dialogs/help.cpp	/^HelpDialog::~HelpDialog()$/;"	f	class:HelpDialog
~IMEvent	input_manager.hpp	/^    virtual ~IMEvent()$/;"	f	class:IMEvent
~InputManager	input_manager.cpp	/^InputManager::~InputManager()$/;"	f	class:InputManager
~MLItem	components/playlist/ml_item.cpp	/^MLItem::~MLItem()$/;"	f	class:MLItem
~MLModel	components/playlist/ml_model.cpp	/^MLModel::~MLModel()$/;"	f	class:MLModel
~MainInputManager	input_manager.cpp	/^MainInputManager::~MainInputManager()$/;"	f	class:MainInputManager
~MainInterface	main_interface.cpp	/^MainInterface::~MainInterface()$/;"	f	class:MainInterface
~MediaInfoDialog	dialogs/mediainfo.cpp	/^MediaInfoDialog::~MediaInfoDialog()$/;"	f	class:MediaInfoDialog
~MenuItemData	menus.hpp	/^    virtual ~MenuItemData()$/;"	f	class:MenuItemData
~MessagesDialog	dialogs/messages.cpp	/^MessagesDialog::~MessagesDialog()$/;"	f	class:MessagesDialog
~ModuleListConfigControl	components/preferences_widgets.cpp	/^ModuleListConfigControl::~ModuleListConfigControl()$/;"	f	class:ModuleListConfigControl
~NetOpenPanel	components/open_panels.cpp	/^NetOpenPanel::~NetOpenPanel()$/;"	f	class:NetOpenPanel
~OpenDialog	dialogs/open.cpp	/^OpenDialog::~OpenDialog()$/;"	f	class:OpenDialog
~OpenPanel	components/open_panels.hpp	/^    virtual ~OpenPanel() {};$/;"	f	class:OpenPanel
~OpenUrlDialog	dialogs/openurl.hpp	/^    virtual ~OpenUrlDialog() {}$/;"	f	class:OpenUrlDialog
~PLItem	components/playlist/playlist_item.cpp	/^PLItem::~PLItem()$/;"	f	class:PLItem
~PLModel	components/playlist/playlist_model.cpp	/^PLModel::~PLModel()$/;"	f	class:PLModel
~PLSelector	components/playlist/selector.cpp	/^PLSelector::~PLSelector()$/;"	f	class:PLSelector
~PictureFlow	util/pictureflow.cpp	/^PictureFlow::~PictureFlow()$/;"	f	class:PictureFlow
~PictureFlowAbstractRenderer	util/pictureflow.cpp	/^    virtual ~PictureFlowAbstractRenderer() {}$/;"	f	class:PictureFlowAbstractRenderer
~PictureFlowSoftwareRenderer	util/pictureflow.cpp	/^PictureFlowSoftwareRenderer::~PictureFlowSoftwareRenderer()$/;"	f	class:PictureFlowSoftwareRenderer
~PictureFlowState	util/pictureflow.cpp	/^PictureFlowState::~PictureFlowState()$/;"	f	class:PictureFlowState
~PlMimeData	components/playlist/playlist_model.cpp	/^PlMimeData::~PlMimeData()$/;"	f	class:PlMimeData
~PlaylistDialog	dialogs/playlist.cpp	/^PlaylistDialog::~PlaylistDialog()$/;"	f	class:PlaylistDialog
~PlaylistWidget	components/playlist/playlist.cpp	/^PlaylistWidget::~PlaylistWidget()$/;"	f	class:PlaylistWidget
~PluginDialog	dialogs/plugins.cpp	/^PluginDialog::~PluginDialog()$/;"	f	class:PluginDialog
~PluginTab	dialogs/plugins.cpp	/^PluginTab::~PluginTab()$/;"	f	class:PluginTab
~PluginTreeItem	dialogs/plugins.hpp	/^    virtual ~PluginTreeItem() {}$/;"	f	class:PluginTreeItem
~PodcastConfigDialog	dialogs/podcast_configuration.cpp	/^PodcastConfigDialog::~PodcastConfigDialog()$/;"	f	class:PodcastConfigDialog
~PrefsDialog	dialogs/preferences.hpp	/^    virtual ~PrefsDialog() {};$/;"	f	class:PrefsDialog
~PrefsItemData	components/complete_preferences.hpp	/^    virtual ~PrefsItemData() { free( psz_name ); };$/;"	f	class:PrefsItemData
~QMenuView	util/qmenuview.hpp	/^    virtual ~QMenuView(){}$/;"	f	class:QMenuView
~QVLCDialog	util/qvlcframe.hpp	/^    virtual ~QVLCDialog() {};$/;"	f	class:QVLCDialog
~QVLCFrame	util/qvlcframe.hpp	/^    virtual ~QVLCFrame()   {};$/;"	f	class:QVLCFrame
~QVLCRegistry	util/registry.cpp	/^QVLCRegistry::~QVLCRegistry( void )$/;"	f	class:QVLCRegistry
~QVLCVariable	variables.cpp	/^QVLCVariable::~QVLCVariable (void)$/;"	f	class:QVLCVariable
~RCPlayListModel	remoteControlServer.cpp	/^RCPlayListModel::~RCPlayListModel() {$/;"	f	class:RCPlayListModel
~RCServer	remoteControlServer.cpp	/^RCServer::~RCServer() {$/;"	f	class:RCServer
~RecentsMRL	recents.cpp	/^RecentsMRL::~RecentsMRL()$/;"	f	class:RecentsMRL
~SPrefsCatList	components/simple_preferences.hpp	/^    virtual ~SPrefsCatList() {};$/;"	f	class:SPrefsCatList
~SPrefsPanel	components/simple_preferences.cpp	/^SPrefsPanel::~SPrefsPanel()$/;"	f	class:SPrefsPanel
~SearchLineEdit	util/searchlineedit.hpp	/^    virtual ~SearchLineEdit() {}$/;"	f	class:SearchLineEdit
~SeekSlider	util/input_slider.cpp	/^SeekSlider::~SeekSlider()$/;"	f	class:SeekSlider
~Singleton	util/singleton.hpp	/^    virtual ~Singleton(){}$/;"	f	class:Singleton
~SoundWidget	components/controller_widget.cpp	/^SoundWidget::~SoundWidget()$/;"	f	class:SoundWidget
~SoutDialog	dialogs/sout.hpp	/^    virtual ~SoutDialog(){}$/;"	f	class:SoutDialog
~SpeedLabel	components/interface_widgets.cpp	/^SpeedLabel::~SpeedLabel()$/;"	f	class:SpeedLabel
~StandardPLPanel	components/playlist/standardpanel.cpp	/^StandardPLPanel::~StandardPLPanel()$/;"	f	class:StandardPLPanel
~SyncControls	components/extended_panels.cpp	/^SyncControls::~SyncControls()$/;"	f	class:SyncControls
~ToolbarEditDialog	dialogs/toolbar.cpp	/^ToolbarEditDialog::~ToolbarEditDialog()$/;"	f	class:ToolbarEditDialog
~UpdateDialog	dialogs/help.cpp	/^UpdateDialog::~UpdateDialog()$/;"	f	class:UpdateDialog
~VLCModel	components/playlist/vlc_model.cpp	/^VLCModel::~VLCModel()$/;"	f	class:VLCModel
~VLMDialog	dialogs/vlm.cpp	/^VLMDialog::~VLMDialog()$/;"	f	class:VLMDialog
~VLMWrapper	dialogs/vlm.cpp	/^VLMWrapper::~VLMWrapper()$/;"	f	class:VLMWrapper
~VideoWidget	components/interface_widgets.cpp	/^VideoWidget::~VideoWidget()$/;"	f	class:VideoWidget
~WidgetMapper	dialogs/extensions.hpp	/^    ~WidgetMapper() {}$/;"	f	class:WidgetMapper
