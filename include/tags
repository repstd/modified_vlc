!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	vlc_md5.h	/^    uint32_t A, B, C, D;          \/* chaining variables *\/$/;"	m	struct:md5_s
A52_FRAME_NB	vlc_aout.h	168;"	d
AADVANCED_HELP	vlc_config_cat.h	187;"	d
AADVANCED_TITLE	vlc_config_cat.h	186;"	d
ACCESS_CAN_CONTROL_PACE	vlc_access.h	/^    ACCESS_CAN_CONTROL_PACE,\/* arg1= bool*    cannot fail *\/$/;"	e	enum:access_query_e
ACCESS_CAN_FASTSEEK	vlc_access.h	/^    ACCESS_CAN_FASTSEEK,    \/* arg1= bool*    cannot fail *\/$/;"	e	enum:access_query_e
ACCESS_CAN_PAUSE	vlc_access.h	/^    ACCESS_CAN_PAUSE,       \/* arg1= bool*    cannot fail *\/$/;"	e	enum:access_query_e
ACCESS_CAN_SEEK	vlc_access.h	/^    ACCESS_CAN_SEEK,        \/* arg1= bool*    cannot fail *\/$/;"	e	enum:access_query_e
ACCESS_GET_CONTENT_TYPE	vlc_access.h	/^    ACCESS_GET_CONTENT_TYPE,\/* arg1=char **ppsz_content_type                       res=can fail *\/$/;"	e	enum:access_query_e
ACCESS_GET_META	vlc_access.h	/^    ACCESS_GET_META,        \/* arg1= vlc_meta_t **                  res=can fail *\/$/;"	e	enum:access_query_e
ACCESS_GET_PRIVATE_ID_STATE	vlc_access.h	/^    ACCESS_GET_PRIVATE_ID_STATE,          \/* arg1=int i_private_data arg2=bool *          res=can fail *\/$/;"	e	enum:access_query_e
ACCESS_GET_PTS_DELAY	vlc_access.h	/^    ACCESS_GET_PTS_DELAY = 0x101,\/* arg1= int64_t*       cannot fail *\/$/;"	e	enum:access_query_e
ACCESS_GET_SIGNAL	vlc_access.h	/^    ACCESS_GET_SIGNAL,      \/* arg1=double *pf_quality, arg2=double *pf_strength   res=can fail *\/$/;"	e	enum:access_query_e
ACCESS_GET_TITLE_INFO	vlc_access.h	/^    ACCESS_GET_TITLE_INFO,  \/* arg1=input_title_t*** arg2=int*      res=can fail *\/$/;"	e	enum:access_query_e
ACCESS_HELP	vlc_config_cat.h	98;"	d
ACCESS_OUT_CONTROLS_PACE	vlc_sout.h	/^    ACCESS_OUT_CONTROLS_PACE, \/* arg1=bool *, can fail (assume true) *\/$/;"	e	enum:access_out_query_e
ACCESS_SET_CALLBACKS	vlc_access.h	156;"	d
ACCESS_SET_PAUSE_STATE	vlc_access.h	/^    ACCESS_SET_PAUSE_STATE = 0x200, \/* arg1= bool           can fail *\/$/;"	e	enum:access_query_e
ACCESS_SET_PRIVATE_ID_CA	vlc_access.h	/^    ACCESS_SET_PRIVATE_ID_CA,             \/* arg1= int i_program_number, uint16_t i_vpid, uint16_t i_apid1, uint16_t i_apid2, uint16_t i_apid3, uint8_t i_length, uint8_t *p_data *\/$/;"	e	enum:access_query_e
ACCESS_SET_PRIVATE_ID_STATE	vlc_access.h	/^    ACCESS_SET_PRIVATE_ID_STATE = 0x1000, \/* arg1= int i_private_data, bool b_selected    res=can fail *\/$/;"	e	enum:access_query_e
ACCESS_SET_SEEKPOINT	vlc_access.h	/^    ACCESS_SET_SEEKPOINT,   \/* arg1= int            can fail *\/$/;"	e	enum:access_query_e
ACCESS_SET_TITLE	vlc_access.h	/^    ACCESS_SET_TITLE,       \/* arg1= int            can fail *\/$/;"	e	enum:access_query_e
ACCESS_TITLE	vlc_config_cat.h	97;"	d
ACL_AddHost	vlc_acl.h	36;"	d
ACL_Create	vlc_acl.h	31;"	d
ACL_Duplicate	vlc_acl.h	33;"	d
ACTION	vlc_fixups.h	/^} ACTION;$/;"	t	typeref:enum:__anon86
ACTIONID_ASPECT_RATIO	vlc_keys.h	/^    ACTIONID_ASPECT_RATIO,$/;"	e	enum:vlc_action
ACTIONID_AUDIODELAY_DOWN	vlc_keys.h	/^    ACTIONID_AUDIODELAY_DOWN,$/;"	e	enum:vlc_action
ACTIONID_AUDIODELAY_UP	vlc_keys.h	/^    ACTIONID_AUDIODELAY_UP,$/;"	e	enum:vlc_action
ACTIONID_AUDIODEVICE_CYCLE	vlc_keys.h	/^    ACTIONID_AUDIODEVICE_CYCLE,$/;"	e	enum:vlc_action
ACTIONID_AUDIO_TRACK	vlc_keys.h	/^    ACTIONID_AUDIO_TRACK,$/;"	e	enum:vlc_action
ACTIONID_CHAPTER_NEXT	vlc_keys.h	/^    ACTIONID_CHAPTER_NEXT,$/;"	e	enum:vlc_action
ACTIONID_CHAPTER_PREV	vlc_keys.h	/^    ACTIONID_CHAPTER_PREV,$/;"	e	enum:vlc_action
ACTIONID_CROP	vlc_keys.h	/^    ACTIONID_CROP,$/;"	e	enum:vlc_action
ACTIONID_CROP_BOTTOM	vlc_keys.h	/^    ACTIONID_CROP_BOTTOM,$/;"	e	enum:vlc_action
ACTIONID_CROP_LEFT	vlc_keys.h	/^    ACTIONID_CROP_LEFT,$/;"	e	enum:vlc_action
ACTIONID_CROP_RIGHT	vlc_keys.h	/^    ACTIONID_CROP_RIGHT,$/;"	e	enum:vlc_action
ACTIONID_CROP_TOP	vlc_keys.h	/^    ACTIONID_CROP_TOP,$/;"	e	enum:vlc_action
ACTIONID_DEINTERLACE	vlc_keys.h	/^    ACTIONID_DEINTERLACE,$/;"	e	enum:vlc_action
ACTIONID_DISC_MENU	vlc_keys.h	/^    ACTIONID_DISC_MENU,$/;"	e	enum:vlc_action
ACTIONID_FASTER	vlc_keys.h	/^    ACTIONID_FASTER,$/;"	e	enum:vlc_action
ACTIONID_FRAME_NEXT	vlc_keys.h	/^    ACTIONID_FRAME_NEXT,$/;"	e	enum:vlc_action
ACTIONID_INTF_BOSS	vlc_keys.h	/^    ACTIONID_INTF_BOSS,$/;"	e	enum:vlc_action
ACTIONID_INTF_HIDE	vlc_keys.h	/^    ACTIONID_INTF_HIDE,$/;"	e	enum:vlc_action
ACTIONID_INTF_TOGGLE_FSC	vlc_keys.h	/^    ACTIONID_INTF_TOGGLE_FSC,$/;"	e	enum:vlc_action
ACTIONID_JUMP_BACKWARD_EXTRASHORT	vlc_keys.h	/^    ACTIONID_JUMP_BACKWARD_EXTRASHORT,$/;"	e	enum:vlc_action
ACTIONID_JUMP_BACKWARD_LONG	vlc_keys.h	/^    ACTIONID_JUMP_BACKWARD_LONG,$/;"	e	enum:vlc_action
ACTIONID_JUMP_BACKWARD_MEDIUM	vlc_keys.h	/^    ACTIONID_JUMP_BACKWARD_MEDIUM,$/;"	e	enum:vlc_action
ACTIONID_JUMP_BACKWARD_SHORT	vlc_keys.h	/^    ACTIONID_JUMP_BACKWARD_SHORT,$/;"	e	enum:vlc_action
ACTIONID_JUMP_FORWARD_EXTRASHORT	vlc_keys.h	/^    ACTIONID_JUMP_FORWARD_EXTRASHORT,$/;"	e	enum:vlc_action
ACTIONID_JUMP_FORWARD_LONG	vlc_keys.h	/^    ACTIONID_JUMP_FORWARD_LONG,$/;"	e	enum:vlc_action
ACTIONID_JUMP_FORWARD_MEDIUM	vlc_keys.h	/^    ACTIONID_JUMP_FORWARD_MEDIUM,$/;"	e	enum:vlc_action
ACTIONID_JUMP_FORWARD_SHORT	vlc_keys.h	/^    ACTIONID_JUMP_FORWARD_SHORT,$/;"	e	enum:vlc_action
ACTIONID_LEAVE_FULLSCREEN	vlc_keys.h	/^    ACTIONID_LEAVE_FULLSCREEN,$/;"	e	enum:vlc_action
ACTIONID_LOOP	vlc_keys.h	/^    ACTIONID_LOOP,$/;"	e	enum:vlc_action
ACTIONID_MENU_DOWN	vlc_keys.h	/^    ACTIONID_MENU_DOWN,$/;"	e	enum:vlc_action
ACTIONID_MENU_LEFT	vlc_keys.h	/^    ACTIONID_MENU_LEFT,$/;"	e	enum:vlc_action
ACTIONID_MENU_OFF	vlc_keys.h	/^    ACTIONID_MENU_OFF,$/;"	e	enum:vlc_action
ACTIONID_MENU_ON	vlc_keys.h	/^    ACTIONID_MENU_ON,$/;"	e	enum:vlc_action
ACTIONID_MENU_RIGHT	vlc_keys.h	/^    ACTIONID_MENU_RIGHT,$/;"	e	enum:vlc_action
ACTIONID_MENU_SELECT	vlc_keys.h	/^    ACTIONID_MENU_SELECT,$/;"	e	enum:vlc_action
ACTIONID_MENU_UP	vlc_keys.h	/^    ACTIONID_MENU_UP,$/;"	e	enum:vlc_action
ACTIONID_NAV_ACTIVATE	vlc_keys.h	/^    ACTIONID_NAV_ACTIVATE,$/;"	e	enum:vlc_action
ACTIONID_NAV_DOWN	vlc_keys.h	/^    ACTIONID_NAV_DOWN,$/;"	e	enum:vlc_action
ACTIONID_NAV_LEFT	vlc_keys.h	/^    ACTIONID_NAV_LEFT,$/;"	e	enum:vlc_action
ACTIONID_NAV_RIGHT	vlc_keys.h	/^    ACTIONID_NAV_RIGHT,$/;"	e	enum:vlc_action
ACTIONID_NAV_UP	vlc_keys.h	/^    ACTIONID_NAV_UP,$/;"	e	enum:vlc_action
ACTIONID_NEXT	vlc_keys.h	/^    ACTIONID_NEXT,$/;"	e	enum:vlc_action
ACTIONID_NONE	vlc_keys.h	/^    ACTIONID_NONE = 0,$/;"	e	enum:vlc_action
ACTIONID_PAUSE	vlc_keys.h	/^    ACTIONID_PAUSE,$/;"	e	enum:vlc_action
ACTIONID_PLAY	vlc_keys.h	/^    ACTIONID_PLAY,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK1	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK1,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK10	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK10,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK2	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK2,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK3	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK3,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK4	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK4,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK5	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK5,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK6	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK6,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK7	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK7,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK8	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK8,$/;"	e	enum:vlc_action
ACTIONID_PLAY_BOOKMARK9	vlc_keys.h	/^    ACTIONID_PLAY_BOOKMARK9,$/;"	e	enum:vlc_action
ACTIONID_PLAY_PAUSE	vlc_keys.h	/^    ACTIONID_PLAY_PAUSE,$/;"	e	enum:vlc_action
ACTIONID_POSITION	vlc_keys.h	/^    ACTIONID_POSITION,$/;"	e	enum:vlc_action
ACTIONID_PREV	vlc_keys.h	/^    ACTIONID_PREV,$/;"	e	enum:vlc_action
ACTIONID_QUIT	vlc_keys.h	/^    ACTIONID_QUIT,$/;"	e	enum:vlc_action
ACTIONID_RANDOM	vlc_keys.h	/^    ACTIONID_RANDOM,$/;"	e	enum:vlc_action
ACTIONID_RATE_FASTER_FINE	vlc_keys.h	/^    ACTIONID_RATE_FASTER_FINE,$/;"	e	enum:vlc_action
ACTIONID_RATE_NORMAL	vlc_keys.h	/^    ACTIONID_RATE_NORMAL,$/;"	e	enum:vlc_action
ACTIONID_RATE_SLOWER_FINE	vlc_keys.h	/^    ACTIONID_RATE_SLOWER_FINE,$/;"	e	enum:vlc_action
ACTIONID_RECORD	vlc_keys.h	/^    ACTIONID_RECORD,$/;"	e	enum:vlc_action
ACTIONID_SCALE_DOWN	vlc_keys.h	/^    ACTIONID_SCALE_DOWN,$/;"	e	enum:vlc_action
ACTIONID_SCALE_UP	vlc_keys.h	/^    ACTIONID_SCALE_UP,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK1	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK1,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK10	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK10,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK2	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK2,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK3	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK3,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK4	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK4,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK5	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK5,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK6	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK6,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK7	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK7,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK8	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK8,$/;"	e	enum:vlc_action
ACTIONID_SET_BOOKMARK9	vlc_keys.h	/^    ACTIONID_SET_BOOKMARK9,$/;"	e	enum:vlc_action
ACTIONID_SLOWER	vlc_keys.h	/^    ACTIONID_SLOWER,$/;"	e	enum:vlc_action
ACTIONID_SNAPSHOT	vlc_keys.h	/^    ACTIONID_SNAPSHOT,$/;"	e	enum:vlc_action
ACTIONID_STOP	vlc_keys.h	/^    ACTIONID_STOP,$/;"	e	enum:vlc_action
ACTIONID_SUBDELAY_DOWN	vlc_keys.h	/^    ACTIONID_SUBDELAY_DOWN,$/;"	e	enum:vlc_action
ACTIONID_SUBDELAY_UP	vlc_keys.h	/^    ACTIONID_SUBDELAY_UP,$/;"	e	enum:vlc_action
ACTIONID_SUBPOS_DOWN	vlc_keys.h	/^    ACTIONID_SUBPOS_DOWN,$/;"	e	enum:vlc_action
ACTIONID_SUBPOS_UP	vlc_keys.h	/^    ACTIONID_SUBPOS_UP,$/;"	e	enum:vlc_action
ACTIONID_SUBTITLE_TRACK	vlc_keys.h	/^    ACTIONID_SUBTITLE_TRACK,$/;"	e	enum:vlc_action
ACTIONID_TITLE_NEXT	vlc_keys.h	/^    ACTIONID_TITLE_NEXT,$/;"	e	enum:vlc_action
ACTIONID_TITLE_PREV	vlc_keys.h	/^    ACTIONID_TITLE_PREV,$/;"	e	enum:vlc_action
ACTIONID_TOGGLE_AUTOSCALE	vlc_keys.h	/^    ACTIONID_TOGGLE_AUTOSCALE,$/;"	e	enum:vlc_action
ACTIONID_TOGGLE_FULLSCREEN	vlc_keys.h	/^    ACTIONID_TOGGLE_FULLSCREEN,$/;"	e	enum:vlc_action
ACTIONID_UNCROP_BOTTOM	vlc_keys.h	/^    ACTIONID_UNCROP_BOTTOM,$/;"	e	enum:vlc_action
ACTIONID_UNCROP_LEFT	vlc_keys.h	/^    ACTIONID_UNCROP_LEFT,$/;"	e	enum:vlc_action
ACTIONID_UNCROP_RIGHT	vlc_keys.h	/^    ACTIONID_UNCROP_RIGHT,$/;"	e	enum:vlc_action
ACTIONID_UNCROP_TOP	vlc_keys.h	/^    ACTIONID_UNCROP_TOP,$/;"	e	enum:vlc_action
ACTIONID_UNZOOM	vlc_keys.h	/^    ACTIONID_UNZOOM,$/;"	e	enum:vlc_action
ACTIONID_VOL_DOWN	vlc_keys.h	/^    ACTIONID_VOL_DOWN,$/;"	e	enum:vlc_action
ACTIONID_VOL_MUTE	vlc_keys.h	/^    ACTIONID_VOL_MUTE,$/;"	e	enum:vlc_action
ACTIONID_VOL_UP	vlc_keys.h	/^    ACTIONID_VOL_UP,$/;"	e	enum:vlc_action
ACTIONID_WALLPAPER	vlc_keys.h	/^    ACTIONID_WALLPAPER,$/;"	e	enum:vlc_action
ACTIONID_ZOOM	vlc_keys.h	/^    ACTIONID_ZOOM,$/;"	e	enum:vlc_action
ACTIONID_ZOOM_DOUBLE	vlc_keys.h	/^    ACTIONID_ZOOM_DOUBLE,$/;"	e	enum:vlc_action
ACTIONID_ZOOM_HALF	vlc_keys.h	/^    ACTIONID_ZOOM_HALF,$/;"	e	enum:vlc_action
ACTIONID_ZOOM_ORIGINAL	vlc_keys.h	/^    ACTIONID_ZOOM_ORIGINAL,$/;"	e	enum:vlc_action
ACTIONID_ZOOM_QUARTER	vlc_keys.h	/^    ACTIONID_ZOOM_QUARTER,$/;"	e	enum:vlc_action
ADEC_HELP	vlc_config_cat.h	115;"	d
ADEC_TITLE	vlc_config_cat.h	114;"	d
ADVANCED_HELP	vlc_config_cat.h	121;"	d
ADVANCED_TITLE	vlc_config_cat.h	120;"	d
AFILTER_HELP	vlc_config_cat.h	58;"	d
AFILTER_TITLE	vlc_config_cat.h	57;"	d
AF_INET6	vlc_network.h	76;"	d
AI_CANONNAME	vlc_network.h	255;"	d
AI_NUMERICHOST	vlc_network.h	256;"	d
AI_NUMERICSERV	vlc_network.h	230;"	d
AI_PASSIVE	vlc_network.h	254;"	d
ALBUM_ART_ALL	vlc_meta.h	/^    ALBUM_ART_ALL$/;"	e	enum:__anon147
ALBUM_ART_WHEN_ASKED	vlc_meta.h	/^    ALBUM_ART_WHEN_ASKED,$/;"	e	enum:__anon147
ALBUM_ART_WHEN_PLAYED	vlc_meta.h	/^    ALBUM_ART_WHEN_PLAYED,$/;"	e	enum:__anon147
AMISC_HELP	vlc_config_cat.h	67;"	d
AMISC_TITLE	vlc_config_cat.h	66;"	d
ANSWERED_DIALOG	vlc_interface.h	/^    ANSWERED_DIALOG,            \/\/\/< Got "answer"$/;"	e	enum:__anon117
AOUT_CHANS_4_0	vlc_aout.h	128;"	d
AOUT_CHANS_4_1	vlc_aout.h	129;"	d
AOUT_CHANS_5_0	vlc_aout.h	130;"	d
AOUT_CHANS_5_1	vlc_aout.h	131;"	d
AOUT_CHANS_7_1	vlc_aout.h	132;"	d
AOUT_CHANS_FRONT	vlc_aout.h	123;"	d
AOUT_CHANS_MIDDLE	vlc_aout.h	124;"	d
AOUT_CHANS_REAR	vlc_aout.h	125;"	d
AOUT_CHANS_STEREO	vlc_aout.h	127;"	d
AOUT_CHAN_CENTER	vlc_aout.h	113;"	d
AOUT_CHAN_DOLBYSTEREO	vlc_aout.h	135;"	d
AOUT_CHAN_DUALMONO	vlc_aout.h	136;"	d
AOUT_CHAN_LEFT	vlc_aout.h	114;"	d
AOUT_CHAN_LFE	vlc_aout.h	121;"	d
AOUT_CHAN_MAX	vlc_aout.h	140;"	d
AOUT_CHAN_MIDDLELEFT	vlc_aout.h	119;"	d
AOUT_CHAN_MIDDLERIGHT	vlc_aout.h	120;"	d
AOUT_CHAN_PHYSMASK	vlc_aout.h	139;"	d
AOUT_CHAN_REARCENTER	vlc_aout.h	116;"	d
AOUT_CHAN_REARLEFT	vlc_aout.h	117;"	d
AOUT_CHAN_REARRIGHT	vlc_aout.h	118;"	d
AOUT_CHAN_REVERSESTEREO	vlc_aout.h	137;"	d
AOUT_CHAN_RIGHT	vlc_aout.h	115;"	d
AOUT_FMTS_IDENTICAL	vlc_aout.h	60;"	d
AOUT_FMTS_SIMILAR	vlc_aout.h	65;"	d
AOUT_FMT_LINEAR	vlc_aout.h	70;"	d
AOUT_FMT_SPDIF	vlc_aout.h	76;"	d
AOUT_HELP	vlc_config_cat.h	64;"	d
AOUT_MAX_ADVANCE_TIME	vlc_aout.h	36;"	d
AOUT_MAX_FILTERS	vlc_aout.h	32;"	d
AOUT_MAX_PREPARE_TIME	vlc_aout.h	40;"	d
AOUT_MAX_PTS_ADVANCE	vlc_aout.h	49;"	d
AOUT_MAX_PTS_DELAY	vlc_aout.h	53;"	d
AOUT_MAX_RESAMPLING	vlc_aout.h	56;"	d
AOUT_MIN_PREPARE_TIME	vlc_aout.h	44;"	d
AOUT_SPDIF_SIZE	vlc_aout.h	165;"	d
AOUT_TITLE	vlc_config_cat.h	63;"	d
AOUT_VAR_2F2R	vlc_aout.h	145;"	d
AOUT_VAR_3F2R	vlc_aout.h	146;"	d
AOUT_VAR_5_1	vlc_aout.h	147;"	d
AOUT_VAR_6_1	vlc_aout.h	148;"	d
AOUT_VAR_7_1	vlc_aout.h	149;"	d
AOUT_VAR_CHAN_DOLBYS	vlc_aout.h	156;"	d
AOUT_VAR_CHAN_LEFT	vlc_aout.h	154;"	d
AOUT_VAR_CHAN_RIGHT	vlc_aout.h	155;"	d
AOUT_VAR_CHAN_RSTEREO	vlc_aout.h	153;"	d
AOUT_VAR_CHAN_STEREO	vlc_aout.h	152;"	d
AOUT_VAR_MONO	vlc_aout.h	143;"	d
AOUT_VAR_SPDIF	vlc_aout.h	150;"	d
AOUT_VAR_STEREO	vlc_aout.h	144;"	d
AOUT_VOLUME_DEFAULT	vlc_aout_intf.h	29;"	d
AOUT_VOLUME_MAX	vlc_aout_intf.h	30;"	d
ARRAY_APPEND	vlc_arrays.h	233;"	d
ARRAY_BSEARCH	vlc_arrays.h	270;"	d
ARRAY_INIT	vlc_arrays.h	219;"	d
ARRAY_INSERT	vlc_arrays.h	240;"	d
ARRAY_REMOVE	vlc_arrays.h	257;"	d
ARRAY_RESET	vlc_arrays.h	226;"	d
ARRAY_SIZE	vlc_arrays.h	208;"	d
ARRAY_VAL	vlc_arrays.h	268;"	d
ATTR_ALIGN	vlc_fixups.h	234;"	d
ATTR_ALIGN	vlc_fixups.h	236;"	d
ATTR_PACKED	vlc_codecs.h	/^ATTR_PACKED$/;"	s
ATTR_PACKED	vlc_codecs.h	49;"	d
ATTR_PACKED	vlc_codecs.h	52;"	d
AUDIO_ES	vlc_es.h	/^    AUDIO_ES   = 0x02,$/;"	e	enum:es_format_category_e
AUDIO_GENERAL_HELP	vlc_config_cat.h	55;"	d
AUDIO_HELP	vlc_config_cat.h	53;"	d
AUDIO_REPLAY_GAIN_ALBUM	vlc_es.h	50;"	d
AUDIO_REPLAY_GAIN_MAX	vlc_es.h	48;"	d
AUDIO_REPLAY_GAIN_TRACK	vlc_es.h	49;"	d
AUDIO_TITLE	vlc_config_cat.h	52;"	d
AVISUAL_HELP	vlc_config_cat.h	61;"	d
AVISUAL_TITLE	vlc_config_cat.h	60;"	d
A_PITCH	vlc_picture.h	330;"	d
A_PIXELS	vlc_picture.h	329;"	d
A_PLANE	vlc_picture.h	/^    A_PLANE = 3,$/;"	e	enum:__anon133
ActivateTab	vlc_windows_interfaces.h	/^    long ( WINAPI *ActivateTab )(ITaskbarList3 *This, HWND hwnd);$/;"	m	struct:ITaskbarList3Vtbl
AddRef	vlc_windows_interfaces.h	/^    long ( WINAPI *AddRef )(ITaskbarList3 *This);$/;"	m	struct:ITaskbarList3Vtbl
AddTab	vlc_windows_interfaces.h	/^    long ( WINAPI *AddTab )(ITaskbarList3 *This, HWND hwnd);$/;"	m	struct:ITaskbarList3Vtbl
AvgTimePerFrame	vlc_codecs.h	/^    REFERENCE_TIME          AvgTimePerFrame;$/;"	m	struct:ATTR_PACKED
B	vlc_md5.h	/^    uint32_t A, B, C, D;          \/* chaining variables *\/$/;"	m	struct:md5_s
BLOCK_FLAG_BOTTOM_FIELD_FIRST	vlc_block.h	85;"	d
BLOCK_FLAG_CLOCK	vlc_block.h	75;"	d
BLOCK_FLAG_CORE_PRIVATE_MASK	vlc_block.h	95;"	d
BLOCK_FLAG_CORE_PRIVATE_SHIFT	vlc_block.h	96;"	d
BLOCK_FLAG_CORRUPTED	vlc_block.h	81;"	d
BLOCK_FLAG_DISCONTINUITY	vlc_block.h	57;"	d
BLOCK_FLAG_END_OF_FRAME	vlc_block.h	69;"	d
BLOCK_FLAG_END_OF_SEQUENCE	vlc_block.h	73;"	d
BLOCK_FLAG_HEADER	vlc_block.h	67;"	d
BLOCK_FLAG_INTERLACED_MASK	vlc_block.h	88;"	d
BLOCK_FLAG_NO_KEYFRAME	vlc_block.h	71;"	d
BLOCK_FLAG_PREROLL	vlc_block.h	79;"	d
BLOCK_FLAG_PRIVATE_MASK	vlc_block.h	99;"	d
BLOCK_FLAG_PRIVATE_SHIFT	vlc_block.h	100;"	d
BLOCK_FLAG_SCRAMBLED	vlc_block.h	77;"	d
BLOCK_FLAG_TOP_FIELD_FIRST	vlc_block.h	83;"	d
BLOCK_FLAG_TYPE_B	vlc_block.h	63;"	d
BLOCK_FLAG_TYPE_I	vlc_block.h	59;"	d
BLOCK_FLAG_TYPE_MASK	vlc_block.h	91;"	d
BLOCK_FLAG_TYPE_P	vlc_block.h	61;"	d
BLOCK_FLAG_TYPE_PB	vlc_block.h	65;"	d
BSEARCH	vlc_arrays.h	170;"	d
B_CODING_TYPE	vlc_codec_synchro.h	33;"	d
BitsPerSample	vlc_codecs.h	/^    uint16_t BitsPerSample;$/;"	m	struct:_WAVEHEADER
BytesPerSample	vlc_codecs.h	/^    uint16_t BytesPerSample;$/;"	m	struct:_WAVEHEADER
BytesPerSec	vlc_codecs.h	/^    uint32_t BytesPerSec;$/;"	m	struct:_WAVEHEADER
C	vlc_md5.h	/^    uint32_t A, B, C, D;          \/* chaining variables *\/$/;"	m	struct:md5_s
CAT_ADVANCED	vlc_configuration.h	114;"	d
CAT_AUDIO	vlc_configuration.h	81;"	d
CAT_INPUT	vlc_configuration.h	96;"	d
CAT_INTERFACE	vlc_configuration.h	75;"	d
CAT_OSD	vlc_configuration.h	125;"	d
CAT_PLAYLIST	vlc_configuration.h	120;"	d
CAT_SOUT	vlc_configuration.h	105;"	d
CAT_VIDEO	vlc_configuration.h	88;"	d
CDECL_SYMBOL	vlc_plugin.h	135;"	d
CDECL_SYMBOL	vlc_plugin.h	139;"	d
CDECL_SYMBOL	vlc_plugin.h	140;"	d
CEIL	vlc_common.h	571;"	d
CLOCK_FREQ	vlc_config.h	46;"	d
CLSID_ApplicationAssociationRegistrationUI	vlc_windows_interfaces.h	/^const GUID CLSID_ApplicationAssociationRegistrationUI = { 0x1968106d,0xf3b5,0x44cf,{0x89,0x0e,0x11,0x6f,0xcb,0x9e,0xce,0xf1}};$/;"	v
CLSID_TaskbarList	vlc_windows_interfaces.h	/^const GUID CLSID_TaskbarList ={ 0x56FDF344,0xFD6D,0x11d0,{0x95,0x8A,0x00,0x60,0x97,0xC9,0xA0,0x90}};$/;"	v
CONCATENATE	vlc_plugin.h	124;"	d
CONFIG_CATEGORY	vlc_configuration.h	49;"	d
CONFIG_HINT_CATEGORY	vlc_configuration.h	44;"	d
CONFIG_HINT_SUBCATEGORY	vlc_configuration.h	45;"	d
CONFIG_HINT_SUBCATEGORY_END	vlc_configuration.h	46;"	d
CONFIG_HINT_USAGE	vlc_configuration.h	47;"	d
CONFIG_ITEM	vlc_configuration.h	70;"	d
CONFIG_ITEM_BOOL	vlc_configuration.h	57;"	d
CONFIG_ITEM_DIRECTORY	vlc_configuration.h	67;"	d
CONFIG_ITEM_FLOAT	vlc_configuration.h	54;"	d
CONFIG_ITEM_FONT	vlc_configuration.h	68;"	d
CONFIG_ITEM_INTEGER	vlc_configuration.h	55;"	d
CONFIG_ITEM_KEY	vlc_configuration.h	60;"	d
CONFIG_ITEM_LOADFILE	vlc_configuration.h	65;"	d
CONFIG_ITEM_MODULE	vlc_configuration.h	61;"	d
CONFIG_ITEM_MODULE_CAT	vlc_configuration.h	62;"	d
CONFIG_ITEM_MODULE_LIST	vlc_configuration.h	63;"	d
CONFIG_ITEM_MODULE_LIST_CAT	vlc_configuration.h	64;"	d
CONFIG_ITEM_PASSWORD	vlc_configuration.h	59;"	d
CONFIG_ITEM_RGB	vlc_configuration.h	56;"	d
CONFIG_ITEM_SAVEFILE	vlc_configuration.h	66;"	d
CONFIG_ITEM_STRING	vlc_configuration.h	58;"	d
CONFIG_SECTION	vlc_configuration.h	51;"	d
CONFIG_SUBCATEGORY	vlc_configuration.h	50;"	d
CONSOLE_INTRO_MSG	vlc_interface.h	114;"	d
CONSOLE_INTRO_MSG	vlc_interface.h	129;"	d
CPU_CAPABILITY_3DNOW	vlc_cpu.h	31;"	d
CPU_CAPABILITY_3DNOW	vlc_cpu.h	59;"	d
CPU_CAPABILITY_ALTIVEC	vlc_cpu.h	71;"	d
CPU_CAPABILITY_ALTIVEC	vlc_cpu.h	73;"	d
CPU_CAPABILITY_MMX	vlc_cpu.h	30;"	d
CPU_CAPABILITY_MMX	vlc_cpu.h	58;"	d
CPU_CAPABILITY_MMXEXT	vlc_cpu.h	32;"	d
CPU_CAPABILITY_MMXEXT	vlc_cpu.h	60;"	d
CPU_CAPABILITY_NEON	vlc_cpu.h	77;"	d
CPU_CAPABILITY_NEON	vlc_cpu.h	79;"	d
CPU_CAPABILITY_SSE	vlc_cpu.h	33;"	d
CPU_CAPABILITY_SSE	vlc_cpu.h	61;"	d
CPU_CAPABILITY_SSE2	vlc_cpu.h	34;"	d
CPU_CAPABILITY_SSE2	vlc_cpu.h	62;"	d
CPU_CAPABILITY_SSE3	vlc_cpu.h	35;"	d
CPU_CAPABILITY_SSE3	vlc_cpu.h	63;"	d
CPU_CAPABILITY_SSE4A	vlc_cpu.h	39;"	d
CPU_CAPABILITY_SSE4A	vlc_cpu.h	67;"	d
CPU_CAPABILITY_SSE4_1	vlc_cpu.h	37;"	d
CPU_CAPABILITY_SSE4_1	vlc_cpu.h	65;"	d
CPU_CAPABILITY_SSE4_2	vlc_cpu.h	38;"	d
CPU_CAPABILITY_SSE4_2	vlc_cpu.h	66;"	d
CPU_CAPABILITY_SSSE3	vlc_cpu.h	36;"	d
CPU_CAPABILITY_SSSE3	vlc_cpu.h	64;"	d
CPU_HELP	vlc_config_cat.h	190;"	d
CPU_TITLE	vlc_config_cat.h	189;"	d
CRUDE_HACK	vlc_plugin.h	125;"	d
ChunkTypeID	vlc_codecs.h	/^    uint32_t ChunkTypeID;$/;"	m	struct:_WAVEHEADER
D	vlc_md5.h	/^    uint32_t A, B, C, D;          \/* chaining variables *\/$/;"	m	struct:md5_s
DECL_ARRAY	vlc_arrays.h	211;"	d
DEF	vlc_playlist.h	212;"	d
DEF	vlc_playlist.h	219;"	d
DEFAULT_INPUT_ACTIVITY	vlc_config.h	63;"	d
DEFAULT_PTS_DELAY	vlc_config.h	79;"	d
DEMUX_CAN_CONTROL_PACE	vlc_demux.h	/^    DEMUX_CAN_CONTROL_PACE,     \/* arg1= bool*pb_pace    can fail (assume false) *\/$/;"	e	enum:demux_query_e
DEMUX_CAN_CONTROL_RATE	vlc_demux.h	/^    DEMUX_CAN_CONTROL_RATE,     \/* arg1= bool*pb_rate arg2= bool*pb_ts_rescale  can fail(assume false) *\/$/;"	e	enum:demux_query_e
DEMUX_CAN_PAUSE	vlc_demux.h	/^    DEMUX_CAN_PAUSE = 0x1000,   \/* arg1= bool*    can fail (assume false)*\/$/;"	e	enum:demux_query_e
DEMUX_CAN_RECORD	vlc_demux.h	/^    DEMUX_CAN_RECORD,           \/* arg1=bool*   res=can fail(assume false) *\/$/;"	e	enum:demux_query_e
DEMUX_CAN_SEEK	vlc_demux.h	/^    DEMUX_CAN_SEEK,            \/* arg1= bool*    can fail (assume false)*\/$/;"	e	enum:demux_query_e
DEMUX_GET_ATTACHMENTS	vlc_demux.h	/^    DEMUX_GET_ATTACHMENTS,      \/* arg1=input_attachment_t***, int* res=can fail *\/$/;"	e	enum:demux_query_e
DEMUX_GET_FPS	vlc_demux.h	/^    DEMUX_GET_FPS,              \/* arg1= double *       res=can fail    *\/$/;"	e	enum:demux_query_e
DEMUX_GET_LENGTH	vlc_demux.h	/^    DEMUX_GET_LENGTH,           \/* arg1= int64_t *      res=    *\/$/;"	e	enum:demux_query_e
DEMUX_GET_META	vlc_demux.h	/^    DEMUX_GET_META,             \/* arg1= vlc_meta_t **  res=can fail    *\/$/;"	e	enum:demux_query_e
DEMUX_GET_POSITION	vlc_demux.h	/^    DEMUX_GET_POSITION,         \/* arg1= double *       res=    *\/$/;"	e	enum:demux_query_e
DEMUX_GET_PTS_DELAY	vlc_demux.h	/^    DEMUX_GET_PTS_DELAY,        \/* arg1= int64_t*       cannot fail *\/$/;"	e	enum:demux_query_e
DEMUX_GET_TIME	vlc_demux.h	/^    DEMUX_GET_TIME,             \/* arg1= int64_t *      res=    *\/$/;"	e	enum:demux_query_e
DEMUX_GET_TITLE_INFO	vlc_demux.h	/^    DEMUX_GET_TITLE_INFO,       \/* arg1=input_title_t*** arg2=int*$/;"	e	enum:demux_query_e
DEMUX_HAS_UNSUPPORTED_META	vlc_demux.h	/^    DEMUX_HAS_UNSUPPORTED_META, \/* arg1= bool *   res can fail    *\/$/;"	e	enum:demux_query_e
DEMUX_HELP	vlc_config_cat.h	109;"	d
DEMUX_INIT_COMMON	vlc_demux.h	211;"	d
DEMUX_SET_GROUP	vlc_demux.h	/^    DEMUX_SET_GROUP,            \/* arg1= int, arg2=const vlc_list_t *   can fail *\/$/;"	e	enum:demux_query_e
DEMUX_SET_NEXT_DEMUX_TIME	vlc_demux.h	/^    DEMUX_SET_NEXT_DEMUX_TIME,  \/* arg1= int64_t *      can fail *\/$/;"	e	enum:demux_query_e
DEMUX_SET_PAUSE_STATE	vlc_demux.h	/^    DEMUX_SET_PAUSE_STATE,      \/* arg1= bool     can fail *\/$/;"	e	enum:demux_query_e
DEMUX_SET_POSITION	vlc_demux.h	/^    DEMUX_SET_POSITION,         \/* arg1= double arg2= bool b_precise    res=can fail    *\/$/;"	e	enum:demux_query_e
DEMUX_SET_RATE	vlc_demux.h	/^    DEMUX_SET_RATE,             \/* arg1= int*pi_rate                                        can fail *\/$/;"	e	enum:demux_query_e
DEMUX_SET_RECORD_STATE	vlc_demux.h	/^    DEMUX_SET_RECORD_STATE,     \/* arg1=bool    res=can fail *\/$/;"	e	enum:demux_query_e
DEMUX_SET_SEEKPOINT	vlc_demux.h	/^    DEMUX_SET_SEEKPOINT,        \/* arg1= int            can fail *\/$/;"	e	enum:demux_query_e
DEMUX_SET_TIME	vlc_demux.h	/^    DEMUX_SET_TIME,             \/* arg1= int64_t arg2= bool b_precise   res=can fail    *\/$/;"	e	enum:demux_query_e
DEMUX_SET_TITLE	vlc_demux.h	/^    DEMUX_SET_TITLE,            \/* arg1= int            can fail *\/$/;"	e	enum:demux_query_e
DEMUX_TITLE	vlc_config_cat.h	108;"	d
DESTROYED_DIALOG	vlc_interface.h	/^    DESTROYED_DIALOG,           \/\/\/< Interface has destroyed it$/;"	e	enum:__anon117
DIALOG_BLOCKING_ERROR	vlc_interface.h	296;"	d
DIALOG_CANCELLED	vlc_interface.h	/^    DIALOG_CANCELLED$/;"	e	enum:__anon116
DIALOG_GOT_ANSWER	vlc_interface.h	292;"	d
DIALOG_INTF_PROGRESS	vlc_interface.h	299;"	d
DIALOG_LOGIN_PW_OK_CANCEL	vlc_interface.h	294;"	d
DIALOG_NO	vlc_interface.h	/^    DIALOG_NO,$/;"	e	enum:__anon116
DIALOG_NONBLOCKING_ERROR	vlc_interface.h	297;"	d
DIALOG_OK_YES	vlc_interface.h	/^    DIALOG_OK_YES,$/;"	e	enum:__anon116
DIALOG_PSZ_INPUT_OK_CANCEL	vlc_interface.h	295;"	d
DIALOG_USER_PROGRESS	vlc_interface.h	298;"	d
DIALOG_YES_NO_CANCEL	vlc_interface.h	293;"	d
DIR_SEP	vlc_common.h	1015;"	d
DIR_SEP	vlc_common.h	1020;"	d
DIR_SEP_CHAR	vlc_common.h	1014;"	d
DIR_SEP_CHAR	vlc_common.h	1019;"	d
DLL_SYMBOL	vlc_plugin.h	138;"	d
DLL_SYMBOL	vlc_plugin.h	142;"	d
DLL_SYMBOL	vlc_plugin.h	144;"	d
DLL_SYMBOL	vlc_plugin.h	147;"	d
D_CODING_TYPE	vlc_codec_synchro.h	34;"	d
Data1	vlc_codecs.h	/^    uint32_t Data1;$/;"	m	struct:_GUID
Data2	vlc_codecs.h	/^    uint16_t Data2;$/;"	m	struct:_GUID
Data3	vlc_codecs.h	/^    uint16_t Data3;$/;"	m	struct:_GUID
Data4	vlc_codecs.h	/^    uint8_t  Data4[8];$/;"	m	struct:_GUID
DataChunkID	vlc_codecs.h	/^    uint32_t DataChunkID;$/;"	m	struct:_WAVEHEADER
DataLength	vlc_codecs.h	/^    uint32_t DataLength;$/;"	m	struct:_WAVEHEADER
DeleteTab	vlc_windows_interfaces.h	/^    long ( WINAPI *DeleteTab )(ITaskbarList3 *This, HWND hwnd);$/;"	m	struct:ITaskbarList3Vtbl
DictHash	vlc_arrays.h	/^static inline uint64_t DictHash( const char *psz_string, int hashsize )$/;"	f
EAI_ADDRFAMILY	vlc_network.h	210;"	d
EAI_AGAIN	vlc_network.h	192;"	d
EAI_BADFLAGS	vlc_network.h	186;"	d
EAI_FAIL	vlc_network.h	195;"	d
EAI_FAMILY	vlc_network.h	201;"	d
EAI_MEMORY	vlc_network.h	213;"	d
EAI_NODATA	vlc_network.h	198;"	d
EAI_NONAME	vlc_network.h	189;"	d
EAI_OVERFLOW	vlc_network.h	216;"	d
EAI_SERVICE	vlc_network.h	207;"	d
EAI_SOCKTYPE	vlc_network.h	204;"	d
EAI_SYSTEM	vlc_network.h	219;"	d
EMPTY_STR	vlc_common.h	705;"	d
END_S	vlc_input.h	/^    END_S,$/;"	e	enum:input_state_e
ENETUNREACH	vlc_network.h	42;"	d
ENTER	vlc_fixups.h	/^    FIND, ENTER$/;"	e	enum:__anon86
ENTRY	vlc_fixups.h	/^} ENTRY;$/;"	t	typeref:struct:entry
ERROR_S	vlc_input.h	/^    ERROR_S,$/;"	e	enum:input_state_e
ES_OUT_DEL_GROUP	vlc_es_out.h	/^    ES_OUT_DEL_GROUP,       \/* arg1=int i_group *\/$/;"	e	enum:es_out_query_e
ES_OUT_GET_EMPTY	vlc_es_out.h	/^    ES_OUT_GET_EMPTY,       \/* arg1=bool*   res=cannot fail *\/$/;"	e	enum:es_out_query_e
ES_OUT_GET_ES_STATE	vlc_es_out.h	/^    ES_OUT_GET_ES_STATE,\/* arg1= es_out_id_t* arg2=bool*  *\/$/;"	e	enum:es_out_query_e
ES_OUT_GET_PCR_SYSTEM	vlc_es_out.h	/^    ES_OUT_GET_PCR_SYSTEM, \/* arg1=mtime_t *, arg2=mtime_t * res=can fail *\/$/;"	e	enum:es_out_query_e
ES_OUT_MODIFY_PCR_SYSTEM	vlc_es_out.h	/^    ES_OUT_MODIFY_PCR_SYSTEM, \/* arg1=int is_absolute, arg2=mtime_t, res=can fail *\/$/;"	e	enum:es_out_query_e
ES_OUT_PRIVATE_START	vlc_es_out.h	/^    ES_OUT_PRIVATE_START = 0x10000,$/;"	e	enum:es_out_query_e
ES_OUT_RESET_PCR	vlc_es_out.h	/^    ES_OUT_RESET_PCR,           \/* no arg *\/$/;"	e	enum:es_out_query_e
ES_OUT_RESTART_ES	vlc_es_out.h	/^    ES_OUT_RESTART_ES,  \/* arg1= es_out_id_t*                   *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_ES	vlc_es_out.h	/^    ES_OUT_SET_ES,      \/* arg1= es_out_id_t*                   *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_ES_DEFAULT	vlc_es_out.h	/^    ES_OUT_SET_ES_DEFAULT, \/* arg1= es_out_id_t*                *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_ES_FMT	vlc_es_out.h	/^    ES_OUT_SET_ES_FMT,         \/* arg1= es_out_id_t* arg2=es_format_t* *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_ES_SCRAMBLED_STATE	vlc_es_out.h	/^    ES_OUT_SET_ES_SCRAMBLED_STATE,  \/* arg1=int i_group arg2=es_out_id_t* *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_ES_STATE	vlc_es_out.h	/^    ES_OUT_SET_ES_STATE,\/* arg1= es_out_id_t* arg2=bool   *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_GROUP	vlc_es_out.h	/^    ES_OUT_SET_GROUP,   \/* arg1= int                            *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_GROUP_EPG	vlc_es_out.h	/^    ES_OUT_SET_GROUP_EPG,   \/* arg1=int i_group arg2=const vlc_epg_t *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_GROUP_META	vlc_es_out.h	/^    ES_OUT_SET_GROUP_META,  \/* arg1=int i_group arg2=const vlc_meta_t *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_GROUP_PCR	vlc_es_out.h	/^    ES_OUT_SET_GROUP_PCR,       \/* arg1= int i_group, arg2=int64_t i_pcr(microsecond!)*\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_META	vlc_es_out.h	/^    ES_OUT_SET_META, \/* arg1=const vlc_meta_t * *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_NEXT_DISPLAY_TIME	vlc_es_out.h	/^    ES_OUT_SET_NEXT_DISPLAY_TIME,       \/* arg1=int64_t i_pts(microsecond) *\/$/;"	e	enum:es_out_query_e
ES_OUT_SET_PCR	vlc_es_out.h	/^    ES_OUT_SET_PCR,             \/* arg1=int64_t i_pcr(microsecond!) (using default group 0)*\/$/;"	e	enum:es_out_query_e
ETIMEDOUT	vlc_threads.h	230;"	d
EXTENSIONS_AUDIO	vlc_interface.h	181;"	d
EXTENSIONS_AUDIO_CSV	vlc_interface.h	169;"	d
EXTENSIONS_MEDIA	vlc_interface.h	240;"	d
EXTENSIONS_PLAYLIST	vlc_interface.h	238;"	d
EXTENSIONS_SUBTITLE	vlc_interface.h	243;"	d
EXTENSIONS_VIDEO	vlc_interface.h	232;"	d
EXTENSIONS_VIDEO_CSV	vlc_interface.h	174;"	d
EXTENSION_ACTIVATE	vlc_extensions.h	/^    EXTENSION_ACTIVATE,       \/**< arg1: extension_t* *\/$/;"	e	enum:__anon4
EXTENSION_DEACTIVATE	vlc_extensions.h	/^    EXTENSION_DEACTIVATE,     \/**< arg1: extension_t* *\/$/;"	e	enum:__anon4
EXTENSION_EVENT_CLICK	vlc_extensions.h	/^    EXTENSION_EVENT_CLICK,       \/\/\/< Click on a widget: data = widget$/;"	e	enum:__anon5
EXTENSION_EVENT_CLOSE	vlc_extensions.h	/^    EXTENSION_EVENT_CLOSE,       \/\/\/< Close the dialog: no data$/;"	e	enum:__anon5
EXTENSION_GET_MENU	vlc_extensions.h	/^    EXTENSION_GET_MENU,       \/**< arg1: extension_t*, arg2: char***, arg3: uint16_t** *\/$/;"	e	enum:__anon4
EXTENSION_HAS_MENU	vlc_extensions.h	/^    EXTENSION_HAS_MENU,       \/**< arg1: extension_t* *\/$/;"	e	enum:__anon4
EXTENSION_IS_ACTIVATED	vlc_extensions.h	/^    EXTENSION_IS_ACTIVATED,   \/**< arg1: extension_t*, arg2: bool* *\/$/;"	e	enum:__anon4
EXTENSION_META_CHANGED	vlc_extensions.h	/^    EXTENSION_META_CHANGED,   \/**< arg1: extension_t*, arg2 (input_item_t*) *\/$/;"	e	enum:__anon4
EXTENSION_PLAYING_CHANGED	vlc_extensions.h	/^    EXTENSION_PLAYING_CHANGED, \/**< arg1: extension_t*, arg2 int( playing status ) *\/$/;"	e	enum:__anon4
EXTENSION_SET_INPUT	vlc_extensions.h	/^    EXTENSION_SET_INPUT,      \/**< arg1: extension_t*, arg2 (input_thread_t*) *\/$/;"	e	enum:__anon4
EXTENSION_TRIGGER	vlc_extensions.h	/^    EXTENSION_TRIGGER,        \/**< arg1: extension_t* *\/$/;"	e	enum:__anon4
EXTENSION_TRIGGER_MENU	vlc_extensions.h	/^    EXTENSION_TRIGGER_MENU,   \/**< arg1: extension_t*, int (uint16_t) *\/$/;"	e	enum:__anon4
EXTENSION_TRIGGER_ONLY	vlc_extensions.h	/^    EXTENSION_TRIGGER_ONLY,   \/**< arg1: extension_t*, arg2: bool* *\/$/;"	e	enum:__anon4
EXTENSION_WIDGET_BUTTON	vlc_extensions.h	/^    EXTENSION_WIDGET_BUTTON,     \/\/\/< Clickable button$/;"	e	enum:__anon7
EXTENSION_WIDGET_CHECK_BOX	vlc_extensions.h	/^    EXTENSION_WIDGET_CHECK_BOX,  \/\/\/< Checkable box with label$/;"	e	enum:__anon7
EXTENSION_WIDGET_DROPDOWN	vlc_extensions.h	/^    EXTENSION_WIDGET_DROPDOWN,   \/\/\/< Drop-down box$/;"	e	enum:__anon7
EXTENSION_WIDGET_HTML	vlc_extensions.h	/^    EXTENSION_WIDGET_HTML,       \/\/\/< HTML or rich text area (non editable)$/;"	e	enum:__anon7
EXTENSION_WIDGET_IMAGE	vlc_extensions.h	/^    EXTENSION_WIDGET_IMAGE,      \/\/\/< Image label (psz_text is local URI)$/;"	e	enum:__anon7
EXTENSION_WIDGET_LABEL	vlc_extensions.h	/^    EXTENSION_WIDGET_LABEL,      \/\/\/< Text label$/;"	e	enum:__anon7
EXTENSION_WIDGET_LIST	vlc_extensions.h	/^    EXTENSION_WIDGET_LIST,       \/\/\/< Vertical list box (of strings)$/;"	e	enum:__anon7
EXTENSION_WIDGET_PASSWORD	vlc_extensions.h	/^    EXTENSION_WIDGET_PASSWORD,   \/\/\/< Editable password input (******)$/;"	e	enum:__anon7
EXTENSION_WIDGET_SPIN_ICON	vlc_extensions.h	/^    EXTENSION_WIDGET_SPIN_ICON,  \/\/\/< A "loading..." spinning icon$/;"	e	enum:__anon7
EXTENSION_WIDGET_TEXT_FIELD	vlc_extensions.h	/^    EXTENSION_WIDGET_TEXT_FIELD, \/\/\/< Editable text line for user input$/;"	e	enum:__anon7
EXTERN_SYMBOL	vlc_plugin.h	151;"	d
EXTERN_SYMBOL	vlc_plugin.h	153;"	d
FIND	vlc_fixups.h	/^    FIND, ENTER$/;"	e	enum:__anon86
FIXED32_FRACBITS	vlc_aout.h	103;"	d
FIXED32_MAX	vlc_aout.h	105;"	d
FIXED32_MIN	vlc_aout.h	104;"	d
FIXED32_ONE	vlc_aout.h	106;"	d
FOREACH_ARRAY	vlc_arrays.h	273;"	d
FOREACH_END	vlc_arrays.h	279;"	d
FREENULL	vlc_common.h	703;"	d
Format	vlc_codecs.h	/^    WAVEFORMATEX Format;$/;"	m	struct:_WAVEFORMATEXTENSIBLE
Format	vlc_codecs.h	/^    uint16_t Format;$/;"	m	struct:_WAVEHEADER
FromLatin1	vlc_charset.h	/^static inline char *FromLatin1 (const char *latin)$/;"	f
FromWide	vlc_charset.h	/^static inline char *FromWide (const wchar_t *wide)$/;"	f
GCD	vlc_common.h	/^static inline int64_t GCD ( int64_t a, int64_t b )$/;"	f
GUID	vlc_codecs.h	/^} GUID, *REFGUID, *LPGUID;$/;"	t	typeref:struct:_GUID
GUID_DEFINED	vlc_codecs.h	36;"	d
GetDWBE	vlc_common.h	758;"	d
GetDWLE	vlc_common.h	/^static inline uint32_t GetDWLE (const void *p)$/;"	f
GetQWBE	vlc_common.h	759;"	d
GetQWLE	vlc_common.h	/^static inline uint64_t GetQWLE (const void *p)$/;"	f
GetWBE	vlc_common.h	757;"	d
GetWLE	vlc_common.h	/^static inline uint16_t GetWLE (const void *p)$/;"	f
HAVE_FORK	vlc_fixups.h	330;"	d
HAVE_FPU	vlc_cpu.h	101;"	d
HAVE_FPU	vlc_cpu.h	104;"	d
HAVE_FPU	vlc_cpu.h	88;"	d
HAVE_FPU	vlc_cpu.h	91;"	d
HAVE_FPU	vlc_cpu.h	95;"	d
HAVE_FPU	vlc_cpu.h	97;"	d
HTTPD_MSG_ANSWER	vlc_httpd.h	/^    HTTPD_MSG_ANSWER,$/;"	e	enum:__anon112
HTTPD_MSG_DESCRIBE	vlc_httpd.h	/^    HTTPD_MSG_DESCRIBE,$/;"	e	enum:__anon112
HTTPD_MSG_GET	vlc_httpd.h	/^    HTTPD_MSG_GET,$/;"	e	enum:__anon112
HTTPD_MSG_GETPARAMETER	vlc_httpd.h	/^    HTTPD_MSG_GETPARAMETER,$/;"	e	enum:__anon112
HTTPD_MSG_HEAD	vlc_httpd.h	/^    HTTPD_MSG_HEAD,$/;"	e	enum:__anon112
HTTPD_MSG_MAX	vlc_httpd.h	/^    HTTPD_MSG_MAX$/;"	e	enum:__anon112
HTTPD_MSG_NONE	vlc_httpd.h	/^    HTTPD_MSG_NONE,$/;"	e	enum:__anon112
HTTPD_MSG_OPTIONS	vlc_httpd.h	/^    HTTPD_MSG_OPTIONS,$/;"	e	enum:__anon112
HTTPD_MSG_PAUSE	vlc_httpd.h	/^    HTTPD_MSG_PAUSE,$/;"	e	enum:__anon112
HTTPD_MSG_PLAY	vlc_httpd.h	/^    HTTPD_MSG_PLAY,$/;"	e	enum:__anon112
HTTPD_MSG_POST	vlc_httpd.h	/^    HTTPD_MSG_POST,$/;"	e	enum:__anon112
HTTPD_MSG_SETUP	vlc_httpd.h	/^    HTTPD_MSG_SETUP,$/;"	e	enum:__anon112
HTTPD_MSG_TEARDOWN	vlc_httpd.h	/^    HTTPD_MSG_TEARDOWN,$/;"	e	enum:__anon112
HTTPD_PROTO_HTTP	vlc_httpd.h	/^    HTTPD_PROTO_HTTP,  \/* HTTP\/1.x *\/$/;"	e	enum:__anon113
HTTPD_PROTO_HTTP0	vlc_httpd.h	/^    HTTPD_PROTO_HTTP0, \/* HTTP\/0.x *\/$/;"	e	enum:__anon113
HTTPD_PROTO_NONE	vlc_httpd.h	/^    HTTPD_PROTO_NONE,$/;"	e	enum:__anon113
HTTPD_PROTO_RTSP	vlc_httpd.h	/^    HTTPD_PROTO_RTSP,  \/* RTSP\/1.x *\/$/;"	e	enum:__anon113
HrInit	vlc_windows_interfaces.h	/^    long ( WINAPI *HrInit )(ITaskbarList3 *This);$/;"	m	struct:ITaskbarList3Vtbl
I	vlc_url.h	90;"	d
I	vlc_url.h	96;"	d
IID_IApplicationAssociationRegistrationUI	vlc_windows_interfaces.h	/^const GUID IID_IApplicationAssociationRegistrationUI = {0x1f76a169,0xf994,0x40ac, {0x8f,0xc8,0x09,0x59,0xe8,0x87,0x47,0x10}};$/;"	v
IID_ITaskbarList3	vlc_windows_interfaces.h	/^const GUID IID_ITaskbarList3 = { 0xea1afb91,0x9e28,0x4b86,{0x90,0xe9,0x9e,0x9f,0x8a,0x5e,0xef,0xaf}};$/;"	v
IN6_IS_ADDR_MULTICAST	vlc_network.h	288;"	d
IN6_IS_ADDR_MULTICAST	vlc_network.h	77;"	d
INCL_BASE	vlc_common.h	485;"	d
INCL_PM	vlc_common.h	486;"	d
INIT_S	vlc_input.h	/^    INIT_S = 0,$/;"	e	enum:input_state_e
INPUT_ADD_BOOKMARK	vlc_input.h	/^    INPUT_ADD_BOOKMARK,    \/* arg1= seekpoint_t *  res=can fail   *\/$/;"	e	enum:input_query_e
INPUT_ADD_INFO	vlc_input.h	/^    INPUT_ADD_INFO,   \/* arg1= char* arg2= char* arg3=...     res=can fail *\/$/;"	e	enum:input_query_e
INPUT_ADD_SLAVE	vlc_input.h	/^    INPUT_ADD_SLAVE,       \/* arg1= const char * *\/$/;"	e	enum:input_query_e
INPUT_ADD_SUBTITLE	vlc_input.h	/^    INPUT_ADD_SUBTITLE,    \/* arg1= const char *, arg2=bool b_check_extension *\/$/;"	e	enum:input_query_e
INPUT_CHANGE_BOOKMARK	vlc_input.h	/^    INPUT_CHANGE_BOOKMARK, \/* arg1= seekpoint_t * arg2= int * res=can fail   *\/$/;"	e	enum:input_query_e
INPUT_CLEAR_BOOKMARKS	vlc_input.h	/^    INPUT_CLEAR_BOOKMARKS, \/* res=can fail *\/$/;"	e	enum:input_query_e
INPUT_DEL_BOOKMARK	vlc_input.h	/^    INPUT_DEL_BOOKMARK,    \/* arg1= seekpoint_t *  res=can fail   *\/$/;"	e	enum:input_query_e
INPUT_DEL_INFO	vlc_input.h	/^    INPUT_DEL_INFO,   \/* arg1= char* arg2= char*              res=can fail *\/$/;"	e	enum:input_query_e
INPUT_EVENT_ABORT	vlc_input.h	/^    INPUT_EVENT_ABORT,$/;"	e	enum:input_event_type_e
INPUT_EVENT_AOUT	vlc_input.h	/^    INPUT_EVENT_AOUT,$/;"	e	enum:input_event_type_e
INPUT_EVENT_AUDIO_DELAY	vlc_input.h	/^    INPUT_EVENT_AUDIO_DELAY,$/;"	e	enum:input_event_type_e
INPUT_EVENT_BOOKMARK	vlc_input.h	/^    INPUT_EVENT_BOOKMARK,$/;"	e	enum:input_event_type_e
INPUT_EVENT_CACHE	vlc_input.h	/^    INPUT_EVENT_CACHE,$/;"	e	enum:input_event_type_e
INPUT_EVENT_CHAPTER	vlc_input.h	/^    INPUT_EVENT_CHAPTER,$/;"	e	enum:input_event_type_e
INPUT_EVENT_DEAD	vlc_input.h	/^    INPUT_EVENT_DEAD,$/;"	e	enum:input_event_type_e
INPUT_EVENT_ES	vlc_input.h	/^    INPUT_EVENT_ES,$/;"	e	enum:input_event_type_e
INPUT_EVENT_ITEM_EPG	vlc_input.h	/^    INPUT_EVENT_ITEM_EPG,$/;"	e	enum:input_event_type_e
INPUT_EVENT_ITEM_INFO	vlc_input.h	/^    INPUT_EVENT_ITEM_INFO,$/;"	e	enum:input_event_type_e
INPUT_EVENT_ITEM_META	vlc_input.h	/^    INPUT_EVENT_ITEM_META,$/;"	e	enum:input_event_type_e
INPUT_EVENT_ITEM_NAME	vlc_input.h	/^    INPUT_EVENT_ITEM_NAME,$/;"	e	enum:input_event_type_e
INPUT_EVENT_LENGTH	vlc_input.h	/^    INPUT_EVENT_LENGTH,$/;"	e	enum:input_event_type_e
INPUT_EVENT_POSITION	vlc_input.h	/^    INPUT_EVENT_POSITION,$/;"	e	enum:input_event_type_e
INPUT_EVENT_PROGRAM	vlc_input.h	/^    INPUT_EVENT_PROGRAM,$/;"	e	enum:input_event_type_e
INPUT_EVENT_RATE	vlc_input.h	/^    INPUT_EVENT_RATE,$/;"	e	enum:input_event_type_e
INPUT_EVENT_RECORD	vlc_input.h	/^    INPUT_EVENT_RECORD,$/;"	e	enum:input_event_type_e
INPUT_EVENT_SIGNAL	vlc_input.h	/^    INPUT_EVENT_SIGNAL,$/;"	e	enum:input_event_type_e
INPUT_EVENT_STATE	vlc_input.h	/^    INPUT_EVENT_STATE,$/;"	e	enum:input_event_type_e
INPUT_EVENT_STATISTICS	vlc_input.h	/^    INPUT_EVENT_STATISTICS,$/;"	e	enum:input_event_type_e
INPUT_EVENT_SUBTITLE_DELAY	vlc_input.h	/^    INPUT_EVENT_SUBTITLE_DELAY,$/;"	e	enum:input_event_type_e
INPUT_EVENT_TELETEXT	vlc_input.h	/^    INPUT_EVENT_TELETEXT,$/;"	e	enum:input_event_type_e
INPUT_EVENT_TITLE	vlc_input.h	/^    INPUT_EVENT_TITLE,$/;"	e	enum:input_event_type_e
INPUT_EVENT_VOUT	vlc_input.h	/^    INPUT_EVENT_VOUT,$/;"	e	enum:input_event_type_e
INPUT_FSTAT_NB_READS	vlc_config.h	71;"	d
INPUT_GET_AOUT	vlc_input.h	/^    INPUT_GET_AOUT,         \/* arg1=audio_output_t **              res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_ATTACHMENT	vlc_input.h	/^    INPUT_GET_ATTACHMENT,  \/* arg1=input_attachment_t**, arg2=char*  res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_ATTACHMENTS	vlc_input.h	/^    INPUT_GET_ATTACHMENTS, \/* arg1=input_attachment_t***, arg2=int*  res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_AUDIO_DELAY	vlc_input.h	/^    INPUT_GET_AUDIO_DELAY,      \/* arg1 = int* res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_BOOKMARK	vlc_input.h	/^    INPUT_GET_BOOKMARK,    \/* arg1= seekpoint_t *               res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_BOOKMARKS	vlc_input.h	/^    INPUT_GET_BOOKMARKS,   \/* arg1= seekpoint_t *** arg2= int * res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_ES_OBJECTS	vlc_input.h	/^    INPUT_GET_ES_OBJECTS,   \/* arg1=int id, vlc_object_t **dec, vout_thread_t **, audio_output_t ** *\/$/;"	e	enum:input_query_e
INPUT_GET_INFO	vlc_input.h	/^    INPUT_GET_INFO,   \/* arg1= char* arg2= char* arg3= char** res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_LENGTH	vlc_input.h	/^    INPUT_GET_LENGTH,           \/* arg1= int64_t *      res=can fail    *\/$/;"	e	enum:input_query_e
INPUT_GET_PCR_SYSTEM	vlc_input.h	/^    INPUT_GET_PCR_SYSTEM,   \/* arg1=mtime_t *, arg2=mtime_t *       res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_POSITION	vlc_input.h	/^    INPUT_GET_POSITION,         \/* arg1= double *       res=    *\/$/;"	e	enum:input_query_e
INPUT_GET_RATE	vlc_input.h	/^    INPUT_GET_RATE,             \/* arg1= int *          res=    *\/$/;"	e	enum:input_query_e
INPUT_GET_RECORD_STATE	vlc_input.h	/^    INPUT_GET_RECORD_STATE, \/* arg1=bool*   res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_SPU_DELAY	vlc_input.h	/^    INPUT_GET_SPU_DELAY,        \/* arg1 = int* res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_STATE	vlc_input.h	/^    INPUT_GET_STATE,            \/* arg1= int *          res=    *\/$/;"	e	enum:input_query_e
INPUT_GET_TIME	vlc_input.h	/^    INPUT_GET_TIME,             \/* arg1= int64_t *      res=    *\/$/;"	e	enum:input_query_e
INPUT_GET_TITLE_INFO	vlc_input.h	/^    INPUT_GET_TITLE_INFO,     \/* arg1=input_title_t** arg2= int * res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_VIDEO_FPS	vlc_input.h	/^    INPUT_GET_VIDEO_FPS,         \/* arg1= double *        res=can fail *\/$/;"	e	enum:input_query_e
INPUT_GET_VOUTS	vlc_input.h	/^    INPUT_GET_VOUTS,        \/* arg1=vout_thread_t ***, size_t *        res=can fail *\/$/;"	e	enum:input_query_e
INPUT_HELP	vlc_config_cat.h	94;"	d
INPUT_IDLE_SLEEP	vlc_config.h	67;"	d
INPUT_MERGE_INFOS	vlc_input.h	/^    INPUT_MERGE_INFOS,\/* arg1= info_category_t *              res=cannot fail *\/$/;"	e	enum:input_query_e
INPUT_META	vlc_input_item.h	202;"	d
INPUT_MODIFY_PCR_SYSTEM	vlc_input.h	/^    INPUT_MODIFY_PCR_SYSTEM,\/* arg1=int absolute, arg2=mtime_t      res=can fail *\/$/;"	e	enum:input_query_e
INPUT_RATE_DEFAULT	vlc_input.h	359;"	d
INPUT_RATE_MAX	vlc_input.h	367;"	d
INPUT_RATE_MIN	vlc_input.h	363;"	d
INPUT_RECORD_PREFIX	vlc_input.h	282;"	d
INPUT_REPLACE_INFOS	vlc_input.h	/^    INPUT_REPLACE_INFOS,\/* arg1= info_category_t *            res=cannot fail *\/$/;"	e	enum:input_query_e
INPUT_RESTART_ES	vlc_input.h	/^    INPUT_RESTART_ES,       \/* arg1=int (-AUDIO\/VIDEO\/SPU_ES for the whole category) *\/$/;"	e	enum:input_query_e
INPUT_SET_AUDIO_DELAY	vlc_input.h	/^    INPUT_SET_AUDIO_DELAY,      \/* arg1 = int  res=can fail *\/$/;"	e	enum:input_query_e
INPUT_SET_BOOKMARK	vlc_input.h	/^    INPUT_SET_BOOKMARK,    \/* arg1= int  res=can fail    *\/$/;"	e	enum:input_query_e
INPUT_SET_NAME	vlc_input.h	/^    INPUT_SET_NAME,   \/* arg1= char* res=can fail    *\/$/;"	e	enum:input_query_e
INPUT_SET_POSITION	vlc_input.h	/^    INPUT_SET_POSITION,         \/* arg1= double         res=can fail    *\/$/;"	e	enum:input_query_e
INPUT_SET_RATE	vlc_input.h	/^    INPUT_SET_RATE,             \/* arg1= int            res=can fail    *\/$/;"	e	enum:input_query_e
INPUT_SET_RECORD_STATE	vlc_input.h	/^    INPUT_SET_RECORD_STATE, \/* arg1=bool    res=can fail *\/$/;"	e	enum:input_query_e
INPUT_SET_SPU_DELAY	vlc_input.h	/^    INPUT_SET_SPU_DELAY,        \/* arg1 = int  res=can fail *\/$/;"	e	enum:input_query_e
INPUT_SET_STATE	vlc_input.h	/^    INPUT_SET_STATE,            \/* arg1= int            res=can fail    *\/$/;"	e	enum:input_query_e
INPUT_SET_TIME	vlc_input.h	/^    INPUT_SET_TIME,             \/* arg1= int64_t        res=can fail    *\/$/;"	e	enum:input_query_e
INPUT_TITLE	vlc_config_cat.h	93;"	d
INPUT_UPDATE_META	vlc_input.h	246;"	d
INPUT_UPDATE_NONE	vlc_input.h	242;"	d
INPUT_UPDATE_SEEKPOINT	vlc_input.h	245;"	d
INPUT_UPDATE_SIGNAL	vlc_input.h	247;"	d
INPUT_UPDATE_SIZE	vlc_input.h	243;"	d
INPUT_UPDATE_TITLE	vlc_input.h	244;"	d
INSERT_ELEM	vlc_arrays.h	48;"	d
INTERACT_DESTROY	vlc_interface.h	/^    INTERACT_DESTROY$/;"	e	enum:__anon118
INTERACT_HIDE	vlc_interface.h	/^    INTERACT_HIDE,$/;"	e	enum:__anon118
INTERACT_NEW	vlc_interface.h	/^    INTERACT_NEW,$/;"	e	enum:__anon118
INTERACT_UPDATE	vlc_interface.h	/^    INTERACT_UPDATE,$/;"	e	enum:__anon118
INTF_ABOUT_MSG	vlc_interface.h	167;"	d
INTF_CONTROL_HELP	vlc_config_cat.h	46;"	d
INTF_CONTROL_TITLE	vlc_config_cat.h	45;"	d
INTF_DIALOG_AUDIOPOPUPMENU	vlc_interface.h	/^    INTF_DIALOG_AUDIOPOPUPMENU,$/;"	e	enum:vlc_dialog
INTF_DIALOG_BOOKMARKS	vlc_interface.h	/^    INTF_DIALOG_BOOKMARKS,$/;"	e	enum:vlc_dialog
INTF_DIALOG_CAPTURE	vlc_interface.h	/^    INTF_DIALOG_CAPTURE,$/;"	e	enum:vlc_dialog
INTF_DIALOG_DIRECTORY	vlc_interface.h	/^    INTF_DIALOG_DIRECTORY,$/;"	e	enum:vlc_dialog
INTF_DIALOG_DISC	vlc_interface.h	/^    INTF_DIALOG_DISC,$/;"	e	enum:vlc_dialog
INTF_DIALOG_EXIT	vlc_interface.h	/^    INTF_DIALOG_EXIT = 99$/;"	e	enum:vlc_dialog
INTF_DIALOG_EXTENDED	vlc_interface.h	/^    INTF_DIALOG_EXTENDED,$/;"	e	enum:vlc_dialog
INTF_DIALOG_FILE	vlc_interface.h	/^    INTF_DIALOG_FILE,$/;"	e	enum:vlc_dialog
INTF_DIALOG_FILEINFO	vlc_interface.h	/^    INTF_DIALOG_FILEINFO,$/;"	e	enum:vlc_dialog
INTF_DIALOG_FILE_GENERIC	vlc_interface.h	/^    INTF_DIALOG_FILE_GENERIC = 30,$/;"	e	enum:vlc_dialog
INTF_DIALOG_FILE_SIMPLE	vlc_interface.h	/^    INTF_DIALOG_FILE_SIMPLE = 1,$/;"	e	enum:vlc_dialog
INTF_DIALOG_INTERACTION	vlc_interface.h	/^    INTF_DIALOG_INTERACTION = 50,$/;"	e	enum:vlc_dialog
INTF_DIALOG_MESSAGES	vlc_interface.h	/^    INTF_DIALOG_MESSAGES,$/;"	e	enum:vlc_dialog
INTF_DIALOG_MISCPOPUPMENU	vlc_interface.h	/^    INTF_DIALOG_MISCPOPUPMENU,$/;"	e	enum:vlc_dialog
INTF_DIALOG_NET	vlc_interface.h	/^    INTF_DIALOG_NET,$/;"	e	enum:vlc_dialog
INTF_DIALOG_PLAYLIST	vlc_interface.h	/^    INTF_DIALOG_PLAYLIST,$/;"	e	enum:vlc_dialog
INTF_DIALOG_POPUPMENU	vlc_interface.h	/^    INTF_DIALOG_POPUPMENU = 20,$/;"	e	enum:vlc_dialog
INTF_DIALOG_PREFS	vlc_interface.h	/^    INTF_DIALOG_PREFS,$/;"	e	enum:vlc_dialog
INTF_DIALOG_SAT	vlc_interface.h	/^    INTF_DIALOG_SAT,$/;"	e	enum:vlc_dialog
INTF_DIALOG_STREAMWIZARD	vlc_interface.h	/^    INTF_DIALOG_STREAMWIZARD,$/;"	e	enum:vlc_dialog
INTF_DIALOG_UPDATEVLC	vlc_interface.h	/^    INTF_DIALOG_UPDATEVLC = 90,$/;"	e	enum:vlc_dialog
INTF_DIALOG_VIDEOPOPUPMENU	vlc_interface.h	/^    INTF_DIALOG_VIDEOPOPUPMENU,$/;"	e	enum:vlc_dialog
INTF_DIALOG_VLM	vlc_interface.h	/^    INTF_DIALOG_VLM,$/;"	e	enum:vlc_dialog
INTF_DIALOG_WIZARD	vlc_interface.h	/^    INTF_DIALOG_WIZARD,$/;"	e	enum:vlc_dialog
INTF_GAMMA_LIMIT	vlc_config.h	57;"	d
INTF_GAMMA_STEP	vlc_config.h	56;"	d
INTF_GENERAL_HELP	vlc_config_cat.h	40;"	d
INTF_HELP	vlc_config_cat.h	38;"	d
INTF_HOTKEYS_HELP	vlc_config_cat.h	49;"	d
INTF_HOTKEYS_TITLE	vlc_config_cat.h	48;"	d
INTF_IDLE_SLEEP	vlc_config.h	53;"	d
INTF_MAIN_HELP	vlc_config_cat.h	43;"	d
INTF_MAIN_TITLE	vlc_config_cat.h	42;"	d
INTF_MAX_MSG_SIZE	vlc_config.h	126;"	d
INTF_TITLE	vlc_config_cat.h	37;"	d
IPV6_JOIN_GROUP	vlc_network.h	82;"	d
IPV6_MULTICAST_HOPS	vlc_network.h	79;"	d
IPV6_MULTICAST_IF	vlc_network.h	80;"	d
IPV6_TCLASS	vlc_network.h	81;"	d
IPV6_V6ONLY	vlc_network.h	64;"	d
IPV6_V6ONLY	vlc_network.h	78;"	d
ITEM_ARTURL_FETCHED	vlc_meta.h	57;"	d
ITEM_ART_FETCHED	vlc_meta.h	58;"	d
ITEM_ART_NOTFOUND	vlc_meta.h	59;"	d
ITEM_PREPARSED	vlc_meta.h	56;"	d
ITEM_TYPE_CARD	vlc_input_item.h	/^    ITEM_TYPE_CARD,$/;"	e	enum:input_item_type_e
ITEM_TYPE_CDDA	vlc_input_item.h	/^    ITEM_TYPE_CDDA,$/;"	e	enum:input_item_type_e
ITEM_TYPE_DIRECTORY	vlc_input_item.h	/^    ITEM_TYPE_DIRECTORY,$/;"	e	enum:input_item_type_e
ITEM_TYPE_DISC	vlc_input_item.h	/^    ITEM_TYPE_DISC,$/;"	e	enum:input_item_type_e
ITEM_TYPE_FILE	vlc_input_item.h	/^    ITEM_TYPE_FILE,$/;"	e	enum:input_item_type_e
ITEM_TYPE_NET	vlc_input_item.h	/^    ITEM_TYPE_NET,$/;"	e	enum:input_item_type_e
ITEM_TYPE_NODE	vlc_input_item.h	/^    ITEM_TYPE_NODE,$/;"	e	enum:input_item_type_e
ITEM_TYPE_NUMBER	vlc_input_item.h	/^    ITEM_TYPE_NUMBER$/;"	e	enum:input_item_type_e
ITEM_TYPE_PLAYLIST	vlc_input_item.h	/^    ITEM_TYPE_PLAYLIST,$/;"	e	enum:input_item_type_e
ITEM_TYPE_UNKNOWN	vlc_input_item.h	/^    ITEM_TYPE_UNKNOWN,$/;"	e	enum:input_item_type_e
ITaskbarList3	vlc_windows_interfaces.h	/^struct ITaskbarList3 { struct ITaskbarList3Vtbl* lpVtbl; };$/;"	s
ITaskbarList3	vlc_windows_interfaces.h	/^typedef struct ITaskbarList3 ITaskbarList3;$/;"	t	typeref:struct:ITaskbarList3
ITaskbarList3Vtbl	vlc_windows_interfaces.h	/^struct ITaskbarList3Vtbl$/;"	s
I_CLONE	vlc_intf_strings.h	110;"	d
I_CLONE_TIP	vlc_intf_strings.h	111;"	d
I_CODING_TYPE	vlc_codec_synchro.h	31;"	d
I_COLORTHRES_TIP	vlc_intf_strings.h	132;"	d
I_DIR_OR_FOLDER	vlc_intf_strings.h	39;"	d
I_DIR_OR_FOLDER	vlc_intf_strings.h	41;"	d
I_GRADIENT_TIP	vlc_intf_strings.h	129;"	d
I_HIDDEN_ADV	vlc_intf_strings.h	105;"	d
I_INVERT_TIP	vlc_intf_strings.h	122;"	d
I_LONGHELP	vlc_intf_strings.h	136;"	d
I_MAGNIFY	vlc_intf_strings.h	113;"	d
I_MAGNIFY_TIP	vlc_intf_strings.h	114;"	d
I_MENU_ABOUT	vlc_intf_strings.h	62;"	d
I_MENU_BOOKMARK	vlc_intf_strings.h	59;"	d
I_MENU_CODECINFO	vlc_intf_strings.h	56;"	d
I_MENU_GOTOTIME	vlc_intf_strings.h	58;"	d
I_MENU_INFO	vlc_intf_strings.h	55;"	d
I_MENU_MSG	vlc_intf_strings.h	57;"	d
I_MENU_VLM	vlc_intf_strings.h	60;"	d
I_OP_ADVOP	vlc_intf_strings.h	47;"	d
I_OP_OPDIR	vlc_intf_strings.h	48;"	d
I_OP_OPF	vlc_intf_strings.h	46;"	d
I_OP_SEL_DIR	vlc_intf_strings.h	51;"	d
I_OP_SEL_FILES	vlc_intf_strings.h	50;"	d
I_PL_ADDDIR	vlc_intf_strings.h	92;"	d
I_PL_ADDF	vlc_intf_strings.h	90;"	d
I_PL_ADDML	vlc_intf_strings.h	88;"	d
I_PL_ADDPL	vlc_intf_strings.h	87;"	d
I_PL_ADVADD	vlc_intf_strings.h	91;"	d
I_PL_FILTER	vlc_intf_strings.h	99;"	d
I_PL_LOAD	vlc_intf_strings.h	96;"	d
I_PL_LOOP	vlc_intf_strings.h	80;"	d
I_PL_NORANDOM	vlc_intf_strings.h	85;"	d
I_PL_NOREPEAT	vlc_intf_strings.h	82;"	d
I_PL_RANDOM	vlc_intf_strings.h	84;"	d
I_PL_REPEAT	vlc_intf_strings.h	81;"	d
I_PL_SAVE	vlc_intf_strings.h	95;"	d
I_PL_SD	vlc_intf_strings.h	101;"	d
I_PL_SEARCH	vlc_intf_strings.h	98;"	d
I_POP_DEL	vlc_intf_strings.h	67;"	d
I_POP_EXPLORE	vlc_intf_strings.h	72;"	d
I_POP_INFO	vlc_intf_strings.h	68;"	d
I_POP_NEWFOLDER	vlc_intf_strings.h	70;"	d
I_POP_PLAY	vlc_intf_strings.h	65;"	d
I_POP_PREPARSE	vlc_intf_strings.h	66;"	d
I_POP_SAVE	vlc_intf_strings.h	75;"	d
I_POP_SORT	vlc_intf_strings.h	69;"	d
I_POP_STREAM	vlc_intf_strings.h	74;"	d
I_PUZZLE_TIP	vlc_intf_strings.h	126;"	d
I_RIPPLE_TIP	vlc_intf_strings.h	120;"	d
I_WALL_TIP	vlc_intf_strings.h	124;"	d
I_WAVE	vlc_intf_strings.h	117;"	d
I_WAVE_TIP	vlc_intf_strings.h	118;"	d
KEY_BACKSPACE	vlc_keys.h	40;"	d
KEY_BROWSER_BACK	vlc_keys.h	69;"	d
KEY_BROWSER_FAVORITES	vlc_keys.h	74;"	d
KEY_BROWSER_FORWARD	vlc_keys.h	70;"	d
KEY_BROWSER_HOME	vlc_keys.h	75;"	d
KEY_BROWSER_REFRESH	vlc_keys.h	71;"	d
KEY_BROWSER_SEARCH	vlc_keys.h	73;"	d
KEY_BROWSER_STOP	vlc_keys.h	72;"	d
KEY_DELETE	vlc_keys.h	64;"	d
KEY_DOWN	vlc_keys.h	48;"	d
KEY_END	vlc_keys.h	62;"	d
KEY_ENTER	vlc_keys.h	42;"	d
KEY_ESC	vlc_keys.h	43;"	d
KEY_F1	vlc_keys.h	49;"	d
KEY_F10	vlc_keys.h	58;"	d
KEY_F11	vlc_keys.h	59;"	d
KEY_F12	vlc_keys.h	60;"	d
KEY_F2	vlc_keys.h	50;"	d
KEY_F3	vlc_keys.h	51;"	d
KEY_F4	vlc_keys.h	52;"	d
KEY_F5	vlc_keys.h	53;"	d
KEY_F6	vlc_keys.h	54;"	d
KEY_F7	vlc_keys.h	55;"	d
KEY_F8	vlc_keys.h	56;"	d
KEY_F9	vlc_keys.h	57;"	d
KEY_HOME	vlc_keys.h	61;"	d
KEY_INSERT	vlc_keys.h	63;"	d
KEY_LEFT	vlc_keys.h	45;"	d
KEY_MEDIA_NEXT_TRACK	vlc_keys.h	79;"	d
KEY_MEDIA_PLAY_PAUSE	vlc_keys.h	82;"	d
KEY_MEDIA_PREV_TRACK	vlc_keys.h	80;"	d
KEY_MEDIA_STOP	vlc_keys.h	81;"	d
KEY_MENU	vlc_keys.h	65;"	d
KEY_MODIFIER	vlc_keys.h	32;"	d
KEY_MODIFIER_ALT	vlc_keys.h	33;"	d
KEY_MODIFIER_COMMAND	vlc_keys.h	37;"	d
KEY_MODIFIER_CTRL	vlc_keys.h	35;"	d
KEY_MODIFIER_META	vlc_keys.h	36;"	d
KEY_MODIFIER_SHIFT	vlc_keys.h	34;"	d
KEY_MOUSEWHEELDOWN	vlc_keys.h	85;"	d
KEY_MOUSEWHEELLEFT	vlc_keys.h	86;"	d
KEY_MOUSEWHEELRIGHT	vlc_keys.h	87;"	d
KEY_MOUSEWHEELUP	vlc_keys.h	84;"	d
KEY_PAGEDOWN	vlc_keys.h	67;"	d
KEY_PAGEUP	vlc_keys.h	66;"	d
KEY_RIGHT	vlc_keys.h	46;"	d
KEY_TAB	vlc_keys.h	41;"	d
KEY_UNSET	vlc_keys.h	39;"	d
KEY_UP	vlc_keys.h	47;"	d
KEY_VOLUME_DOWN	vlc_keys.h	77;"	d
KEY_VOLUME_MUTE	vlc_keys.h	76;"	d
KEY_VOLUME_UP	vlc_keys.h	78;"	d
KSDATAFORMAT_SUBTYPE_PCM	vlc_codecs.h	284;"	d
KSDATAFORMAT_SUBTYPE_UNKNOWN	vlc_codecs.h	290;"	d
LAST_MDATE	vlc_mtime.h	43;"	d
LC_MESSAGES_MASK	vlc_fixups.h	214;"	d
LC_NUMERIC_MASK	vlc_fixups.h	213;"	d
LIBVLC_API	vlc/libvlc.h	42;"	d
LIBVLC_API	vlc/libvlc.h	44;"	d
LIBVLC_API	vlc/libvlc.h	46;"	d
LIBVLC_DEPRECATED	vlc/libvlc.h	51;"	d
LIBVLC_DEPRECATED	vlc/libvlc.h	54;"	d
LIBVLC_DEPRECATED	vlc/libvlc.h	56;"	d
LIBVLC_DEPRECATED_H	vlc/deprecated.h	26;"	d
LIBVLC_EVENTS_H	vlc/libvlc_events.h	26;"	d
LIBVLC_FIXUPS_H	vlc_fixups.h	27;"	d
LIBVLC_MEDIA_LIST_H	vlc/libvlc_media_list.h	25;"	d
LIBVLC_MEDIA_LIST_PLAYER_H	vlc/libvlc_media_list_player.h	25;"	d
LIBVLC_MODULES_MACROS_H	vlc_plugin.h	25;"	d
LIBVLC_STRUCTURES_H	vlc/libvlc_structures.h	25;"	d
LIBVLC_USE_PTHREAD	vlc_threads.h	47;"	d
LIBVLC_USE_PTHREAD_CANCEL	vlc_threads.h	48;"	d
LIBVLC_VERSION	vlc/libvlc_version.h	47;"	d
LIBVLC_VERSION_EXTRA	vlc/libvlc_version.h	44;"	d
LIBVLC_VERSION_H	vlc/libvlc_version.h	33;"	d
LIBVLC_VERSION_INT	vlc/libvlc_version.h	51;"	d
LIBVLC_VERSION_MAJOR	vlc/libvlc_version.h	36;"	d
LIBVLC_VERSION_MINOR	vlc/libvlc_version.h	39;"	d
LIBVLC_VERSION_REVISION	vlc/libvlc_version.h	42;"	d
LIBVLC_VLM_H	vlc/libvlc_vlm.h	26;"	d
LICENSE_MSG	vlc_common.h	1025;"	d
LPGUID	vlc_codecs.h	/^} GUID, *REFGUID, *LPGUID;$/;"	t	typeref:struct:_GUID
LPTHUMBBUTTON	vlc_windows_interfaces.h	/^typedef struct tagTHUMBBUTTON *LPTHUMBBUTTON;$/;"	t	typeref:struct:tagTHUMBBUTTON
LPWAVEFORMATEX	vlc_codecs.h	/^} WAVEFORMATEX, *PWAVEFORMATEX, *NPWAVEFORMATEX, *LPWAVEFORMATEX;$/;"	t	typeref:struct:_WAVEFORMATEX
Length	vlc_codecs.h	/^    uint32_t Length;$/;"	m	struct:_WAVEHEADER
MAIN_HELP	vlc_config_cat.h	33;"	d
MAIN_TITLE	vlc_config_cat.h	32;"	d
MAX_DUMPSTRUCTURE_DEPTH	vlc_config.h	133;"	d
MINGW_WORKAROUNDS_H	vlc_windows_interfaces.h	25;"	d
MISC_TITLE	vlc_config_cat.h	193;"	d
ML_ADD_INPUT_ITEM	vlc_media_library.h	/^    ML_ADD_INPUT_ITEM,    \/**< arg1 = input_item_t* *\/$/;"	e	enum:__anon103
ML_ADD_MONITORED	vlc_media_library.h	/^    ML_ADD_MONITORED,     \/**< arg1 = char* *\/$/;"	e	enum:__anon103
ML_ADD_PLAYLIST_ITEM	vlc_media_library.h	/^    ML_ADD_PLAYLIST_ITEM, \/**< arg1 = playlist_item_t * *\/$/;"	e	enum:__anon103
ML_ALBUM	vlc_media_library.h	/^    ML_ALBUM = 1,              \/**< Album Title *\/$/;"	e	enum:__anon100
ML_ALBUM_COVER	vlc_media_library.h	/^    ML_ALBUM_COVER,            \/**< Album Cover art url *\/$/;"	e	enum:__anon100
ML_ALBUM_ID	vlc_media_library.h	/^    ML_ALBUM_ID,               \/**< Album ID *\/$/;"	e	enum:__anon100
ML_ARTIST	vlc_media_library.h	/^    ML_ARTIST,                 \/**< Artist, interpreted as ML_PEOPLE$/;"	e	enum:__anon100
ML_ARTIST_ID	vlc_media_library.h	/^    ML_ARTIST_ID,              \/**< Artist ID, interpreted as ML_PEOPLE_ID$/;"	e	enum:__anon100
ML_AUDIO	vlc_media_library.h	/^    ML_AUDIO     = 1 << 0,  \/**< Audio only media *\/$/;"	e	enum:__anon101
ML_COMMENT	vlc_media_library.h	/^    ML_COMMENT,                \/**< Comment about media *\/$/;"	e	enum:__anon100
ML_COMP_ENDS_WITH	vlc_media_library.h	/^    ML_COMP_ENDS_WITH,           \/\/\/< Equivalent to SQL "LIKE x%"$/;"	e	enum:__anon105
ML_COMP_EQUAL	vlc_media_library.h	/^    ML_COMP_EQUAL,               \/\/\/< ==$/;"	e	enum:__anon105
ML_COMP_GREATER	vlc_media_library.h	/^    ML_COMP_GREATER,             \/\/\/< >$/;"	e	enum:__anon105
ML_COMP_GREATER_OR_EQUAL	vlc_media_library.h	/^    ML_COMP_GREATER_OR_EQUAL,    \/\/\/< >=$/;"	e	enum:__anon105
ML_COMP_HAS	vlc_media_library.h	/^    ML_COMP_HAS,                 \/\/\/< "Contains", equivalent to SQL "LIKE %x%"$/;"	e	enum:__anon105
ML_COMP_LESSER	vlc_media_library.h	/^    ML_COMP_LESSER,              \/\/\/< <$/;"	e	enum:__anon105
ML_COMP_LESSER_OR_EQUAL	vlc_media_library.h	/^    ML_COMP_LESSER_OR_EQUAL,     \/\/\/< <=$/;"	e	enum:__anon105
ML_COMP_NONE	vlc_media_library.h	/^    ML_COMP_NONE = 0,$/;"	e	enum:__anon105
ML_COMP_STARTS_WITH	vlc_media_library.h	/^    ML_COMP_STARTS_WITH,         \/\/\/< Equivalent to SQL "LIKE %x"$/;"	e	enum:__anon105
ML_COUNT_ALBUM	vlc_media_library.h	/^    ML_COUNT_ALBUM,            \/**< Number of albums *\/$/;"	e	enum:__anon100
ML_COUNT_MEDIA	vlc_media_library.h	/^    ML_COUNT_MEDIA,            \/**< Number of medias *\/$/;"	e	enum:__anon100
ML_COUNT_PEOPLE	vlc_media_library.h	/^    ML_COUNT_PEOPLE,           \/**< Number of people *\/$/;"	e	enum:__anon100
ML_COVER	vlc_media_library.h	/^    ML_COVER,                  \/**< Cover art url *\/$/;"	e	enum:__anon100
ML_DEL_MONITORED	vlc_media_library.h	/^    ML_DEL_MONITORED,     \/**< arg1 = char* *\/$/;"	e	enum:__anon103
ML_DIRECTORY	vlc_media_library.h	/^    ML_DIRECTORY,              \/**< Monitored directory *\/$/;"	e	enum:__anon100
ML_DISC_NUMBER	vlc_media_library.h	/^    ML_DISC_NUMBER,            \/**< Disc number of the track *\/$/;"	e	enum:__anon100
ML_DISTINCT	vlc_media_library.h	/^    ML_DISTINCT  = -4,         \/**< Add DISTINCT to SELECT statements. *\/$/;"	e	enum:__anon100
ML_DURATION	vlc_media_library.h	/^    ML_DURATION,               \/**< Duration in ms *\/$/;"	e	enum:__anon100
ML_END	vlc_media_library.h	/^    ML_END       = -42         \/**< End of argument list *\/$/;"	e	enum:__anon100
ML_EXTRA	vlc_media_library.h	/^    ML_EXTRA,                  \/**< Extra\/comment (string) on the media *\/$/;"	e	enum:__anon100
ML_FILESIZE	vlc_media_library.h	/^    ML_FILESIZE,               \/**< Size of the media file *\/$/;"	e	enum:__anon100
ML_FIRST_PLAYED	vlc_media_library.h	/^    ML_FIRST_PLAYED,           \/**< First time media was played *\/$/;"	e	enum:__anon100
ML_GC_MEMBERS	vlc_media_library.h	190;"	d
ML_GENRE	vlc_media_library.h	/^    ML_GENRE,                  \/**< Genre of the media (if any) *\/$/;"	e	enum:__anon100
ML_GET_MONITORED	vlc_media_library.h	/^    ML_GET_MONITORED,     \/**< arg1 = vlc_array_t* *\/$/;"	e	enum:__anon103
ML_ID	vlc_media_library.h	/^    ML_ID,                     \/**< Media ID *\/$/;"	e	enum:__anon100
ML_IMPORT_TIME	vlc_media_library.h	/^    ML_IMPORT_TIME,            \/**< Date when media was imported *\/$/;"	e	enum:__anon100
ML_INIT_DATABASE	vlc_media_library.h	/^    ML_INIT_DATABASE,     \/**< No arg *\/$/;"	e	enum:__anon103
ML_LANGUAGE	vlc_media_library.h	/^    ML_LANGUAGE,               \/**< Language *\/$/;"	e	enum:__anon100
ML_LAST_PLAYED	vlc_media_library.h	/^    ML_LAST_PLAYED,            \/**< Last play UNIX timestamp *\/$/;"	e	enum:__anon100
ML_LAST_SKIPPED	vlc_media_library.h	/^    ML_LAST_SKIPPED,           \/**< Time when media was last skipped *\/$/;"	e	enum:__anon100
ML_LIMIT	vlc_media_library.h	/^    ML_LIMIT     = -1,         \/**< Limit a query to X results *\/$/;"	e	enum:__anon100
ML_MEDIA	vlc_media_library.h	/^    ML_MEDIA,                  \/**< Full media descriptor. @see ml_media_t *\/$/;"	e	enum:__anon100
ML_MEDIA_EXTRA	vlc_media_library.h	/^    ML_MEDIA_EXTRA,            \/**< Sparse + Extra = Full media *\/$/;"	e	enum:__anon100
ML_MEDIA_SPARSE	vlc_media_library.h	/^    ML_MEDIA_SPARSE,           \/**< Sparse media. @see ml_media_t *\/$/;"	e	enum:__anon100
ML_NODE	vlc_media_library.h	/^    ML_NODE      = 1 << 3,  \/**< Nodes like simple nodes, directories, playlists, etc *\/$/;"	e	enum:__anon101
ML_OP_AND	vlc_media_library.h	/^    ML_OP_AND,            \/**< AND condition *\/$/;"	e	enum:__anon104
ML_OP_NONE	vlc_media_library.h	/^    ML_OP_NONE = 0,       \/**< This is to specify an actual condition *\/$/;"	e	enum:__anon104
ML_OP_NOT	vlc_media_library.h	/^    ML_OP_NOT,            \/**< NOT condition *\/$/;"	e	enum:__anon104
ML_OP_OR	vlc_media_library.h	/^    ML_OP_OR,             \/**< OR condition *\/$/;"	e	enum:__anon104
ML_OP_SPECIAL	vlc_media_library.h	/^    ML_OP_SPECIAL         \/**< This is for inclusion of$/;"	e	enum:__anon104
ML_ORIGINAL_TITLE	vlc_media_library.h	/^    ML_ORIGINAL_TITLE,         \/**< Media original title (if any) *\/$/;"	e	enum:__anon100
ML_PEOPLE	vlc_media_library.h	/^    ML_PEOPLE,                 \/**< Any People associated with this media *\/$/;"	e	enum:__anon100
ML_PEOPLE_ID	vlc_media_library.h	/^    ML_PEOPLE_ID,              \/**< Id of a person *\/$/;"	e	enum:__anon100
ML_PEOPLE_ROLE	vlc_media_library.h	/^    ML_PEOPLE_ROLE,            \/**< Person role *\/$/;"	e	enum:__anon100
ML_PERSON_ALBUM_ARTIST	vlc_media_library.h	43;"	d
ML_PERSON_ARTIST	vlc_media_library.h	42;"	d
ML_PERSON_ENCODER	vlc_media_library.h	44;"	d
ML_PERSON_PUBLISHER	vlc_media_library.h	45;"	d
ML_PLAYED_COUNT	vlc_media_library.h	/^    ML_PLAYED_COUNT,           \/**< Media play count *\/$/;"	e	enum:__anon100
ML_PREVIEW	vlc_media_library.h	/^    ML_PREVIEW,                \/**< Url of the video preview *\/$/;"	e	enum:__anon100
ML_REMOVABLE	vlc_media_library.h	/^    ML_REMOVABLE = 1 << 4,  \/**< Removable media: CD\/DVD\/Card\/... *\/$/;"	e	enum:__anon101
ML_SCORE	vlc_media_library.h	/^    ML_SCORE,                  \/**< Computed media score *\/$/;"	e	enum:__anon100
ML_SET_DATABASE	vlc_media_library.h	/^    ML_SET_DATABASE,      \/**< arg1 = char *psz_host$/;"	e	enum:__anon103
ML_SKIPPED_COUNT	vlc_media_library.h	/^    ML_SKIPPED_COUNT,          \/**< Number of times skipped *\/$/;"	e	enum:__anon100
ML_SORT_ASC	vlc_media_library.h	/^    ML_SORT_ASC  = -3,         \/**< Sort a query ascending on argument X *\/$/;"	e	enum:__anon100
ML_SORT_DESC	vlc_media_library.h	/^    ML_SORT_DESC = -2,         \/**< Sort a query descending on argument X *\/$/;"	e	enum:__anon100
ML_STREAM	vlc_media_library.h	/^    ML_STREAM    = 1 << 2,  \/**< Streamed media = not a local file *\/$/;"	e	enum:__anon101
ML_TITLE	vlc_media_library.h	/^    ML_TITLE,                  \/**< Media title *\/$/;"	e	enum:__anon100
ML_TRACK_NUMBER	vlc_media_library.h	/^    ML_TRACK_NUMBER,           \/**< Media track number (if any) *\/$/;"	e	enum:__anon100
ML_TYPE	vlc_media_library.h	/^    ML_TYPE,                   \/**< Media type. @see ml_type_e *\/$/;"	e	enum:__anon100
ML_TYPE_INT	vlc_media_library.h	/^    ML_TYPE_INT,        \/**< Object is an int *\/$/;"	e	enum:__anon102
ML_TYPE_MEDIA	vlc_media_library.h	/^    ML_TYPE_MEDIA,      \/**< A pointer to a media ml_media_t* *\/$/;"	e	enum:__anon102
ML_TYPE_PSZ	vlc_media_library.h	/^    ML_TYPE_PSZ,        \/**< A string char* *\/$/;"	e	enum:__anon102
ML_TYPE_TIME	vlc_media_library.h	/^    ML_TYPE_TIME,       \/**< A timestamp mtime_t *\/$/;"	e	enum:__anon102
ML_UNKNOWN	vlc_media_library.h	/^    ML_UNKNOWN   = 0,       \/**< Unknown media type *\/$/;"	e	enum:__anon101
ML_URI	vlc_media_library.h	/^    ML_URI,                    \/**< Media full URI. *\/$/;"	e	enum:__anon100
ML_VIDEO	vlc_media_library.h	/^    ML_VIDEO     = 1 << 1,  \/**< Video media. May contain audio channels *\/$/;"	e	enum:__anon101
ML_VOTE	vlc_media_library.h	/^    ML_VOTE,                   \/**< Media user vote value *\/$/;"	e	enum:__anon100
ML_YEAR	vlc_media_library.h	/^    ML_YEAR,                   \/**< Media publishing year *\/$/;"	e	enum:__anon100
MODULE_SUFFIX	vlc_plugin.h	109;"	d
MODULE_SYMBOL	vlc_plugin.h	108;"	d
MOUSE_BUTTON_CENTER	vlc_mouse.h	/^    MOUSE_BUTTON_CENTER,$/;"	e	enum:__anon134
MOUSE_BUTTON_LEFT	vlc_mouse.h	/^    MOUSE_BUTTON_LEFT=0,$/;"	e	enum:__anon134
MOUSE_BUTTON_MAX	vlc_mouse.h	/^    MOUSE_BUTTON_MAX$/;"	e	enum:__anon134
MOUSE_BUTTON_RIGHT	vlc_mouse.h	/^    MOUSE_BUTTON_RIGHT,$/;"	e	enum:__anon134
MOUSE_BUTTON_WHEEL_DOWN	vlc_mouse.h	/^    MOUSE_BUTTON_WHEEL_DOWN,$/;"	e	enum:__anon134
MOUSE_BUTTON_WHEEL_LEFT	vlc_mouse.h	/^    MOUSE_BUTTON_WHEEL_LEFT,$/;"	e	enum:__anon134
MOUSE_BUTTON_WHEEL_RIGHT	vlc_mouse.h	/^    MOUSE_BUTTON_WHEEL_RIGHT,$/;"	e	enum:__anon134
MOUSE_BUTTON_WHEEL_UP	vlc_mouse.h	/^    MOUSE_BUTTON_WHEEL_UP,$/;"	e	enum:__anon134
MSTRTIME_MAX_SIZE	vlc_mtime.h	52;"	d
MUX_CAN_ADD_STREAM_WHILE_MUXING	vlc_sout.h	/^    MUX_CAN_ADD_STREAM_WHILE_MUXING,    \/* arg1= bool *,      res=cannot fail *\/$/;"	e	enum:sout_mux_query_e
MUX_GET_ADD_STREAM_WAIT	vlc_sout.h	/^    MUX_GET_ADD_STREAM_WAIT,            \/* arg1= bool *,      res=cannot fail *\/$/;"	e	enum:sout_mux_query_e
MUX_GET_MIME	vlc_sout.h	/^    MUX_GET_MIME,                       \/* arg1= char **            res=can fail    *\/$/;"	e	enum:sout_mux_query_e
MainChunkID	vlc_codecs.h	/^    uint32_t MainChunkID;$/;"	m	struct:_WAVEHEADER
MarkFullscreenWindow	vlc_windows_interfaces.h	/^    long ( WINAPI *MarkFullscreenWindow )(ITaskbarList3 *This, HWND hwnd,$/;"	m	struct:ITaskbarList3Vtbl
Modus	vlc_codecs.h	/^    uint16_t Modus;$/;"	m	struct:_WAVEHEADER
NAV_ES	vlc_es.h	/^    NAV_ES     = 0x04,$/;"	e	enum:es_format_category_e
NI_DGRAM	vlc_network.h	239;"	d
NI_MAXHOST	vlc_network.h	224;"	d
NI_MAXNUMERICHOST	vlc_network.h	227;"	d
NI_MAXSERV	vlc_network.h	225;"	d
NI_NAMEREQD	vlc_network.h	238;"	d
NI_NOFQDN	vlc_network.h	237;"	d
NI_NUMERICHOST	vlc_network.h	235;"	d
NI_NUMERICSERV	vlc_network.h	236;"	d
NPWAVEFORMATEX	vlc_codecs.h	/^} WAVEFORMATEX, *PWAVEFORMATEX, *NPWAVEFORMATEX, *LPWAVEFORMATEX;$/;"	t	typeref:struct:_WAVEFORMATEX
NUM_SORT_FNS	vlc_playlist.h	/^    NUM_SORT_FNS=SORT_RANDOM$/;"	e	enum:__anon121
N_	vlc_fixups.h	241;"	d
OBJECT_FLAGS_NOINTERACT	vlc_objects.h	36;"	d
OBJECT_FLAGS_QUIET	vlc_objects.h	35;"	d
OPENING_S	vlc_input.h	/^    OPENING_S,$/;"	e	enum:input_state_e
ORDER_NORMAL	vlc_playlist.h	/^    ORDER_NORMAL = 0,$/;"	e	enum:__anon122
ORDER_REVERSE	vlc_playlist.h	/^    ORDER_REVERSE = 1,$/;"	e	enum:__anon122
OS2EMX_PLAIN_CHAR	vlc_common.h	484;"	d
OSD_BUTTON_PRESSED	vlc_osd.h	135;"	d
OSD_BUTTON_SELECT	vlc_osd.h	134;"	d
OSD_BUTTON_UNSELECT	vlc_osd.h	133;"	d
OSD_HOR_SLIDER	vlc_vout_osd.h	/^    OSD_HOR_SLIDER,$/;"	e	enum:__anon137
OSD_MENU_STYLE_CONCAT	vlc_osd.h	204;"	d
OSD_MENU_STYLE_SIMPLE	vlc_osd.h	203;"	d
OSD_MUTE_ICON	vlc_vout_osd.h	/^    OSD_MUTE_ICON,$/;"	e	enum:__anon137
OSD_PAUSE_ICON	vlc_vout_osd.h	/^    OSD_PAUSE_ICON,$/;"	e	enum:__anon137
OSD_PLAY_ICON	vlc_vout_osd.h	/^    OSD_PLAY_ICON = 1,$/;"	e	enum:__anon137
OSD_SPEAKER_ICON	vlc_vout_osd.h	/^    OSD_SPEAKER_ICON,$/;"	e	enum:__anon137
OSD_VERT_SLIDER	vlc_vout_osd.h	/^    OSD_VERT_SLIDER,$/;"	e	enum:__anon137
O_NONBLOCK	vlc_common.h	894;"	d
PAD	vlc_common.h	574;"	d
PATH_MAX	vlc_common.h	146;"	d
PATH_SEP	vlc_common.h	1017;"	d
PATH_SEP	vlc_common.h	1022;"	d
PATH_SEP_CHAR	vlc_common.h	1016;"	d
PATH_SEP_CHAR	vlc_common.h	1021;"	d
PAUSE_S	vlc_input.h	/^    PAUSE_S,$/;"	e	enum:input_state_e
PGENERAL_HELP	vlc_config_cat.h	180;"	d
PICTURE_PLANE_MAX	vlc_picture.h	57;"	d
PLAYING_S	vlc_input.h	/^    PLAYING_S,$/;"	e	enum:input_state_e
PLAYLIST_APPEND	vlc_playlist.h	232;"	d
PLAYLIST_DBL_FLAG	vlc_playlist.h	/^    PLAYLIST_DBL_FLAG          = 0x0004,  \/**< Is it disabled ? *\/$/;"	e	enum:__anon119
PLAYLIST_END	vlc_playlist.h	238;"	d
PLAYLIST_EXPANDED_FLAG	vlc_playlist.h	/^    PLAYLIST_EXPANDED_FLAG     = 0x0020,  \/**< Expanded node *\/$/;"	e	enum:__anon119
PLAYLIST_GO	vlc_playlist.h	233;"	d
PLAYLIST_HELP	vlc_config_cat.h	176;"	d
PLAYLIST_INSERT	vlc_playlist.h	231;"	d
PLAYLIST_NO_REBUILD	vlc_playlist.h	236;"	d
PLAYLIST_PAUSE	vlc_common.h	/^    PLAYLIST_PAUSE,     \/**< No arg                             res=can fail*\/$/;"	e	enum:__anon92
PLAYLIST_PAUSED	vlc_playlist.h	/^{ PLAYLIST_STOPPED,PLAYLIST_RUNNING,PLAYLIST_PAUSED } playlist_status_t;$/;"	e	enum:__anon120
PLAYLIST_PLAY	vlc_common.h	/^    PLAYLIST_PLAY,      \/**< No arg.                            res=can fail*\/$/;"	e	enum:__anon92
PLAYLIST_PREPARSE	vlc_playlist.h	234;"	d
PLAYLIST_REMOVE_FLAG	vlc_playlist.h	/^    PLAYLIST_REMOVE_FLAG       = 0x0010,  \/**< Remove this item at the end *\/$/;"	e	enum:__anon119
PLAYLIST_RO_FLAG	vlc_playlist.h	/^    PLAYLIST_RO_FLAG           = 0x0008,  \/**< Write-enabled ? *\/$/;"	e	enum:__anon119
PLAYLIST_RUNNING	vlc_playlist.h	/^{ PLAYLIST_STOPPED,PLAYLIST_RUNNING,PLAYLIST_PAUSED } playlist_status_t;$/;"	e	enum:__anon120
PLAYLIST_SAVE_FLAG	vlc_playlist.h	/^    PLAYLIST_SAVE_FLAG         = 0x0001,  \/**< Must it be saved *\/$/;"	e	enum:__anon119
PLAYLIST_SKIP	vlc_common.h	/^    PLAYLIST_SKIP,      \/**< arg1=int,                          res=can fail*\/$/;"	e	enum:__anon92
PLAYLIST_SKIP_FLAG	vlc_playlist.h	/^    PLAYLIST_SKIP_FLAG         = 0x0002,  \/**< Must playlist skip after it ? *\/$/;"	e	enum:__anon119
PLAYLIST_SPREPARSE	vlc_playlist.h	235;"	d
PLAYLIST_STOP	vlc_common.h	/^    PLAYLIST_STOP,      \/**< No arg                             res=can fail*\/$/;"	e	enum:__anon92
PLAYLIST_STOPPED	vlc_playlist.h	/^{ PLAYLIST_STOPPED,PLAYLIST_RUNNING,PLAYLIST_PAUSED } playlist_status_t;$/;"	e	enum:__anon120
PLAYLIST_SUBITEM_STOP_FLAG	vlc_playlist.h	/^    PLAYLIST_SUBITEM_STOP_FLAG = 0x0040,  \/**< Must playlist stop if the item gets subitems ?*\/$/;"	e	enum:__anon119
PLAYLIST_TITLE	vlc_config_cat.h	175;"	d
PLAYLIST_VIEWPLAY	vlc_common.h	/^    PLAYLIST_VIEWPLAY,  \/**< arg1= playlist_item_t*,*\/$/;"	e	enum:__anon92
PL_ASSERT_LOCKED	vlc_playlist.h	253;"	d
PL_LOCK	vlc_playlist.h	251;"	d
PL_UNLOCK	vlc_playlist.h	252;"	d
POLLERR	vlc_fixups.h	/^    POLLERR=8,  \/\/ unsupported stub$/;"	e	enum:__anon85
POLLHUP	vlc_fixups.h	/^    POLLHUP=16, \/\/ unsupported stub$/;"	e	enum:__anon85
POLLIN	vlc_fixups.h	/^    POLLIN=1,$/;"	e	enum:__anon85
POLLNVAL	vlc_fixups.h	/^    POLLNVAL=32 \/\/ unsupported stub$/;"	e	enum:__anon85
POLLOUT	vlc_fixups.h	/^    POLLOUT=2,$/;"	e	enum:__anon85
POLLPRI	vlc_fixups.h	/^    POLLPRI=4,$/;"	e	enum:__anon85
PRId64	vlc_common.h	69;"	d
PRId64	vlc_common.h	70;"	d
PRIi64	vlc_common.h	71;"	d
PRIi64	vlc_common.h	72;"	d
PRIo64	vlc_common.h	75;"	d
PRIo64	vlc_common.h	76;"	d
PRIu64	vlc_common.h	73;"	d
PRIu64	vlc_common.h	74;"	d
PRIx64	vlc_common.h	77;"	d
PRIx64	vlc_common.h	78;"	d
PWAVEFORMATEX	vlc_codecs.h	/^} WAVEFORMATEX, *PWAVEFORMATEX, *NPWAVEFORMATEX, *LPWAVEFORMATEX;$/;"	t	typeref:struct:_WAVEFORMATEX
PWAVEFORMATEXTENSIBLE	vlc_codecs.h	/^} WAVEFORMATEXTENSIBLE, *PWAVEFORMATEXTENSIBLE;$/;"	t	typeref:struct:_WAVEFORMATEXTENSIBLE
P_CODING_TYPE	vlc_codec_synchro.h	32;"	d
QTYPE_H264	vlc_picture.h	/^    QTYPE_H264,$/;"	e	enum:__anon132
QTYPE_MPEG1	vlc_picture.h	/^    QTYPE_MPEG1,$/;"	e	enum:__anon132
QTYPE_MPEG2	vlc_picture.h	/^    QTYPE_MPEG2,$/;"	e	enum:__anon132
QTYPE_NONE	vlc_picture.h	/^    QTYPE_NONE,$/;"	e	enum:__anon132
QueryInterface	vlc_windows_interfaces.h	/^    long ( WINAPI *QueryInterface )(ITaskbarList3 * This, REFIID riid, void **ppvObject);$/;"	m	struct:ITaskbarList3Vtbl
RECT32	vlc_codecs.h	/^} RECT32;$/;"	t	typeref:struct:ATTR_PACKED
REFERENCE_TIME	vlc_codecs.h	/^typedef int64_t REFERENCE_TIME;$/;"	t
REFGUID	vlc_codecs.h	/^} GUID, *REFGUID, *LPGUID;$/;"	t	typeref:struct:_GUID
REMOVE_ELEM	vlc_arrays.h	64;"	d
RGBQUAD1	vlc_codecs.h	/^} RGBQUAD1;$/;"	t	typeref:struct:ATTR_PACKED
RegisterTab	vlc_windows_interfaces.h	/^    long ( WINAPI *RegisterTab )( ITaskbarList3 *This, HWND hwndTab, HWND hwndMDI);$/;"	m	struct:ITaskbarList3Vtbl
Release	vlc_windows_interfaces.h	/^    long ( WINAPI *Release )(ITaskbarList3 *This);$/;"	m	struct:ITaskbarList3Vtbl
SDEC_HELP	vlc_config_cat.h	118;"	d
SDEC_TITLE	vlc_config_cat.h	117;"	d
SD_CAP_SEARCH	vlc_services_discovery.h	/^    SD_CAP_SEARCH = 1           \/**< One can search in the SD *\/$/;"	e	enum:services_discovery_capability_e
SD_CAT_DEVICES	vlc_services_discovery.h	/^    SD_CAT_DEVICES = 1,           \/**< Devices, like portable music players *\/$/;"	e	enum:services_discovery_category_e
SD_CAT_INTERNET	vlc_services_discovery.h	/^    SD_CAT_INTERNET,              \/**< Internet or Website channels services *\/$/;"	e	enum:services_discovery_category_e
SD_CAT_LAN	vlc_services_discovery.h	/^    SD_CAT_LAN,                   \/**< LAN\/WAN services, like Upnp or SAP *\/$/;"	e	enum:services_discovery_category_e
SD_CAT_MYCOMPUTER	vlc_services_discovery.h	/^    SD_CAT_MYCOMPUTER             \/**< Computer services, like Discs or Apps *\/$/;"	e	enum:services_discovery_category_e
SD_CMD_DESCRIPTOR	vlc_services_discovery.h	/^    SD_CMD_DESCRIPTOR           \/**< arg1 = services_discovery_descriptor_t* *\/$/;"	e	enum:services_discovery_command_e
SD_CMD_SEARCH	vlc_services_discovery.h	/^    SD_CMD_SEARCH = 1,          \/**< arg1 = query *\/$/;"	e	enum:services_discovery_command_e
SD_HELP	vlc_config_cat.h	182;"	d
SD_TITLE	vlc_config_cat.h	181;"	d
SHUT_RD	vlc_network.h	169;"	d
SHUT_RD	vlc_network.h	175;"	d
SHUT_RDWR	vlc_network.h	171;"	d
SHUT_RDWR	vlc_network.h	177;"	d
SHUT_WR	vlc_network.h	170;"	d
SHUT_WR	vlc_network.h	176;"	d
SORT_RANDOM	vlc_playlist.h	/^    SORT_RANDOM,$/;"	e	enum:__anon121
SOUT_ACO_HELP	vlc_config_cat.h	145;"	d
SOUT_ACO_TITLE	vlc_config_cat.h	144;"	d
SOUT_GENERAL_HELP	vlc_config_cat.h	134;"	d
SOUT_HELP	vlc_config_cat.h	125;"	d
SOUT_MUX_HELP	vlc_config_cat.h	137;"	d
SOUT_MUX_TITLE	vlc_config_cat.h	136;"	d
SOUT_PACKET_HELP	vlc_config_cat.h	152;"	d
SOUT_PACKET_TITLE	vlc_config_cat.h	151;"	d
SOUT_SAP_HELP	vlc_config_cat.h	166;"	d
SOUT_SAP_TITLE	vlc_config_cat.h	165;"	d
SOUT_STREAM_HELP	vlc_config_cat.h	160;"	d
SOUT_STREAM_TITLE	vlc_config_cat.h	159;"	d
SOUT_TITLE	vlc_config_cat.h	124;"	d
SOUT_VOD_HELP	vlc_config_cat.h	171;"	d
SOUT_VOD_TITLE	vlc_config_cat.h	170;"	d
SPU_DEFAULT_CHANNEL	vlc_spu.h	49;"	d
SPU_ES	vlc_es.h	/^    SPU_ES     = 0x03,$/;"	e	enum:es_format_category_e
SPU_MAX_PREPARE_TIME	vlc_config.h	87;"	d
SQL_BLOB	vlc_sql.h	/^    SQL_BLOB$/;"	e	enum:__anon77
SQL_DOUBLE	vlc_sql.h	/^    SQL_DOUBLE,$/;"	e	enum:__anon77
SQL_INT	vlc_sql.h	/^    SQL_INT,$/;"	e	enum:__anon77
SQL_NULL	vlc_sql.h	/^    SQL_NULL,$/;"	e	enum:__anon77
SQL_TEXT	vlc_sql.h	/^    SQL_TEXT,$/;"	e	enum:__anon77
STANDARD_BLOCK_ACCESS_INIT	vlc_access.h	172;"	d
STANDARD_READ_ACCESS_INIT	vlc_access.h	164;"	d
STATS_ACTIVE_CONNECTIONS	vlc_messages.h	/^    STATS_ACTIVE_CONNECTIONS,$/;"	e	enum:__anon91
STATS_CLIENT_CONNECTIONS	vlc_messages.h	/^    STATS_CLIENT_CONNECTIONS,$/;"	e	enum:__anon91
STATS_COUNTER	vlc_messages.h	/^    STATS_COUNTER,$/;"	e	enum:__anon90
STATS_DECODED_AUDIO	vlc_messages.h	/^    STATS_DECODED_AUDIO,$/;"	e	enum:__anon91
STATS_DECODED_SUB	vlc_messages.h	/^    STATS_DECODED_SUB,$/;"	e	enum:__anon91
STATS_DECODED_VIDEO	vlc_messages.h	/^    STATS_DECODED_VIDEO,$/;"	e	enum:__anon91
STATS_DEMUX_BITRATE	vlc_messages.h	/^    STATS_DEMUX_BITRATE,$/;"	e	enum:__anon91
STATS_DEMUX_CORRUPTED	vlc_messages.h	/^    STATS_DEMUX_CORRUPTED,$/;"	e	enum:__anon91
STATS_DEMUX_DISCONTINUITY	vlc_messages.h	/^    STATS_DEMUX_DISCONTINUITY,$/;"	e	enum:__anon91
STATS_DEMUX_READ	vlc_messages.h	/^    STATS_DEMUX_READ,$/;"	e	enum:__anon91
STATS_DERIVATIVE	vlc_messages.h	/^    STATS_DERIVATIVE,$/;"	e	enum:__anon90
STATS_DISPLAYED_PICTURES	vlc_messages.h	/^    STATS_DISPLAYED_PICTURES,$/;"	e	enum:__anon91
STATS_INPUT_BITRATE	vlc_messages.h	/^    STATS_INPUT_BITRATE,$/;"	e	enum:__anon91
STATS_LAST	vlc_messages.h	/^    STATS_LAST,$/;"	e	enum:__anon90
STATS_LOST_ABUFFERS	vlc_messages.h	/^    STATS_LOST_ABUFFERS,$/;"	e	enum:__anon91
STATS_LOST_PICTURES	vlc_messages.h	/^    STATS_LOST_PICTURES,$/;"	e	enum:__anon91
STATS_MAX	vlc_messages.h	/^    STATS_MAX,$/;"	e	enum:__anon90
STATS_MIN	vlc_messages.h	/^    STATS_MIN,$/;"	e	enum:__anon90
STATS_PLAYED_ABUFFERS	vlc_messages.h	/^    STATS_PLAYED_ABUFFERS,$/;"	e	enum:__anon91
STATS_READ_BYTES	vlc_messages.h	/^    STATS_READ_BYTES,$/;"	e	enum:__anon91
STATS_READ_PACKETS	vlc_messages.h	/^    STATS_READ_PACKETS,$/;"	e	enum:__anon91
STATS_SOUT_SEND_BITRATE	vlc_messages.h	/^    STATS_SOUT_SEND_BITRATE,$/;"	e	enum:__anon91
STATS_SOUT_SENT_BYTES	vlc_messages.h	/^    STATS_SOUT_SENT_BYTES,$/;"	e	enum:__anon91
STATS_SOUT_SENT_PACKETS	vlc_messages.h	/^    STATS_SOUT_SENT_PACKETS,$/;"	e	enum:__anon91
STATS_TIMER	vlc_messages.h	/^    STATS_TIMER$/;"	e	enum:__anon90
STATS_TIMER_AUDIO_FRAME_ENCODING	vlc_messages.h	/^    STATS_TIMER_AUDIO_FRAME_ENCODING,$/;"	e	enum:__anon91
STATS_TIMER_INPUT_LAUNCHING	vlc_messages.h	/^    STATS_TIMER_INPUT_LAUNCHING,$/;"	e	enum:__anon91
STATS_TIMER_INTERACTION	vlc_messages.h	/^    STATS_TIMER_INTERACTION,$/;"	e	enum:__anon91
STATS_TIMER_ML_DUMP	vlc_messages.h	/^    STATS_TIMER_ML_DUMP,$/;"	e	enum:__anon91
STATS_TIMER_ML_LOAD	vlc_messages.h	/^    STATS_TIMER_ML_LOAD,$/;"	e	enum:__anon91
STATS_TIMER_MODULE_NEED	vlc_messages.h	/^    STATS_TIMER_MODULE_NEED,$/;"	e	enum:__anon91
STATS_TIMER_PLAYLIST_BUILD	vlc_messages.h	/^    STATS_TIMER_PLAYLIST_BUILD,$/;"	e	enum:__anon91
STATS_TIMER_PREPARSE	vlc_messages.h	/^    STATS_TIMER_PREPARSE,$/;"	e	enum:__anon91
STATS_TIMER_SKINS_PLAYTREE_IMAGE	vlc_messages.h	/^    STATS_TIMER_SKINS_PLAYTREE_IMAGE,$/;"	e	enum:__anon91
STATS_TIMER_VIDEO_FRAME_ENCODING	vlc_messages.h	/^    STATS_TIMER_VIDEO_FRAME_ENCODING,$/;"	e	enum:__anon91
STREAM_CAN_FASTSEEK	vlc_stream.h	/^    STREAM_CAN_FASTSEEK,        \/**< arg1= bool *   res=cannot fail*\/$/;"	e	enum:stream_query_e
STREAM_CAN_SEEK	vlc_stream.h	/^    STREAM_CAN_SEEK,            \/**< arg1= bool *   res=cannot fail*\/$/;"	e	enum:stream_query_e
STREAM_CONTROL_ACCESS	vlc_stream.h	/^    STREAM_CONTROL_ACCESS,  \/* arg1= int i_access_query, args   res: can fail$/;"	e	enum:stream_query_e
STREAM_FILTER_HELP	vlc_config_cat.h	104;"	d
STREAM_FILTER_TITLE	vlc_config_cat.h	103;"	d
STREAM_GET_CONTENT_TYPE	vlc_stream.h	/^    STREAM_GET_CONTENT_TYPE,    \/**< arg1= char **         res=can fail *\/$/;"	e	enum:stream_query_e
STREAM_GET_POSITION	vlc_stream.h	/^    STREAM_GET_POSITION,        \/**< arg1= uint64_t *     res=cannot fail*\/$/;"	e	enum:stream_query_e
STREAM_GET_SIZE	vlc_stream.h	/^    STREAM_GET_SIZE,            \/**< arg1= uint64_t *     res=cannot fail (0 if no sense)*\/$/;"	e	enum:stream_query_e
STREAM_SET_POSITION	vlc_stream.h	/^    STREAM_SET_POSITION,        \/**< arg1= uint64_t       res=can fail  *\/$/;"	e	enum:stream_query_e
STREAM_SET_RECORD_STATE	vlc_stream.h	/^    STREAM_SET_RECORD_STATE,     \/**< arg1=bool, arg2=const char *psz_ext (if arg1 is true)  res=can fail *\/$/;"	e	enum:stream_query_e
STREAM_UPDATE_SIZE	vlc_stream.h	/^    STREAM_UPDATE_SIZE,$/;"	e	enum:stream_query_e
STYLE_BACKGROUND	vlc_text_style.h	75;"	d
STYLE_BOLD	vlc_text_style.h	71;"	d
STYLE_ITALIC	vlc_text_style.h	72;"	d
STYLE_OUTLINE	vlc_text_style.h	73;"	d
STYLE_SHADOW	vlc_text_style.h	74;"	d
STYLE_STRIKEOUT	vlc_text_style.h	77;"	d
STYLE_UNDERLINE	vlc_text_style.h	76;"	d
SUBCAT_ADVANCED_CPU	vlc_configuration.h	115;"	d
SUBCAT_ADVANCED_MISC	vlc_configuration.h	116;"	d
SUBCAT_ADVANCED_NETWORK	vlc_configuration.h	117;"	d
SUBCAT_ADVANCED_XML	vlc_configuration.h	118;"	d
SUBCAT_AUDIO_AFILTER	vlc_configuration.h	84;"	d
SUBCAT_AUDIO_AOUT	vlc_configuration.h	83;"	d
SUBCAT_AUDIO_GENERAL	vlc_configuration.h	82;"	d
SUBCAT_AUDIO_MISC	vlc_configuration.h	86;"	d
SUBCAT_AUDIO_VISUAL	vlc_configuration.h	85;"	d
SUBCAT_INPUT_ACCESS	vlc_configuration.h	98;"	d
SUBCAT_INPUT_ACODEC	vlc_configuration.h	101;"	d
SUBCAT_INPUT_DEMUX	vlc_configuration.h	99;"	d
SUBCAT_INPUT_GENERAL	vlc_configuration.h	97;"	d
SUBCAT_INPUT_SCODEC	vlc_configuration.h	102;"	d
SUBCAT_INPUT_STREAM_FILTER	vlc_configuration.h	103;"	d
SUBCAT_INPUT_VCODEC	vlc_configuration.h	100;"	d
SUBCAT_INTERFACE_CONTROL	vlc_configuration.h	78;"	d
SUBCAT_INTERFACE_GENERAL	vlc_configuration.h	76;"	d
SUBCAT_INTERFACE_HOTKEYS	vlc_configuration.h	79;"	d
SUBCAT_INTERFACE_MAIN	vlc_configuration.h	77;"	d
SUBCAT_OSD_IMPORT	vlc_configuration.h	126;"	d
SUBCAT_PLAYLIST_EXPORT	vlc_configuration.h	123;"	d
SUBCAT_PLAYLIST_GENERAL	vlc_configuration.h	121;"	d
SUBCAT_PLAYLIST_SD	vlc_configuration.h	122;"	d
SUBCAT_SOUT_ACO	vlc_configuration.h	109;"	d
SUBCAT_SOUT_GENERAL	vlc_configuration.h	106;"	d
SUBCAT_SOUT_MUX	vlc_configuration.h	108;"	d
SUBCAT_SOUT_PACKETIZER	vlc_configuration.h	110;"	d
SUBCAT_SOUT_SAP	vlc_configuration.h	111;"	d
SUBCAT_SOUT_STREAM	vlc_configuration.h	107;"	d
SUBCAT_SOUT_VOD	vlc_configuration.h	112;"	d
SUBCAT_VIDEO_GENERAL	vlc_configuration.h	89;"	d
SUBCAT_VIDEO_SUBPIC	vlc_configuration.h	93;"	d
SUBCAT_VIDEO_TEXT	vlc_configuration.h	92;"	d
SUBCAT_VIDEO_VFILTER	vlc_configuration.h	91;"	d
SUBCAT_VIDEO_VFILTER2	vlc_configuration.h	94;"	d
SUBCAT_VIDEO_VOUT	vlc_configuration.h	90;"	d
SUBPICTURE_ALIGN_BOTTOM	vlc_subpicture.h	79;"	d
SUBPICTURE_ALIGN_LEFT	vlc_subpicture.h	76;"	d
SUBPICTURE_ALIGN_MASK	vlc_subpicture.h	80;"	d
SUBPICTURE_ALIGN_RIGHT	vlc_subpicture.h	77;"	d
SUBPICTURE_ALIGN_TOP	vlc_subpicture.h	78;"	d
SUBPIC_HELP	vlc_config_cat.h	84;"	d
SUBPIC_TITLE	vlc_config_cat.h	83;"	d
S_IFBLK	vlc_common.h	857;"	d
S_ISBLK	vlc_common.h	858;"	d
S_ISCHR	vlc_common.h	859;"	d
S_ISFIFO	vlc_common.h	860;"	d
S_ISREG	vlc_common.h	861;"	d
SampleFreq	vlc_codecs.h	/^    uint32_t SampleFreq;$/;"	m	struct:_WAVEHEADER
Samples	vlc_codecs.h	/^    } Samples;$/;"	m	struct:_WAVEFORMATEXTENSIBLE	typeref:union:_WAVEFORMATEXTENSIBLE::__anon8
SetActiveAlt	vlc_windows_interfaces.h	/^    long ( WINAPI *SetActiveAlt )(ITaskbarList3 *This, HWND hwnd);$/;"	m	struct:ITaskbarList3Vtbl
SetDWBE	vlc_common.h	/^static inline void SetDWBE (void *p, uint32_t dw)$/;"	f
SetDWLE	vlc_common.h	/^static inline void SetDWLE (void *p, uint32_t dw)$/;"	f
SetOverlayIcon	vlc_windows_interfaces.h	/^    long ( WINAPI *SetOverlayIcon )(ITaskbarList3 *This, HWND hwnd,$/;"	m	struct:ITaskbarList3Vtbl
SetProgressState	vlc_windows_interfaces.h	/^    long ( WINAPI *SetProgressState )(ITaskbarList3 *This, HWND hwnd,$/;"	m	struct:ITaskbarList3Vtbl
SetProgressValue	vlc_windows_interfaces.h	/^    long ( WINAPI *SetProgressValue )(ITaskbarList3 *This, HWND hwnd,$/;"	m	struct:ITaskbarList3Vtbl
SetQWBE	vlc_common.h	/^static inline void SetQWBE (void *p, uint64_t qw)$/;"	f
SetQWLE	vlc_common.h	/^static inline void SetQWLE (void *p, uint64_t qw)$/;"	f
SetTabActive	vlc_windows_interfaces.h	/^    long ( WINAPI *SetTabActive )(ITaskbarList3 *This, HWND hwndTab,$/;"	m	struct:ITaskbarList3Vtbl
SetTabOrder	vlc_windows_interfaces.h	/^    long ( WINAPI *SetTabOrder )(ITaskbarList3 *This, HWND hwndTab,$/;"	m	struct:ITaskbarList3Vtbl
SetThumbnailClip	vlc_windows_interfaces.h	/^    long ( WINAPI *SetThumbnailClip )(ITaskbarList3 *This, HWND hwnd,$/;"	m	struct:ITaskbarList3Vtbl
SetThumbnailTooltip	vlc_windows_interfaces.h	/^    long ( WINAPI *SetThumbnailTooltip )(ITaskbarList3 *This, HWND hwnd,$/;"	m	struct:ITaskbarList3Vtbl
SetWBE	vlc_common.h	/^static inline void SetWBE (void *p, uint16_t w)$/;"	f
SetWLE	vlc_common.h	/^static inline void SetWLE (void *p, uint16_t w)$/;"	f
SubChunkID	vlc_codecs.h	/^    uint32_t SubChunkID;$/;"	m	struct:_WAVEHEADER
SubChunkLength	vlc_codecs.h	/^    uint32_t SubChunkLength;$/;"	m	struct:_WAVEHEADER
SubFormat	vlc_codecs.h	/^    GUID SubFormat;$/;"	m	struct:_WAVEFORMATEXTENSIBLE
TAB_APPEND	vlc_arrays.h	108;"	d
TAB_APPEND_CAST	vlc_arrays.h	97;"	d
TAB_CLEAN	vlc_arrays.h	90;"	d
TAB_FIND	vlc_arrays.h	111;"	d
TAB_INIT	vlc_arrays.h	84;"	d
TAB_INSERT	vlc_arrays.h	158;"	d
TAB_INSERT_CAST	vlc_arrays.h	144;"	d
TAB_REMOVE	vlc_arrays.h	123;"	d
TBPFLAG	vlc_windows_interfaces.h	/^typedef enum TBPFLAG$/;"	g
TBPFLAG	vlc_windows_interfaces.h	/^} TBPFLAG;$/;"	t	typeref:enum:TBPFLAG
TBPF_ERROR	vlc_windows_interfaces.h	/^    TBPF_ERROR         = 0x4,$/;"	e	enum:TBPFLAG
TBPF_INDETERMINATE	vlc_windows_interfaces.h	/^    TBPF_INDETERMINATE = 0x1,$/;"	e	enum:TBPFLAG
TBPF_NOPROGRESS	vlc_windows_interfaces.h	/^    TBPF_NOPROGRESS    = 0,$/;"	e	enum:TBPFLAG
TBPF_NORMAL	vlc_windows_interfaces.h	/^    TBPF_NORMAL        = 0x2,$/;"	e	enum:TBPFLAG
TBPF_PAUSED	vlc_windows_interfaces.h	/^    TBPF_PAUSED        = 0x8$/;"	e	enum:TBPFLAG
THBF_DISABLED	vlc_windows_interfaces.h	/^    THBF_DISABLED       = 0x1,$/;"	e	enum:THUMBBUTTONFLAGS
THBF_DISMISSONCLICK	vlc_windows_interfaces.h	/^    THBF_DISMISSONCLICK = 0x2,$/;"	e	enum:THUMBBUTTONFLAGS
THBF_ENABLED	vlc_windows_interfaces.h	/^    THBF_ENABLED        = 0x0,$/;"	e	enum:THUMBBUTTONFLAGS
THBF_HIDDEN	vlc_windows_interfaces.h	/^    THBF_HIDDEN         = 0x8,$/;"	e	enum:THUMBBUTTONFLAGS
THBF_NOBACKGROUND	vlc_windows_interfaces.h	/^    THBF_NOBACKGROUND   = 0x4,$/;"	e	enum:THUMBBUTTONFLAGS
THBF_NONINTERACTIVE	vlc_windows_interfaces.h	/^    THBF_NONINTERACTIVE = 0x10$/;"	e	enum:THUMBBUTTONFLAGS
THBN_CLICKED	vlc_windows_interfaces.h	86;"	d
THB_BITMAP	vlc_windows_interfaces.h	/^    THB_BITMAP  = 0x1,$/;"	e	enum:THUMBBUTTONMASK
THB_FLAGS	vlc_windows_interfaces.h	/^    THB_FLAGS   = 0x8$/;"	e	enum:THUMBBUTTONMASK
THB_ICON	vlc_windows_interfaces.h	/^    THB_ICON    = 0x2,$/;"	e	enum:THUMBBUTTONMASK
THB_TOOLTIP	vlc_windows_interfaces.h	/^    THB_TOOLTIP = 0x4,$/;"	e	enum:THUMBBUTTONMASK
THUMBBUTTON	vlc_windows_interfaces.h	/^} THUMBBUTTON;$/;"	t	typeref:struct:tagTHUMBBUTTON
THUMBBUTTONFLAGS	vlc_windows_interfaces.h	/^typedef enum THUMBBUTTONFLAGS {$/;"	g
THUMBBUTTONFLAGS	vlc_windows_interfaces.h	/^} THUMBBUTTONFLAGS;$/;"	t	typeref:enum:THUMBBUTTONFLAGS
THUMBBUTTONMASK	vlc_windows_interfaces.h	/^typedef enum THUMBBUTTONMASK {$/;"	g
THUMBBUTTONMASK	vlc_windows_interfaces.h	/^} THUMBBUTTONMASK;$/;"	t	typeref:enum:THUMBBUTTONMASK
TRANSCODE_ACTIVITY	vlc_config.h	64;"	d
TRUECOLORINFO	vlc_codecs.h	/^} TRUECOLORINFO;$/;"	t	typeref:struct:ATTR_PACKED
TYPEDEF_ARRAY	vlc_arrays.h	217;"	d
ThumbBarAddButtons	vlc_windows_interfaces.h	/^    long ( WINAPI *ThumbBarAddButtons )(ITaskbarList3 *This, HWND hwnd,$/;"	m	struct:ITaskbarList3Vtbl
ThumbBarSetImageList	vlc_windows_interfaces.h	/^    long ( WINAPI *ThumbBarSetImageList )(ITaskbarList3 *This, HWND hwnd,$/;"	m	struct:ITaskbarList3Vtbl
ThumbBarUpdateButtons	vlc_windows_interfaces.h	/^    long ( WINAPI *ThumbBarUpdateButtons )(ITaskbarList3 *This, HWND hwnd,$/;"	m	struct:ITaskbarList3Vtbl
ToWide	vlc_charset.h	/^static inline wchar_t *ToWide (const char *utf8)$/;"	f
TrueColorInfo	vlc_codecs.h	/^        TRUECOLORINFO TrueColorInfo; \/* Both of the above *\/$/;"	m	union:ATTR_PACKED::__anon9
U16_AT	vlc_common.h	/^static inline uint16_t U16_AT (const void *p)$/;"	f
U32_AT	vlc_common.h	/^static inline uint32_t U32_AT (const void *p)$/;"	f
U64_AT	vlc_common.h	/^static inline uint64_t U64_AT (const void *p)$/;"	f
UNKNOWN_ES	vlc_es.h	/^    UNKNOWN_ES = 0x00,$/;"	e	enum:es_format_category_e
U_PITCH	vlc_picture.h	326;"	d
U_PIXELS	vlc_picture.h	325;"	d
U_PLANE	vlc_picture.h	/^    U_PLANE = 1,$/;"	e	enum:__anon133
UnregisterTab	vlc_windows_interfaces.h	/^    long ( WINAPI *UnregisterTab )(ITaskbarList3 *This, HWND hwndTab);$/;"	m	struct:ITaskbarList3Vtbl
VDEC_HELP	vlc_config_cat.h	112;"	d
VDEC_TITLE	vlc_config_cat.h	111;"	d
VFILTER_HELP	vlc_config_cat.h	80;"	d
VFILTER_TITLE	vlc_config_cat.h	79;"	d
VIDEOINFO	vlc_codecs.h	/^} VIDEOINFO;$/;"	t	typeref:struct:ATTR_PACKED
VIDEOINFOHEADER	vlc_codecs.h	/^} VIDEOINFOHEADER;$/;"	t	typeref:struct:ATTR_PACKED
VIDEO_ES	vlc_es.h	/^    VIDEO_ES   = 0x01,$/;"	e	enum:es_format_category_e
VIDEO_FILTER_WRAPPER	vlc_filter.h	261;"	d
VIDEO_GENERAL_HELP	vlc_config_cat.h	73;"	d
VIDEO_HELP	vlc_config_cat.h	71;"	d
VIDEO_TITLE	vlc_config_cat.h	70;"	d
VISIT	vlc_fixups.h	/^} VISIT;$/;"	t	typeref:enum:__anon87
VLCCVP	vlc_arrays.h	44;"	d
VLCCVP	vlc_arrays.h	46;"	d
VLC_ACCESS_H	vlc_access.h	25;"	d
VLC_ACL_H	vlc_acl.h	26;"	d
VLC_AOUT_H	vlc_aout.h	24;"	d
VLC_AOUT_INTF_H	vlc_aout_intf.h	22;"	d
VLC_AOUT_MIXER_H	vlc_aout_mixer.h	26;"	d
VLC_API	vlc_common.h	137;"	d
VLC_ARRAYS_H_	vlc_arrays.h	26;"	d
VLC_ART_FINDER_H	vlc_art_finder.h	22;"	d
VLC_ATOMIC_H	vlc_atomic.h	22;"	d
VLC_ATOMIC_INIT	vlc_atomic.h	30;"	d
VLC_AVCODEC_H	vlc_avcodec.h	22;"	d
VLC_AVCODEC_MUTEX	vlc_threads.h	/^   VLC_AVCODEC_MUTEX = 0,$/;"	e	enum:__anon31
VLC_BITMAPINFO	vlc_codecs.h	/^} VLC_BITMAPINFO, *VLC_LPBITMAPINFO;$/;"	t	typeref:struct:ATTR_PACKED
VLC_BITMAPINFOHEADER	vlc_codecs.h	/^} VLC_BITMAPINFOHEADER, *VLC_PBITMAPINFOHEADER, *VLC_LPBITMAPINFOHEADER;$/;"	t	typeref:struct:ATTR_PACKED
VLC_BITS_H	vlc_bits.h	25;"	d
VLC_BLOCK_H	vlc_block.h	25;"	d
VLC_BLOCK_HELPER_H	vlc_block_helper.h	25;"	d
VLC_CACHE_DIR	vlc_configuration.h	/^    VLC_CACHE_DIR, \/* VLC-specific user cached data directory *\/$/;"	e	enum:vlc_userdir
VLC_CHARSET_H	vlc_charset.h	26;"	d
VLC_CLEANUP_POP	vlc_threads.h	/^    VLC_CLEANUP_POP,$/;"	e	enum:__anon30
VLC_CLEANUP_PUSH	vlc_threads.h	/^    VLC_CLEANUP_PUSH,$/;"	e	enum:__anon30
VLC_CLIP	vlc_common.h	585;"	d
VLC_CODECS_H	vlc_codecs.h	25;"	d
VLC_CODEC_302M	vlc_fourcc.h	290;"	d
VLC_CODEC_4XM	vlc_fourcc.h	109;"	d
VLC_CODEC_8BPS	vlc_fourcc.h	105;"	d
VLC_CODEC_A52	vlc_fourcc.h	236;"	d
VLC_CODEC_AASC	vlc_fourcc.h	99;"	d
VLC_CODEC_ADPCM_4XM	vlc_fourcc.h	257;"	d
VLC_CODEC_ADPCM_ADX	vlc_fourcc.h	263;"	d
VLC_CODEC_ADPCM_EA	vlc_fourcc.h	258;"	d
VLC_CODEC_ADPCM_G722	vlc_fourcc.h	265;"	d
VLC_CODEC_ADPCM_G726	vlc_fourcc.h	266;"	d
VLC_CODEC_ADPCM_IMA_AMV	vlc_fourcc.h	322;"	d
VLC_CODEC_ADPCM_IMA_WAV	vlc_fourcc.h	269;"	d
VLC_CODEC_ADPCM_IMA_WS	vlc_fourcc.h	264;"	d
VLC_CODEC_ADPCM_MS	vlc_fourcc.h	268;"	d
VLC_CODEC_ADPCM_SWF	vlc_fourcc.h	267;"	d
VLC_CODEC_ADPCM_XA	vlc_fourcc.h	262;"	d
VLC_CODEC_ALAC	vlc_fourcc.h	273;"	d
VLC_CODEC_ALAW	vlc_fourcc.h	316;"	d
VLC_CODEC_ALS	vlc_fourcc.h	235;"	d
VLC_CODEC_AMR_NB	vlc_fourcc.h	271;"	d
VLC_CODEC_AMR_WB	vlc_fourcc.h	272;"	d
VLC_CODEC_AMV	vlc_fourcc.h	115;"	d
VLC_CODEC_APE	vlc_fourcc.h	288;"	d
VLC_CODEC_ASV1	vlc_fourcc.h	77;"	d
VLC_CODEC_ASV2	vlc_fourcc.h	78;"	d
VLC_CODEC_ATRAC1	vlc_fourcc.h	282;"	d
VLC_CODEC_ATRAC3	vlc_fourcc.h	283;"	d
VLC_CODEC_BD_LPCM	vlc_fourcc.h	293;"	d
VLC_CODEC_BD_PG	vlc_fourcc.h	339;"	d
VLC_CODEC_BMP	vlc_fourcc.h	223;"	d
VLC_CODEC_CAVS	vlc_fourcc.h	57;"	d
VLC_CODEC_CDG	vlc_fourcc.h	113;"	d
VLC_CODEC_CINEPAK	vlc_fourcc.h	84;"	d
VLC_CODEC_CLJR	vlc_fourcc.h	81;"	d
VLC_CODEC_CMML	vlc_fourcc.h	333;"	d
VLC_CODEC_COOK	vlc_fourcc.h	275;"	d
VLC_CODEC_CSCD	vlc_fourcc.h	86;"	d
VLC_CODEC_CVD	vlc_fourcc.h	337;"	d
VLC_CODEC_CYUV	vlc_fourcc.h	203;"	d
VLC_CODEC_DAT12	vlc_fourcc.h	318;"	d
VLC_CODEC_DIRAC	vlc_fourcc.h	56;"	d
VLC_CODEC_DIV1	vlc_fourcc.h	32;"	d
VLC_CODEC_DIV2	vlc_fourcc.h	33;"	d
VLC_CODEC_DIV3	vlc_fourcc.h	34;"	d
VLC_CODEC_DNXHD	vlc_fourcc.h	104;"	d
VLC_CODEC_DSICINAUDIO	vlc_fourcc.h	261;"	d
VLC_CODEC_DTS	vlc_fourcc.h	238;"	d
VLC_CODEC_DV	vlc_fourcc.h	72;"	d
VLC_CODEC_DVAUDIO	vlc_fourcc.h	247;"	d
VLC_CODEC_DVBS	vlc_fourcc.h	326;"	d
VLC_CODEC_DVDA_LPCM	vlc_fourcc.h	292;"	d
VLC_CODEC_DVD_LPCM	vlc_fourcc.h	291;"	d
VLC_CODEC_EAC3	vlc_fourcc.h	237;"	d
VLC_CODEC_EBU_STL	vlc_fourcc.h	341;"	d
VLC_CODEC_F32B	vlc_fourcc.h	312;"	d
VLC_CODEC_F32L	vlc_fourcc.h	311;"	d
VLC_CODEC_F64B	vlc_fourcc.h	314;"	d
VLC_CODEC_F64L	vlc_fourcc.h	313;"	d
VLC_CODEC_FFV1	vlc_fourcc.h	79;"	d
VLC_CODEC_FFVHUFF	vlc_fourcc.h	76;"	d
VLC_CODEC_FI32	vlc_fourcc.h	320;"	d
VLC_CODEC_FL32	vlc_fourcc.h	352;"	d
VLC_CODEC_FL32	vlc_fourcc.h	365;"	d
VLC_CODEC_FL64	vlc_fourcc.h	353;"	d
VLC_CODEC_FL64	vlc_fourcc.h	366;"	d
VLC_CODEC_FLAC	vlc_fourcc.h	244;"	d
VLC_CODEC_FLASHSV	vlc_fourcc.h	101;"	d
VLC_CODEC_FLASHSV2	vlc_fourcc.h	120;"	d
VLC_CODEC_FLIC	vlc_fourcc.h	70;"	d
VLC_CODEC_FLV1	vlc_fourcc.h	41;"	d
VLC_CODEC_FRAPS	vlc_fourcc.h	89;"	d
VLC_CODEC_FRWU	vlc_fourcc.h	114;"	d
VLC_CODEC_GIF	vlc_fourcc.h	225;"	d
VLC_CODEC_GREY	vlc_fourcc.h	191;"	d
VLC_CODEC_GSM	vlc_fourcc.h	280;"	d
VLC_CODEC_GSM_MS	vlc_fourcc.h	281;"	d
VLC_CODEC_H	vlc_codec.h	25;"	d
VLC_CODEC_H261	vlc_fourcc.h	42;"	d
VLC_CODEC_H263	vlc_fourcc.h	38;"	d
VLC_CODEC_H263I	vlc_fourcc.h	39;"	d
VLC_CODEC_H263P	vlc_fourcc.h	40;"	d
VLC_CODEC_H264	vlc_fourcc.h	37;"	d
VLC_CODEC_HUFFYUV	vlc_fourcc.h	75;"	d
VLC_CODEC_I410	vlc_fourcc.h	129;"	d
VLC_CODEC_I411	vlc_fourcc.h	131;"	d
VLC_CODEC_I420	vlc_fourcc.h	133;"	d
VLC_CODEC_I420_10B	vlc_fourcc.h	139;"	d
VLC_CODEC_I420_10L	vlc_fourcc.h	138;"	d
VLC_CODEC_I420_9B	vlc_fourcc.h	136;"	d
VLC_CODEC_I420_9L	vlc_fourcc.h	135;"	d
VLC_CODEC_I422	vlc_fourcc.h	141;"	d
VLC_CODEC_I422_10B	vlc_fourcc.h	147;"	d
VLC_CODEC_I422_10L	vlc_fourcc.h	146;"	d
VLC_CODEC_I422_9B	vlc_fourcc.h	144;"	d
VLC_CODEC_I422_9L	vlc_fourcc.h	143;"	d
VLC_CODEC_I440	vlc_fourcc.h	149;"	d
VLC_CODEC_I444	vlc_fourcc.h	151;"	d
VLC_CODEC_I444_10B	vlc_fourcc.h	157;"	d
VLC_CODEC_I444_10L	vlc_fourcc.h	156;"	d
VLC_CODEC_I444_9B	vlc_fourcc.h	154;"	d
VLC_CODEC_I444_9L	vlc_fourcc.h	153;"	d
VLC_CODEC_IDCIN	vlc_fourcc.h	108;"	d
VLC_CODEC_IMC	vlc_fourcc.h	285;"	d
VLC_CODEC_INDEO2	vlc_fourcc.h	100;"	d
VLC_CODEC_INDEO3	vlc_fourcc.h	74;"	d
VLC_CODEC_INDEO5	vlc_fourcc.h	116;"	d
VLC_CODEC_INTERPLAY	vlc_fourcc.h	107;"	d
VLC_CODEC_INTERPLAY_DPCM	vlc_fourcc.h	259;"	d
VLC_CODEC_ITU_T140	vlc_fourcc.h	334;"	d
VLC_CODEC_J420	vlc_fourcc.h	159;"	d
VLC_CODEC_J422	vlc_fourcc.h	161;"	d
VLC_CODEC_J440	vlc_fourcc.h	163;"	d
VLC_CODEC_J444	vlc_fourcc.h	165;"	d
VLC_CODEC_JPEG	vlc_fourcc.h	221;"	d
VLC_CODEC_JPEG2000	vlc_fourcc.h	118;"	d
VLC_CODEC_JPEGLS	vlc_fourcc.h	222;"	d
VLC_CODEC_KATE	vlc_fourcc.h	332;"	d
VLC_CODEC_KMVC	vlc_fourcc.h	102;"	d
VLC_CODEC_LAGARITH	vlc_fourcc.h	119;"	d
VLC_CODEC_LJPG	vlc_fourcc.h	45;"	d
VLC_CODEC_LOCO	vlc_fourcc.h	97;"	d
VLC_CODEC_MACE3	vlc_fourcc.h	251;"	d
VLC_CODEC_MACE6	vlc_fourcc.h	252;"	d
VLC_CODEC_MDEC	vlc_fourcc.h	111;"	d
VLC_CODEC_MIDI	vlc_fourcc.h	295;"	d
VLC_CODEC_MIMIC	vlc_fourcc.h	106;"	d
VLC_CODEC_MJPG	vlc_fourcc.h	43;"	d
VLC_CODEC_MJPGB	vlc_fourcc.h	44;"	d
VLC_CODEC_MLP	vlc_fourcc.h	245;"	d
VLC_CODEC_MP1V	vlc_fourcc.h	376;"	d
VLC_CODEC_MP2	vlc_fourcc.h	380;"	d
VLC_CODEC_MP2V	vlc_fourcc.h	378;"	d
VLC_CODEC_MP3	vlc_fourcc.h	382;"	d
VLC_CODEC_MP4A	vlc_fourcc.h	234;"	d
VLC_CODEC_MP4V	vlc_fourcc.h	31;"	d
VLC_CODEC_MPGA	vlc_fourcc.h	233;"	d
VLC_CODEC_MPGV	vlc_fourcc.h	30;"	d
VLC_CODEC_MSRLE	vlc_fourcc.h	73;"	d
VLC_CODEC_MSVIDEO1	vlc_fourcc.h	69;"	d
VLC_CODEC_MULAW	vlc_fourcc.h	317;"	d
VLC_CODEC_MUSEPACK7	vlc_fourcc.h	253;"	d
VLC_CODEC_MUSEPACK8	vlc_fourcc.h	254;"	d
VLC_CODEC_MXPEG	vlc_fourcc.h	122;"	d
VLC_CODEC_NELLYMOSER	vlc_fourcc.h	287;"	d
VLC_CODEC_NUV	vlc_fourcc.h	58;"	d
VLC_CODEC_NV12	vlc_fourcc.h	207;"	d
VLC_CODEC_NV16	vlc_fourcc.h	211;"	d
VLC_CODEC_NV21	vlc_fourcc.h	209;"	d
VLC_CODEC_NV61	vlc_fourcc.h	213;"	d
VLC_CODEC_OGT	vlc_fourcc.h	336;"	d
VLC_CODEC_OPUS	vlc_fourcc.h	249;"	d
VLC_CODEC_PAM	vlc_fourcc.h	220;"	d
VLC_CODEC_PCX	vlc_fourcc.h	229;"	d
VLC_CODEC_PGM	vlc_fourcc.h	218;"	d
VLC_CODEC_PGMYUV	vlc_fourcc.h	219;"	d
VLC_CODEC_PNG	vlc_fourcc.h	216;"	d
VLC_CODEC_PNM	vlc_fourcc.h	228;"	d
VLC_CODEC_PPM	vlc_fourcc.h	217;"	d
VLC_CODEC_PRORES	vlc_fourcc.h	121;"	d
VLC_CODEC_QCELP	vlc_fourcc.h	289;"	d
VLC_CODEC_QDM2	vlc_fourcc.h	274;"	d
VLC_CODEC_QDRAW	vlc_fourcc.h	93;"	d
VLC_CODEC_QPEG	vlc_fourcc.h	94;"	d
VLC_CODEC_QTRLE	vlc_fourcc.h	92;"	d
VLC_CODEC_RA_144	vlc_fourcc.h	255;"	d
VLC_CODEC_RA_288	vlc_fourcc.h	256;"	d
VLC_CODEC_RGB12	vlc_fourcc.h	175;"	d
VLC_CODEC_RGB15	vlc_fourcc.h	179;"	d
VLC_CODEC_RGB16	vlc_fourcc.h	183;"	d
VLC_CODEC_RGB24	vlc_fourcc.h	185;"	d
VLC_CODEC_RGB32	vlc_fourcc.h	187;"	d
VLC_CODEC_RGB8	vlc_fourcc.h	173;"	d
VLC_CODEC_RGBA	vlc_fourcc.h	189;"	d
VLC_CODEC_RGBA16	vlc_fourcc.h	177;"	d
VLC_CODEC_RGBP	vlc_fourcc.h	171;"	d
VLC_CODEC_RGBT	vlc_fourcc.h	181;"	d
VLC_CODEC_ROQ	vlc_fourcc.h	110;"	d
VLC_CODEC_ROQ_DPCM	vlc_fourcc.h	260;"	d
VLC_CODEC_RPZA	vlc_fourcc.h	82;"	d
VLC_CODEC_RV10	vlc_fourcc.h	59;"	d
VLC_CODEC_RV13	vlc_fourcc.h	60;"	d
VLC_CODEC_RV20	vlc_fourcc.h	61;"	d
VLC_CODEC_RV30	vlc_fourcc.h	62;"	d
VLC_CODEC_RV40	vlc_fourcc.h	63;"	d
VLC_CODEC_S16B	vlc_fourcc.h	299;"	d
VLC_CODEC_S16I	vlc_fourcc.h	355;"	d
VLC_CODEC_S16I	vlc_fourcc.h	368;"	d
VLC_CODEC_S16L	vlc_fourcc.h	298;"	d
VLC_CODEC_S16N	vlc_fourcc.h	348;"	d
VLC_CODEC_S16N	vlc_fourcc.h	361;"	d
VLC_CODEC_S20B	vlc_fourcc.h	302;"	d
VLC_CODEC_S24B	vlc_fourcc.h	304;"	d
VLC_CODEC_S24DAUD	vlc_fourcc.h	319;"	d
VLC_CODEC_S24I	vlc_fourcc.h	357;"	d
VLC_CODEC_S24I	vlc_fourcc.h	370;"	d
VLC_CODEC_S24L	vlc_fourcc.h	303;"	d
VLC_CODEC_S24N	vlc_fourcc.h	350;"	d
VLC_CODEC_S24N	vlc_fourcc.h	363;"	d
VLC_CODEC_S32B	vlc_fourcc.h	308;"	d
VLC_CODEC_S32I	vlc_fourcc.h	358;"	d
VLC_CODEC_S32I	vlc_fourcc.h	371;"	d
VLC_CODEC_S32L	vlc_fourcc.h	307;"	d
VLC_CODEC_S32N	vlc_fourcc.h	351;"	d
VLC_CODEC_S32N	vlc_fourcc.h	364;"	d
VLC_CODEC_S8	vlc_fourcc.h	296;"	d
VLC_CODEC_SDDS	vlc_fourcc.h	294;"	d
VLC_CODEC_SGI	vlc_fourcc.h	227;"	d
VLC_CODEC_SHORTEN	vlc_fourcc.h	278;"	d
VLC_CODEC_SIPR	vlc_fourcc.h	276;"	d
VLC_CODEC_SMACKVIDEO	vlc_fourcc.h	103;"	d
VLC_CODEC_SMC	vlc_fourcc.h	83;"	d
VLC_CODEC_SNOW	vlc_fourcc.h	55;"	d
VLC_CODEC_SONIC	vlc_fourcc.h	284;"	d
VLC_CODEC_SP5X	vlc_fourcc.h	71;"	d
VLC_CODEC_SPDIFB	vlc_aout.h	74;"	d
VLC_CODEC_SPDIFL	vlc_aout.h	73;"	d
VLC_CODEC_SPEEX	vlc_fourcc.h	248;"	d
VLC_CODEC_SPU	vlc_fourcc.h	325;"	d
VLC_CODEC_SSA	vlc_fourcc.h	329;"	d
VLC_CODEC_SUBT	vlc_fourcc.h	327;"	d
VLC_CODEC_SVQ1	vlc_fourcc.h	35;"	d
VLC_CODEC_SVQ3	vlc_fourcc.h	36;"	d
VLC_CODEC_TARGA	vlc_fourcc.h	226;"	d
VLC_CODEC_TARKIN	vlc_fourcc.h	54;"	d
VLC_CODEC_TELETEXT	vlc_fourcc.h	331;"	d
VLC_CODEC_TEXT	vlc_fourcc.h	330;"	d
VLC_CODEC_THEORA	vlc_fourcc.h	53;"	d
VLC_CODEC_TIFF	vlc_fourcc.h	224;"	d
VLC_CODEC_TRUEHD	vlc_fourcc.h	246;"	d
VLC_CODEC_TRUEMOTION1	vlc_fourcc.h	90;"	d
VLC_CODEC_TRUEMOTION2	vlc_fourcc.h	91;"	d
VLC_CODEC_TRUESPEECH	vlc_fourcc.h	286;"	d
VLC_CODEC_TSCC	vlc_fourcc.h	85;"	d
VLC_CODEC_TTA	vlc_fourcc.h	277;"	d
VLC_CODEC_TWINVQ	vlc_fourcc.h	321;"	d
VLC_CODEC_U16B	vlc_fourcc.h	301;"	d
VLC_CODEC_U16I	vlc_fourcc.h	356;"	d
VLC_CODEC_U16I	vlc_fourcc.h	369;"	d
VLC_CODEC_U16L	vlc_fourcc.h	300;"	d
VLC_CODEC_U16N	vlc_fourcc.h	349;"	d
VLC_CODEC_U16N	vlc_fourcc.h	362;"	d
VLC_CODEC_U24B	vlc_fourcc.h	306;"	d
VLC_CODEC_U24L	vlc_fourcc.h	305;"	d
VLC_CODEC_U32B	vlc_fourcc.h	310;"	d
VLC_CODEC_U32L	vlc_fourcc.h	309;"	d
VLC_CODEC_U8	vlc_fourcc.h	297;"	d
VLC_CODEC_ULTI	vlc_fourcc.h	95;"	d
VLC_CODEC_USF	vlc_fourcc.h	335;"	d
VLC_CODEC_UYVY	vlc_fourcc.h	193;"	d
VLC_CODEC_V210	vlc_fourcc.h	205;"	d
VLC_CODEC_VC1	vlc_fourcc.h	52;"	d
VLC_CODEC_VCR1	vlc_fourcc.h	80;"	d
VLC_CODEC_VIXL	vlc_fourcc.h	96;"	d
VLC_CODEC_VMDAUDIO	vlc_fourcc.h	270;"	d
VLC_CODEC_VMDVIDEO	vlc_fourcc.h	112;"	d
VLC_CODEC_VMNC	vlc_fourcc.h	88;"	d
VLC_CODEC_VORBIS	vlc_fourcc.h	250;"	d
VLC_CODEC_VP3	vlc_fourcc.h	64;"	d
VLC_CODEC_VP5	vlc_fourcc.h	65;"	d
VLC_CODEC_VP6	vlc_fourcc.h	66;"	d
VLC_CODEC_VP6A	vlc_fourcc.h	68;"	d
VLC_CODEC_VP6F	vlc_fourcc.h	67;"	d
VLC_CODEC_VP8	vlc_fourcc.h	117;"	d
VLC_CODEC_VYUY	vlc_fourcc.h	195;"	d
VLC_CODEC_WAVPACK	vlc_fourcc.h	279;"	d
VLC_CODEC_WMA1	vlc_fourcc.h	239;"	d
VLC_CODEC_WMA2	vlc_fourcc.h	240;"	d
VLC_CODEC_WMAL	vlc_fourcc.h	242;"	d
VLC_CODEC_WMAP	vlc_fourcc.h	241;"	d
VLC_CODEC_WMAS	vlc_fourcc.h	243;"	d
VLC_CODEC_WMV1	vlc_fourcc.h	46;"	d
VLC_CODEC_WMV2	vlc_fourcc.h	47;"	d
VLC_CODEC_WMV3	vlc_fourcc.h	48;"	d
VLC_CODEC_WMVA	vlc_fourcc.h	49;"	d
VLC_CODEC_WMVP	vlc_fourcc.h	50;"	d
VLC_CODEC_WMVP2	vlc_fourcc.h	51;"	d
VLC_CODEC_WNV1	vlc_fourcc.h	98;"	d
VLC_CODEC_XSUB	vlc_fourcc.h	328;"	d
VLC_CODEC_Y211	vlc_fourcc.h	201;"	d
VLC_CODEC_YUVA	vlc_fourcc.h	169;"	d
VLC_CODEC_YUVP	vlc_fourcc.h	167;"	d
VLC_CODEC_YUYV	vlc_fourcc.h	197;"	d
VLC_CODEC_YV12	vlc_fourcc.h	127;"	d
VLC_CODEC_YV9	vlc_fourcc.h	125;"	d
VLC_CODEC_YVYU	vlc_fourcc.h	199;"	d
VLC_CODEC_ZMBV	vlc_fourcc.h	87;"	d
VLC_COMMON_H	vlc_common.h	33;"	d
VLC_COMMON_MEMBERS	vlc_common.h	507;"	d
VLC_CONFIGURATION_H	vlc_configuration.h	27;"	d
VLC_CONFIG_ADD_ACTION	vlc_plugin.h	/^    VLC_CONFIG_ADD_ACTION,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_ADVANCED	vlc_plugin.h	/^    VLC_CONFIG_ADVANCED,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_CAPABILITY	vlc_plugin.h	/^    VLC_CONFIG_CAPABILITY,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_CREATE	vlc_plugin.h	/^    VLC_CONFIG_CREATE,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_DESC	vlc_plugin.h	/^    VLC_CONFIG_DESC,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_DIR	vlc_configuration.h	/^    VLC_CONFIG_DIR, \/* VLC-specific configuration directory *\/$/;"	e	enum:vlc_userdir
VLC_CONFIG_LIST	vlc_plugin.h	/^    VLC_CONFIG_LIST,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_NAME	vlc_plugin.h	/^    VLC_CONFIG_NAME=0x1000,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_OLDNAME_OBSOLETE	vlc_plugin.h	/^    VLC_CONFIG_OLDNAME_OBSOLETE,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_PERSISTENT_OBSOLETE	vlc_plugin.h	/^    VLC_CONFIG_PERSISTENT_OBSOLETE,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_PRIVATE	vlc_plugin.h	/^    VLC_CONFIG_PRIVATE,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_RANGE	vlc_plugin.h	/^    VLC_CONFIG_RANGE,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_REMOVED	vlc_plugin.h	/^    VLC_CONFIG_REMOVED,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_SAFE	vlc_plugin.h	/^    VLC_CONFIG_SAFE,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_SHORTCUT	vlc_plugin.h	/^    VLC_CONFIG_SHORTCUT,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_VALUE	vlc_plugin.h	/^    VLC_CONFIG_VALUE,$/;"	e	enum:vlc_module_properties
VLC_CONFIG_VOLATILE	vlc_plugin.h	/^    VLC_CONFIG_VOLATILE,$/;"	e	enum:vlc_module_properties
VLC_COPYRIGHT_EXPORT	vlc_plugin.h	438;"	d
VLC_COPYRIGHT_EXPORT	vlc_plugin.h	444;"	d
VLC_CPU_H	vlc_cpu.h	27;"	d
VLC_DATA_DIR	vlc_configuration.h	/^    VLC_DATA_DIR, \/* VLC-specific data directory *\/$/;"	e	enum:vlc_userdir
VLC_DEFINE_SORT_FUNCTIONS	vlc_playlist.h	/^    VLC_DEFINE_SORT_FUNCTIONS$/;"	e	enum:__anon121
VLC_DEFINE_SORT_FUNCTIONS	vlc_playlist.h	198;"	d
VLC_DEFINE_SORT_FUNCTIONS	vlc_playlist.h	221;"	d
VLC_DEMUX_H	vlc_demux.h	25;"	d
VLC_DEPRECATED	vlc_common.h	104;"	d
VLC_DEPRECATED	vlc_common.h	85;"	d
VLC_DEPRECATED	vlc_objects.h	/^VLC_API vlc_object_t *vlc_object_find_name( vlc_object_t *, const char * ) VLC_USED VLC_DEPRECATED;$/;"	v
VLC_DESKTOP_DIR	vlc_configuration.h	/^    VLC_DESKTOP_DIR=0x80,$/;"	e	enum:vlc_userdir
VLC_DIALOG_H_	vlc_dialog.h	22;"	d
VLC_DOCUMENTS_DIR	vlc_configuration.h	/^    VLC_DOCUMENTS_DIR,$/;"	e	enum:vlc_userdir
VLC_DOWNLOAD_DIR	vlc_configuration.h	/^    VLC_DOWNLOAD_DIR,$/;"	e	enum:vlc_userdir
VLC_EBADVAR	vlc_common.h	456;"	d
VLC_EEXIT	vlc_common.h	460;"	d
VLC_EEXITSUCCESS	vlc_common.h	461;"	d
VLC_EGENERIC	vlc_common.h	462;"	d
VLC_ENOITEM	vlc_common.h	458;"	d
VLC_ENOMEM	vlc_common.h	448;"	d
VLC_ENOMOD	vlc_common.h	451;"	d
VLC_ENOOBJ	vlc_common.h	453;"	d
VLC_ENOVAR	vlc_common.h	455;"	d
VLC_EPG_H	vlc_epg.h	25;"	d
VLC_ES_H	vlc_es.h	25;"	d
VLC_ES_OUT_H	vlc_es_out.h	25;"	d
VLC_ETIMEOUT	vlc_common.h	449;"	d
VLC_EVENTS_H	vlc_events.h	26;"	d
VLC_EXPORT	vlc_common.h	130;"	d
VLC_EXPORT	vlc_common.h	132;"	d
VLC_EXPORT	vlc_common.h	134;"	d
VLC_EXTENSIONS_H	vlc_extensions.h	25;"	d
VLC_EXTERN	vlc_common.h	124;"	d
VLC_EXTERN	vlc_common.h	126;"	d
VLC_FILTER_H	vlc_filter.h	26;"	d
VLC_FORMAT	vlc_common.h	105;"	d
VLC_FORMAT	vlc_common.h	88;"	d
VLC_FORMAT	vlc_common.h	90;"	d
VLC_FORMAT_ARG	vlc_common.h	106;"	d
VLC_FORMAT_ARG	vlc_common.h	92;"	d
VLC_FORWARD_DECLARE_OBJECT	vlc/libvlc_media.h	398;"	d
VLC_FOURCC	vlc_common.h	180;"	d
VLC_FOURCC	vlc_common.h	187;"	d
VLC_FOURCC_H	vlc_fourcc.h	25;"	d
VLC_FS_H	vlc_fs.h	22;"	d
VLC_GCC_VERSION	vlc_common.h	61;"	d
VLC_GCC_VERSION	vlc_common.h	64;"	d
VLC_GCRYPT_MUTEX	vlc_threads.h	/^   VLC_GCRYPT_MUTEX,$/;"	e	enum:__anon31
VLC_GC_MEMBERS	vlc_common.h	555;"	d
VLC_GL_H	vlc_opengl.h	25;"	d
VLC_HARD_MIN_SLEEP	vlc_threads.h	273;"	d
VLC_HELP_H	vlc_config_cat.h	26;"	d
VLC_HIGHLIGHT_MUTEX	vlc_threads.h	/^   VLC_HIGHLIGHT_MUTEX,$/;"	e	enum:__anon31
VLC_HOME_DIR	vlc_configuration.h	/^    VLC_HOME_DIR, \/* User's home *\/$/;"	e	enum:vlc_userdir
VLC_HTTPD_H	vlc_httpd.h	25;"	d
VLC_HTTP_H	vlc_http.h	28;"	d
VLC_IMAGE_H	vlc_image.h	25;"	d
VLC_INHIBIT_H	vlc_inhibit.h	27;"	d
VLC_INPUT_H	vlc_input.h	27;"	d
VLC_INPUT_ITEM_H	vlc_input_item.h	26;"	d
VLC_INPUT_OPTION_TRUSTED	vlc_input_item.h	/^    VLC_INPUT_OPTION_TRUSTED = 0x2,$/;"	e	enum:input_item_option_e
VLC_INPUT_OPTION_UNIQUE	vlc_input_item.h	/^    VLC_INPUT_OPTION_UNIQUE  = 0x100,$/;"	e	enum:input_item_option_e
VLC_INTF_H_	vlc_interface.h	27;"	d
VLC_INTF_STRINGS_H	vlc_intf_strings.h	25;"	d
VLC_KEYS_H	vlc_keys.h	25;"	d
VLC_KSDATAFORMAT_SUBTYPE_PCM	vlc_codecs.h	/^static const GUID VLC_KSDATAFORMAT_SUBTYPE_PCM = {0xE923AABF, 0xCB58, 0x4471, {0xA1, 0x19, 0xFF, 0xFA, 0x01, 0xE4, 0xCE, 0x62}};$/;"	v
VLC_KSDATAFORMAT_SUBTYPE_UNKNOWN	vlc_codecs.h	/^static const GUID VLC_KSDATAFORMAT_SUBTYPE_UNKNOWN = {0x00000000, 0x0000, 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};$/;"	v
VLC_LIBVLC_H	vlc/libvlc.h	39;"	d
VLC_LIBVLC_MEDIA_DISCOVERER_H	vlc/libvlc_media_discoverer.h	32;"	d
VLC_LIBVLC_MEDIA_H	vlc/libvlc_media.h	32;"	d
VLC_LIBVLC_MEDIA_LIBRARY_H	vlc/libvlc_media_library.h	32;"	d
VLC_LIBVLC_MEDIA_PLAYER_H	vlc/libvlc_media_player.h	32;"	d
VLC_LICENSE_EXPORT	vlc_plugin.h	446;"	d
VLC_LPBITMAPINFO	vlc_codecs.h	/^} VLC_BITMAPINFO, *VLC_LPBITMAPINFO;$/;"	t	typeref:struct:ATTR_PACKED
VLC_LPBITMAPINFOHEADER	vlc_codecs.h	/^} VLC_BITMAPINFOHEADER, *VLC_PBITMAPINFOHEADER, *VLC_LPBITMAPINFOHEADER;$/;"	t	typeref:struct:ATTR_PACKED
VLC_MALLOC	vlc_acl.h	/^VLC_API vlc_acl_t * ACL_Create( vlc_object_t *p_this, bool b_allow ) VLC_USED VLC_MALLOC;$/;"	v
VLC_MALLOC	vlc_acl.h	/^VLC_API vlc_acl_t * ACL_Duplicate( vlc_object_t *p_this, const vlc_acl_t *p_acl ) VLC_USED VLC_MALLOC;$/;"	v
VLC_MALLOC	vlc_common.h	107;"	d
VLC_MALLOC	vlc_common.h	94;"	d
VLC_MALLOC	vlc_configuration.h	/^VLC_API char * config_GetDataDir( vlc_object_t * ) VLC_USED VLC_MALLOC;$/;"	v
VLC_MALLOC	vlc_configuration.h	/^VLC_API char * config_GetPsz(vlc_object_t *, const char *) VLC_USED VLC_MALLOC;$/;"	v
VLC_MALLOC	vlc_configuration.h	/^VLC_API char * config_GetUserDir( vlc_userdir_t ) VLC_USED VLC_MALLOC;$/;"	v
VLC_MALLOC	vlc_configuration.h	/^VLC_API char * config_StringEscape( const char *psz_string ) VLC_USED VLC_MALLOC;$/;"	v
VLC_MALLOC	vlc_configuration.h	/^VLC_API char *config_ChainCreate( char **ppsz_name, config_chain_t **pp_cfg, const char *psz_string ) VLC_USED VLC_MALLOC;$/;"	v
VLC_MALLOC	vlc_configuration.h	/^VLC_API config_chain_t * config_ChainDuplicate( const config_chain_t * ) VLC_USED VLC_MALLOC;$/;"	v
VLC_MAX_MUTEX	vlc_threads.h	/^   VLC_MAX_MUTEX$/;"	e	enum:__anon31
VLC_MD5_H	vlc_md5.h	25;"	d
VLC_MEDIA_LIBRARY_H	vlc_media_library.h	29;"	d
VLC_MEMORY_H	vlc_memory.h	24;"	d
VLC_MESSAGES_H_	vlc_messages.h	28;"	d
VLC_METADATA_EXPORTS	vlc_plugin.h	453;"	d
VLC_META_ALBUM	vlc_meta.h	132;"	d
VLC_META_ARTIST	vlc_meta.h	129;"	d
VLC_META_ART_URL	vlc_meta.h	143;"	d
VLC_META_COPYRIGHT	vlc_meta.h	131;"	d
VLC_META_DATE	vlc_meta.h	136;"	d
VLC_META_DESCRIPTION	vlc_meta.h	134;"	d
VLC_META_ENCODED_BY	vlc_meta.h	142;"	d
VLC_META_EXPORT	vlc_plugin.h	428;"	d
VLC_META_GENRE	vlc_meta.h	130;"	d
VLC_META_H	vlc_meta.h	25;"	d
VLC_META_LANGUAGE	vlc_meta.h	139;"	d
VLC_META_NOW_PLAYING	vlc_meta.h	140;"	d
VLC_META_PUBLISHER	vlc_meta.h	141;"	d
VLC_META_RATING	vlc_meta.h	135;"	d
VLC_META_SETTING	vlc_meta.h	137;"	d
VLC_META_TITLE	vlc_meta.h	128;"	d
VLC_META_TRACKID	vlc_meta.h	144;"	d
VLC_META_TRACK_NUMBER	vlc_meta.h	133;"	d
VLC_META_TYPE_COUNT	vlc_meta.h	54;"	d
VLC_META_URL	vlc_meta.h	138;"	d
VLC_MMX	vlc_cpu.h	42;"	d
VLC_MMX	vlc_cpu.h	44;"	d
VLC_MMX	vlc_cpu.h	46;"	d
VLC_MODULE_CAPABILITY	vlc_plugin.h	/^    VLC_MODULE_CAPABILITY,$/;"	e	enum:vlc_module_properties
VLC_MODULE_CB_CLOSE	vlc_plugin.h	/^    VLC_MODULE_CB_CLOSE,$/;"	e	enum:vlc_module_properties
VLC_MODULE_CB_OPEN	vlc_plugin.h	/^    VLC_MODULE_CB_OPEN,$/;"	e	enum:vlc_module_properties
VLC_MODULE_CPU_REQUIREMENT	vlc_plugin.h	/^    VLC_MODULE_CPU_REQUIREMENT=0x100,$/;"	e	enum:vlc_module_properties
VLC_MODULE_CREATE	vlc_plugin.h	/^    VLC_MODULE_CREATE,$/;"	e	enum:vlc_module_properties
VLC_MODULE_DESCRIPTION	vlc_plugin.h	/^    VLC_MODULE_DESCRIPTION,$/;"	e	enum:vlc_module_properties
VLC_MODULE_HELP	vlc_plugin.h	/^    VLC_MODULE_HELP,$/;"	e	enum:vlc_module_properties
VLC_MODULE_NAME	vlc_plugin.h	/^    VLC_MODULE_NAME,$/;"	e	enum:vlc_module_properties
VLC_MODULE_NO_UNLOAD	vlc_plugin.h	/^    VLC_MODULE_NO_UNLOAD,$/;"	e	enum:vlc_module_properties
VLC_MODULE_SCORE	vlc_plugin.h	/^    VLC_MODULE_SCORE,$/;"	e	enum:vlc_module_properties
VLC_MODULE_SHORTCUT	vlc_plugin.h	/^    VLC_MODULE_SHORTCUT,$/;"	e	enum:vlc_module_properties
VLC_MODULE_SHORTNAME	vlc_plugin.h	/^    VLC_MODULE_SHORTNAME,$/;"	e	enum:vlc_module_properties
VLC_MODULE_TEXTDOMAIN	vlc_plugin.h	/^    VLC_MODULE_TEXTDOMAIN,$/;"	e	enum:vlc_module_properties
VLC_MOSAIC_MUTEX	vlc_threads.h	/^   VLC_MOSAIC_MUTEX,$/;"	e	enum:__anon31
VLC_MSG_DBG	vlc_messages.h	/^    VLC_MSG_DBG,    \/**< Debug *\/$/;"	e	enum:msg_item_type
VLC_MSG_ERR	vlc_messages.h	/^    VLC_MSG_ERR,    \/**< Error *\/$/;"	e	enum:msg_item_type
VLC_MSG_INFO	vlc_messages.h	/^    VLC_MSG_INFO=0, \/**< Important information *\/$/;"	e	enum:msg_item_type
VLC_MSG_QSIZE	vlc_config.h	130;"	d
VLC_MSG_WARN	vlc_messages.h	/^    VLC_MSG_WARN,   \/**< Warning *\/$/;"	e	enum:msg_item_type
VLC_MUSIC_DIR	vlc_configuration.h	/^    VLC_MUSIC_DIR,$/;"	e	enum:vlc_userdir
VLC_NETWORK_H	vlc_network.h	28;"	d
VLC_NORETURN	vlc_common.h	108;"	d
VLC_NORETURN	vlc_common.h	95;"	d
VLC_OBJECT	vlc_common.h	532;"	d
VLC_OBJECT	vlc_common.h	538;"	d
VLC_OBJECT	vlc_common.h	543;"	d
VLC_OPENGL	vlc_opengl.h	/^    VLC_OPENGL,$/;"	e	enum:__anon88
VLC_OPENGL_ES	vlc_opengl.h	/^    VLC_OPENGL_ES,$/;"	e	enum:__anon88
VLC_OPENGL_ES2	vlc_opengl.h	/^    VLC_OPENGL_ES2,$/;"	e	enum:__anon88
VLC_OSD_H	vlc_osd.h	31;"	d
VLC_PBITMAPINFOHEADER	vlc_codecs.h	/^} VLC_BITMAPINFOHEADER, *VLC_PBITMAPINFOHEADER, *VLC_LPBITMAPINFOHEADER;$/;"	t	typeref:struct:ATTR_PACKED
VLC_PICTURES_DIR	vlc_configuration.h	/^    VLC_PICTURES_DIR,$/;"	e	enum:vlc_userdir
VLC_PICTURE_FIFO_H	vlc_picture_fifo.h	25;"	d
VLC_PICTURE_H	vlc_picture.h	27;"	d
VLC_PICTURE_POOL_H	vlc_picture_pool.h	25;"	d
VLC_PLAYLIST_H_	vlc_playlist.h	25;"	d
VLC_PROBE_CONTINUE	vlc_probe.h	62;"	d
VLC_PROBE_H	vlc_probe.h	22;"	d
VLC_PROBE_STOP	vlc_probe.h	63;"	d
VLC_PUBLICSHARE_DIR	vlc_configuration.h	/^    VLC_PUBLICSHARE_DIR,$/;"	e	enum:vlc_userdir
VLC_RAND_H	vlc_rand.h	23;"	d
VLC_SD_PROBE_HELPER	vlc_services_discovery.h	171;"	d
VLC_SD_PROBE_SUBMODULE	vlc_services_discovery.h	166;"	d
VLC_SERVICES_DISCOVERY_H_	vlc_services_discovery.h	25;"	d
VLC_SOFT_MIN_SLEEP	vlc_threads.h	274;"	d
VLC_SOUT_H_	vlc_sout.h	29;"	d
VLC_SPU_H	vlc_spu.h	27;"	d
VLC_SQL_DONE	vlc_sql.h	42;"	d
VLC_SQL_H	vlc_sql.h	27;"	d
VLC_SQL_ROW	vlc_sql.h	41;"	d
VLC_SSE	vlc_cpu.h	50;"	d
VLC_SSE	vlc_cpu.h	52;"	d
VLC_SSE	vlc_cpu.h	54;"	d
VLC_STATIC_COND	vlc_threads.h	125;"	d
VLC_STATIC_COND	vlc_threads.h	160;"	d
VLC_STATIC_COND	vlc_threads.h	203;"	d
VLC_STATIC_MUTEX	vlc_threads.h	123;"	d
VLC_STATIC_MUTEX	vlc_threads.h	153;"	d
VLC_STATIC_MUTEX	vlc_threads.h	195;"	d
VLC_STATIC_RWLOCK	vlc_threads.h	127;"	d
VLC_STATIC_RWLOCK	vlc_threads.h	172;"	d
VLC_STATIC_RWLOCK	vlc_threads.h	221;"	d
VLC_STREAM_H	vlc_stream.h	25;"	d
VLC_STRINGS_H	vlc_strings.h	25;"	d
VLC_SUBPICTURE_H	vlc_subpicture.h	27;"	d
VLC_SUCCESS	vlc_common.h	447;"	d
VLC_TEMPLATES_DIR	vlc_configuration.h	/^    VLC_TEMPLATES_DIR,$/;"	e	enum:vlc_userdir
VLC_TEXT_STYLE_H	vlc_text_style.h	26;"	d
VLC_THREADS_H_	vlc_threads.h	29;"	d
VLC_THREAD_PRIORITY_AUDIO	vlc_threads.h	101;"	d
VLC_THREAD_PRIORITY_AUDIO	vlc_threads.h	109;"	d
VLC_THREAD_PRIORITY_AUDIO	vlc_threads.h	72;"	d
VLC_THREAD_PRIORITY_AUDIO	vlc_threads.h	80;"	d
VLC_THREAD_PRIORITY_AUDIO	vlc_threads.h	90;"	d
VLC_THREAD_PRIORITY_HIGHEST	vlc_threads.h	104;"	d
VLC_THREAD_PRIORITY_HIGHEST	vlc_threads.h	112;"	d
VLC_THREAD_PRIORITY_HIGHEST	vlc_threads.h	75;"	d
VLC_THREAD_PRIORITY_HIGHEST	vlc_threads.h	83;"	d
VLC_THREAD_PRIORITY_HIGHEST	vlc_threads.h	95;"	d
VLC_THREAD_PRIORITY_INPUT	vlc_threads.h	100;"	d
VLC_THREAD_PRIORITY_INPUT	vlc_threads.h	108;"	d
VLC_THREAD_PRIORITY_INPUT	vlc_threads.h	71;"	d
VLC_THREAD_PRIORITY_INPUT	vlc_threads.h	79;"	d
VLC_THREAD_PRIORITY_INPUT	vlc_threads.h	88;"	d
VLC_THREAD_PRIORITY_LOW	vlc_threads.h	107;"	d
VLC_THREAD_PRIORITY_LOW	vlc_threads.h	70;"	d
VLC_THREAD_PRIORITY_LOW	vlc_threads.h	78;"	d
VLC_THREAD_PRIORITY_LOW	vlc_threads.h	87;"	d
VLC_THREAD_PRIORITY_LOW	vlc_threads.h	99;"	d
VLC_THREAD_PRIORITY_OUTPUT	vlc_threads.h	103;"	d
VLC_THREAD_PRIORITY_OUTPUT	vlc_threads.h	111;"	d
VLC_THREAD_PRIORITY_OUTPUT	vlc_threads.h	74;"	d
VLC_THREAD_PRIORITY_OUTPUT	vlc_threads.h	82;"	d
VLC_THREAD_PRIORITY_OUTPUT	vlc_threads.h	93;"	d
VLC_THREAD_PRIORITY_VIDEO	vlc_threads.h	102;"	d
VLC_THREAD_PRIORITY_VIDEO	vlc_threads.h	110;"	d
VLC_THREAD_PRIORITY_VIDEO	vlc_threads.h	73;"	d
VLC_THREAD_PRIORITY_VIDEO	vlc_threads.h	81;"	d
VLC_THREAD_PRIORITY_VIDEO	vlc_threads.h	92;"	d
VLC_TLS_H	vlc_tls.h	23;"	d
VLC_TS_0	vlc_config.h	44;"	d
VLC_TS_INVALID	vlc_config.h	43;"	d
VLC_TWOCC	vlc_common.h	183;"	d
VLC_TWOCC	vlc_common.h	190;"	d
VLC_UNUSED	vlc_common.h	849;"	d
VLC_UPDATE_H	vlc_update.h	26;"	d
VLC_URL_H	vlc_url.h	26;"	d
VLC_USED	vlc_common.h	100;"	d
VLC_USED	vlc_common.h	109;"	d
VLC_USED	vlc_common.h	98;"	d
VLC_USED	vlc_objects.h	/^VLC_API void *vlc_object_create( vlc_object_t *, size_t ) VLC_MALLOC VLC_USED;$/;"	v
VLC_VARIABLES_H	vlc_variables.h	26;"	d
VLC_VAR_ADDCHOICE	vlc_variables.h	119;"	d
VLC_VAR_ADDRESS	vlc_variables.h	61;"	d
VLC_VAR_BOOL	vlc_variables.h	54;"	d
VLC_VAR_BOOL_TOGGLE	vlc_variables.h	/^    VLC_VAR_BOOL_TOGGLE, \/**< Invert a boolean value (param ignored) *\/$/;"	e	enum:__anon123
VLC_VAR_CHOICESCOUNT	vlc_variables.h	125;"	d
VLC_VAR_CLASS	vlc_variables.h	45;"	d
VLC_VAR_CLEARCHOICES	vlc_variables.h	121;"	d
VLC_VAR_COORDS	vlc_variables.h	62;"	d
VLC_VAR_DELCHOICE	vlc_variables.h	120;"	d
VLC_VAR_DOINHERIT	vlc_variables.h	80;"	d
VLC_VAR_FLAGS	vlc_variables.h	46;"	d
VLC_VAR_FLOAT	vlc_variables.h	59;"	d
VLC_VAR_GETCHOICES	vlc_variables.h	123;"	d
VLC_VAR_GETLIST	vlc_variables.h	124;"	d
VLC_VAR_GETMAX	vlc_variables.h	116;"	d
VLC_VAR_GETMIN	vlc_variables.h	115;"	d
VLC_VAR_GETSTEP	vlc_variables.h	117;"	d
VLC_VAR_GETTEXT	vlc_variables.h	113;"	d
VLC_VAR_HASCHOICE	vlc_variables.h	70;"	d
VLC_VAR_HASMAX	vlc_variables.h	72;"	d
VLC_VAR_HASMIN	vlc_variables.h	71;"	d
VLC_VAR_HASSTEP	vlc_variables.h	73;"	d
VLC_VAR_HOTKEY	vlc_variables.h	56;"	d
VLC_VAR_INTEGER	vlc_variables.h	55;"	d
VLC_VAR_INTEGER_ADD	vlc_variables.h	/^    VLC_VAR_INTEGER_ADD, \/**< Add parameter to an integer value *\/$/;"	e	enum:__anon123
VLC_VAR_INTEGER_NAND	vlc_variables.h	/^    VLC_VAR_INTEGER_NAND,\/**< Binary NAND over an integer bits field *\/$/;"	e	enum:__anon123
VLC_VAR_INTEGER_OR	vlc_variables.h	/^    VLC_VAR_INTEGER_OR,  \/**< Binary OR over an integer bits field *\/$/;"	e	enum:__anon123
VLC_VAR_ISCOMMAND	vlc_variables.h	75;"	d
VLC_VAR_SETDEFAULT	vlc_variables.h	122;"	d
VLC_VAR_SETISCOMMAND	vlc_variables.h	127;"	d
VLC_VAR_SETMAX	vlc_variables.h	102;"	d
VLC_VAR_SETMIN	vlc_variables.h	96;"	d
VLC_VAR_SETSTEP	vlc_variables.h	103;"	d
VLC_VAR_SETTEXT	vlc_variables.h	112;"	d
VLC_VAR_SETVALUE	vlc_variables.h	110;"	d
VLC_VAR_STRING	vlc_variables.h	57;"	d
VLC_VAR_TIME	vlc_variables.h	60;"	d
VLC_VAR_TYPE	vlc_variables.h	44;"	d
VLC_VAR_VARIABLE	vlc_variables.h	58;"	d
VLC_VAR_VOID	vlc_variables.h	53;"	d
VLC_VIDEOS_DIR	vlc_configuration.h	/^    VLC_VIDEOS_DIR,$/;"	e	enum:vlc_userdir
VLC_VIDEO_SPLITTER_H	vlc_video_splitter.h	25;"	d
VLC_VLC_H	vlc/vlc.h	29;"	d
VLC_VLM_H	vlc_vlm.h	26;"	d
VLC_VOD_H	vlc_vod.h	25;"	d
VLC_VOUT_DISPLAY_H	vlc_vout_display.h	25;"	d
VLC_VOUT_H_	vlc_vout.h	27;"	d
VLC_VOUT_OSD_H	vlc_vout_osd.h	27;"	d
VLC_VOUT_WINDOW_H	vlc_vout_window.h	26;"	d
VLC_VOUT_WRAPPER_H	vlc_vout_wrapper.h	25;"	d
VLC_XLIB_H	vlc_xlib.h	22;"	d
VLC_XLIB_MUTEX	vlc_threads.h	/^   VLC_XLIB_MUTEX,$/;"	e	enum:__anon31
VLC_XML_H	vlc_xml.h	24;"	d
VLM_ADD_MEDIA	vlc_vlm.h	/^    VLM_ADD_MEDIA,                      \/* arg1=vlm_media_t* arg2=int64_t *p_id         res=can fail *\/$/;"	e	enum:vlm_query_e
VLM_CHANGE_MEDIA	vlc_vlm.h	/^    VLM_CHANGE_MEDIA,                   \/* arg1=vlm_media_t*                            res=can fail *\/$/;"	e	enum:vlm_query_e
VLM_CLEAR_MEDIAS	vlc_vlm.h	/^    VLM_CLEAR_MEDIAS,                   \/* no arg *\/$/;"	e	enum:vlm_query_e
VLM_CLEAR_MEDIA_INSTANCES	vlc_vlm.h	/^    VLM_CLEAR_MEDIA_INSTANCES,          \/* arg1=int64_t id *\/$/;"	e	enum:vlm_query_e
VLM_CLEAR_SCHEDULES	vlc_vlm.h	/^    VLM_CLEAR_SCHEDULES,                \/* no arg *\/$/;"	e	enum:vlm_query_e
VLM_DEL_MEDIA	vlc_vlm.h	/^    VLM_DEL_MEDIA,                      \/* arg1=int64_t id *\/$/;"	e	enum:vlm_query_e
VLM_EVENT_MEDIA_ADDED	vlc_vlm.h	/^    VLM_EVENT_MEDIA_ADDED   = 0x100,$/;"	e	enum:vlm_event_type_e
VLM_EVENT_MEDIA_CHANGED	vlc_vlm.h	/^    VLM_EVENT_MEDIA_CHANGED,$/;"	e	enum:vlm_event_type_e
VLM_EVENT_MEDIA_INSTANCE_STARTED	vlc_vlm.h	/^    VLM_EVENT_MEDIA_INSTANCE_STARTED    = 0x200,$/;"	e	enum:vlm_event_type_e
VLM_EVENT_MEDIA_INSTANCE_STATE	vlc_vlm.h	/^    VLM_EVENT_MEDIA_INSTANCE_STATE,$/;"	e	enum:vlm_event_type_e
VLM_EVENT_MEDIA_INSTANCE_STOPPED	vlc_vlm.h	/^    VLM_EVENT_MEDIA_INSTANCE_STOPPED,$/;"	e	enum:vlm_event_type_e
VLM_EVENT_MEDIA_REMOVED	vlc_vlm.h	/^    VLM_EVENT_MEDIA_REMOVED,$/;"	e	enum:vlm_event_type_e
VLM_GET_MEDIA	vlc_vlm.h	/^    VLM_GET_MEDIA,                      \/* arg1=int64_t id arg2=vlm_media_t **  *\/$/;"	e	enum:vlm_query_e
VLM_GET_MEDIAS	vlc_vlm.h	/^    VLM_GET_MEDIAS,                     \/* arg1=vlm_media_t ***, int *pi_media      *\/$/;"	e	enum:vlm_query_e
VLM_GET_MEDIA_ID	vlc_vlm.h	/^    VLM_GET_MEDIA_ID,                   \/* arg1=const char *psz_name arg2=int64_t*  *\/$/;"	e	enum:vlm_query_e
VLM_GET_MEDIA_INSTANCES	vlc_vlm.h	/^    VLM_GET_MEDIA_INSTANCES,            \/* arg1=int64_t id arg2=vlm_media_instance_t *** arg3=int *pi_instance *\/$/;"	e	enum:vlm_query_e
VLM_GET_MEDIA_INSTANCE_POSITION	vlc_vlm.h	/^    VLM_GET_MEDIA_INSTANCE_POSITION,    \/* arg1=int64_t id, arg2=const char *psz_instance_name arg3=double *   *\/$/;"	e	enum:vlm_query_e
VLM_GET_MEDIA_INSTANCE_TIME	vlc_vlm.h	/^    VLM_GET_MEDIA_INSTANCE_TIME,        \/* arg1=int64_t id, arg2=const char *psz_instance_name arg3=int64_t *   *\/$/;"	e	enum:vlm_query_e
VLM_PAUSE_MEDIA_INSTANCE	vlc_vlm.h	/^    VLM_PAUSE_MEDIA_INSTANCE,           \/* arg1=int64_t id, arg2=const char *psz_instance_name      res=can fail *\/$/;"	e	enum:vlm_query_e
VLM_SET_MEDIA_INSTANCE_POSITION	vlc_vlm.h	/^    VLM_SET_MEDIA_INSTANCE_POSITION,    \/* arg1=int64_t id, arg2=const char *psz_instance_name arg3=double     *\/$/;"	e	enum:vlm_query_e
VLM_SET_MEDIA_INSTANCE_TIME	vlc_vlm.h	/^    VLM_SET_MEDIA_INSTANCE_TIME,        \/* arg1=int64_t id, arg2=const char *psz_instance_name arg3=int64_t     *\/$/;"	e	enum:vlm_query_e
VLM_START_MEDIA_BROADCAST_INSTANCE	vlc_vlm.h	/^    VLM_START_MEDIA_BROADCAST_INSTANCE, \/* arg1=int64_t id, arg2=const char *psz_instance_name, int i_input_index  res=can fail *\/$/;"	e	enum:vlm_query_e
VLM_START_MEDIA_VOD_INSTANCE	vlc_vlm.h	/^    VLM_START_MEDIA_VOD_INSTANCE,       \/* arg1=int64_t id, arg2=const char *psz_instance_name, int i_input_index char *psz_vod_output res=can fail *\/$/;"	e	enum:vlm_query_e
VLM_STOP_MEDIA_INSTANCE	vlc_vlm.h	/^    VLM_STOP_MEDIA_INSTANCE,            \/* arg1=int64_t id, arg2=const char *psz_instance_name      res=can fail *\/$/;"	e	enum:vlm_query_e
VOD_MEDIA_FORWARD	vlc_vod.h	/^    VOD_MEDIA_FORWARD,      \/* arg1= double         res=    *\/$/;"	e	enum:vod_query_e
VOD_MEDIA_PAUSE	vlc_vod.h	/^    VOD_MEDIA_PAUSE,        \/* arg1= int64_t *      res=    *\/$/;"	e	enum:vod_query_e
VOD_MEDIA_PLAY	vlc_vod.h	/^    VOD_MEDIA_PLAY,         \/* arg1= char *, arg2= int64_t *, res=    *\/$/;"	e	enum:vod_query_e
VOD_MEDIA_REWIND	vlc_vod.h	/^    VOD_MEDIA_REWIND,       \/* arg1= double         res=    *\/$/;"	e	enum:vod_query_e
VOD_MEDIA_SEEK	vlc_vod.h	/^    VOD_MEDIA_SEEK,         \/* arg1= double         res=    *\/$/;"	e	enum:vod_query_e
VOD_MEDIA_STOP	vlc_vod.h	/^    VOD_MEDIA_STOP,         \/* arg1=                res=can fail    *\/$/;"	e	enum:vod_query_e
VOUT_ALIGN_BOTTOM	vlc_vout.h	85;"	d
VOUT_ALIGN_HMASK	vlc_vout.h	83;"	d
VOUT_ALIGN_LEFT	vlc_vout.h	81;"	d
VOUT_ALIGN_RIGHT	vlc_vout.h	82;"	d
VOUT_ALIGN_TOP	vlc_vout.h	84;"	d
VOUT_ALIGN_VMASK	vlc_vout.h	86;"	d
VOUT_ASPECT_FACTOR	vlc_config.h	98;"	d
VOUT_DISPLAY_ALIGN_BOTTOM	vlc_vout_display.h	/^    VOUT_DISPLAY_ALIGN_BOTTOM,$/;"	e	enum:__anon64
VOUT_DISPLAY_ALIGN_CENTER	vlc_vout_display.h	/^    VOUT_DISPLAY_ALIGN_CENTER,$/;"	e	enum:__anon64
VOUT_DISPLAY_ALIGN_LEFT	vlc_vout_display.h	/^    VOUT_DISPLAY_ALIGN_LEFT,$/;"	e	enum:__anon64
VOUT_DISPLAY_ALIGN_RIGHT	vlc_vout_display.h	/^    VOUT_DISPLAY_ALIGN_RIGHT,$/;"	e	enum:__anon64
VOUT_DISPLAY_ALIGN_TOP	vlc_vout_display.h	/^    VOUT_DISPLAY_ALIGN_TOP,$/;"	e	enum:__anon64
VOUT_DISPLAY_CHANGE_DISPLAY_FILLED	vlc_vout_display.h	/^    VOUT_DISPLAY_CHANGE_DISPLAY_FILLED, \/* const vout_display_cfg_t *p_cfg *\/$/;"	e	enum:__anon72
VOUT_DISPLAY_CHANGE_DISPLAY_SIZE	vlc_vout_display.h	/^    VOUT_DISPLAY_CHANGE_DISPLAY_SIZE,   \/* const vout_display_cfg_t *p_cfg, int is_forced *\/$/;"	e	enum:__anon72
VOUT_DISPLAY_CHANGE_FULLSCREEN	vlc_vout_display.h	/^    VOUT_DISPLAY_CHANGE_FULLSCREEN,     \/* const vout_display_cfg_t *p_cfg *\/$/;"	e	enum:__anon72
VOUT_DISPLAY_CHANGE_SOURCE_ASPECT	vlc_vout_display.h	/^    VOUT_DISPLAY_CHANGE_SOURCE_ASPECT, \/* const video_format_t *p_source *\/$/;"	e	enum:__anon72
VOUT_DISPLAY_CHANGE_SOURCE_CROP	vlc_vout_display.h	/^    VOUT_DISPLAY_CHANGE_SOURCE_CROP,   \/* const video_format_t *p_source *\/$/;"	e	enum:__anon72
VOUT_DISPLAY_CHANGE_WINDOW_STATE	vlc_vout_display.h	/^    VOUT_DISPLAY_CHANGE_WINDOW_STATE,         \/* unsigned state *\/$/;"	e	enum:__anon72
VOUT_DISPLAY_CHANGE_ZOOM	vlc_vout_display.h	/^    VOUT_DISPLAY_CHANGE_ZOOM, \/* const vout_display_cfg_t *p_cfg *\/$/;"	e	enum:__anon72
VOUT_DISPLAY_EVENT_CLOSE	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_CLOSE,$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_DISPLAY_SIZE	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_DISPLAY_SIZE,        \/* The display size need to change : int i_width, int i_height, bool is_fullscreen *\/$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_FULLSCREEN	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_FULLSCREEN,$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_KEY	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_KEY,$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_MOUSE_DOUBLE_CLICK	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_MOUSE_DOUBLE_CLICK,$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_MOUSE_MOVED	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_MOUSE_MOVED,$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_MOUSE_PRESSED	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_MOUSE_PRESSED,$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_MOUSE_RELEASED	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_MOUSE_RELEASED,$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_MOUSE_STATE	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_MOUSE_STATE,$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_PICTURES_INVALID	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_PICTURES_INVALID,    \/* The buffer are now invalid and need to be changed *\/$/;"	e	enum:__anon73
VOUT_DISPLAY_EVENT_WINDOW_STATE	vlc_vout_display.h	/^    VOUT_DISPLAY_EVENT_WINDOW_STATE,$/;"	e	enum:__anon73
VOUT_DISPLAY_GET_OPENGL	vlc_vout_display.h	/^    VOUT_DISPLAY_GET_OPENGL,           \/* vlc_gl_t ** *\/$/;"	e	enum:__anon72
VOUT_DISPLAY_HIDE_MOUSE	vlc_vout_display.h	/^    VOUT_DISPLAY_HIDE_MOUSE,$/;"	e	enum:__anon72
VOUT_DISPLAY_RESET_PICTURES	vlc_vout_display.h	/^    VOUT_DISPLAY_RESET_PICTURES,$/;"	e	enum:__anon72
VOUT_HELP	vlc_config_cat.h	76;"	d
VOUT_MAX_PLANES	vlc_config.h	105;"	d
VOUT_MAX_WIDTH	vlc_config.h	102;"	d
VOUT_OUTMEM_SLEEP	vlc_config.h	115;"	d
VOUT_TITLE	vlc_config.h	118;"	d
VOUT_WINDOW_SET_FULLSCREEN	vlc_vout_window.h	/^    VOUT_WINDOW_SET_FULLSCREEN, \/* int b_fullscreen *\/$/;"	e	enum:__anon126
VOUT_WINDOW_SET_SIZE	vlc_vout_window.h	/^    VOUT_WINDOW_SET_SIZE,   \/* unsigned i_width, unsigned i_height *\/$/;"	e	enum:__anon126
VOUT_WINDOW_SET_STATE	vlc_vout_window.h	/^    VOUT_WINDOW_SET_STATE, \/* unsigned state *\/$/;"	e	enum:__anon126
VOUT_WINDOW_STACK_MASK	vlc_vout_display.h	/^    VOUT_WINDOW_STACK_MASK=3,$/;"	e	enum:__anon65
VOUT_WINDOW_STATE_ABOVE	vlc_vout_display.h	/^    VOUT_WINDOW_STATE_ABOVE=1,$/;"	e	enum:__anon65
VOUT_WINDOW_STATE_BELOW	vlc_vout_display.h	/^    VOUT_WINDOW_STATE_BELOW=2,$/;"	e	enum:__anon65
VOUT_WINDOW_STATE_NORMAL	vlc_vout_display.h	/^    VOUT_WINDOW_STATE_NORMAL=0,$/;"	e	enum:__anon65
VOUT_WINDOW_TYPE_HWND	vlc_vout_window.h	/^    VOUT_WINDOW_TYPE_HWND,$/;"	e	enum:__anon125
VOUT_WINDOW_TYPE_NATIVE	vlc_vout_window.h	50;"	d
VOUT_WINDOW_TYPE_NATIVE	vlc_vout_window.h	52;"	d
VOUT_WINDOW_TYPE_NSOBJECT	vlc_vout_window.h	/^    VOUT_WINDOW_TYPE_NSOBJECT,$/;"	e	enum:__anon125
VOUT_WINDOW_TYPE_XID	vlc_vout_window.h	/^    VOUT_WINDOW_TYPE_XID,$/;"	e	enum:__anon125
V_PITCH	vlc_picture.h	328;"	d
V_PIXELS	vlc_picture.h	327;"	d
V_PLANE	vlc_picture.h	/^    V_PLANE = 2,$/;"	e	enum:__anon133
WAVEFORMATEX	vlc_codecs.h	/^} WAVEFORMATEX, *PWAVEFORMATEX, *NPWAVEFORMATEX, *LPWAVEFORMATEX;$/;"	t	typeref:struct:_WAVEFORMATEX
WAVEFORMATEXTENSIBLE	vlc_codecs.h	/^} WAVEFORMATEXTENSIBLE, *PWAVEFORMATEXTENSIBLE;$/;"	t	typeref:struct:_WAVEFORMATEXTENSIBLE
WAVEHEADER	vlc_codecs.h	/^} WAVEHEADER;$/;"	t	typeref:struct:_WAVEHEADER
WAVE_FORMAT_A52	vlc_codecs.h	244;"	d
WAVE_FORMAT_AAC	vlc_codecs.h	233;"	d
WAVE_FORMAT_AAC_2	vlc_codecs.h	241;"	d
WAVE_FORMAT_AAC_LATM	vlc_codecs.h	242;"	d
WAVE_FORMAT_ADPCM	vlc_codecs.h	216;"	d
WAVE_FORMAT_ALAW	vlc_codecs.h	218;"	d
WAVE_FORMAT_AMR_NB	vlc_codecs.h	229;"	d
WAVE_FORMAT_AMR_WB	vlc_codecs.h	230;"	d
WAVE_FORMAT_DIVIO_AAC	vlc_codecs.h	247;"	d
WAVE_FORMAT_DK3	vlc_codecs.h	250;"	d
WAVE_FORMAT_DK4	vlc_codecs.h	251;"	d
WAVE_FORMAT_DOLBY_AC3_SPDIF	vlc_codecs.h	231;"	d
WAVE_FORMAT_DTS	vlc_codecs.h	245;"	d
WAVE_FORMAT_DTS_MS	vlc_codecs.h	220;"	d
WAVE_FORMAT_EXTENSIBLE	vlc_codecs.h	274;"	d
WAVE_FORMAT_FFMPEG_AAC	vlc_codecs.h	246;"	d
WAVE_FORMAT_G726	vlc_codecs.h	226;"	d
WAVE_FORMAT_GSM610	vlc_codecs.h	224;"	d
WAVE_FORMAT_IEEE_FLOAT	vlc_codecs.h	217;"	d
WAVE_FORMAT_IMA_ADPCM	vlc_codecs.h	222;"	d
WAVE_FORMAT_MPEG	vlc_codecs.h	227;"	d
WAVE_FORMAT_MPEGLAYER3	vlc_codecs.h	228;"	d
WAVE_FORMAT_MSNAUDIO	vlc_codecs.h	225;"	d
WAVE_FORMAT_MULAW	vlc_codecs.h	219;"	d
WAVE_FORMAT_PCM	vlc_codecs.h	215;"	d
WAVE_FORMAT_SIPRO	vlc_codecs.h	234;"	d
WAVE_FORMAT_SPEEX	vlc_codecs.h	271;"	d
WAVE_FORMAT_TRUESPEECH	vlc_codecs.h	223;"	d
WAVE_FORMAT_UNKNOWN	vlc_codecs.h	214;"	d
WAVE_FORMAT_VORBIS	vlc_codecs.h	256;"	d
WAVE_FORMAT_VORB_1	vlc_codecs.h	264;"	d
WAVE_FORMAT_VORB_1PLUS	vlc_codecs.h	267;"	d
WAVE_FORMAT_VORB_2	vlc_codecs.h	265;"	d
WAVE_FORMAT_VORB_2PLUS	vlc_codecs.h	268;"	d
WAVE_FORMAT_VORB_3	vlc_codecs.h	266;"	d
WAVE_FORMAT_VORB_3PLUS	vlc_codecs.h	269;"	d
WAVE_FORMAT_WMA1	vlc_codecs.h	236;"	d
WAVE_FORMAT_WMA2	vlc_codecs.h	237;"	d
WAVE_FORMAT_WMAL	vlc_codecs.h	239;"	d
WAVE_FORMAT_WMAP	vlc_codecs.h	238;"	d
WAVE_FORMAT_WMAS	vlc_codecs.h	221;"	d
WAVE_SPEAKER_BACK_CENTER	vlc_codecs.h	302;"	d
WAVE_SPEAKER_BACK_LEFT	vlc_codecs.h	298;"	d
WAVE_SPEAKER_BACK_RIGHT	vlc_codecs.h	299;"	d
WAVE_SPEAKER_FRONT_CENTER	vlc_codecs.h	296;"	d
WAVE_SPEAKER_FRONT_LEFT	vlc_codecs.h	294;"	d
WAVE_SPEAKER_FRONT_LEFT_OF_CENTER	vlc_codecs.h	300;"	d
WAVE_SPEAKER_FRONT_RIGHT	vlc_codecs.h	295;"	d
WAVE_SPEAKER_FRONT_RIGHT_OF_CENTER	vlc_codecs.h	301;"	d
WAVE_SPEAKER_LOW_FREQUENCY	vlc_codecs.h	297;"	d
WAVE_SPEAKER_RESERVED	vlc_codecs.h	312;"	d
WAVE_SPEAKER_SIDE_LEFT	vlc_codecs.h	303;"	d
WAVE_SPEAKER_SIDE_RIGHT	vlc_codecs.h	304;"	d
WAVE_SPEAKER_TOP_BACK_CENTER	vlc_codecs.h	310;"	d
WAVE_SPEAKER_TOP_BACK_LEFT	vlc_codecs.h	309;"	d
WAVE_SPEAKER_TOP_BACK_RIGHT	vlc_codecs.h	311;"	d
WAVE_SPEAKER_TOP_CENTER	vlc_codecs.h	305;"	d
WAVE_SPEAKER_TOP_FRONT_CENTER	vlc_codecs.h	307;"	d
WAVE_SPEAKER_TOP_FRONT_LEFT	vlc_codecs.h	306;"	d
WAVE_SPEAKER_TOP_FRONT_RIGHT	vlc_codecs.h	308;"	d
WIN32_LEAN_AND_MEAN	vlc_common.h	479;"	d
XML_READER_ENDELEM	vlc_xml.h	/^    XML_READER_ENDELEM,$/;"	e	enum:__anon138
XML_READER_NONE	vlc_xml.h	/^    XML_READER_NONE=0,$/;"	e	enum:__anon138
XML_READER_STARTELEM	vlc_xml.h	/^    XML_READER_STARTELEM,$/;"	e	enum:__anon138
XML_READER_TEXT	vlc_xml.h	/^    XML_READER_TEXT,$/;"	e	enum:__anon138
Y_PITCH	vlc_picture.h	324;"	d
Y_PIXELS	vlc_picture.h	323;"	d
Y_PLANE	vlc_picture.h	/^    Y_PLANE = 0,$/;"	e	enum:__anon133
_	vlc_fixups.h	240;"	d
_APPLE_C_SOURCE	vlc_threads.h	49;"	d
_ARRAY_ALLOC	vlc_arrays.h	194;"	d
_ARRAY_GROW1	vlc_arrays.h	201;"	d
_ARRAY_SHRINK	vlc_arrays.h	251;"	d
_GUID	vlc_codecs.h	/^typedef struct _GUID$/;"	s
_KSDATAFORMAT_SUBTYPE_PCM_	vlc_codecs.h	282;"	d
_KSDATAFORMAT_SUBTYPE_UNKNOWN_	vlc_codecs.h	288;"	d
_NO_OLDNAMES	vlc_network.h	37;"	d
_OFF_T_	vlc_common.h	869;"	d
_OFF_T_DEFINED	vlc_common.h	881;"	d
_RECT32_	vlc_codecs.h	137;"	d
_REFERENCE_TIME_	vlc_codecs.h	146;"	d
_RGBQUAD_	vlc_codecs.h	165;"	d
_TRUECOLORINFO_	vlc_codecs.h	177;"	d
_VIDEOINFOHEADER_	vlc_codecs.h	151;"	d
_VIDEOINFO_	vlc_codecs.h	187;"	d
_VLC_BITMAPINFOHEADER_	vlc_codecs.h	110;"	d
_VLC_MOUSE_H	vlc_mouse.h	25;"	d
_VOUT_TITLE	vlc_config_cat.h	75;"	d
_WAVEFORMATEX	vlc_codecs.h	/^_WAVEFORMATEX {$/;"	s
_WAVEFORMATEXTENSIBLE	vlc_codecs.h	/^_WAVEFORMATEXTENSIBLE {$/;"	s
_WAVEFORMATEXTENSIBLE_	vlc_codecs.h	73;"	d
_WAVEFORMATEX_	vlc_codecs.h	58;"	d
_WAVEHEADER	vlc_codecs.h	/^_WAVEHEADER {$/;"	s
_WAVEHEADER_	vlc_codecs.h	89;"	d
__IApplicationAssociationRegistrationUI_INTERFACE_DEFINED__	vlc_windows_interfaces.h	229;"	d
__ITaskbarList3_INTERFACE_DEFINED__	vlc_windows_interfaces.h	42;"	d
__MAX	vlc_common.h	578;"	d
__MIN	vlc_common.h	581;"	d
__VLC_MTIME_H	vlc_mtime.h	33;"	d
__VLC_SYMBOL	vlc_plugin.h	130;"	d
__VLC_SYMBOL	vlc_plugin.h	132;"	d
__attribute__	vlc_common.h	856;"	d
__extension_GetBool	vlc_extensions.h	/^static inline bool __extension_GetBool( extensions_manager_t *p_mgr,$/;"	f
__ml_Control	vlc_media_library.h	/^static inline int __ml_Control( media_library_t *p_media_library,$/;"	f
__ml_Find	vlc_media_library.h	/^static inline int __ml_Find( media_library_t *p_media_library,$/;"	f
__ml_GetInt	vlc_media_library.h	/^static inline int __ml_GetInt( media_library_t *p_media_library, ... )$/;"	f
__ml_GetPsz	vlc_media_library.h	/^static inline char* __ml_GetPsz( media_library_t *p_media_library, ... )$/;"	f
__ml_GetValue	vlc_media_library.h	/^static inline int __ml_GetValue( media_library_t *p_media_library,$/;"	f
__pl_CurrentInput	vlc_playlist.h	/^static  inline input_thread_t * __pl_CurrentInput( vlc_object_t * p_this )$/;"	f
__vlc_dictionary_insert	vlc_arrays.h	/^__vlc_dictionary_insert( vlc_dictionary_t * p_dict, const char * psz_key,$/;"	f
_off_t	vlc_common.h	/^            typedef long long _off_t;$/;"	t
access_Control	vlc_access.h	/^static inline int access_Control( access_t *p_access, int i_query, ... )$/;"	f
access_InitFields	vlc_access.h	/^static inline void access_InitFields( access_t *p_a )$/;"	f
access_out_query_e	vlc_sout.h	/^enum access_out_query_e$/;"	g
access_query_e	vlc_access.h	/^enum access_query_e$/;"	g
access_sys_t	vlc_common.h	/^typedef struct access_sys_t access_sys_t;$/;"	t	typeref:struct:access_sys_t
access_t	vlc_access.h	/^struct access_t$/;"	s
access_t	vlc_common.h	/^typedef struct access_t access_t;$/;"	t	typeref:struct:access_t
access_vaControl	vlc_access.h	/^static inline int access_vaControl( access_t *p_access, int i_query, va_list args )$/;"	f
add_CA	vlc_tls.h	/^    int (*add_CA) (struct vlc_tls_creds *, const char *path);$/;"	m	struct:vlc_tls_creds
add_CRL	vlc_tls.h	/^    int (*add_CRL) (struct vlc_tls_creds *, const char *path);$/;"	m	struct:vlc_tls_creds
add_bool	vlc_plugin.h	364;"	d
add_category_hint	vlc_plugin.h	282;"	d
add_directory	vlc_plugin.h	310;"	d
add_float	vlc_plugin.h	356;"	d
add_float_with_range	vlc_plugin.h	360;"	d
add_font	vlc_plugin.h	314;"	d
add_int_inner	vlc_plugin.h	266;"	d
add_integer	vlc_plugin.h	340;"	d
add_integer_with_range	vlc_plugin.h	352;"	d
add_key	vlc_plugin.h	347;"	d
add_loadfile	vlc_plugin.h	302;"	d
add_module	vlc_plugin.h	318;"	d
add_module_cat	vlc_plugin.h	329;"	d
add_module_list	vlc_plugin.h	323;"	d
add_module_list_cat	vlc_plugin.h	334;"	d
add_obsolete_bool	vlc_plugin.h	374;"	d
add_obsolete_float	vlc_plugin.h	380;"	d
add_obsolete_inner	vlc_plugin.h	369;"	d
add_obsolete_integer	vlc_plugin.h	377;"	d
add_obsolete_string	vlc_plugin.h	383;"	d
add_password	vlc_plugin.h	298;"	d
add_rgb	vlc_plugin.h	343;"	d
add_savefile	vlc_plugin.h	306;"	d
add_shortcut	vlc_plugin.h	195;"	d
add_string	vlc_plugin.h	294;"	d
add_string_inner	vlc_plugin.h	262;"	d
add_subcategory_hint	vlc_plugin.h	285;"	d
add_submodule	vlc_plugin.h	191;"	d
add_type_inner	vlc_plugin.h	246;"	d
add_typeadv_inner	vlc_plugin.h	254;"	d
add_typedesc_inner	vlc_plugin.h	249;"	d
add_typename_inner	vlc_plugin.h	258;"	d
add_usage_hint	vlc_plugin.h	291;"	d
addrinfo	vlc_network.h	/^struct addrinfo$/;"	s
ai_addr	vlc_network.h	/^    struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	vlc_network.h	/^    size_t ai_addrlen;$/;"	m	struct:addrinfo
ai_canonname	vlc_network.h	/^    char *ai_canonname;$/;"	m	struct:addrinfo
ai_family	vlc_network.h	/^    int ai_family;$/;"	m	struct:addrinfo
ai_flags	vlc_network.h	/^    int ai_flags;$/;"	m	struct:addrinfo
ai_next	vlc_network.h	/^    struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	vlc_network.h	/^    int ai_protocol;$/;"	m	struct:addrinfo
ai_socktype	vlc_network.h	/^    int ai_socktype;$/;"	m	struct:addrinfo
align	vlc_vout_display.h	/^    } align;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon69
all_items	vlc_playlist.h	/^    playlist_item_array_t all_items; \/**< Array of items and nodes *\/$/;"	m	struct:playlist_t
alloca	vlc_common.h	898;"	d
answer	vlc_dialog.h	/^    int answer;$/;"	m	struct:dialog_question_t
aout_BufferFree	vlc_aout.h	162;"	d
aout_EnableFilter	vlc_aout_intf.h	45;"	d
aout_FormatNbChannels	vlc_aout.h	/^static inline unsigned aout_FormatNbChannels(const audio_sample_format_t *fmt)$/;"	f
aout_FormatPrint	vlc_aout.h	253;"	d
aout_ToggleMute	vlc_aout_intf.h	40;"	d
aout_VolumeDown	vlc_aout_intf.h	38;"	d
aout_VolumeGet	vlc_aout_intf.h	33;"	d
aout_VolumeSet	vlc_aout_intf.h	35;"	d
aout_VolumeUp	vlc_aout_intf.h	37;"	d
aout_buffer_t	vlc_common.h	/^typedef struct block_t aout_buffer_t;$/;"	t	typeref:struct:block_t
aout_fifo_t	vlc_aout.h	/^struct aout_fifo_t$/;"	s
aout_fifo_t	vlc_common.h	/^typedef struct aout_fifo_t aout_fifo_t;$/;"	t	typeref:struct:aout_fifo_t
aout_input_t	vlc_common.h	/^typedef struct aout_input_t aout_input_t;$/;"	t	typeref:struct:aout_input_t
aout_packet_t	vlc_aout.h	/^} aout_packet_t;$/;"	t	typeref:struct:__anon136
aout_sys_t	vlc_common.h	/^typedef struct aout_sys_t aout_sys_t;$/;"	t	typeref:struct:aout_sys_t
aout_volume_cb	vlc_aout.h	/^typedef int (*aout_volume_cb) (audio_output_t *, float, bool);$/;"	t
art_finder_t	vlc_art_finder.h	/^typedef struct art_finder_t$/;"	s
art_finder_t	vlc_art_finder.h	/^} art_finder_t;$/;"	t	typeref:struct:art_finder_t
attachments	vlc_demux.h	/^    input_attachment_t **attachments;    \/**< array of attachments *\/$/;"	m	struct:demux_meta_t
audio	vlc/libvlc_media.h	/^        } audio;$/;"	m	union:libvlc_media_track_info_t::__anon38	typeref:struct:libvlc_media_track_info_t::__anon38::__anon39
audio	vlc_es.h	/^    audio_format_t  audio;    \/**< description of audio format *\/$/;"	m	struct:es_format_t
audio	vlc_filter.h	/^        } audio;$/;"	m	union:filter_t::__anon12	typeref:struct:filter_t::__anon12::__anon14
audio_format_t	vlc_common.h	/^typedef struct audio_format_t audio_format_t;$/;"	t	typeref:struct:audio_format_t
audio_format_t	vlc_es.h	/^struct audio_format_t$/;"	s
audio_mixer	vlc_aout_mixer.h	/^struct audio_mixer$/;"	s
audio_mixer_t	vlc_aout_mixer.h	/^typedef struct audio_mixer audio_mixer_t;$/;"	t	typeref:struct:audio_mixer
audio_output	vlc_aout.h	/^struct audio_output$/;"	s
audio_output_t	vlc_common.h	/^typedef struct audio_output audio_output_t;$/;"	t	typeref:struct:audio_output
audio_replay_gain	vlc_es.h	/^    audio_replay_gain_t audio_replay_gain; \/*< audio replay gain information *\/$/;"	m	struct:es_format_t
audio_replay_gain_t	vlc_es.h	/^} audio_replay_gain_t;$/;"	t	typeref:struct:__anon32
audio_sample_format_t	vlc_common.h	/^typedef audio_format_t audio_sample_format_t;$/;"	t
audio_volume_t	vlc_common.h	/^typedef uint16_t            audio_volume_t;$/;"	t
b_absolute	vlc_subpicture.h	/^    bool         b_absolute;                       \/**< position is absolute *\/$/;"	m	struct:subpicture_t
b_add_stream_any_time	vlc_sout.h	/^    bool  b_add_stream_any_time;$/;"	m	struct:sout_mux_t
b_advanced	vlc_configuration.h	/^    unsigned    b_advanced:1;        \/* Flag to indicate an advanced option *\/$/;"	m	struct:module_config_t
b_allow_fmt_out_change	vlc_filter.h	/^    bool                b_allow_fmt_out_change;$/;"	m	struct:filter_t
b_bool	vlc_common.h	/^    bool            b_bool;$/;"	m	union:__anon93
b_cancelled	vlc_interface.h	/^    bool      b_cancelled;        \/\/\/< was the dialogue cancelled ?$/;"	m	struct:interaction_dialog_t
b_checked	vlc_extensions.h	/^    bool b_checked;               \/\/\/< Is this entry checked$/;"	m	struct:extension_widget_t
b_dead	vlc_input.h	/^    bool b_dead;$/;"	m	struct:input_thread_t
b_dirty	vlc_configuration.h	/^    unsigned    b_dirty:1;        \/* Dirty flag to indicate a config change *\/$/;"	m	struct:module_config_t
b_double_click	vlc_mouse.h	/^    bool b_double_click;$/;"	m	struct:__anon135
b_enabled	vlc_vlm.h	/^    bool  b_enabled;    \/*< vlm_media_t is enabled *\/$/;"	m	struct:__anon139
b_eof	vlc_access.h	/^        bool         b_eof;     \/* idem *\/$/;"	m	struct:access_t::__anon145
b_eof	vlc_input.h	/^    bool b_eof;$/;"	m	struct:input_thread_t
b_ephemer	vlc_subpicture.h	/^    bool            b_ephemer;    \/**< If this flag is set to true the subtitle$/;"	m	struct:subpicture_t
b_error	vlc_codec.h	/^    bool                b_error;$/;"	m	struct:decoder_t
b_error	vlc_input.h	/^    bool b_error;$/;"	m	struct:input_thread_t
b_error	vlc_stream.h	/^    bool        b_error;$/;"	m	struct:stream_t
b_error_when_reading	vlc_input_item.h	/^    bool        b_error_when_reading;\/**< Error When Reading *\/$/;"	m	struct:input_item_t
b_fade	vlc_subpicture.h	/^    bool            b_fade;                               \/**< enable fading *\/$/;"	m	struct:subpicture_t
b_fixed_name	vlc_input_item.h	/^    bool        b_fixed_name;        \/**< Can the interface change the name ?*\/$/;"	m	struct:input_item_t
b_force	vlc_picture.h	/^    bool            b_force;$/;"	m	struct:picture_t
b_hide	vlc_extensions.h	/^    bool b_hide;                  \/\/\/< Hide this widget (make it invisible)$/;"	m	struct:extension_widget_t
b_hide	vlc_extensions.h	/^    bool b_hide;                 \/\/\/< Hide this dialog (!b_hide shows)$/;"	m	struct:extension_dialog_t
b_internal	vlc_configuration.h	/^    unsigned    b_internal:1; \/* Flag to indicate option is not to be shown *\/$/;"	m	struct:module_config_t
b_kill	vlc_extensions.h	/^    bool b_kill;                  \/\/\/< Destroy this widget$/;"	m	struct:extension_widget_t
b_kill	vlc_extensions.h	/^    bool b_kill;                 \/\/\/< Kill this dialog$/;"	m	struct:extension_dialog_t
b_loop	vlc_vlm.h	/^        bool b_loop;    \/*< this vlc_media_t broadcast item should loop *\/$/;"	m	struct:__anon139::__anon140
b_menu	vlc_input.h	/^    bool        b_menu;      \/* Is it a menu or a normal entry *\/$/;"	m	struct:__anon144
b_menu_visible	vlc_osd.h	/^    bool b_menu_visible; \/*< menu currently visible? *\/$/;"	m	struct:osd_menu_state_t
b_multiple	vlc_interface.h	/^    bool b_multiple;$/;"	m	struct:intf_dialog_args_t
b_need_packetized	vlc_codec.h	/^    bool                b_need_packetized;$/;"	m	struct:decoder_t
b_pace_control	vlc_codec.h	/^    bool                b_pace_control;$/;"	m	struct:decoder_t
b_packetized	vlc_es.h	/^    bool     b_packetized;  \/**< wether the data is packetized (ie. not truncated) *\/$/;"	m	struct:es_format_t
b_paused	vlc_vlm.h	/^    bool        b_paused;   \/*< vlm media instance is paused *\/$/;"	m	struct:__anon142
b_preparsing	vlc_input.h	/^    bool b_preparsing;$/;"	m	struct:input_thread_t
b_progressive	vlc_picture.h	/^    bool            b_progressive;          \/**< is it a progressive frame ? *\/$/;"	m	struct:picture_t
b_range	vlc_osd.h	/^    bool   b_range;    \/*< button should be interpreted as range *\/$/;"	m	struct:osd_button_t
b_removed	vlc_configuration.h	/^    bool        b_removed;$/;"	m	struct:module_config_t
b_safe	vlc_configuration.h	/^    unsigned    b_safe:1;       \/* Safe to use in web plugins and playlists *\/$/;"	m	struct:module_config_t
b_save	vlc_interface.h	/^    bool b_save;$/;"	m	struct:intf_dialog_args_t
b_selected	vlc_extensions.h	/^        bool b_selected;   \/\/\/< True if this item is selected$/;"	m	struct:extension_widget_t::extension_widget_value_t
b_should_run_on_first_thread	vlc_interface.h	/^    bool          b_should_run_on_first_thread;$/;"	m	struct:intf_thread_t
b_sparse	vlc_media_library.h	/^    bool            b_sparse;           \/**< Specifies if media is loaded fully *\/$/;"	m	struct:ml_media_t
b_subtitle	vlc_subpicture.h	/^    bool         b_subtitle;            \/**< the picture is a movie subtitle *\/$/;"	m	struct:subpicture_t
b_top_field_first	vlc_picture.h	/^    bool            b_top_field_first;             \/**< which field is first *\/$/;"	m	struct:picture_t
b_unsaveable	vlc_configuration.h	/^    unsigned    b_unsaveable:1;               \/* Config should not be saved *\/$/;"	m	struct:module_config_t
b_update	vlc_extensions.h	/^    bool b_update;                \/\/\/< Update this widget$/;"	m	struct:extension_widget_t
b_update	vlc_osd.h	/^    bool b_update;       \/*< update OSD Menu when true *\/$/;"	m	struct:osd_menu_state_t
b_vod	vlc_vlm.h	/^    bool b_vod;         \/*< vlm_media_t is of type VOD *\/$/;"	m	struct:__anon139
b_waiting_stream	vlc_sout.h	/^    bool  b_waiting_stream;$/;"	m	struct:sout_mux_t
barrier	vlc_threads.h	/^static inline void barrier (void)$/;"	f
biBitCount	vlc_codecs.h	/^    uint16_t   biBitCount;$/;"	m	struct:ATTR_PACKED
biClrImportant	vlc_codecs.h	/^    uint32_t   biClrImportant;$/;"	m	struct:ATTR_PACKED
biClrUsed	vlc_codecs.h	/^    uint32_t   biClrUsed;$/;"	m	struct:ATTR_PACKED
biCompression	vlc_codecs.h	/^    uint32_t   biCompression;$/;"	m	struct:ATTR_PACKED
biHeight	vlc_codecs.h	/^    uint32_t   biHeight;$/;"	m	struct:ATTR_PACKED
biPlanes	vlc_codecs.h	/^    uint16_t   biPlanes;$/;"	m	struct:ATTR_PACKED
biSize	vlc_codecs.h	/^    uint32_t   biSize;$/;"	m	struct:ATTR_PACKED
biSizeImage	vlc_codecs.h	/^    uint32_t   biSizeImage;$/;"	m	struct:ATTR_PACKED
biWidth	vlc_codecs.h	/^    uint32_t   biWidth;$/;"	m	struct:ATTR_PACKED
biXPelsPerMeter	vlc_codecs.h	/^    uint32_t   biXPelsPerMeter;$/;"	m	struct:ATTR_PACKED
biYPelsPerMeter	vlc_codecs.h	/^    uint32_t   biYPelsPerMeter;$/;"	m	struct:ATTR_PACKED
blend	vlc_filter.h	/^        } blend;$/;"	m	union:filter_t::__anon12	typeref:struct:filter_t::__anon12::__anon15
block_BytestreamEmpty	vlc_block_helper.h	/^static inline void block_BytestreamEmpty( block_bytestream_t *p_bytestream )$/;"	f
block_BytestreamFlush	vlc_block_helper.h	/^static inline void block_BytestreamFlush( block_bytestream_t *p_bytestream )$/;"	f
block_BytestreamInit	vlc_block_helper.h	/^static inline void block_BytestreamInit( block_bytestream_t *p_bytestream )$/;"	f
block_BytestreamPop	vlc_block_helper.h	/^static inline block_t *block_BytestreamPop( block_bytestream_t *p_bytestream )$/;"	f
block_BytestreamPush	vlc_block_helper.h	/^static inline void block_BytestreamPush( block_bytestream_t *p_bytestream,$/;"	f
block_BytestreamRelease	vlc_block_helper.h	/^static inline void block_BytestreamRelease( block_bytestream_t *p_bytestream )$/;"	f
block_ChainAppend	vlc_block.h	/^static inline void block_ChainAppend( block_t **pp_list, block_t *p_block )$/;"	f
block_ChainExtract	vlc_block.h	/^static size_t block_ChainExtract( block_t *p_list, void *p_data, size_t i_max )$/;"	f
block_ChainGather	vlc_block.h	/^static inline block_t *block_ChainGather( block_t *p_list )$/;"	f
block_ChainLastAppend	vlc_block.h	/^static inline void block_ChainLastAppend( block_t ***ppp_last, block_t *p_block )$/;"	f
block_ChainProperties	vlc_block.h	/^static inline void block_ChainProperties( block_t *p_list, int *pi_count, size_t *pi_size, mtime_t *pi_length )$/;"	f
block_ChainRelease	vlc_block.h	/^static inline void block_ChainRelease( block_t *p_block )$/;"	f
block_Cleanup	vlc_block.h	/^static inline void block_Cleanup (void *block)$/;"	f
block_Duplicate	vlc_block.h	/^static inline block_t *block_Duplicate( block_t *p_block )$/;"	f
block_FindStartcodeFromOffset	vlc_block_helper.h	/^static inline int block_FindStartcodeFromOffset($/;"	f
block_GetByte	vlc_block_helper.h	/^static inline int block_GetByte( block_bytestream_t *p_bytestream,$/;"	f
block_GetBytes	vlc_block_helper.h	/^static inline int block_GetBytes( block_bytestream_t *p_bytestream,$/;"	f
block_New	vlc_block.h	142;"	d
block_PeekByte	vlc_block_helper.h	/^static inline int block_PeekByte( block_bytestream_t *p_bytestream,$/;"	f
block_PeekBytes	vlc_block_helper.h	/^static inline int block_PeekBytes( block_bytestream_t *p_bytestream,$/;"	f
block_PeekOffsetBytes	vlc_block_helper.h	/^static inline int block_PeekOffsetBytes( block_bytestream_t *p_bytestream,$/;"	f
block_Release	vlc_block.h	/^static inline void block_Release( block_t *p_block )$/;"	f
block_SkipByte	vlc_block_helper.h	/^static inline int block_SkipByte( block_bytestream_t *p_bytestream )$/;"	f
block_SkipBytes	vlc_block_helper.h	/^static inline int block_SkipBytes( block_bytestream_t *p_bytestream,$/;"	f
block_WaitBytes	vlc_block_helper.h	/^static inline int block_WaitBytes( block_bytestream_t *p_bytestream,$/;"	f
block_bytestream_t	vlc_block_helper.h	/^typedef struct block_bytestream_t$/;"	s
block_bytestream_t	vlc_block_helper.h	/^} block_bytestream_t;$/;"	t	typeref:struct:block_bytestream_t
block_cleanup_push	vlc_block.h	174;"	d
block_fifo_t	vlc_common.h	/^typedef struct block_fifo_t block_fifo_t;$/;"	t	typeref:struct:block_fifo_t
block_free_t	vlc_block.h	/^typedef void (*block_free_t) (block_t *);$/;"	t
block_sys_t	vlc_block.h	/^typedef struct block_sys_t block_sys_t;$/;"	t	typeref:struct:block_sys_t
block_t	vlc_block.h	/^struct block_t$/;"	s
block_t	vlc_common.h	/^typedef struct block_t      block_t;$/;"	t	typeref:struct:block_t
bmiColors	vlc_codecs.h	/^        RGBQUAD1 bmiColors[256]; \/* Colour palette *\/$/;"	m	union:ATTR_PACKED::__anon9
bmiColors	vlc_codecs.h	/^    RGBQUAD1 bmiColors[256];$/;"	m	struct:ATTR_PACKED
bmiColors	vlc_codecs.h	/^    int                  bmiColors[1];$/;"	m	struct:ATTR_PACKED
bmiHeader	vlc_codecs.h	/^    VLC_BITMAPINFOHEADER    bmiHeader;$/;"	m	struct:ATTR_PACKED
bmiHeader	vlc_codecs.h	/^    VLC_BITMAPINFOHEADER bmiHeader;$/;"	m	struct:ATTR_PACKED
bottom	vlc/libvlc_media_player.h	/^    int bottom, right;$/;"	m	struct:libvlc_rectangle_t
bottom	vlc_codecs.h	/^    int left, top, right, bottom;$/;"	m	struct:ATTR_PACKED
broadcast	vlc_vlm.h	/^    } broadcast;        \/*< Broadcast specific information *\/$/;"	m	struct:__anon139	typeref:struct:__anon139::__anon140
bs_align	vlc_bits.h	/^static inline void bs_align( bs_t *s )$/;"	f
bs_align_0	vlc_bits.h	/^static inline void bs_align_0( bs_t *s )$/;"	f
bs_align_1	vlc_bits.h	/^static inline void bs_align_1( bs_t *s )$/;"	f
bs_eof	vlc_bits.h	/^static inline int bs_eof( const bs_t *s )$/;"	f
bs_init	vlc_bits.h	/^static inline void bs_init( bs_t *s, const void *p_data, size_t i_data )$/;"	f
bs_pos	vlc_bits.h	/^static inline int bs_pos( const bs_t *s )$/;"	f
bs_read	vlc_bits.h	/^static inline uint32_t bs_read( bs_t *s, int i_count )$/;"	f
bs_read1	vlc_bits.h	/^static inline uint32_t bs_read1( bs_t *s )$/;"	f
bs_s	vlc_bits.h	/^typedef struct bs_s$/;"	s
bs_show	vlc_bits.h	/^static inline uint32_t bs_show( bs_t *s, int i_count )$/;"	f
bs_skip	vlc_bits.h	/^static inline void bs_skip( bs_t *s, ssize_t i_count )$/;"	f
bs_t	vlc_bits.h	/^} bs_t;$/;"	t	typeref:struct:bs_s
bs_write	vlc_bits.h	/^static inline void bs_write( bs_t *s, int i_count, uint32_t i_bits )$/;"	f
bswap16	vlc_common.h	/^static inline uint16_t bswap16 (uint16_t x)$/;"	f
bswap16	vlc_common.h	648;"	d
bswap32	vlc_common.h	/^static inline uint32_t bswap32 (uint32_t x)$/;"	f
bswap32	vlc_common.h	649;"	d
bswap64	vlc_common.h	/^static inline uint64_t bswap64 (uint64_t x)$/;"	f
bswap64	vlc_common.h	650;"	d
buf	vlc_md5.h	/^    uint8_t buf[64];$/;"	m	struct:md5_s
cancel	vlc_dialog.h	/^    const char *cancel;$/;"	m	struct:dialog_progress_bar_t
cancel	vlc_dialog.h	/^    const char *cancel;$/;"	m	struct:dialog_question_t
cannot_unload_broken_library	vlc_plugin.h	225;"	d
categories_array	vlc_config_cat.h	/^static const struct config_category_t categories_array[] =$/;"	v	typeref:struct:config_category_t
cbSize	vlc_codecs.h	/^    uint16_t   cbSize;$/;"	m	struct:_WAVEFORMATEX
cfg	vlc_vout_display.h	/^    const vout_display_cfg_t *cfg;$/;"	m	struct:vout_display_t
cfg	vlc_vout_wrapper.h	/^    vout_display_cfg_t cfg;$/;"	m	struct:__anon81
change_action_add	vlc_plugin.h	411;"	d
change_float_range	vlc_plugin.h	408;"	d
change_fmt	vlc_vout.h	/^    bool                 change_fmt;$/;"	m	struct:__anon83
change_integer_list	vlc_plugin.h	398;"	d
change_integer_range	vlc_plugin.h	405;"	d
change_private	vlc_plugin.h	416;"	d
change_safe	vlc_plugin.h	424;"	d
change_short	vlc_plugin.h	388;"	d
change_string_list	vlc_plugin.h	391;"	d
change_volatile	vlc_plugin.h	420;"	d
check_deadline	vlc_threads.h	319;"	d
check_deadline	vlc_threads.h	323;"	d
check_delay	vlc_threads.h	301;"	d
check_delay	vlc_threads.h	322;"	d
child	vlc_vlm.h	/^    vlm_message_t **child;  \/*< array of vlm_message_t *\/$/;"	m	struct:vlm_message_t
cl	vlc_httpd.h	/^    httpd_client_t *cl; \/* NULL if not throught a connection e vlc internal *\/$/;"	m	struct:httpd_message_t
clip_uint8_vlc	vlc_common.h	/^static inline uint8_t clip_uint8_vlc( int32_t a )$/;"	f
clock	vlc_threads.h	/^    unsigned clock;$/;"	m	struct:__anon22
clock	vlc_threads.h	/^    unsigned clock;$/;"	m	struct:__anon27
close	vlc_tls.h	/^        void    (*close) (struct vlc_tls *); \/**< Close callback (server) *\/$/;"	m	union:vlc_tls::__anon146
closedir	vlc_fs.h	58;"	d
closedir	vlc_fs.h	59;"	d
clz	vlc_common.h	/^static inline unsigned clz (unsigned x)$/;"	f
clz16	vlc_common.h	626;"	d
clz32	vlc_common.h	628;"	d
clz8	vlc_common.h	625;"	d
comp	vlc_media_library.h	/^    ml_comp_e       comp;       \/**< Condition between type and value *\/$/;"	m	struct:ml_ftree_t
cond	vlc_extensions.h	/^    vlc_cond_t cond;             \/\/\/< Signaled == UI is done working on the dialog$/;"	m	struct:extension_dialog_t
config_AddIntf	vlc_configuration.h	233;"	d
config_CategoryHelpGet	vlc_config_cat.h	/^static inline const char *config_CategoryHelpGet( int i_value )$/;"	f
config_CategoryNameGet	vlc_config_cat.h	/^static inline const char *config_CategoryNameGet( int i_value )$/;"	f
config_ChainParse	vlc_configuration.h	256;"	d
config_ExistIntf	vlc_configuration.h	235;"	d
config_GetDataDir	vlc_configuration.h	198;"	d
config_GetFloat	vlc_configuration.h	228;"	d
config_GetInt	vlc_configuration.h	226;"	d
config_GetPsz	vlc_configuration.h	230;"	d
config_GetType	vlc_configuration.h	225;"	d
config_PutFloat	vlc_configuration.h	229;"	d
config_PutInt	vlc_configuration.h	227;"	d
config_PutPsz	vlc_configuration.h	231;"	d
config_RemoveIntf	vlc_configuration.h	234;"	d
config_ResetAll	vlc_configuration.h	194;"	d
config_SaveConfigFile	vlc_configuration.h	191;"	d
config_category_t	vlc_common.h	/^typedef struct config_category_t config_category_t;$/;"	t	typeref:struct:config_category_t
config_category_t	vlc_configuration.h	/^struct config_category_t$/;"	s
config_chain_t	vlc_common.h	/^typedef struct config_chain_t       config_chain_t;$/;"	t	typeref:struct:config_chain_t
config_chain_t	vlc_configuration.h	/^struct config_chain_t$/;"	s
contention	vlc_threads.h	/^            unsigned long contention;$/;"	m	struct:__anon19::__anon20::__anon21
contention	vlc_threads.h	/^            unsigned long contention;$/;"	m	struct:__anon24::__anon25::__anon26
control	vlc_vout_display.h	/^    int        (*control)(vout_display_t *, int, va_list);$/;"	m	struct:vout_display_t
control	vlc_vout_window.h	/^    int (*control)(vout_window_t *, int query, va_list);$/;"	m	struct:vout_window_t
coords	vlc_common.h	/^    struct { int32_t x; int32_t y; } coords;$/;"	m	union:__anon93	typeref:struct:__anon93::__anon94
count	vlc_md5.h	/^    int count;$/;"	m	struct:md5_s
count	vlc_probe.h	/^    size_t count;$/;"	m	struct:vlc_probe_t
count	vlc_threads.h	/^    int  count;$/;"	m	struct:__anon28
count_mutex	vlc_threads.h	/^    HMTX count_mutex;$/;"	m	struct:__anon28
count_t	vlc_common.h	/^typedef unsigned long       count_t;$/;"	t
counter_sample_t	vlc_common.h	/^typedef struct counter_sample_t counter_sample_t;$/;"	t	typeref:struct:counter_sample_t
counter_sample_t	vlc_messages.h	/^struct counter_sample_t$/;"	s
counter_t	vlc_common.h	/^typedef struct counter_t     counter_t;$/;"	t	typeref:struct:counter_t
counter_t	vlc_messages.h	/^struct counter_t$/;"	s
criteria	vlc_media_library.h	/^    ml_select_e     criteria;   \/**< SELECT criteria type @see ml_select_e$/;"	m	struct:ml_ftree_t
criteria	vlc_media_library.h	/^    ml_select_e    criteria;    \/**< SELECT criteria type. @see ml_select_e *\/$/;"	m	struct:ml_element_t
current	vlc_playlist.h	/^    playlist_item_array_t current; \/**< Items currently being played *\/$/;"	m	struct:playlist_t
d_position	vlc_vlm.h	/^    double      d_position; \/*< vlm media instance position in stream *\/$/;"	m	struct:__anon142
data	vlc_fixups.h	/^    void *data;$/;"	m	struct:entry
data	vlc_threads.h	/^    void          *data;$/;"	m	struct:vlc_cleanup_t
date	vlc_messages.h	/^    mtime_t     date;$/;"	m	struct:counter_sample_t
date	vlc_mtime.h	/^    mtime_t  date;$/;"	m	struct:date_t
date	vlc_picture.h	/^    mtime_t         date;                                  \/**< display date *\/$/;"	m	struct:picture_t
date_t	vlc_common.h	/^typedef struct date_t date_t;$/;"	t	typeref:struct:date_t
date_t	vlc_mtime.h	/^struct date_t$/;"	s
dbl	vlc_sql.h	/^        double dbl;$/;"	m	union:__anon78::__anon79
decoder_owner_sys_t	vlc_codec.h	/^typedef struct decoder_owner_sys_t decoder_owner_sys_t;$/;"	t	typeref:struct:decoder_owner_sys_t
decoder_synchro_t	vlc_common.h	/^typedef struct decoder_synchro_t decoder_synchro_t;$/;"	t	typeref:struct:decoder_synchro_t
decoder_sys_t	vlc_common.h	/^typedef struct decoder_sys_t     decoder_sys_t;$/;"	t	typeref:struct:decoder_sys_t
decoder_t	vlc_codec.h	/^struct decoder_t$/;"	s
decoder_t	vlc_common.h	/^typedef struct decoder_t         decoder_t;$/;"	t	typeref:struct:decoder_t
demux_IsForced	vlc_demux.h	/^static inline bool demux_IsForced( demux_t *p_demux, const char *psz_name )$/;"	f
demux_IsPathExtension	vlc_demux.h	/^static inline bool demux_IsPathExtension( demux_t *p_demux, const char *psz_extension )$/;"	f
demux_meta_t	vlc_demux.h	/^typedef struct demux_meta_t$/;"	s
demux_meta_t	vlc_demux.h	/^} demux_meta_t;$/;"	t	typeref:struct:demux_meta_t
demux_query_e	vlc_demux.h	/^enum demux_query_e$/;"	g
demux_sys_t	vlc_common.h	/^typedef struct demux_sys_t demux_sys_t;$/;"	t	typeref:struct:demux_sys_t
demux_t	vlc_common.h	/^typedef struct demux_t  demux_t;$/;"	t	typeref:struct:demux_t
demux_t	vlc_demux.h	/^struct demux_t$/;"	s
den	vlc_fourcc.h	/^            unsigned den;$/;"	m	struct:__anon96::__anon97::__anon98
den	vlc_fourcc.h	/^            unsigned den;$/;"	m	struct:__anon96::__anon97::__anon99
den	vlc_vout_display.h	/^            unsigned den;$/;"	m	struct:__anon66::__anon67::__anon68
den	vlc_vout_display.h	/^        int den;$/;"	m	struct:__anon66::__anon70
den	vlc_vout_wrapper.h	/^        int den;$/;"	m	struct:__anon81::__anon82
dialog_ExtensionUpdate	vlc_extensions.h	315;"	d
dialog_Fatal	vlc_dialog.h	/^void dialog_Fatal (vlc_object_t *obj, const char *title, const char *fmt, ...)$/;"	f
dialog_Fatal	vlc_dialog.h	51;"	d
dialog_FatalWait	vlc_dialog.h	/^void dialog_FatalWait (vlc_object_t *obj, const char *title,$/;"	f
dialog_FatalWait	vlc_dialog.h	63;"	d
dialog_Login	vlc_dialog.h	78;"	d
dialog_ProgressCreate	vlc_dialog.h	111;"	d
dialog_Question	vlc_dialog.h	95;"	d
dialog_Register	vlc_dialog.h	119;"	d
dialog_Unregister	vlc_dialog.h	120;"	d
dialog_fatal_t	vlc_dialog.h	/^typedef struct dialog_fatal_t$/;"	s
dialog_fatal_t	vlc_dialog.h	/^} dialog_fatal_t;$/;"	t	typeref:struct:dialog_fatal_t
dialog_login_t	vlc_dialog.h	/^typedef struct dialog_login_t$/;"	s
dialog_login_t	vlc_dialog.h	/^} dialog_login_t;$/;"	t	typeref:struct:dialog_login_t
dialog_progress_bar_t	vlc_dialog.h	/^typedef struct dialog_progress_bar_t$/;"	s
dialog_progress_bar_t	vlc_dialog.h	/^} dialog_progress_bar_t;$/;"	t	typeref:struct:dialog_progress_bar_t
dialog_question_t	vlc_dialog.h	/^typedef struct dialog_question_t$/;"	s
dialog_question_t	vlc_dialog.h	/^} dialog_question_t;$/;"	t	typeref:struct:dialog_question_t
display	vlc_vout_display.h	/^    void       (*display)(vout_display_t *, picture_t *, subpicture_t *);$/;"	m	struct:vout_display_t
display	vlc_vout_display.h	/^    } display;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon67
display	vlc_vout_window.h	/^    } display;$/;"	m	struct:vout_window_t	typeref:union:vout_window_t::__anon129
dpb_size	vlc_vout.h	/^    unsigned             dpb_size;$/;"	m	struct:__anon83
dvb	vlc_es.h	/^    } dvb;$/;"	m	struct:subs_format_t	typeref:struct:subs_format_t::__anon34
dwBitErrorRate	vlc_codecs.h	/^    uint32_t                dwBitErrorRate;$/;"	m	struct:ATTR_PACKED
dwBitMasks	vlc_codecs.h	/^        uint32_t dwBitMasks[3]; \/* True colour masks *\/$/;"	m	union:ATTR_PACKED::__anon9
dwBitMasks	vlc_codecs.h	/^    uint32_t dwBitMasks[3];$/;"	m	struct:ATTR_PACKED
dwBitRate	vlc_codecs.h	/^    uint32_t                dwBitRate;$/;"	m	struct:ATTR_PACKED
dwChannelMask	vlc_codecs.h	/^    uint32_t     dwChannelMask;$/;"	m	struct:_WAVEFORMATEXTENSIBLE
dwFlags	vlc_windows_interfaces.h	/^    DWORD dwFlags;$/;"	m	struct:tagTHUMBBUTTON
dwMask	vlc_windows_interfaces.h	/^    DWORD dwMask;$/;"	m	struct:tagTHUMBBUTTON
dynamic	vlc_threads.h	/^    bool dynamic;$/;"	m	struct:__anon19
dynamic	vlc_threads.h	/^    bool dynamic;$/;"	m	struct:__anon24
encoder_sys_t	vlc_common.h	/^typedef struct encoder_sys_t  encoder_sys_t;$/;"	t	typeref:struct:encoder_sys_t
encoder_t	vlc_codec.h	/^struct encoder_t$/;"	s
encoder_t	vlc_common.h	/^typedef struct encoder_t      encoder_t;$/;"	t	typeref:struct:encoder_t
end_date	vlc_aout.h	/^    date_t                  end_date;$/;"	m	struct:aout_fifo_t
end_subcategory_hint	vlc_plugin.h	288;"	d
endorder	vlc_fixups.h	/^    endorder,$/;"	e	enum:__anon87
entry	vlc_fixups.h	/^typedef struct entry {$/;"	s
es	vlc_input_item.h	/^    es_format_t **es;                \/**< Es formats *\/$/;"	m	struct:input_item_t
es	vlc_sout.h	/^    es_format_t **es;$/;"	m	struct:sout_description_data_t
es_format_category_e	vlc_es.h	/^enum es_format_category_e$/;"	g
es_format_t	vlc_common.h	/^typedef struct es_format_t es_format_t;$/;"	t	typeref:struct:es_format_t
es_format_t	vlc_es.h	/^struct es_format_t$/;"	s
es_out_Add	vlc_es_out.h	/^static inline es_out_id_t * es_out_Add( es_out_t *out, const es_format_t *fmt )$/;"	f
es_out_Control	vlc_es_out.h	/^static inline int es_out_Control( es_out_t *out, int i_query, ... )$/;"	f
es_out_ControlGetPcrSystem	vlc_es_out.h	/^static inline int es_out_ControlGetPcrSystem( es_out_t *out, mtime_t *pi_system, mtime_t *pi_delay )$/;"	f
es_out_ControlModifyPcrSystem	vlc_es_out.h	/^static inline int es_out_ControlModifyPcrSystem( es_out_t *out, bool b_absolute, mtime_t i_system )$/;"	f
es_out_ControlSetMeta	vlc_es_out.h	/^static inline int es_out_ControlSetMeta( es_out_t *out, const vlc_meta_t *p_meta )$/;"	f
es_out_Del	vlc_es_out.h	/^static inline void es_out_Del( es_out_t *out, es_out_id_t *id )$/;"	f
es_out_Delete	vlc_es_out.h	/^static inline void es_out_Delete( es_out_t *p_out )$/;"	f
es_out_Send	vlc_es_out.h	/^static inline int es_out_Send( es_out_t *out, es_out_id_t *id,$/;"	f
es_out_id_t	vlc_common.h	/^typedef struct es_out_id_t  es_out_id_t;$/;"	t	typeref:struct:es_out_id_t
es_out_query_e	vlc_es_out.h	/^enum es_out_query_e$/;"	g
es_out_sys_t	vlc_common.h	/^typedef struct es_out_sys_t es_out_sys_t;$/;"	t	typeref:struct:es_out_sys_t
es_out_t	vlc_common.h	/^typedef struct es_out_t     es_out_t;$/;"	t	typeref:struct:es_out_t
es_out_t	vlc_es_out.h	/^struct es_out_t$/;"	s
es_out_vaControl	vlc_es_out.h	/^static inline int es_out_vaControl( es_out_t *out, int i_query, va_list args )$/;"	f
event	vlc_extensions.h	/^    extension_dialog_event_e event; \/\/\/< Event, @see extension_dialog_event_e$/;"	m	struct:__anon6
event	vlc_vout_display.h	/^    void            (*event)(vout_display_t *, int, va_list);$/;"	m	struct:vout_display_owner_t
event_manager	vlc_input_item.h	/^    vlc_event_manager_t event_manager;$/;"	m	struct:input_item_t
event_manager	vlc_services_discovery.h	/^    vlc_event_manager_t event_manager;$/;"	m	struct:services_discovery_t
event_sending_lock	vlc_events.h	/^    vlc_mutex_t event_sending_lock;$/;"	m	struct:vlc_event_manager_t
events	vlc_fixups.h	/^    unsigned events;$/;"	m	struct:pollfd
extension_Activate	vlc_extensions.h	116;"	d
extension_Control	vlc_extensions.h	/^static inline int extension_Control( extensions_manager_t *p_mgr,$/;"	f
extension_Deactivate	vlc_extensions.h	124;"	d
extension_DialogClosed	vlc_extensions.h	245;"	d
extension_DialogCommand	vlc_extensions.h	/^static inline int extension_DialogCommand( extension_dialog_t* p_dialog,$/;"	f
extension_GetMenu	vlc_extensions.h	/^static inline int extension_GetMenu( extensions_manager_t *p_mgr,$/;"	f
extension_HasMenu	vlc_extensions.h	132;"	d
extension_IsActivated	vlc_extensions.h	128;"	d
extension_MetaChanged	vlc_extensions.h	/^static inline int extension_MetaChanged( extensions_manager_t *p_mgr,$/;"	f
extension_PlayingChanged	vlc_extensions.h	/^static inline int extension_PlayingChanged( extensions_manager_t *p_mgr,$/;"	f
extension_SetInput	vlc_extensions.h	/^static inline int extension_SetInput( extensions_manager_t *p_mgr,$/;"	f
extension_Trigger	vlc_extensions.h	120;"	d
extension_TriggerMenu	vlc_extensions.h	/^static inline int extension_TriggerMenu( extensions_manager_t *p_mgr,$/;"	f
extension_TriggerOnly	vlc_extensions.h	175;"	d
extension_WidgetClicked	vlc_extensions.h	252;"	d
extension_dialog_command_t	vlc_extensions.h	/^} extension_dialog_command_t;$/;"	t	typeref:struct:__anon6
extension_dialog_event_e	vlc_extensions.h	/^} extension_dialog_event_e;$/;"	t	typeref:enum:__anon5
extension_dialog_t	vlc_extensions.h	/^struct extension_dialog_t$/;"	s
extension_dialog_t	vlc_extensions.h	/^typedef struct extension_dialog_t extension_dialog_t;$/;"	t	typeref:struct:extension_dialog_t
extension_sys_t	vlc_extensions.h	/^typedef struct extension_sys_t extension_sys_t;$/;"	t	typeref:struct:extension_sys_t
extension_t	vlc_extensions.h	/^typedef struct extension_t {$/;"	s
extension_t	vlc_extensions.h	/^} extension_t;$/;"	t	typeref:struct:extension_t
extension_widget_t	vlc_extensions.h	/^struct extension_widget_t$/;"	s
extension_widget_t	vlc_extensions.h	/^typedef struct extension_widget_t extension_widget_t;$/;"	t	typeref:struct:extension_widget_t
extension_widget_type_e	vlc_extensions.h	/^} extension_widget_type_e;$/;"	t	typeref:enum:__anon7
extension_widget_value_t	vlc_extensions.h	/^    struct extension_widget_value_t {$/;"	s	struct:extension_widget_t
extensions	vlc_extensions.h	/^    DECL_ARRAY(extension_t*) extensions; \/**< Array of extension descriptors *\/$/;"	m	struct:extensions_manager_t
extensions_manager_sys_t	vlc_extensions.h	/^typedef struct extensions_manager_sys_t extensions_manager_sys_t;$/;"	t	typeref:struct:extensions_manager_sys_t
extensions_manager_t	vlc_extensions.h	/^struct extensions_manager_t$/;"	s
extensions_manager_t	vlc_extensions.h	/^typedef struct extensions_manager_t extensions_manager_t;$/;"	t	typeref:struct:extensions_manager_t
extra_languages_t	vlc_es.h	/^typedef struct extra_languages_t$/;"	s
extra_languages_t	vlc_es.h	/^} extra_languages_t;$/;"	t	typeref:struct:extra_languages_t
f	vlc_configuration.h	/^    float       f;$/;"	m	union:__anon80
f_average_demux_bitrate	vlc_input_item.h	/^    float f_average_demux_bitrate;$/;"	m	struct:input_stats_t
f_average_input_bitrate	vlc_input_item.h	/^    float f_average_input_bitrate;$/;"	m	struct:input_stats_t
f_demux_bitrate	vlc/libvlc_media.h	/^    float       f_demux_bitrate;$/;"	m	struct:libvlc_media_stats_t
f_demux_bitrate	vlc_input_item.h	/^    float f_demux_bitrate;$/;"	m	struct:input_stats_t
f_float	vlc_common.h	/^    float           f_float;$/;"	m	union:__anon93
f_input_bitrate	vlc/libvlc_media.h	/^    float       f_input_bitrate;$/;"	m	struct:libvlc_media_stats_t
f_input_bitrate	vlc_input_item.h	/^    float f_input_bitrate;$/;"	m	struct:input_stats_t
f_send_bitrate	vlc/libvlc_media.h	/^    float       f_send_bitrate;$/;"	m	struct:libvlc_media_stats_t
f_send_bitrate	vlc_input_item.h	/^    float f_send_bitrate;$/;"	m	struct:input_stats_t
fd	vlc_fixups.h	/^    int fd;$/;"	m	struct:pollfd
fifo	vlc_aout.h	/^    aout_fifo_t fifo; \/**< Packetized audio blocks *\/$/;"	m	struct:__anon136
filter_DeletePicture	vlc_filter.h	/^static inline void filter_DeletePicture( filter_t *p_filter, picture_t *p_picture )$/;"	f
filter_DeleteSubpicture	vlc_filter.h	/^static inline void filter_DeleteSubpicture( filter_t *p_filter, subpicture_t *p_subpicture )$/;"	f
filter_FlushPictures	vlc_filter.h	/^static inline void filter_FlushPictures( filter_t *p_filter )$/;"	f
filter_GetInputAttachments	vlc_filter.h	/^static inline int filter_GetInputAttachments( filter_t *p_filter,$/;"	f
filter_NewAudioBuffer	vlc_filter.h	212;"	d
filter_NewPicture	vlc_filter.h	/^static inline picture_t *filter_NewPicture( filter_t *p_filter )$/;"	f
filter_NewSubpicture	vlc_filter.h	/^static inline subpicture_t *filter_NewSubpicture( filter_t *p_filter )$/;"	f
filter_chain_New	vlc_filter.h	295;"	d
filter_chain_t	vlc_filter.h	/^typedef struct filter_chain_t filter_chain_t;$/;"	t	typeref:struct:filter_chain_t
filter_owner_sys_t	vlc_filter.h	/^typedef struct filter_owner_sys_t filter_owner_sys_t;$/;"	t	typeref:struct:filter_owner_sys_t
filter_sys_t	vlc_common.h	/^typedef struct filter_sys_t filter_sys_t;$/;"	t	typeref:struct:filter_sys_t
filter_t	vlc_common.h	/^typedef struct filter_t filter_t;$/;"	t	typeref:struct:filter_t
filter_t	vlc_filter.h	/^struct filter_t$/;"	s
fmt	vlc_subpicture.h	/^    video_format_t  fmt;                          \/**< format of the picture *\/$/;"	m	struct:subpicture_region_t
fmt	vlc_video_splitter.h	/^    video_format_t  fmt;$/;"	m	struct:video_splitter_t
fmt	vlc_video_splitter.h	/^    video_format_t fmt;$/;"	m	struct:__anon75
fmt	vlc_vout.h	/^    const video_format_t *fmt;$/;"	m	struct:__anon83
fmt	vlc_vout_display.h	/^    video_format_t fmt;$/;"	m	struct:vout_display_t
fmt_in	vlc_codec.h	/^    es_format_t         fmt_in;$/;"	m	struct:decoder_t
fmt_in	vlc_codec.h	/^    es_format_t         fmt_in;$/;"	m	struct:encoder_t
fmt_in	vlc_filter.h	/^    es_format_t         fmt_in;$/;"	m	struct:filter_t
fmt_out	vlc_codec.h	/^    es_format_t         fmt_out;$/;"	m	struct:decoder_t
fmt_out	vlc_codec.h	/^    es_format_t         fmt_out;$/;"	m	struct:encoder_t
fmt_out	vlc_filter.h	/^    es_format_t         fmt_out;$/;"	m	struct:filter_t
format	vlc_aout.h	/^    audio_sample_format_t format; \/**< Output format (plugin can modify it$/;"	m	struct:audio_output
format	vlc_aout_mixer.h	/^    vlc_fourcc_t format; \/**< Audio samples format *\/$/;"	m	struct:audio_mixer
format	vlc_picture.h	/^    video_frame_format_t format;$/;"	m	struct:picture_t
fourcc_to_wf_tag	vlc_codecs.h	/^static inline void fourcc_to_wf_tag( vlc_fourcc_t fcc, uint16_t *pi_tag )$/;"	f
freelocale	vlc_fixups.h	/^static inline void freelocale(locale_t loc)$/;"	f
fstat	vlc_common.h	406;"	d
fstat	vlc_common.h	408;"	d
functions	vlc_media_library.h	/^    } functions;$/;"	m	struct:media_library_t	typeref:struct:media_library_t::__anon106
gc_object_t	vlc_common.h	/^typedef struct gc_object_t$/;"	s
gc_object_t	vlc_common.h	/^} gc_object_t;$/;"	t	typeref:struct:gc_object_t
gcry_threads_vlc	vlc_gcrypt.h	/^static const struct gcry_thread_cbs gcry_threads_vlc =$/;"	v	typeref:struct:gcry_thread_cbs
gcry_threads_vlc	vlc_gcrypt.h	34;"	d
gcry_vlc_mutex_destroy	vlc_gcrypt.h	/^static int gcry_vlc_mutex_destroy( void **p_sys )$/;"	f
gcry_vlc_mutex_init	vlc_gcrypt.h	/^static int gcry_vlc_mutex_init( void **p_sys )$/;"	f
gcry_vlc_mutex_lock	vlc_gcrypt.h	/^static int gcry_vlc_mutex_lock( void **p_sys )$/;"	f
gcry_vlc_mutex_unlock	vlc_gcrypt.h	/^static int gcry_vlc_mutex_unlock( void **lock )$/;"	f
getProcAddress	vlc_opengl.h	/^    void*(*getProcAddress)(vlc_gl_t *, const char *);$/;"	m	struct:vlc_gl_t
getenv	vlc_fixups.h	/^static inline char *getenv (const char *name)$/;"	f
gettext_noop	vlc_fixups.h	242;"	d
guid_t	vlc_codecs.h	/^typedef GUID guid_t;$/;"	t
guid_tag	vlc_codecs.h	/^    GUID         guid_tag;$/;"	m	struct:__anon11
guidcmp	vlc_codecs.h	/^static inline int guidcmp( const GUID *s1, const GUID *s2 )$/;"	f
h	vlc_fourcc.h	/^        } h;$/;"	m	struct:__anon96::__anon97	typeref:struct:__anon96::__anon97::__anon99
hIcon	vlc_windows_interfaces.h	/^    HICON hIcon;$/;"	m	struct:tagTHUMBBUTTON
handle	vlc_threads.h	/^    HANDLE   handle;$/;"	m	struct:__anon22
handle	vlc_vout_window.h	/^    } handle;$/;"	m	struct:vout_window_t	typeref:union:vout_window_t::__anon128
handshake	vlc_tls.h	/^    int  (*handshake) (struct vlc_tls *);$/;"	m	struct:vlc_tls
harmful_delay	vlc_threads.h	/^mtime_t harmful_delay( mtime_t delay )$/;"	f
has_double_click	vlc_vout_display.h	/^    bool has_double_click;                  \/* Is double-click generated *\/$/;"	m	struct:__anon71
has_event_thread	vlc_vout_display.h	/^    bool has_event_thread;                  \/* Will events (key at least) be emitted using an independent thread *\/$/;"	m	struct:__anon71
has_hide_mouse	vlc_vout_display.h	/^    bool has_hide_mouse;                    \/* Is mouse automatically hidden *\/$/;"	m	struct:__anon71
has_pictures_invalid	vlc_vout_display.h	/^    bool has_pictures_invalid;              \/* Will VOUT_DISPLAY_EVENT_PICTURES_INVALID be used *\/$/;"	m	struct:__anon71
height	vlc_vout_display.h	/^        unsigned  height;$/;"	m	struct:__anon66::__anon67
height	vlc_vout_display.h	/^    unsigned height;$/;"	m	struct:__anon74
height	vlc_vout_window.h	/^    unsigned height;$/;"	m	struct:__anon127
hev	vlc_threads.h	/^    HEV      hev;$/;"	m	struct:__anon27
hev	vlc_threads.h	/^    HEV  hev;$/;"	m	struct:__anon28
hmtx	vlc_threads.h	/^        HMTX hmtx;$/;"	m	union:__anon24::__anon25
horizontal	vlc_vout_display.h	/^        int horizontal;$/;"	m	struct:__anon66::__anon69
hotkey	vlc_keys.h	/^struct hotkey$/;"	s
hton16	vlc_common.h	715;"	d
hton16	vlc_common.h	719;"	d
hton32	vlc_common.h	716;"	d
hton32	vlc_common.h	720;"	d
hton64	vlc_common.h	717;"	d
hton64	vlc_common.h	721;"	d
http_auth_t	vlc_http.h	/^typedef struct http_auth_t$/;"	s
http_auth_t	vlc_http.h	/^} http_auth_t;$/;"	t	typeref:struct:http_auth_t
httpd_callback_sys_t	vlc_common.h	/^typedef struct httpd_callback_sys_t httpd_callback_sys_t;$/;"	t	typeref:struct:httpd_callback_sys_t
httpd_callback_t	vlc_common.h	/^typedef int    (*httpd_callback_t)( httpd_callback_sys_t *, httpd_client_t *, httpd_message_t *answer, const httpd_message_t *query );$/;"	t
httpd_client_t	vlc_common.h	/^typedef struct httpd_client_t   httpd_client_t;$/;"	t	typeref:struct:httpd_client_t
httpd_file_callback_t	vlc_common.h	/^typedef int (*httpd_file_callback_t)( httpd_file_sys_t *, httpd_file_t *, uint8_t *psz_request, uint8_t **pp_data, int *pi_data );$/;"	t
httpd_file_sys_t	vlc_common.h	/^typedef struct httpd_file_sys_t httpd_file_sys_t;$/;"	t	typeref:struct:httpd_file_sys_t
httpd_file_t	vlc_common.h	/^typedef struct httpd_file_t     httpd_file_t;$/;"	t	typeref:struct:httpd_file_t
httpd_handler_callback_t	vlc_common.h	/^typedef int (*httpd_handler_callback_t)( httpd_handler_sys_t *, httpd_handler_t *, char *psz_url, uint8_t *psz_request, int i_type, uint8_t *p_in, int i_in, char *psz_remote_addr, char *psz_remote_host, uint8_t **pp_data, int *pi_data );$/;"	t
httpd_handler_sys_t	vlc_common.h	/^typedef struct httpd_handler_sys_t httpd_handler_sys_t;$/;"	t	typeref:struct:httpd_handler_sys_t
httpd_handler_t	vlc_common.h	/^typedef struct httpd_handler_t  httpd_handler_t;$/;"	t	typeref:struct:httpd_handler_t
httpd_host_t	vlc_common.h	/^typedef struct httpd_host_t     httpd_host_t;$/;"	t	typeref:struct:httpd_host_t
httpd_message_t	vlc_common.h	/^typedef struct httpd_message_t  httpd_message_t;$/;"	t	typeref:struct:httpd_message_t
httpd_message_t	vlc_httpd.h	/^struct httpd_message_t$/;"	s
httpd_redirect_t	vlc_common.h	/^typedef struct httpd_redirect_t httpd_redirect_t;$/;"	t	typeref:struct:httpd_redirect_t
httpd_stream_t	vlc_common.h	/^typedef struct httpd_stream_t httpd_stream_t;$/;"	t	typeref:struct:httpd_stream_t
httpd_t	vlc_common.h	/^typedef struct httpd_t          httpd_t;$/;"	t	typeref:struct:httpd_t
httpd_url_t	vlc_common.h	/^typedef struct httpd_url_t      httpd_url_t;$/;"	t	typeref:struct:httpd_url_t
hwnd	vlc_vout_window.h	/^        void     *hwnd;     \/* Win32 window handle *\/$/;"	m	union:vout_window_t::__anon128
i	vlc_configuration.h	/^    int64_t     i;$/;"	m	union:__anon80
i	vlc_media_library.h	/^        int             i;$/;"	m	union:ml_result_t::__anon107
i	vlc_media_library.h	/^        int     i;$/;"	m	union:ml_element_t::__anon108
i	vlc_media_library.h	/^        int     i;$/;"	m	union:ml_element_t::__anon109
i	vlc_media_library.h	/^        int     i;$/;"	m	union:ml_ftree_t::__anon110
i	vlc_media_library.h	/^        int     i;$/;"	m	union:ml_ftree_t::__anon111
i	vlc_sql.h	/^        int i;$/;"	m	union:__anon78::__anon79
iBitmap	vlc_windows_interfaces.h	/^    UINT iBitmap;$/;"	m	struct:tagTHUMBBUTTON
iId	vlc_windows_interfaces.h	/^    UINT iId;$/;"	m	struct:tagTHUMBBUTTON
i_action	vlc_configuration.h	/^    int            i_action;                           \/* actions list size *\/$/;"	m	struct:module_config_t
i_action	vlc_interface.h	/^    int             i_action;           \/\/\/< Action to perform;$/;"	m	struct:interaction_dialog_t
i_add_stream_start	vlc_sout.h	/^    mtime_t     i_add_stream_start;$/;"	m	struct:sout_mux_t
i_album_id	vlc_media_library.h	/^    int32_t         i_album_id;         \/**< Album id *\/$/;"	m	struct:ml_media_t
i_align	vlc_subpicture.h	/^    int             i_align;                  \/**< alignment within a region *\/$/;"	m	struct:subpicture_region_t
i_align	vlc_video_splitter.h	/^        int i_align;$/;"	m	struct:__anon75::__anon76
i_alpha	vlc_subpicture.h	/^    int             i_alpha;                               \/**< transparency *\/$/;"	m	struct:subpicture_region_t
i_alpha	vlc_subpicture.h	/^    int          i_alpha;                                  \/**< transparency *\/$/;"	m	struct:subpicture_t
i_attachments	vlc_demux.h	/^    int i_attachments;                  \/**< number of attachments *\/$/;"	m	struct:demux_meta_t
i_background_alpha	vlc_text_style.h	/^    int        i_background_alpha;\/**< The transparency of the background.$/;"	m	struct:__anon3
i_background_color	vlc_text_style.h	/^    int        i_background_color;\/**< The color of the background 0xRRGGBB *\/$/;"	m	struct:__anon3
i_bframes	vlc_codec.h	/^    int i_bframes;               \/* One B frame per i_bframes *\/$/;"	m	struct:encoder_t
i_bitrate	vlc_es.h	/^    unsigned int   i_bitrate; \/**< bitrate of this ES *\/$/;"	m	struct:es_format_t
i_bitrate	vlc_media_library.h	/^    int32_t         i_bitrate;          \/**< Extra: Bitrate of the media *\/$/;"	m	struct:ml_media_t
i_bits_per_pixel	vlc_es.h	/^    unsigned int i_bits_per_pixel;             \/**< number of bits per pixel *\/$/;"	m	struct:video_format_t
i_bitspersample	vlc_es.h	/^    unsigned     i_bitspersample;$/;"	m	struct:audio_format_t
i_blockalign	vlc_es.h	/^    unsigned     i_blockalign;$/;"	m	struct:audio_format_t
i_bmask	vlc_es.h	/^    uint32_t i_rmask, i_gmask, i_bmask;          \/**< color masks for RGB chroma *\/$/;"	m	struct:video_format_t
i_body	vlc_httpd.h	/^    int     i_body;$/;"	m	struct:httpd_message_t
i_body_offset	vlc_httpd.h	/^    int64_t i_body_offset;$/;"	m	struct:httpd_message_t
i_bpm	vlc_media_library.h	/^    int32_t         i_bpm;              \/**< Extra: Beats per minute *\/$/;"	m	struct:ml_media_t
i_buffer	vlc_block.h	/^    size_t      i_buffer;$/;"	m	struct:block_t
i_byte_offset	vlc_input.h	/^    int64_t i_byte_offset;$/;"	m	struct:seekpoint_t
i_bytes_per_frame	vlc_es.h	/^    unsigned int i_bytes_per_frame;$/;"	m	struct:audio_format_t
i_capabilities	vlc_services_discovery.h	/^    int   i_capabilities;       \/**< \\see services_discovery_capability_e *\/$/;"	m	struct:__anon2
i_cat	vlc_es.h	/^    int             i_cat;              \/**< ES category @see es_format_category_e *\/$/;"	m	struct:es_format_t
i_categories	vlc_input_item.h	/^    int        i_categories;         \/**< Number of info categories *\/$/;"	m	struct:input_item_t
i_channel	vlc_subpicture.h	/^    int             i_channel;                    \/**< subpicture channel ID *\/$/;"	m	struct:subpicture_t
i_channels	vlc/libvlc_media.h	/^            unsigned    i_channels;$/;"	m	struct:libvlc_media_track_info_t::__anon38::__anon39
i_channels	vlc_es.h	/^    uint8_t      i_channels; \/* must be <=32 *\/$/;"	m	struct:audio_format_t
i_child	vlc_vlm.h	/^    int           i_child;  \/*< number of child messages *\/$/;"	m	struct:vlm_message_t
i_children	vlc_input_item.h	/^    int                    i_children;$/;"	m	struct:input_item_node_t
i_children	vlc_playlist.h	/^    int                    i_children;  \/**< Number of children, -1 if not a node *\/$/;"	m	struct:playlist_item_t
i_chroma	vlc_es.h	/^    vlc_fourcc_t i_chroma;                               \/**< picture chroma *\/$/;"	m	struct:video_format_t
i_codec	vlc/libvlc_media.h	/^    uint32_t    i_codec;$/;"	m	struct:libvlc_media_track_info_t
i_codec	vlc_es.h	/^    vlc_fourcc_t    i_codec;            \/**< FOURCC value as used in vlc *\/$/;"	m	struct:es_format_t
i_column	vlc_extensions.h	/^    int i_column;                 \/\/\/< Column in the grid$/;"	m	struct:extension_widget_t
i_compute_type	vlc_messages.h	/^    int                 i_compute_type;$/;"	m	struct:counter_t
i_count	vlc_arrays.h	/^    int i_count;$/;"	m	struct:vlc_array_t
i_count	vlc_common.h	/^    int             i_count;$/;"	m	struct:vlc_list_t
i_current_index	vlc_playlist.h	/^    int                   i_current_index; \/**< Index in current array *\/$/;"	m	struct:playlist_t
i_data	vlc_input.h	/^    int  i_data;$/;"	m	struct:input_attachment_t
i_decoded_audio	vlc/libvlc_media.h	/^    int         i_decoded_audio;$/;"	m	struct:libvlc_media_stats_t
i_decoded_audio	vlc_input_item.h	/^    int64_t i_decoded_audio;$/;"	m	struct:input_stats_t
i_decoded_video	vlc/libvlc_media.h	/^    int         i_decoded_video;$/;"	m	struct:libvlc_media_stats_t
i_decoded_video	vlc_input_item.h	/^    int64_t i_decoded_video;$/;"	m	struct:input_stats_t
i_demux_corrupted	vlc/libvlc_media.h	/^    int         i_demux_corrupted;$/;"	m	struct:libvlc_media_stats_t
i_demux_corrupted	vlc_input_item.h	/^    int64_t i_demux_corrupted;$/;"	m	struct:input_stats_t
i_demux_discontinuity	vlc/libvlc_media.h	/^    int         i_demux_discontinuity;$/;"	m	struct:libvlc_media_stats_t
i_demux_discontinuity	vlc_input_item.h	/^    int64_t i_demux_discontinuity;$/;"	m	struct:input_stats_t
i_demux_read_bytes	vlc/libvlc_media.h	/^    int         i_demux_read_bytes;$/;"	m	struct:libvlc_media_stats_t
i_demux_read_bytes	vlc_input_item.h	/^    int64_t i_demux_read_bytes;$/;"	m	struct:input_stats_t
i_demux_read_packets	vlc_input_item.h	/^    int64_t i_demux_read_packets;$/;"	m	struct:input_stats_t
i_disc_number	vlc_media_library.h	/^    int16_t         i_disc_number;      \/**< Disc number of media *\/$/;"	m	struct:ml_media_t
i_displayed_pictures	vlc/libvlc_media.h	/^    int         i_displayed_pictures;$/;"	m	struct:libvlc_media_stats_t
i_displayed_pictures	vlc_input_item.h	/^    int64_t i_displayed_pictures;$/;"	m	struct:input_stats_t
i_divider_den	vlc_mtime.h	/^    uint32_t i_divider_den;$/;"	m	struct:date_t
i_divider_num	vlc_mtime.h	/^    uint32_t i_divider_num;$/;"	m	struct:date_t
i_dts	vlc_block.h	/^    mtime_t     i_dts;$/;"	m	struct:block_t
i_duration	vlc_epg.h	/^    int     i_duration;    \/* Duration of the event in second *\/$/;"	m	struct:__anon114
i_duration	vlc_input_item.h	/^    mtime_t    i_duration;           \/**< Duration in microseconds *\/$/;"	m	struct:input_item_t
i_duration	vlc_media_library.h	/^    mtime_t         i_duration;         \/**< Duration in microseconds *\/$/;"	m	struct:ml_media_t
i_entries	vlc_es.h	/^    int i_entries;      \/**< to keep the compatibility with ffmpeg's palette *\/$/;"	m	struct:video_palette_t
i_epg	vlc_input_item.h	/^    int         i_epg;               \/**< Number of EPG entries *\/$/;"	m	struct:input_item_t
i_es	vlc_input_item.h	/^    int         i_es;                \/**< Number of es format descriptions *\/$/;"	m	struct:input_item_t
i_es	vlc_sout.h	/^    int i_es;$/;"	m	struct:sout_description_data_t
i_event	vlc_epg.h	/^    int             i_event;$/;"	m	struct:__anon115
i_extra	vlc_es.h	/^    int     i_extra;        \/**< length in bytes of extra data pointer *\/$/;"	m	struct:es_format_t
i_extra	vlc_update.h	/^    int i_extra;        \/\/\/< Version extra$/;"	m	struct:update_release_t
i_extra_languages	vlc_es.h	/^    int             i_extra_languages;    \/**< length in bytes of extra language data pointer *\/$/;"	m	struct:es_format_t
i_extra_picture_buffers	vlc_codec.h	/^    int             i_extra_picture_buffers;$/;"	m	struct:decoder_t
i_filesize	vlc_media_library.h	/^    int64_t         i_filesize;         \/**< Size of the file *\/$/;"	m	struct:ml_media_t
i_first_played	vlc_media_library.h	/^    mtime_t         i_first_played;     \/**< First played *\/$/;"	m	struct:ml_media_t
i_flags	vlc_block.h	/^    uint32_t    i_flags;$/;"	m	struct:block_t
i_flags	vlc_interface.h	/^    int             i_flags;            \/\/\/< Misc flags$/;"	m	struct:interaction_dialog_t
i_flags	vlc_playlist.h	/^    uint8_t                i_flags;     \/**< Flags \\see playlist_item_flags_e *\/$/;"	m	struct:playlist_item_t
i_font_alpha	vlc_text_style.h	/^    int        i_font_alpha;      \/**< The transparency of the text.$/;"	m	struct:__anon3
i_font_color	vlc_text_style.h	/^    int        i_font_color;      \/**< The color of the text 0xRRGGBB$/;"	m	struct:__anon3
i_font_size	vlc_text_style.h	/^    int        i_font_size;       \/**< The font size in pixels *\/$/;"	m	struct:__anon3
i_format	vlc_es.h	/^    vlc_fourcc_t i_format;                          \/**< audio format fourcc *\/$/;"	m	struct:audio_format_t
i_fourcc	vlc_codecs.h	/^    vlc_fourcc_t i_fourcc;$/;"	m	struct:__anon10
i_fourcc	vlc_codecs.h	/^    vlc_fourcc_t i_fourcc;$/;"	m	struct:__anon11
i_frame_length	vlc_es.h	/^    unsigned int i_frame_length;$/;"	m	struct:audio_format_t
i_frame_rate	vlc_es.h	/^    unsigned int i_frame_rate;                     \/**< frame rate numerator *\/$/;"	m	struct:video_format_t
i_frame_rate_base	vlc_es.h	/^    unsigned int i_frame_rate_base;              \/**< frame rate denominator *\/$/;"	m	struct:video_format_t
i_gmask	vlc_es.h	/^    uint32_t i_rmask, i_gmask, i_bmask;          \/**< color masks for RGB chroma *\/$/;"	m	struct:video_format_t
i_group	vlc_es.h	/^    int             i_group;    \/**< group identifier, where means:$/;"	m	struct:es_format_t
i_height	vlc/libvlc_media.h	/^            unsigned    i_height;$/;"	m	struct:libvlc_media_track_info_t::__anon38::__anon40
i_height	vlc_es.h	/^    unsigned int i_height;                               \/**< picture height *\/$/;"	m	struct:video_format_t
i_height	vlc_extensions.h	/^    int i_height;                 \/\/\/< Height hint$/;"	m	struct:extension_widget_t
i_height	vlc_extensions.h	/^    int i_height;                \/\/\/< Height hint in pixels (may be discarded)$/;"	m	struct:extension_dialog_t
i_height	vlc_osd.h	/^    int     i_height;       \/*< height of button state image *\/$/;"	m	struct:osd_state_t
i_height	vlc_osd.h	/^    int     i_height;       \/*< height of button visible state image *\/$/;"	m	struct:osd_button_t
i_height	vlc_osd.h	/^    int     i_height;   \/*< height of OSD Menu on the video screen *\/$/;"	m	struct:osd_menu_t
i_height	vlc_osd.h	/^    int     i_height;   \/*< height of spu region *\/$/;"	m	struct:osd_menu_state_t
i_horiz_span	vlc_extensions.h	/^    int i_horiz_span;             \/\/\/< Horizontal size of the object$/;"	m	struct:extension_widget_t
i_icondata_size	vlc_extensions.h	/^    int   i_icondata_size;    \/**< Size of that data *\/$/;"	m	struct:extension_t
i_id	vlc/libvlc_media.h	/^    int         i_id;$/;"	m	struct:libvlc_media_track_info_t
i_id	vlc/libvlc_media_player.h	/^    int   i_id;$/;"	m	struct:libvlc_track_description_t
i_id	vlc_configuration.h	/^    int         i_id;$/;"	m	struct:config_category_t
i_id	vlc_es.h	/^        int i_id;$/;"	m	struct:subs_format_t::__anon34
i_id	vlc_es.h	/^    int             i_id;       \/**< es identifier, where means$/;"	m	struct:es_format_t
i_id	vlc_extensions.h	/^        int i_id;          \/\/\/< Identifier for the extension module$/;"	m	struct:extension_widget_t::extension_widget_value_t
i_id	vlc_input_item.h	/^    int        i_id;                 \/**< Identifier of the item *\/$/;"	m	struct:input_item_t
i_id	vlc_media_library.h	/^    int                 i_id;       \/**< ID in the database *\/$/;"	m	struct:ml_person_t
i_id	vlc_media_library.h	/^    int32_t         i_id;               \/**< Media ID in the database *\/$/;"	m	struct:ml_media_t
i_id	vlc_messages.h	/^    unsigned int        i_id;$/;"	m	struct:counter_t
i_id	vlc_playlist.h	/^    int                    i_id;        \/**< Playlist item specific id *\/$/;"	m	struct:playlist_item_t
i_iframes	vlc_codec.h	/^    int i_iframes;               \/* One I frame per i_iframes *\/$/;"	m	struct:encoder_t
i_import_time	vlc_media_library.h	/^    mtime_t         i_import_time;      \/**< Time when media was added *\/$/;"	m	struct:ml_media_t
i_infos	vlc_input_item.h	/^    int    i_infos;        \/**< Number of infos in the category *\/$/;"	m	struct:info_category_t
i_input	vlc_vlm.h	/^    int  i_input;       \/*< number of input options *\/$/;"	m	struct:__anon139
i_int	vlc_common.h	/^    int64_t         i_int;$/;"	m	union:__anon93
i_item	vlc_playlist.h	/^    int i_item; \/**< Playist id of the playlist_item_t *\/$/;"	m	struct:playlist_add_t
i_karaoke_background_alpha	vlc_text_style.h	/^    int        i_karaoke_background_alpha;\/**< The transparency of the karaoke bg.$/;"	m	struct:__anon3
i_karaoke_background_color	vlc_text_style.h	/^    int        i_karaoke_background_color;\/**< Background color for karaoke 0xRRGGBB *\/$/;"	m	struct:__anon3
i_last_played	vlc_media_library.h	/^    mtime_t         i_last_played;      \/**< Time when the media was last played *\/$/;"	m	struct:ml_media_t
i_last_skipped	vlc_media_library.h	/^    mtime_t         i_last_skipped;     \/**< Time when the media was last skipped *\/$/;"	m	struct:ml_media_t
i_lbshift	vlc_es.h	/^    int i_rbshift, i_lbshift;$/;"	m	struct:video_format_t
i_left	vlc_bits.h	/^    ssize_t  i_left;    \/* i_count number of available bits *\/$/;"	m	struct:bs_s
i_length	vlc_block.h	/^    mtime_t     i_length;$/;"	m	struct:block_t
i_length	vlc_input.h	/^    int64_t     i_length;   \/* Length(microsecond) if known, else 0 *\/$/;"	m	struct:__anon144
i_length	vlc_vlm.h	/^    int64_t     i_length;   \/*< vlm media instance vlm media item length *\/$/;"	m	struct:__anon142
i_level	vlc/libvlc_media.h	/^    int         i_level;$/;"	m	struct:libvlc_media_track_info_t
i_level	vlc_es.h	/^    int      i_level;         \/**< codec specific information: indicates maximum restrictions on the stream (resolution, bitrate, codec features ...) *\/$/;"	m	struct:es_format_t
i_lgshift	vlc_es.h	/^    int i_rgshift, i_lgshift;$/;"	m	struct:video_format_t
i_lines	vlc_picture.h	/^        int i_lines;        \/**< Number of lines, including margins *\/$/;"	m	struct:__anon130::__anon131
i_lines	vlc_picture.h	/^    int i_lines;           \/**< Number of lines, including margins *\/$/;"	m	struct:plane_t
i_list	vlc_configuration.h	/^    int          i_list;                               \/* Options list size *\/$/;"	m	struct:module_config_t
i_lost_abuffers	vlc/libvlc_media.h	/^    int         i_lost_abuffers;$/;"	m	struct:libvlc_media_stats_t
i_lost_abuffers	vlc_input_item.h	/^    int64_t i_lost_abuffers;$/;"	m	struct:input_stats_t
i_lost_pictures	vlc/libvlc_media.h	/^    int         i_lost_pictures;$/;"	m	struct:libvlc_media_stats_t
i_lost_pictures	vlc_input_item.h	/^    int64_t i_lost_pictures;$/;"	m	struct:input_stats_t
i_lrshift	vlc_es.h	/^    int i_rrshift, i_lrshift;$/;"	m	struct:video_format_t
i_magazine	vlc_es.h	/^        int i_magazine;$/;"	m	struct:subs_format_t::__anon35
i_major	vlc_update.h	/^    int i_major;        \/\/\/< Version major$/;"	m	struct:update_release_t
i_minor	vlc_update.h	/^    int i_minor;        \/\/\/< Version minor$/;"	m	struct:update_release_t
i_name	vlc_httpd.h	/^    int     i_name;$/;"	m	struct:httpd_message_t
i_nb_fields	vlc_picture.h	/^    unsigned int    i_nb_fields;                  \/**< # of displayed fields *\/$/;"	m	struct:picture_t
i_nb_inputs	vlc_sout.h	/^    int                 i_nb_inputs;$/;"	m	struct:sout_mux_t
i_nb_played	vlc_input_item.h	/^    int           i_nb_played;       \/**< Number of times played *\/$/;"	m	struct:input_item_t
i_nb_samples	vlc_block.h	/^    unsigned    i_nb_samples; \/* Used for audio *\/$/;"	m	struct:block_t
i_node	vlc_playlist.h	/^    int i_node; \/**< Playist id of the parent node *\/$/;"	m	struct:playlist_add_t
i_nonce	vlc_http.h	/^    int i_nonce;$/;"	m	struct:http_auth_t
i_object_id	vlc_messages.h	/^    uintptr_t   i_object_id; \/**< Emitter (temporaly) unique object ID or 0 *\/$/;"	m	struct:__anon89
i_offset	vlc_block_helper.h	/^    size_t   i_offset; \/**< byte stream read pointer offset within block *\/$/;"	m	struct:block_bytestream_t
i_option	vlc_vlm.h	/^    int  i_option;      \/*< number of output options *\/$/;"	m	struct:__anon139
i_options	vlc_input_item.h	/^    int        i_options;            \/**< Number of input options *\/$/;"	m	struct:input_item_t
i_order	vlc_subpicture.h	/^    int64_t         i_order;                 \/** an increasing unique number *\/$/;"	m	struct:subpicture_t
i_original_channels	vlc_es.h	/^    uint32_t     i_original_channels;$/;"	m	struct:audio_format_t
i_original_fourcc	vlc_es.h	/^    vlc_fourcc_t    i_original_fourcc;  \/**< original FOURCC from the container *\/$/;"	m	struct:es_format_t
i_original_frame_height	vlc_es.h	/^        int i_original_frame_height;$/;"	m	struct:subs_format_t::__anon33
i_original_frame_width	vlc_es.h	/^        int i_original_frame_width;$/;"	m	struct:subs_format_t::__anon33
i_original_picture_height	vlc_subpicture.h	/^    int          i_original_picture_height;\/**< original height of the movie *\/$/;"	m	struct:subpicture_t
i_original_picture_width	vlc_subpicture.h	/^    int          i_original_picture_width;  \/**< original width of the movie *\/$/;"	m	struct:subpicture_t
i_out_pace_nocontrol	vlc_sout.h	/^    int                 i_out_pace_nocontrol;$/;"	m	struct:sout_instance_t
i_outline_alpha	vlc_text_style.h	/^    int        i_outline_alpha;   \/**< The transparency of the outline.$/;"	m	struct:__anon3
i_outline_color	vlc_text_style.h	/^    int        i_outline_color;   \/**< The color of the outline 0xRRGGBB *\/$/;"	m	struct:__anon3
i_outline_width	vlc_text_style.h	/^    int        i_outline_width;   \/**< The width of the outline in pixels *\/$/;"	m	struct:__anon3
i_output	vlc_video_splitter.h	/^    int                     i_output;$/;"	m	struct:video_splitter_t
i_page	vlc_es.h	/^        int i_page;$/;"	m	struct:subs_format_t::__anon35
i_physical_channels	vlc_es.h	/^    uint32_t     i_physical_channels;$/;"	m	struct:audio_format_t
i_pitch	vlc_picture.h	/^        int i_pitch;        \/**< Number of bytes in a line, including margins *\/$/;"	m	struct:__anon130::__anon131
i_pitch	vlc_picture.h	/^    int i_pitch;           \/**< Number of bytes in a line, including margins *\/$/;"	m	struct:plane_t
i_pixel_pitch	vlc_picture.h	/^    int i_pixel_pitch;$/;"	m	struct:plane_t
i_planes	vlc_picture.h	/^    int             i_planes;                \/**< number of allocated planes *\/$/;"	m	struct:picture_t
i_played_abuffers	vlc/libvlc_media.h	/^    int         i_played_abuffers;$/;"	m	struct:libvlc_media_stats_t
i_played_abuffers	vlc_input_item.h	/^    int64_t i_played_abuffers;$/;"	m	struct:input_stats_t
i_played_count	vlc_media_library.h	/^    int32_t         i_played_count;     \/**< How many time the media was played *\/$/;"	m	struct:ml_media_t
i_port	vlc_sql.h	/^    int i_port;             \/**< Port on which database is running *\/$/;"	m	struct:sql_t
i_port	vlc_url.h	/^    int  i_port;$/;"	m	struct:vlc_url_t
i_pos	vlc_access.h	/^        uint64_t     i_pos;     \/* idem *\/$/;"	m	struct:access_t::__anon145
i_position	vlc_osd.h	/^    int     i_position; \/*< display position *\/$/;"	m	struct:osd_menu_t
i_pressed	vlc_mouse.h	/^    int i_pressed;$/;"	m	struct:__anon135
i_priority	vlc_es.h	/^    int             i_priority; \/**< priority, where means:$/;"	m	struct:es_format_t
i_profile	vlc/libvlc_media.h	/^    int         i_profile;$/;"	m	struct:libvlc_media_track_info_t
i_profile	vlc_es.h	/^    int      i_profile;       \/**< codec specific information (like real audio flavor, mpeg audio layer, h264 profile ...) *\/$/;"	m	struct:es_format_t
i_proto	vlc_httpd.h	/^    uint8_t i_proto;$/;"	m	struct:httpd_message_t
i_pts	vlc_block.h	/^    mtime_t     i_pts;$/;"	m	struct:block_t
i_qstride	vlc_picture.h	/^    int             i_qstride;                    \/**< quantification stride *\/$/;"	m	struct:picture_t
i_qtype	vlc_picture.h	/^    int             i_qtype;                       \/**< quantification style *\/$/;"	m	struct:picture_t
i_ranges	vlc_osd.h	/^    int          i_ranges;   \/*< number of states *\/$/;"	m	struct:osd_button_t
i_rate	vlc/libvlc_media.h	/^            unsigned    i_rate;$/;"	m	struct:libvlc_media_track_info_t::__anon38::__anon39
i_rate	vlc_es.h	/^    unsigned int i_rate;                              \/**< audio sample-rate *\/$/;"	m	struct:audio_format_t
i_rate	vlc_vlm.h	/^    int         i_rate;     \/\/ normal is INPUT_RATE_DEFAULT$/;"	m	struct:__anon142
i_rbshift	vlc_es.h	/^    int i_rbshift, i_lbshift;$/;"	m	struct:video_format_t
i_read_bytes	vlc/libvlc_media.h	/^    int         i_read_bytes;$/;"	m	struct:libvlc_media_stats_t
i_read_bytes	vlc_input_item.h	/^    int64_t i_read_bytes;$/;"	m	struct:input_stats_t
i_read_packets	vlc_input_item.h	/^    int64_t i_read_packets;$/;"	m	struct:input_stats_t
i_refcount	vlc_picture.h	/^    unsigned        i_refcount;                  \/**< link reference counter *\/$/;"	m	struct:picture_t
i_remainder	vlc_mtime.h	/^    uint32_t i_remainder;$/;"	m	struct:date_t
i_results	vlc_interface.h	/^    int  i_results;$/;"	m	struct:intf_dialog_args_t
i_return	vlc_interface.h	/^    int             i_return;           \/\/\/< Return status$/;"	m	struct:interaction_dialog_t
i_revision	vlc_update.h	/^    int i_revision;     \/\/\/< Version revision$/;"	m	struct:update_release_t
i_rgshift	vlc_es.h	/^    int i_rgshift, i_lgshift;$/;"	m	struct:video_format_t
i_rmask	vlc_es.h	/^    uint32_t i_rmask, i_gmask, i_bmask;          \/**< color masks for RGB chroma *\/$/;"	m	struct:video_format_t
i_row	vlc_extensions.h	/^    int i_row;                    \/\/\/< Row in the grid$/;"	m	struct:extension_widget_t
i_rrshift	vlc_es.h	/^    int i_rrshift, i_lrshift;$/;"	m	struct:video_format_t
i_samplerate	vlc_media_library.h	/^    int32_t         i_samplerate;       \/**< Extra: Samplerate of the media *\/$/;"	m	struct:ml_media_t
i_samples	vlc_messages.h	/^    int                 i_samples;$/;"	m	struct:counter_t
i_sar_den	vlc_es.h	/^    unsigned int i_sar_den;$/;"	m	struct:video_format_t
i_sar_num	vlc_es.h	/^    unsigned int i_sar_num;                   \/**< sample\/pixel aspect ratio *\/$/;"	m	struct:video_format_t
i_score	vlc_media_library.h	/^    int32_t         i_score;            \/**< Score computed about the media *\/$/;"	m	struct:ml_media_t
i_seekpoint	vlc_access.h	/^        int          i_seekpoint;\/* idem, start from 0 *\/$/;"	m	struct:access_t::__anon145
i_seekpoint	vlc_demux.h	/^        int          i_seekpoint;   \/* idem, start from 0 *\/$/;"	m	struct:demux_t::__anon124
i_seekpoint	vlc_input.h	/^    int         i_seekpoint;$/;"	m	struct:__anon144
i_sent_bytes	vlc/libvlc_media.h	/^    int         i_sent_bytes;$/;"	m	struct:libvlc_media_stats_t
i_sent_bytes	vlc_input_item.h	/^    int64_t i_sent_bytes;$/;"	m	struct:input_stats_t
i_sent_bytes	vlc_sout.h	/^    int64_t                  i_sent_bytes;$/;"	m	struct:sout_access_out_t
i_sent_packets	vlc/libvlc_media.h	/^    int         i_sent_packets;$/;"	m	struct:libvlc_media_stats_t
i_sent_packets	vlc_input_item.h	/^    int64_t i_sent_packets;$/;"	m	struct:input_stats_t
i_severity	vlc/libvlc_structures.h	/^    int         i_severity;   \/* 0=INFO, 1=ERR, 2=WARN, 3=DBG *\/$/;"	m	struct:libvlc_log_message_t
i_shadow_alpha	vlc_text_style.h	/^    int        i_shadow_alpha;    \/**< The transparency of the shadow.$/;"	m	struct:__anon3
i_shadow_color	vlc_text_style.h	/^    int        i_shadow_color;    \/**< The color of the shadow 0xRRGGBB *\/$/;"	m	struct:__anon3
i_shadow_width	vlc_text_style.h	/^    int        i_shadow_width;    \/**< The width of the shadow in pixels *\/$/;"	m	struct:__anon3
i_short	vlc_configuration.h	/^    char         i_short;                     \/* Optional short option name *\/$/;"	m	struct:module_config_t
i_size	vlc_access.h	/^        uint64_t     i_size;    \/* Write only for access, read only for input *\/$/;"	m	struct:access_t::__anon145
i_size	vlc_arrays.h	/^    int i_size;$/;"	m	struct:vlc_dictionary_t
i_size	vlc_input.h	/^    int64_t     i_size;     \/* Size (bytes) if known, else 0 *\/$/;"	m	struct:__anon144
i_skipped_count	vlc_media_library.h	/^    int32_t         i_skipped_count;    \/**< No. of times file was skipped *\/$/;"	m	struct:ml_media_t
i_spacing	vlc_text_style.h	/^    int        i_spacing;         \/**< The spaceing between glyphs in pixels *\/$/;"	m	struct:__anon3
i_spin_loops	vlc_extensions.h	/^    int i_spin_loops;             \/\/\/< Number of loops to play (-1 = infinite,$/;"	m	struct:extension_widget_t
i_start	vlc_epg.h	/^    int64_t i_start;    \/* Interpreted as a value return by time() *\/$/;"	m	struct:__anon114
i_start	vlc_subpicture.h	/^    mtime_t         i_start;                  \/**< beginning of display date *\/$/;"	m	struct:subpicture_t
i_state	vlc_osd.h	/^    int          i_state;   \/*< state index *\/$/;"	m	struct:osd_state_t
i_status	vlc_httpd.h	/^    int     i_status;$/;"	m	struct:httpd_message_t
i_status	vlc_interface.h	/^    int             i_status;           \/\/\/< Dialog status;$/;"	m	struct:interaction_dialog_t
i_stop	vlc_subpicture.h	/^    mtime_t         i_stop;                         \/**< end of display date *\/$/;"	m	struct:subpicture_t
i_style	vlc_osd.h	/^    int     i_style;    \/*< style of spu region generation *\/$/;"	m	struct:osd_menu_t
i_style_flags	vlc_text_style.h	/^    int        i_style_flags;     \/**< Formatting style flags *\/$/;"	m	struct:__anon3
i_tag	vlc_codecs.h	/^    uint16_t     i_tag;$/;"	m	struct:__anon10
i_threads	vlc_codec.h	/^    int i_threads;               \/* Number of threads to use during encoding *\/$/;"	m	struct:encoder_t
i_time	vlc_common.h	/^    mtime_t         i_time;$/;"	m	union:__anon93
i_time	vlc_vlm.h	/^    int64_t     i_time;     \/*< vlm media instance vlm media current time *\/$/;"	m	struct:__anon142
i_timeToGo	vlc_interface.h	/^    int             i_timeToGo;         \/\/\/< time (in sec) until shown progress is finished$/;"	m	struct:interaction_dialog_t
i_time_offset	vlc_input.h	/^    int64_t i_time_offset;$/;"	m	struct:seekpoint_t
i_title	vlc_access.h	/^        int          i_title;    \/* idem, start from 0 (could be menu) *\/$/;"	m	struct:access_t::__anon145
i_title	vlc_demux.h	/^        int          i_title;       \/* idem, start from 0 (could be menu) *\/$/;"	m	struct:demux_t::__anon124
i_tolerance	vlc_codec.h	/^    int i_tolerance;             \/* Bitrate tolerance *\/$/;"	m	struct:encoder_t
i_track_number	vlc_media_library.h	/^    int16_t         i_track_number;     \/**< Track number *\/$/;"	m	struct:ml_media_t
i_type	vlc/libvlc_media.h	/^    libvlc_track_type_t i_type;$/;"	m	struct:libvlc_media_track_info_t
i_type	vlc_configuration.h	/^    uint8_t      i_type;                              \/* Configuration type *\/$/;"	m	struct:module_config_t
i_type	vlc_httpd.h	/^    uint8_t i_type;$/;"	m	struct:httpd_message_t
i_type	vlc_input_item.h	/^    uint8_t     i_type;              \/**< Type (file, disc, ... see input_item_type_e) *\/$/;"	m	struct:input_item_t
i_type	vlc_interface.h	/^    int             i_type;             \/\/\/< Type identifier$/;"	m	struct:interaction_dialog_t
i_type	vlc_media_library.h	/^    ml_type_e       i_type;             \/**< Type of the media (ml_type_e) *\/$/;"	m	struct:ml_media_t
i_type	vlc_messages.h	/^    int                 i_type;$/;"	m	struct:counter_t
i_type	vlc_vlm.h	/^    int            i_type;            \/* a vlm_event_type_e value *\/$/;"	m	struct:__anon143
i_update	vlc_access.h	/^        unsigned int i_update;  \/* Access sets them on change,$/;"	m	struct:access_t::__anon145
i_update	vlc_demux.h	/^        unsigned int i_update;  \/* Demux sets them on change,$/;"	m	struct:demux_t::__anon124
i_value	vlc_httpd.h	/^    int     i_value;$/;"	m	struct:httpd_message_t
i_version	vlc_httpd.h	/^    uint8_t i_version;$/;"	m	struct:httpd_message_t
i_vert_span	vlc_extensions.h	/^    int i_vert_span;              \/\/\/< Vertical size of the object$/;"	m	struct:extension_widget_t
i_visible_height	vlc_es.h	/^    unsigned int i_visible_height;               \/**< height of visible area *\/$/;"	m	struct:video_format_t
i_visible_lines	vlc_picture.h	/^    int i_visible_lines;            \/**< How many visible lines are there ? *\/$/;"	m	struct:plane_t
i_visible_pitch	vlc_picture.h	/^    int i_visible_pitch;            \/**< How many visible pixels are there ? *\/$/;"	m	struct:plane_t
i_visible_width	vlc_es.h	/^    unsigned int i_visible_width;                 \/**< width of visible area *\/$/;"	m	struct:video_format_t
i_vote	vlc_media_library.h	/^    int8_t          i_vote;             \/**< User vote *\/$/;"	m	struct:ml_media_t
i_width	vlc/libvlc_media.h	/^            unsigned    i_width;$/;"	m	struct:libvlc_media_track_info_t::__anon38::__anon40
i_width	vlc_es.h	/^    unsigned int i_width;                                 \/**< picture width *\/$/;"	m	struct:video_format_t
i_width	vlc_extensions.h	/^    int i_width;                  \/\/\/< Width hint$/;"	m	struct:extension_widget_t
i_width	vlc_extensions.h	/^    int i_width;                 \/\/\/< Width hint in pixels (may be discarded)$/;"	m	struct:extension_dialog_t
i_width	vlc_osd.h	/^    int     i_width;        \/*< width of button state image *\/$/;"	m	struct:osd_state_t
i_width	vlc_osd.h	/^    int     i_width;        \/*< width of button visible state image *\/$/;"	m	struct:osd_button_t
i_width	vlc_osd.h	/^    int     i_width;    \/*< width of OSD Menu on the video screen *\/$/;"	m	struct:osd_menu_t
i_width	vlc_osd.h	/^    int     i_width;    \/*< width of spu region *\/$/;"	m	struct:osd_menu_state_t
i_writes	vlc_sout.h	/^    int                      i_writes;$/;"	m	struct:sout_access_out_t
i_x	vlc_mouse.h	/^    int i_x;$/;"	m	struct:__anon135
i_x	vlc_osd.h	/^    int     i_x;            \/*< x-position of button state image *\/$/;"	m	struct:osd_state_t
i_x	vlc_osd.h	/^    int     i_x;            \/*< x-position of button visible state image *\/$/;"	m	struct:osd_button_t
i_x	vlc_osd.h	/^    int     i_x;        \/*< x position of spu region *\/$/;"	m	struct:osd_menu_state_t
i_x	vlc_osd.h	/^    int     i_x;        \/*< x-position of OSD Menu on the video screen *\/$/;"	m	struct:osd_menu_t
i_x	vlc_subpicture.h	/^    int             i_x;                             \/**< position of region *\/$/;"	m	struct:subpicture_region_t
i_x	vlc_video_splitter.h	/^        int i_x;$/;"	m	struct:__anon75::__anon76
i_x_offset	vlc_es.h	/^    unsigned int i_x_offset;               \/**< start offset of visible area *\/$/;"	m	struct:video_format_t
i_x_origin	vlc_es.h	/^    int  i_x_origin; \/**< x coordinate of the subtitle. 0 = left *\/$/;"	m	struct:subs_format_t
i_y	vlc_mouse.h	/^    int i_y;$/;"	m	struct:__anon135
i_y	vlc_osd.h	/^    int     i_y;            \/*< y-position of button state image *\/$/;"	m	struct:osd_state_t
i_y	vlc_osd.h	/^    int     i_y;            \/*< y-position of button visible state image *\/$/;"	m	struct:osd_button_t
i_y	vlc_osd.h	/^    int     i_y;        \/*< y position of spu region *\/$/;"	m	struct:osd_menu_state_t
i_y	vlc_osd.h	/^    int     i_y;        \/*< y-position of OSD Menu on the video screen *\/$/;"	m	struct:osd_menu_t
i_y	vlc_subpicture.h	/^    int             i_y;                             \/**< position of region *\/$/;"	m	struct:subpicture_region_t
i_y	vlc_video_splitter.h	/^        int i_y;$/;"	m	struct:__anon75::__anon76
i_y_offset	vlc_es.h	/^    unsigned int i_y_offset;               \/**< start offset of visible area *\/$/;"	m	struct:video_format_t
i_y_origin	vlc_es.h	/^    int  i_y_origin; \/**< y coordinate of the subtitle. 0 = top *\/$/;"	m	struct:subs_format_t
i_year	vlc_media_library.h	/^    int16_t         i_year;             \/**< Year of release *\/$/;"	m	struct:ml_media_t
id	vlc_media_library.h	/^    int32_t          id;        \/**< Media\/Album\/Artist... ID (if any) *\/$/;"	m	struct:ml_result_t
id	vlc_vlm.h	/^    int64_t        id;                \/* Media ID *\/$/;"	m	struct:__anon143
id	vlc_vlm.h	/^    int64_t     id;     \/*< numeric id for vlm_media_t item *\/$/;"	m	struct:__anon139
if_freenameindex	vlc_fixups.h	290;"	d
if_index	vlc_fixups.h	/^    unsigned if_index;$/;"	m	struct:if_nameindex
if_name	vlc_fixups.h	/^    char    *if_name;$/;"	m	struct:if_nameindex
if_nameindex	vlc_fixups.h	/^struct if_nameindex$/;"	s
if_nameindex	vlc_fixups.h	289;"	d
if_nametoindex	vlc_fixups.h	287;"	d
image_Convert	vlc_image.h	70;"	d
image_Filter	vlc_image.h	71;"	d
image_HandlerCreate	vlc_image.h	63;"	d
image_Read	vlc_image.h	66;"	d
image_ReadUrl	vlc_image.h	67;"	d
image_Write	vlc_image.h	68;"	d
image_WriteUrl	vlc_image.h	69;"	d
image_handler_t	vlc_common.h	/^typedef struct image_handler_t image_handler_t;$/;"	t	typeref:struct:image_handler_t
image_handler_t	vlc_image.h	/^struct image_handler_t$/;"	s
impossible_deadline	vlc_threads.h	/^mtime_t impossible_deadline( mtime_t deadline )$/;"	f
impossible_delay	vlc_threads.h	/^mtime_t impossible_delay( mtime_t delay )$/;"	f
in6_addr	vlc_network.h	/^struct in6_addr$/;"	s
in6addr_any	vlc_network.h	/^static const struct in6_addr in6addr_any =$/;"	v	typeref:struct:in6_addr
index	vlc/libvlc_events.h	/^            int index;$/;"	m	struct:libvlc_event_t::__anon41::__anon55
index	vlc/libvlc_events.h	/^            int index;$/;"	m	struct:libvlc_event_t::__anon41::__anon56
index	vlc/libvlc_events.h	/^            int index;$/;"	m	struct:libvlc_event_t::__anon41::__anon57
index	vlc/libvlc_events.h	/^            int index;$/;"	m	struct:libvlc_event_t::__anon41::__anon58
info	vlc_access.h	/^    } info;$/;"	m	struct:access_t	typeref:struct:access_t::__anon145
info	vlc_demux.h	/^    } info;$/;"	m	struct:demux_t	typeref:struct:demux_t::__anon124
info	vlc_vout_display.h	/^    vout_display_info_t info;$/;"	m	struct:vout_display_t
info_category_t	vlc_common.h	/^typedef struct info_category_t info_category_t;$/;"	t	typeref:struct:info_category_t
info_category_t	vlc_input_item.h	/^struct info_category_t$/;"	s
info_t	vlc_common.h	/^typedef struct info_t info_t;$/;"	t	typeref:struct:info_t
info_t	vlc_input_item.h	/^struct info_t$/;"	s
inhibit	vlc_inhibit.h	/^    void             (*inhibit) (vlc_inhibit_t *, bool);$/;"	m	struct:vlc_inhibit
input	vlc_vout.h	/^    vlc_object_t         *input;$/;"	m	struct:__anon83
input_AddSubtitle	vlc_input.h	/^static inline int input_AddSubtitle( input_thread_t *p_input, const char *psz_url, bool b_check_extension )$/;"	f
input_Create	vlc_input.h	528;"	d
input_CreateAndStart	vlc_input.h	531;"	d
input_GetAout	vlc_input.h	/^static inline audio_output_t *input_GetAout( input_thread_t *p_input )$/;"	f
input_GetEsObjects	vlc_input.h	/^static inline int input_GetEsObjects( input_thread_t *p_input, int i_id,$/;"	f
input_GetPcrSystem	vlc_input.h	/^static inline int input_GetPcrSystem( input_thread_t *p_input, mtime_t *pi_system, mtime_t *pi_delay )$/;"	f
input_GetState	vlc_input.h	/^static inline input_state_e input_GetState( input_thread_t * p_input )$/;"	f
input_GetVout	vlc_input.h	/^static inline vout_thread_t *input_GetVout( input_thread_t *p_input )$/;"	f
input_ModifyPcrSystem	vlc_input.h	/^static inline int input_ModifyPcrSystem( input_thread_t *p_input, bool b_absolute, mtime_t i_system )$/;"	f
input_Read	vlc_input.h	538;"	d
input_attachment_t	vlc_common.h	/^typedef struct input_attachment_t input_attachment_t;$/;"	t	typeref:struct:input_attachment_t
input_attachment_t	vlc_input.h	/^struct input_attachment_t$/;"	s
input_event_type_e	vlc_input.h	/^typedef enum input_event_type_e$/;"	g
input_event_type_e	vlc_input.h	/^} input_event_type_e;$/;"	t	typeref:enum:input_event_type_e
input_item_GetArtURL	vlc_input_item.h	235;"	d
input_item_GetTrackNum	vlc_input_item.h	233;"	d
input_item_New	vlc_input_item.h	263;"	d
input_item_SetArtURL	vlc_input_item.h	234;"	d
input_item_SetTrackNum	vlc_input_item.h	232;"	d
input_item_duration_changed	vlc_events.h	/^        } input_item_duration_changed;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_duration_changed
input_item_error_when_reading_changed	vlc_events.h	/^        struct input_item_error_when_reading_changed$/;"	s	union:vlc_event_t::vlc_event_type_specific
input_item_error_when_reading_changed	vlc_events.h	/^        } input_item_error_when_reading_changed;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::input_item_error_when_reading_changed
input_item_info_changed	vlc_events.h	/^        } input_item_info_changed;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_info_changed
input_item_meta_changed	vlc_events.h	/^        } input_item_meta_changed;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_meta_changed
input_item_name_changed	vlc_events.h	/^        } input_item_name_changed;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_name_changed
input_item_node_t	vlc_common.h	/^typedef struct input_item_node_t input_item_node_t;$/;"	t	typeref:struct:input_item_node_t
input_item_node_t	vlc_input_item.h	/^struct input_item_node_t$/;"	s
input_item_option_e	vlc_input_item.h	/^enum input_item_option_e$/;"	g
input_item_preparsed_changed	vlc_events.h	/^        } input_item_preparsed_changed;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_preparsed_changed
input_item_subitem_added	vlc_events.h	/^        } input_item_subitem_added;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_subitem_added
input_item_subitem_tree_added	vlc_events.h	/^        } input_item_subitem_tree_added;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_subitem_tree_added
input_item_t	vlc_common.h	/^typedef struct input_item_t input_item_t;$/;"	t	typeref:struct:input_item_t
input_item_t	vlc_input_item.h	/^struct input_item_t$/;"	s
input_item_type_e	vlc_input_item.h	/^enum input_item_type_e$/;"	g
input_query_e	vlc_input.h	/^enum input_query_e$/;"	g
input_resource_t	vlc_input.h	/^typedef struct input_resource_t input_resource_t;$/;"	t	typeref:struct:input_resource_t
input_selected_stream_changed	vlc_events.h	/^        } input_selected_stream_changed;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_input_selected_stream_changed
input_state	vlc_vlm.h	/^    input_state_e  input_state;       \/* Input instance event type *\/$/;"	m	struct:__anon143
input_state_changed	vlc_events.h	/^        } input_state_changed;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_input_state_changed
input_state_e	vlc_input.h	/^typedef enum input_state_e$/;"	g
input_state_e	vlc_input.h	/^} input_state_e;$/;"	t	typeref:enum:input_state_e
input_stats_t	vlc_common.h	/^typedef struct input_stats_t input_stats_t;$/;"	t	typeref:struct:input_stats_t
input_stats_t	vlc_input_item.h	/^struct input_stats_t$/;"	s
input_thread_private_t	vlc_input.h	/^typedef struct input_thread_private_t input_thread_private_t;$/;"	t	typeref:struct:input_thread_private_t
input_thread_t	vlc_common.h	/^typedef struct input_thread_t input_thread_t;$/;"	t	typeref:struct:input_thread_t
input_thread_t	vlc_input.h	/^struct input_thread_t$/;"	s
input_title_t	vlc_input.h	/^} input_title_t;$/;"	t	typeref:struct:__anon144
interaction_Register	vlc_interface.h	326;"	d
interaction_Unregister	vlc_interface.h	327;"	d
interaction_dialog_t	vlc_interface.h	/^typedef struct interaction_dialog_t$/;"	s
interaction_dialog_t	vlc_interface.h	/^} interaction_dialog_t;$/;"	t	typeref:struct:interaction_dialog_t
intf_Create	vlc_interface.h	104;"	d
intf_UserStringInput	vlc_interface.h	325;"	d
intf_dialog_args_t	vlc_interface.h	/^struct intf_dialog_args_t$/;"	s
intf_dialog_args_t	vlc_interface.h	/^typedef struct intf_dialog_args_t intf_dialog_args_t;$/;"	t	typeref:struct:intf_dialog_args_t
intf_sys_t	vlc_interface.h	/^typedef struct intf_sys_t intf_sys_t;$/;"	t	typeref:struct:intf_sys_t
intf_thread_t	vlc_interface.h	/^typedef struct intf_thread_t$/;"	s
intf_thread_t	vlc_interface.h	/^} intf_thread_t;$/;"	t	typeref:struct:intf_thread_t
iov_base	vlc_network.h	/^    void  *iov_base;$/;"	m	struct:iovec
iov_len	vlc_network.h	/^    size_t iov_len;$/;"	m	struct:iovec
iovec	vlc_network.h	/^struct iovec$/;"	s
is_display_filled	vlc_vout_display.h	/^    bool is_display_filled;$/;"	m	struct:__anon66
is_fullscreen	vlc_vout_display.h	/^    bool is_fullscreen;  \/* Is the display fullscreen *\/$/;"	m	struct:__anon66
is_slow	vlc_vout_display.h	/^    bool is_slow;                           \/* The picture memory has slow read\/write *\/$/;"	m	struct:__anon71
is_standalone	vlc_vout_window.h	/^    bool is_standalone;$/;"	m	struct:__anon127
iso639_lang_t	vlc_common.h	/^typedef struct iso639_lang_t iso639_lang_t;$/;"	t	typeref:struct:iso639_lang_t
iso639_lang_t	vlc_iso_lang.h	/^struct iso639_lang_t$/;"	s
item	vlc/libvlc_events.h	/^            libvlc_media_t * item;$/;"	m	struct:libvlc_event_t::__anon41::__anon55
item	vlc/libvlc_events.h	/^            libvlc_media_t * item;$/;"	m	struct:libvlc_event_t::__anon41::__anon56
item	vlc/libvlc_events.h	/^            libvlc_media_t * item;$/;"	m	struct:libvlc_event_t::__anon41::__anon57
item	vlc/libvlc_events.h	/^            libvlc_media_t * item;$/;"	m	struct:libvlc_event_t::__anon41::__anon58
item	vlc/libvlc_events.h	/^            libvlc_media_t * item;$/;"	m	struct:libvlc_event_t::__anon41::__anon59
items	vlc_playlist.h	/^    playlist_item_array_t items; \/**< Arrays of items *\/$/;"	m	struct:playlist_t
kVLCDictionaryNotFound	vlc_arrays.h	/^static void * const kVLCDictionaryNotFound = NULL;$/;"	v
key	vlc_fixups.h	/^    char *key;$/;"	m	struct:entry
last_update	vlc_messages.h	/^    mtime_t             last_update;$/;"	m	struct:counter_t
leaf	vlc_fixups.h	/^    leaf$/;"	e	enum:__anon87
left	vlc/libvlc_media_player.h	/^    int top, left;$/;"	m	struct:libvlc_rectangle_t
left	vlc_codecs.h	/^    int left, top, right, bottom;$/;"	m	struct:ATTR_PACKED
left	vlc_media_library.h	/^    ml_ftree_t      *left;      \/**< Left child of Bin tree *\/$/;"	m	struct:ml_ftree_t
length	vlc_sql.h	/^    int length;$/;"	m	struct:__anon78
libvlc_AudioChannel_Dolbys	vlc/libvlc_media_player.h	/^    libvlc_AudioChannel_Dolbys  =  5$/;"	e	enum:libvlc_audio_output_channel_t
libvlc_AudioChannel_Error	vlc/libvlc_media_player.h	/^    libvlc_AudioChannel_Error   = -1,$/;"	e	enum:libvlc_audio_output_channel_t
libvlc_AudioChannel_Left	vlc/libvlc_media_player.h	/^    libvlc_AudioChannel_Left    =  3,$/;"	e	enum:libvlc_audio_output_channel_t
libvlc_AudioChannel_RStereo	vlc/libvlc_media_player.h	/^    libvlc_AudioChannel_RStereo =  2,$/;"	e	enum:libvlc_audio_output_channel_t
libvlc_AudioChannel_Right	vlc/libvlc_media_player.h	/^    libvlc_AudioChannel_Right   =  4,$/;"	e	enum:libvlc_audio_output_channel_t
libvlc_AudioChannel_Stereo	vlc/libvlc_media_player.h	/^    libvlc_AudioChannel_Stereo  =  1,$/;"	e	enum:libvlc_audio_output_channel_t
libvlc_AudioOutputDevice_2F2R	vlc/libvlc_media_player.h	/^    libvlc_AudioOutputDevice_2F2R   =  4,$/;"	e	enum:libvlc_audio_output_device_types_t
libvlc_AudioOutputDevice_3F2R	vlc/libvlc_media_player.h	/^    libvlc_AudioOutputDevice_3F2R   =  5,$/;"	e	enum:libvlc_audio_output_device_types_t
libvlc_AudioOutputDevice_5_1	vlc/libvlc_media_player.h	/^    libvlc_AudioOutputDevice_5_1    =  6,$/;"	e	enum:libvlc_audio_output_device_types_t
libvlc_AudioOutputDevice_6_1	vlc/libvlc_media_player.h	/^    libvlc_AudioOutputDevice_6_1    =  7,$/;"	e	enum:libvlc_audio_output_device_types_t
libvlc_AudioOutputDevice_7_1	vlc/libvlc_media_player.h	/^    libvlc_AudioOutputDevice_7_1    =  8,$/;"	e	enum:libvlc_audio_output_device_types_t
libvlc_AudioOutputDevice_Error	vlc/libvlc_media_player.h	/^    libvlc_AudioOutputDevice_Error  = -1,$/;"	e	enum:libvlc_audio_output_device_types_t
libvlc_AudioOutputDevice_Mono	vlc/libvlc_media_player.h	/^    libvlc_AudioOutputDevice_Mono   =  1,$/;"	e	enum:libvlc_audio_output_device_types_t
libvlc_AudioOutputDevice_SPDIF	vlc/libvlc_media_player.h	/^    libvlc_AudioOutputDevice_SPDIF  = 10$/;"	e	enum:libvlc_audio_output_device_types_t
libvlc_AudioOutputDevice_Stereo	vlc/libvlc_media_player.h	/^    libvlc_AudioOutputDevice_Stereo =  2,$/;"	e	enum:libvlc_audio_output_device_types_t
libvlc_Buffering	vlc/libvlc_media.h	/^    libvlc_Buffering,$/;"	e	enum:libvlc_state_t
libvlc_Ended	vlc/libvlc_media.h	/^    libvlc_Ended,$/;"	e	enum:libvlc_state_t
libvlc_Error	vlc/libvlc_media.h	/^    libvlc_Error$/;"	e	enum:libvlc_state_t
libvlc_MediaDiscovererEnded	vlc/libvlc_events.h	/^    libvlc_MediaDiscovererEnded,$/;"	e	enum:libvlc_event_e
libvlc_MediaDiscovererStarted	vlc/libvlc_events.h	/^    libvlc_MediaDiscovererStarted=0x500,$/;"	e	enum:libvlc_event_e
libvlc_MediaDurationChanged	vlc/libvlc_events.h	/^    libvlc_MediaDurationChanged,$/;"	e	enum:libvlc_event_e
libvlc_MediaFreed	vlc/libvlc_events.h	/^    libvlc_MediaFreed,$/;"	e	enum:libvlc_event_e
libvlc_MediaListItemAdded	vlc/libvlc_events.h	/^    libvlc_MediaListItemAdded=0x200,$/;"	e	enum:libvlc_event_e
libvlc_MediaListItemDeleted	vlc/libvlc_events.h	/^    libvlc_MediaListItemDeleted,$/;"	e	enum:libvlc_event_e
libvlc_MediaListPlayerNextItemSet	vlc/libvlc_events.h	/^    libvlc_MediaListPlayerNextItemSet,$/;"	e	enum:libvlc_event_e
libvlc_MediaListPlayerPlayed	vlc/libvlc_events.h	/^    libvlc_MediaListPlayerPlayed=0x400,$/;"	e	enum:libvlc_event_e
libvlc_MediaListPlayerStopped	vlc/libvlc_events.h	/^    libvlc_MediaListPlayerStopped,$/;"	e	enum:libvlc_event_e
libvlc_MediaListViewItemAdded	vlc/libvlc_events.h	/^    libvlc_MediaListViewItemAdded=0x300,$/;"	e	enum:libvlc_event_e
libvlc_MediaListViewItemDeleted	vlc/libvlc_events.h	/^    libvlc_MediaListViewItemDeleted,$/;"	e	enum:libvlc_event_e
libvlc_MediaListViewWillAddItem	vlc/libvlc_events.h	/^    libvlc_MediaListViewWillAddItem,$/;"	e	enum:libvlc_event_e
libvlc_MediaListViewWillDeleteItem	vlc/libvlc_events.h	/^    libvlc_MediaListViewWillDeleteItem,$/;"	e	enum:libvlc_event_e
libvlc_MediaListWillAddItem	vlc/libvlc_events.h	/^    libvlc_MediaListWillAddItem,$/;"	e	enum:libvlc_event_e
libvlc_MediaListWillDeleteItem	vlc/libvlc_events.h	/^    libvlc_MediaListWillDeleteItem,$/;"	e	enum:libvlc_event_e
libvlc_MediaMetaChanged	vlc/libvlc_events.h	/^    libvlc_MediaMetaChanged=0,$/;"	e	enum:libvlc_event_e
libvlc_MediaParsedChanged	vlc/libvlc_events.h	/^    libvlc_MediaParsedChanged,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerBackward	vlc/libvlc_events.h	/^    libvlc_MediaPlayerBackward,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerBuffering	vlc/libvlc_events.h	/^    libvlc_MediaPlayerBuffering,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerEncounteredError	vlc/libvlc_events.h	/^    libvlc_MediaPlayerEncounteredError,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerEndReached	vlc/libvlc_events.h	/^    libvlc_MediaPlayerEndReached,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerForward	vlc/libvlc_events.h	/^    libvlc_MediaPlayerForward,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerLengthChanged	vlc/libvlc_events.h	/^    libvlc_MediaPlayerLengthChanged,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerMediaChanged	vlc/libvlc_events.h	/^    libvlc_MediaPlayerMediaChanged=0x100,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerNothingSpecial	vlc/libvlc_events.h	/^    libvlc_MediaPlayerNothingSpecial,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerOpening	vlc/libvlc_events.h	/^    libvlc_MediaPlayerOpening,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerPausableChanged	vlc/libvlc_events.h	/^    libvlc_MediaPlayerPausableChanged,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerPaused	vlc/libvlc_events.h	/^    libvlc_MediaPlayerPaused,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerPlaying	vlc/libvlc_events.h	/^    libvlc_MediaPlayerPlaying,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerPositionChanged	vlc/libvlc_events.h	/^    libvlc_MediaPlayerPositionChanged,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerSeekableChanged	vlc/libvlc_events.h	/^    libvlc_MediaPlayerSeekableChanged,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerSnapshotTaken	vlc/libvlc_events.h	/^    libvlc_MediaPlayerSnapshotTaken,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerStopped	vlc/libvlc_events.h	/^    libvlc_MediaPlayerStopped,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerTimeChanged	vlc/libvlc_events.h	/^    libvlc_MediaPlayerTimeChanged,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerTitleChanged	vlc/libvlc_events.h	/^    libvlc_MediaPlayerTitleChanged,$/;"	e	enum:libvlc_event_e
libvlc_MediaPlayerVout	vlc/libvlc_events.h	/^    libvlc_MediaPlayerVout,$/;"	e	enum:libvlc_event_e
libvlc_MediaStateChanged	vlc/libvlc_events.h	/^    libvlc_MediaStateChanged,$/;"	e	enum:libvlc_event_e
libvlc_MediaSubItemAdded	vlc/libvlc_events.h	/^    libvlc_MediaSubItemAdded,$/;"	e	enum:libvlc_event_e
libvlc_NothingSpecial	vlc/libvlc_media.h	/^    libvlc_NothingSpecial=0,$/;"	e	enum:libvlc_state_t
libvlc_Opening	vlc/libvlc_media.h	/^    libvlc_Opening,$/;"	e	enum:libvlc_state_t
libvlc_Paused	vlc/libvlc_media.h	/^    libvlc_Paused,$/;"	e	enum:libvlc_state_t
libvlc_Playing	vlc/libvlc_media.h	/^    libvlc_Playing,$/;"	e	enum:libvlc_state_t
libvlc_Stopped	vlc/libvlc_media.h	/^    libvlc_Stopped,$/;"	e	enum:libvlc_state_t
libvlc_VlmMediaAdded	vlc/libvlc_events.h	/^    libvlc_VlmMediaAdded=0x600,$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaChanged	vlc/libvlc_events.h	/^    libvlc_VlmMediaChanged,$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaInstanceStarted	vlc/libvlc_events.h	/^    libvlc_VlmMediaInstanceStarted,$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaInstanceStatusEnd	vlc/libvlc_events.h	/^    libvlc_VlmMediaInstanceStatusEnd,$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaInstanceStatusError	vlc/libvlc_events.h	/^    libvlc_VlmMediaInstanceStatusError$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaInstanceStatusInit	vlc/libvlc_events.h	/^    libvlc_VlmMediaInstanceStatusInit,$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaInstanceStatusOpening	vlc/libvlc_events.h	/^    libvlc_VlmMediaInstanceStatusOpening,$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaInstanceStatusPause	vlc/libvlc_events.h	/^    libvlc_VlmMediaInstanceStatusPause,$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaInstanceStatusPlaying	vlc/libvlc_events.h	/^    libvlc_VlmMediaInstanceStatusPlaying,$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaInstanceStopped	vlc/libvlc_events.h	/^    libvlc_VlmMediaInstanceStopped,$/;"	e	enum:libvlc_event_e
libvlc_VlmMediaRemoved	vlc/libvlc_events.h	/^    libvlc_VlmMediaRemoved,$/;"	e	enum:libvlc_event_e
libvlc_adjust_Brightness	vlc/libvlc_media_player.h	/^    libvlc_adjust_Brightness,$/;"	e	enum:libvlc_video_adjust_option_t
libvlc_adjust_Contrast	vlc/libvlc_media_player.h	/^    libvlc_adjust_Contrast,$/;"	e	enum:libvlc_video_adjust_option_t
libvlc_adjust_Enable	vlc/libvlc_media_player.h	/^    libvlc_adjust_Enable = 0,$/;"	e	enum:libvlc_video_adjust_option_t
libvlc_adjust_Gamma	vlc/libvlc_media_player.h	/^    libvlc_adjust_Gamma$/;"	e	enum:libvlc_video_adjust_option_t
libvlc_adjust_Hue	vlc/libvlc_media_player.h	/^    libvlc_adjust_Hue,$/;"	e	enum:libvlc_video_adjust_option_t
libvlc_adjust_Saturation	vlc/libvlc_media_player.h	/^    libvlc_adjust_Saturation,$/;"	e	enum:libvlc_video_adjust_option_t
libvlc_audio_cleanup_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_audio_cleanup_cb)(void *data);$/;"	t
libvlc_audio_drain_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_audio_drain_cb)(void *data);$/;"	t
libvlc_audio_flush_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_audio_flush_cb)(void *data, int64_t pts);$/;"	t
libvlc_audio_output_channel_t	vlc/libvlc_media_player.h	/^typedef enum libvlc_audio_output_channel_t {$/;"	g
libvlc_audio_output_channel_t	vlc/libvlc_media_player.h	/^} libvlc_audio_output_channel_t;$/;"	t	typeref:enum:libvlc_audio_output_channel_t
libvlc_audio_output_device_types_t	vlc/libvlc_media_player.h	/^typedef enum libvlc_audio_output_device_types_t {$/;"	g
libvlc_audio_output_device_types_t	vlc/libvlc_media_player.h	/^} libvlc_audio_output_device_types_t;$/;"	t	typeref:enum:libvlc_audio_output_device_types_t
libvlc_audio_output_t	vlc/libvlc_media_player.h	/^typedef struct libvlc_audio_output_t$/;"	s
libvlc_audio_output_t	vlc/libvlc_media_player.h	/^} libvlc_audio_output_t;$/;"	t	typeref:struct:libvlc_audio_output_t
libvlc_audio_pause_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_audio_pause_cb)(void *data, int64_t pts);$/;"	t
libvlc_audio_play_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_audio_play_cb)(void *data, const void *samples,$/;"	t
libvlc_audio_resume_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_audio_resume_cb)(void *data, int64_t pts);$/;"	t
libvlc_audio_set_volume_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_audio_set_volume_cb)(void *data,$/;"	t
libvlc_audio_setup_cb	vlc/libvlc_media_player.h	/^typedef int (*libvlc_audio_setup_cb)(void **data, char *format, unsigned *rate,$/;"	t
libvlc_callback_t	vlc/libvlc.h	/^typedef void ( *libvlc_callback_t )( const struct libvlc_event_t *, void * );$/;"	t
libvlc_delay	vlc/libvlc.h	/^static inline int64_t libvlc_delay(int64_t pts)$/;"	f
libvlc_event_e	vlc/libvlc_events.h	/^enum libvlc_event_e {$/;"	g
libvlc_event_manager_t	vlc/libvlc.h	/^typedef struct libvlc_event_manager_t libvlc_event_manager_t;$/;"	t	typeref:struct:libvlc_event_manager_t
libvlc_event_t	vlc/libvlc_events.h	/^typedef struct libvlc_event_t$/;"	s
libvlc_event_t	vlc/libvlc_events.h	/^} libvlc_event_t;$/;"	t	typeref:struct:libvlc_event_t
libvlc_event_type_t	vlc/libvlc.h	/^typedef int libvlc_event_type_t;$/;"	t
libvlc_instance_t	vlc/libvlc_structures.h	/^typedef struct libvlc_instance_t libvlc_instance_t;$/;"	t	typeref:struct:libvlc_instance_t
libvlc_int_t	vlc_common.h	/^typedef struct libvlc_int_t libvlc_int_t;$/;"	t	typeref:struct:libvlc_int_t
libvlc_int_t	vlc_main.h	/^struct libvlc_int_t$/;"	s
libvlc_log_iterator_t	vlc/libvlc_structures.h	/^typedef struct libvlc_log_iterator_t libvlc_log_iterator_t;$/;"	t	typeref:struct:libvlc_log_iterator_t
libvlc_log_message_t	vlc/libvlc_structures.h	/^typedef struct libvlc_log_message_t$/;"	s
libvlc_log_message_t	vlc/libvlc_structures.h	/^} libvlc_log_message_t;$/;"	t	typeref:struct:libvlc_log_message_t
libvlc_log_t	vlc/libvlc_structures.h	/^typedef struct libvlc_log_t libvlc_log_t;$/;"	t	typeref:struct:libvlc_log_t
libvlc_logo_delay	vlc/libvlc_media_player.h	/^    libvlc_logo_delay,$/;"	e	enum:libvlc_video_logo_option_t
libvlc_logo_enable	vlc/libvlc_media_player.h	/^    libvlc_logo_enable,$/;"	e	enum:libvlc_video_logo_option_t
libvlc_logo_file	vlc/libvlc_media_player.h	/^    libvlc_logo_file,           \/**< string argument, "file,d,t;file,d,t;..." *\/$/;"	e	enum:libvlc_video_logo_option_t
libvlc_logo_opacity	vlc/libvlc_media_player.h	/^    libvlc_logo_opacity,$/;"	e	enum:libvlc_video_logo_option_t
libvlc_logo_position	vlc/libvlc_media_player.h	/^    libvlc_logo_position$/;"	e	enum:libvlc_video_logo_option_t
libvlc_logo_repeat	vlc/libvlc_media_player.h	/^    libvlc_logo_repeat,$/;"	e	enum:libvlc_video_logo_option_t
libvlc_logo_x	vlc/libvlc_media_player.h	/^    libvlc_logo_x,$/;"	e	enum:libvlc_video_logo_option_t
libvlc_logo_y	vlc/libvlc_media_player.h	/^    libvlc_logo_y,$/;"	e	enum:libvlc_video_logo_option_t
libvlc_marquee_Color	vlc/libvlc_media_player.h	/^    libvlc_marquee_Color,$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_marquee_Enable	vlc/libvlc_media_player.h	/^    libvlc_marquee_Enable = 0,$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_marquee_Opacity	vlc/libvlc_media_player.h	/^    libvlc_marquee_Opacity,$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_marquee_Position	vlc/libvlc_media_player.h	/^    libvlc_marquee_Position,$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_marquee_Refresh	vlc/libvlc_media_player.h	/^    libvlc_marquee_Refresh,$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_marquee_Size	vlc/libvlc_media_player.h	/^    libvlc_marquee_Size,$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_marquee_Text	vlc/libvlc_media_player.h	/^    libvlc_marquee_Text,                  \/** string argument *\/$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_marquee_Timeout	vlc/libvlc_media_player.h	/^    libvlc_marquee_Timeout,$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_marquee_X	vlc/libvlc_media_player.h	/^    libvlc_marquee_X,$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_marquee_Y	vlc/libvlc_media_player.h	/^    libvlc_marquee_Y$/;"	e	enum:libvlc_video_marquee_option_t
libvlc_media_discoverer_t	vlc/libvlc_media_discoverer.h	/^typedef struct libvlc_media_discoverer_t libvlc_media_discoverer_t;$/;"	t	typeref:struct:libvlc_media_discoverer_t
libvlc_media_library_t	vlc/libvlc_media_library.h	/^typedef struct libvlc_media_library_t libvlc_media_library_t;$/;"	t	typeref:struct:libvlc_media_library_t
libvlc_media_list_player_t	vlc/libvlc_media_list_player.h	/^typedef struct libvlc_media_list_player_t libvlc_media_list_player_t;$/;"	t	typeref:struct:libvlc_media_list_player_t
libvlc_media_list_t	vlc/libvlc_media_list.h	/^typedef struct libvlc_media_list_t libvlc_media_list_t;$/;"	t	typeref:struct:libvlc_media_list_t
libvlc_media_option_trusted	vlc/libvlc_media.h	/^    libvlc_media_option_trusted = 0x2,$/;"	e	enum:__anon37
libvlc_media_option_unique	vlc/libvlc_media.h	/^    libvlc_media_option_unique = 0x100$/;"	e	enum:__anon37
libvlc_media_player_t	vlc/libvlc_media_player.h	/^typedef struct libvlc_media_player_t libvlc_media_player_t;$/;"	t	typeref:struct:libvlc_media_player_t
libvlc_media_stats_t	vlc/libvlc_media.h	/^typedef struct libvlc_media_stats_t$/;"	s
libvlc_media_stats_t	vlc/libvlc_media.h	/^} libvlc_media_stats_t;$/;"	t	typeref:struct:libvlc_media_stats_t
libvlc_media_t	vlc/libvlc_media.h	/^typedef struct libvlc_media_t libvlc_media_t;$/;"	t	typeref:struct:libvlc_media_t
libvlc_media_track_info_t	vlc/libvlc_media.h	/^typedef struct libvlc_media_track_info_t$/;"	s
libvlc_media_track_info_t	vlc/libvlc_media.h	/^} libvlc_media_track_info_t;$/;"	t	typeref:struct:libvlc_media_track_info_t
libvlc_meta_Album	vlc/libvlc_media.h	/^    libvlc_meta_Album,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Artist	vlc/libvlc_media.h	/^    libvlc_meta_Artist,$/;"	e	enum:libvlc_meta_t
libvlc_meta_ArtworkURL	vlc/libvlc_media.h	/^    libvlc_meta_ArtworkURL,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Copyright	vlc/libvlc_media.h	/^    libvlc_meta_Copyright,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Date	vlc/libvlc_media.h	/^    libvlc_meta_Date,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Description	vlc/libvlc_media.h	/^    libvlc_meta_Description,$/;"	e	enum:libvlc_meta_t
libvlc_meta_EncodedBy	vlc/libvlc_media.h	/^    libvlc_meta_EncodedBy,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Genre	vlc/libvlc_media.h	/^    libvlc_meta_Genre,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Language	vlc/libvlc_media.h	/^    libvlc_meta_Language,$/;"	e	enum:libvlc_meta_t
libvlc_meta_NowPlaying	vlc/libvlc_media.h	/^    libvlc_meta_NowPlaying,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Publisher	vlc/libvlc_media.h	/^    libvlc_meta_Publisher,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Rating	vlc/libvlc_media.h	/^    libvlc_meta_Rating,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Setting	vlc/libvlc_media.h	/^    libvlc_meta_Setting,$/;"	e	enum:libvlc_meta_t
libvlc_meta_Title	vlc/libvlc_media.h	/^    libvlc_meta_Title,$/;"	e	enum:libvlc_meta_t
libvlc_meta_TrackID	vlc/libvlc_media.h	/^    libvlc_meta_TrackID$/;"	e	enum:libvlc_meta_t
libvlc_meta_TrackNumber	vlc/libvlc_media.h	/^    libvlc_meta_TrackNumber,$/;"	e	enum:libvlc_meta_t
libvlc_meta_URL	vlc/libvlc_media.h	/^    libvlc_meta_URL,$/;"	e	enum:libvlc_meta_t
libvlc_meta_t	vlc/libvlc_media.h	/^typedef enum libvlc_meta_t {$/;"	g
libvlc_meta_t	vlc/libvlc_media.h	/^} libvlc_meta_t;$/;"	t	typeref:enum:libvlc_meta_t
libvlc_module_description_t	vlc/libvlc.h	/^typedef struct libvlc_module_description_t$/;"	s
libvlc_module_description_t	vlc/libvlc.h	/^} libvlc_module_description_t;$/;"	t	typeref:struct:libvlc_module_description_t
libvlc_navigate_activate	vlc/libvlc_media_player.h	/^    libvlc_navigate_activate = 0,$/;"	e	enum:libvlc_navigate_mode_t
libvlc_navigate_down	vlc/libvlc_media_player.h	/^    libvlc_navigate_down,$/;"	e	enum:libvlc_navigate_mode_t
libvlc_navigate_left	vlc/libvlc_media_player.h	/^    libvlc_navigate_left,$/;"	e	enum:libvlc_navigate_mode_t
libvlc_navigate_mode_t	vlc/libvlc_media_player.h	/^typedef enum libvlc_navigate_mode_t$/;"	g
libvlc_navigate_mode_t	vlc/libvlc_media_player.h	/^} libvlc_navigate_mode_t;$/;"	t	typeref:enum:libvlc_navigate_mode_t
libvlc_navigate_right	vlc/libvlc_media_player.h	/^    libvlc_navigate_right$/;"	e	enum:libvlc_navigate_mode_t
libvlc_navigate_up	vlc/libvlc_media_player.h	/^    libvlc_navigate_up,$/;"	e	enum:libvlc_navigate_mode_t
libvlc_playback_mode_default	vlc/libvlc_media_list_player.h	/^    libvlc_playback_mode_default,$/;"	e	enum:libvlc_playback_mode_t
libvlc_playback_mode_loop	vlc/libvlc_media_list_player.h	/^    libvlc_playback_mode_loop,$/;"	e	enum:libvlc_playback_mode_t
libvlc_playback_mode_repeat	vlc/libvlc_media_list_player.h	/^    libvlc_playback_mode_repeat$/;"	e	enum:libvlc_playback_mode_t
libvlc_playback_mode_t	vlc/libvlc_media_list_player.h	/^typedef enum libvlc_playback_mode_t$/;"	g
libvlc_playback_mode_t	vlc/libvlc_media_list_player.h	/^} libvlc_playback_mode_t;$/;"	t	typeref:enum:libvlc_playback_mode_t
libvlc_rectangle_t	vlc/libvlc_media_player.h	/^typedef struct libvlc_rectangle_t$/;"	s
libvlc_rectangle_t	vlc/libvlc_media_player.h	/^} libvlc_rectangle_t;$/;"	t	typeref:struct:libvlc_rectangle_t
libvlc_state_t	vlc/libvlc_media.h	/^typedef enum libvlc_state_t$/;"	g
libvlc_state_t	vlc/libvlc_media.h	/^} libvlc_state_t;$/;"	t	typeref:enum:libvlc_state_t
libvlc_time_t	vlc/libvlc_structures.h	/^typedef int64_t libvlc_time_t;$/;"	t
libvlc_track_audio	vlc/libvlc_media.h	/^    libvlc_track_audio     = 0,$/;"	e	enum:libvlc_track_type_t
libvlc_track_description_t	vlc/libvlc_media_player.h	/^typedef struct libvlc_track_description_t$/;"	s
libvlc_track_description_t	vlc/libvlc_media_player.h	/^} libvlc_track_description_t;$/;"	t	typeref:struct:libvlc_track_description_t
libvlc_track_text	vlc/libvlc_media.h	/^    libvlc_track_text      = 2$/;"	e	enum:libvlc_track_type_t
libvlc_track_type_t	vlc/libvlc_media.h	/^typedef enum libvlc_track_type_t$/;"	g
libvlc_track_type_t	vlc/libvlc_media.h	/^} libvlc_track_type_t;$/;"	t	typeref:enum:libvlc_track_type_t
libvlc_track_unknown	vlc/libvlc_media.h	/^    libvlc_track_unknown   = -1,$/;"	e	enum:libvlc_track_type_t
libvlc_track_video	vlc/libvlc_media.h	/^    libvlc_track_video     = 1,$/;"	e	enum:libvlc_track_type_t
libvlc_video_adjust_option_t	vlc/libvlc_media_player.h	/^enum libvlc_video_adjust_option_t {$/;"	g
libvlc_video_cleanup_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_video_cleanup_cb)(void *opaque);$/;"	t
libvlc_video_display_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_video_display_cb)(void *opaque, void *picture);$/;"	t
libvlc_video_format_cb	vlc/libvlc_media_player.h	/^typedef unsigned (*libvlc_video_format_cb)(void **opaque, char *chroma,$/;"	t
libvlc_video_lock_cb	vlc/libvlc_media_player.h	/^typedef void *(*libvlc_video_lock_cb)(void *opaque, void **planes);$/;"	t
libvlc_video_logo_option_t	vlc/libvlc_media_player.h	/^enum libvlc_video_logo_option_t {$/;"	g
libvlc_video_marquee_option_t	vlc/libvlc_media_player.h	/^typedef enum libvlc_video_marquee_option_t {$/;"	g
libvlc_video_marquee_option_t	vlc/libvlc_media_player.h	/^} libvlc_video_marquee_option_t;$/;"	t	typeref:enum:libvlc_video_marquee_option_t
libvlc_video_unlock_cb	vlc/libvlc_media_player.h	/^typedef void (*libvlc_video_unlock_cb)(void *opaque, void *picture,$/;"	t
likely	vlc_common.h	115;"	d
likely	vlc_common.h	118;"	d
list	vlc_probe.h	/^    void  *list;$/;"	m	struct:vlc_probe_t
listeners_groups	vlc_events.h	/^    DECL_ARRAY(struct vlc_event_listeners_group_t *) listeners_groups;$/;"	m	struct:vlc_event_manager_t
lldiv_t	vlc_fixups.h	/^} lldiv_t;$/;"	t	typeref:struct:__anon84
locale_t	vlc_fixups.h	/^typedef void *locale_t;$/;"	t
lock	vlc_aout.h	/^    vlc_mutex_t lock;$/;"	m	struct:__anon136
lock	vlc_extensions.h	/^    vlc_mutex_t lock;                  \/**< A lock for the extensions array *\/$/;"	m	struct:extensions_manager_t
lock	vlc_extensions.h	/^    vlc_mutex_t lock;            \/\/\/< Dialog mutex$/;"	m	struct:extension_dialog_t
lock	vlc_input_item.h	/^    vlc_mutex_t         lock;$/;"	m	struct:input_stats_t
lock	vlc_input_item.h	/^    vlc_mutex_t lock;                 \/**< Lock for the item *\/$/;"	m	struct:input_item_t
lock	vlc_media_library.h	/^    vlc_mutex_t     lock;               \/**< Mutex for multithreaded access *\/$/;"	m	struct:ml_media_t
lock	vlc_opengl.h	/^    int  (*lock)(vlc_gl_t *);$/;"	m	struct:vlc_gl_t
lock	vlc_picture_pool.h	/^    int       (*lock)(picture_t *);$/;"	m	struct:__anon1
lock	vlc_sout.h	/^    vlc_mutex_t         lock;$/;"	m	struct:sout_instance_t
lock	vlc_threads.h	/^        vlc_mutex_t *lock;$/;"	m	class:vlc_mutex_locker
locked	vlc_threads.h	/^            bool locked;$/;"	m	struct:__anon19::__anon20::__anon21
locked	vlc_threads.h	/^            bool locked;$/;"	m	struct:__anon24::__anon25::__anon26
lpVtbl	vlc_windows_interfaces.h	/^struct ITaskbarList3 { struct ITaskbarList3Vtbl* lpVtbl; };$/;"	m	struct:ITaskbarList3	typeref:struct:ITaskbarList3::ITaskbarList3Vtbl
lvalue	vlc_media_library.h	/^    } lvalue;                   \/**< Refer to @see ml_ftree_t lvalue docs *\/$/;"	m	struct:ml_element_t	typeref:union:ml_element_t::__anon109
lvalue	vlc_media_library.h	/^    } lvalue;                   \/**< Used as key value for people types\/roles.$/;"	m	struct:ml_ftree_t	typeref:union:ml_ftree_t::__anon111
makeCurrent	vlc_opengl.h	/^    int  (*makeCurrent)(vlc_gl_t *);$/;"	m	struct:vlc_gl_t
manage	vlc_vout_display.h	/^    void       (*manage)(vout_display_t *);$/;"	m	struct:vout_display_t
max	vlc_configuration.h	/^    module_value_t max;$/;"	m	struct:module_config_t
md	vlc/libvlc_events.h	/^            libvlc_media_t * md;$/;"	m	struct:libvlc_event_t::__anon41::__anon46
md5_s	vlc_md5.h	/^struct md5_s$/;"	s
md5_t	vlc_common.h	/^typedef struct md5_s md5_t;$/;"	t	typeref:struct:md5_s
media_duration_changed	vlc/libvlc_events.h	/^        } media_duration_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon44
media_freed	vlc/libvlc_events.h	/^        } media_freed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon46
media_library_sys_t	vlc_media_library.h	/^typedef struct media_library_sys_t media_library_sys_t;$/;"	t	typeref:struct:media_library_sys_t
media_library_t	vlc_media_library.h	/^struct media_library_t$/;"	s
media_library_t	vlc_media_library.h	/^typedef struct media_library_t media_library_t;$/;"	t	typeref:struct:media_library_t
media_list_item_added	vlc/libvlc_events.h	/^        } media_list_item_added;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon55
media_list_item_deleted	vlc/libvlc_events.h	/^        } media_list_item_deleted;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon57
media_list_player_next_item_set	vlc/libvlc_events.h	/^        } media_list_player_next_item_set;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon59
media_list_will_add_item	vlc/libvlc_events.h	/^        } media_list_will_add_item;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon56
media_list_will_delete_item	vlc/libvlc_events.h	/^        } media_list_will_delete_item;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon58
media_meta_changed	vlc/libvlc_events.h	/^        } media_meta_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon42
media_parsed_changed	vlc/libvlc_events.h	/^        } media_parsed_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon45
media_player_buffering	vlc/libvlc_events.h	/^        } media_player_buffering;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon48
media_player_length_changed	vlc/libvlc_events.h	/^        } media_player_length_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon61
media_player_media_changed	vlc/libvlc_events.h	/^        } media_player_media_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon63
media_player_pausable_changed	vlc/libvlc_events.h	/^        } media_player_pausable_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon53
media_player_position_changed	vlc/libvlc_events.h	/^        } media_player_position_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon49
media_player_seekable_changed	vlc/libvlc_events.h	/^        } media_player_seekable_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon52
media_player_snapshot_taken	vlc/libvlc_events.h	/^        } media_player_snapshot_taken ;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon60
media_player_time_changed	vlc/libvlc_events.h	/^        } media_player_time_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon50
media_player_title_changed	vlc/libvlc_events.h	/^        } media_player_title_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon51
media_player_vout	vlc/libvlc_events.h	/^        } media_player_vout;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon54
media_state_changed	vlc/libvlc_events.h	/^        } media_state_changed;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon47
media_subitem_added	vlc/libvlc_events.h	/^        } media_subitem_added;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon43
message	vlc_dialog.h	/^    const char *message;$/;"	m	struct:dialog_fatal_t
message	vlc_dialog.h	/^    const char *message;$/;"	m	struct:dialog_login_t
message	vlc_dialog.h	/^    const char *message;$/;"	m	struct:dialog_progress_bar_t
message	vlc_dialog.h	/^    const char *message;$/;"	m	struct:dialog_question_t
meta_engine_t	vlc_common.h	/^typedef struct meta_engine_t meta_engine_t;$/;"	t	typeref:struct:meta_engine_t
meta_export_t	vlc_meta.h	/^typedef struct meta_export_t$/;"	s
meta_export_t	vlc_meta.h	/^} meta_export_t;$/;"	t	typeref:struct:meta_export_t
meta_type	vlc/libvlc_events.h	/^            libvlc_meta_t meta_type;$/;"	m	struct:libvlc_event_t::__anon41::__anon42
meta_type	vlc_events.h	/^            vlc_meta_type_t meta_type;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_meta_changed
min	vlc_configuration.h	/^    module_value_t min;$/;"	m	struct:module_config_t
mix	vlc_aout_mixer.h	/^    void (*mix)(audio_mixer_t *, block_t *, float); \/**< Amplifier *\/$/;"	m	struct:audio_mixer
ml_AttributeIsString	vlc_media_library.h	/^static inline int ml_AttributeIsString( ml_select_e meta )$/;"	f
ml_Control	vlc_media_library.h	437;"	d
ml_ControlVa	vlc_media_library.h	/^static inline int ml_ControlVa( media_library_t *p_media_library,$/;"	f
ml_CopyMedia	vlc_media_library.h	/^static inline int ml_CopyMedia( ml_media_t *b, ml_media_t *a )$/;"	f
ml_CopyPersons	vlc_media_library.h	/^static inline int ml_CopyPersons( ml_person_t** a, ml_person_t* b )$/;"	f
ml_CreateAppendPerson	vlc_media_library.h	/^static inline int ml_CreateAppendPerson( ml_person_t **pp_person,$/;"	f
ml_CreateAppendPersonAdv	vlc_media_library.h	/^static inline int ml_CreateAppendPersonAdv( ml_person_t **pp_person,$/;"	f
ml_CreateInputItem	vlc_media_library.h	/^static inline input_item_t* ml_CreateInputItem($/;"	f
ml_Delete	vlc_media_library.h	/^ml_Delete( media_library_t *p_media_library, vlc_array_t* p_array )$/;"	f
ml_DeleteSimple	vlc_media_library.h	/^ml_DeleteSimple( media_library_t *p_media_library, int id )$/;"	f
ml_DestroyResultArray	vlc_media_library.h	/^static inline void ml_DestroyResultArray( vlc_array_t *p_result_array )$/;"	f
ml_Find	vlc_media_library.h	1229;"	d
ml_FindAdv	vlc_media_library.h	/^static inline int ml_FindAdv( media_library_t *p_media_library,$/;"	f
ml_FindAlbum	vlc_media_library.h	1231;"	d
ml_FindAlbumAdv	vlc_media_library.h	1254;"	d
ml_FindAllAlbums	vlc_media_library.h	1243;"	d
ml_FindAllArtists	vlc_media_library.h	1244;"	d
ml_FindAllGenres	vlc_media_library.h	1245;"	d
ml_FindAllMedias	vlc_media_library.h	1246;"	d
ml_FindAllOriginalTitles	vlc_media_library.h	1247;"	d
ml_FindAllPublishers	vlc_media_library.h	1248;"	d
ml_FindAllTitles	vlc_media_library.h	1249;"	d
ml_FindAllTypes	vlc_media_library.h	1250;"	d
ml_FindAllUris	vlc_media_library.h	1251;"	d
ml_FindAllYears	vlc_media_library.h	1252;"	d
ml_FindArtist	vlc_media_library.h	1232;"	d
ml_FindArtistAdv	vlc_media_library.h	1255;"	d
ml_FindEncoder	vlc_media_library.h	1233;"	d
ml_FindEncoderAdv	vlc_media_library.h	1256;"	d
ml_FindGenre	vlc_media_library.h	1234;"	d
ml_FindGenreAdv	vlc_media_library.h	1257;"	d
ml_FindMedia	vlc_media_library.h	1235;"	d
ml_FindMediaAdv	vlc_media_library.h	1258;"	d
ml_FindOriginalTitle	vlc_media_library.h	1236;"	d
ml_FindOriginalTitleAdv	vlc_media_library.h	1259;"	d
ml_FindPsz	vlc_media_library.h	991;"	d
ml_FindPublisher	vlc_media_library.h	1237;"	d
ml_FindPublisherAdv	vlc_media_library.h	1260;"	d
ml_FindTitle	vlc_media_library.h	1238;"	d
ml_FindTitleAdv	vlc_media_library.h	1261;"	d
ml_FindType	vlc_media_library.h	1239;"	d
ml_FindTypeAdv	vlc_media_library.h	1262;"	d
ml_FindUri	vlc_media_library.h	1240;"	d
ml_FindUriAdv	vlc_media_library.h	1263;"	d
ml_FindYear	vlc_media_library.h	1241;"	d
ml_FindYearAdv	vlc_media_library.h	1264;"	d
ml_FreeElement	vlc_media_library.h	/^static inline void ml_FreeElement( ml_element_t *p_elt )$/;"	f
ml_FreeFindTree	vlc_media_library.h	764;"	d
ml_FreeMediaContent	vlc_media_library.h	/^static inline void ml_FreeMediaContent( ml_media_t *p_media )$/;"	f
ml_FreePeople	vlc_media_library.h	/^static inline void ml_FreePeople( ml_person_t *p_person )$/;"	f
ml_FreeResult	vlc_media_library.h	/^static inline void ml_FreeResult( ml_result_t *p_result )$/;"	f
ml_FtreeAnd	vlc_media_library.h	856;"	d
ml_FtreeFastAnd	vlc_media_library.h	/^static inline ml_ftree_t* ml_FtreeFastAnd( ml_ftree_t* left,$/;"	f
ml_FtreeHasOp	vlc_media_library.h	/^static inline int ml_FtreeHasOp( ml_ftree_t* tree )$/;"	f
ml_FtreeNot	vlc_media_library.h	858;"	d
ml_FtreeOr	vlc_media_library.h	857;"	d
ml_FtreeSpecAsc	vlc_media_library.h	860;"	d
ml_FtreeSpecDesc	vlc_media_library.h	861;"	d
ml_FtreeSpecDistinct	vlc_media_library.h	863;"	d
ml_FtreeSpecLimit	vlc_media_library.h	862;"	d
ml_GenericFreeFindTree	vlc_media_library.h	/^static inline void ml_GenericFreeFindTree( ml_ftree_t* tree, bool freestrings )$/;"	f
ml_Get	vlc_media_library.h	401;"	d
ml_GetAlbumArtistsFromMedia	vlc_media_library.h	1159;"	d
ml_GetAlbumById	vlc_media_library.h	1192;"	d
ml_GetAlbumCount	vlc_media_library.h	1226;"	d
ml_GetAlbumId	vlc_media_library.h	1217;"	d
ml_GetAlbumIdById	vlc_media_library.h	1203;"	d
ml_GetArtistById	vlc_media_library.h	1193;"	d
ml_GetArtistId	vlc_media_library.h	1220;"	d
ml_GetArtistIdById	vlc_media_library.h	1204;"	d
ml_GetArtistsFromMedia	vlc_media_library.h	1160;"	d
ml_GetCoverUriById	vlc_media_library.h	1194;"	d
ml_GetDurationById	vlc_media_library.h	1205;"	d
ml_GetEncoderById	vlc_media_library.h	1195;"	d
ml_GetEncoderId	vlc_media_library.h	1221;"	d
ml_GetEncoderIdById	vlc_media_library.h	1206;"	d
ml_GetEncodersFromMedia	vlc_media_library.h	1161;"	d
ml_GetExtraById	vlc_media_library.h	1196;"	d
ml_GetGenreById	vlc_media_library.h	1197;"	d
ml_GetInt	vlc_media_library.h	968;"	d
ml_GetLastPlayedById	vlc_media_library.h	1207;"	d
ml_GetMediaCount	vlc_media_library.h	1225;"	d
ml_GetOriginalTitleById	vlc_media_library.h	1198;"	d
ml_GetPeopleCount	vlc_media_library.h	1227;"	d
ml_GetPlayedCountById	vlc_media_library.h	1208;"	d
ml_GetPublisherById	vlc_media_library.h	1199;"	d
ml_GetPublisherId	vlc_media_library.h	1222;"	d
ml_GetPublisherIdById	vlc_media_library.h	1209;"	d
ml_GetPublishersFromMedia	vlc_media_library.h	1162;"	d
ml_GetScoreById	vlc_media_library.h	1210;"	d
ml_GetTitleById	vlc_media_library.h	1200;"	d
ml_GetTrackNumberById	vlc_media_library.h	1211;"	d
ml_GetTypeById	vlc_media_library.h	1212;"	d
ml_GetUriById	vlc_media_library.h	1201;"	d
ml_GetVoteById	vlc_media_library.h	1214;"	d
ml_GetYearById	vlc_media_library.h	1213;"	d
ml_LockMedia	vlc_media_library.h	673;"	d
ml_ShallowFreeFindTree	vlc_media_library.h	765;"	d
ml_UnlockMedia	vlc_media_library.h	674;"	d
ml_Update	vlc_media_library.h	/^static inline int ml_Update( media_library_t *p_media_library,$/;"	f
ml_UpdateSimple	vlc_media_library.h	1037;"	d
ml_comp_e	vlc_media_library.h	/^} ml_comp_e;$/;"	t	typeref:enum:__anon105
ml_control_e	vlc_media_library.h	/^} ml_control_e;$/;"	t	typeref:enum:__anon103
ml_element_t	vlc_media_library.h	/^struct ml_element_t$/;"	s
ml_element_t	vlc_media_library.h	/^typedef struct ml_element_t    ml_element_t;$/;"	t	typeref:struct:ml_element_t
ml_ftree_t	vlc_media_library.h	/^struct ml_ftree_t$/;"	s
ml_ftree_t	vlc_media_library.h	/^typedef struct ml_ftree_t      ml_ftree_t;$/;"	t	typeref:struct:ml_ftree_t
ml_gc_decref	vlc_media_library.h	/^static inline void ml_gc_decref( ml_media_t* p_media )$/;"	f
ml_gc_incref	vlc_media_library.h	/^static inline void ml_gc_incref( ml_media_t* p_media )$/;"	f
ml_gc_object_t	vlc_media_library.h	/^typedef struct ml_gc_object_t$/;"	s
ml_gc_object_t	vlc_media_library.h	/^} ml_gc_object_t;$/;"	t	typeref:struct:ml_gc_object_t
ml_media_t	vlc_media_library.h	/^struct ml_media_t$/;"	s
ml_media_t	vlc_media_library.h	/^typedef struct ml_media_t      ml_media_t;$/;"	t	typeref:struct:ml_media_t
ml_op_e	vlc_media_library.h	/^} ml_op_e;$/;"	t	typeref:enum:__anon104
ml_person_t	vlc_media_library.h	/^struct ml_person_t$/;"	s
ml_person_t	vlc_media_library.h	/^typedef struct ml_person_t     ml_person_t;$/;"	t	typeref:struct:ml_person_t
ml_priv	vlc_media_library.h	48;"	d
ml_result_t	vlc_media_library.h	/^struct ml_result_t$/;"	s
ml_result_t	vlc_media_library.h	/^typedef struct ml_result_t     ml_result_t;$/;"	t	typeref:struct:ml_result_t
ml_result_type_e	vlc_media_library.h	/^} ml_result_type_e;$/;"	t	typeref:enum:__anon102
ml_select_e	vlc_media_library.h	/^} ml_select_e;$/;"	t	typeref:enum:__anon100
ml_type_e	vlc_media_library.h	/^} ml_type_e;$/;"	t	typeref:enum:__anon101
module	vlc_aout_mixer.h	/^    module_t *module; \/**< Module handle *\/$/;"	m	struct:audio_mixer
module	vlc_opengl.h	/^    module_t *module;$/;"	m	struct:vlc_gl_t
module	vlc_tls.h	/^        module_t *module; \/**< Plugin handle (client) *\/$/;"	m	union:vlc_tls::__anon146
module	vlc_tls.h	/^    module_t  *module;$/;"	m	struct:vlc_tls_creds
module	vlc_vout_display.h	/^    module_t *module;$/;"	m	struct:vout_display_t
module_GetLongName	vlc_modules.h	62;"	d
module_config_t	vlc_common.h	/^typedef struct module_config_t module_config_t;$/;"	t	typeref:struct:module_config_t
module_config_t	vlc_configuration.h	/^struct module_config_t$/;"	s
module_get_main	vlc_modules.h	/^VLC_USED static inline module_t *module_get_main (void)$/;"	f
module_get_main	vlc_modules.h	72;"	d
module_is_main	vlc_modules.h	/^VLC_USED static inline bool module_is_main( const module_t * p_module )$/;"	f
module_need	vlc_modules.h	42;"	d
module_start	vlc_modules.h	49;"	d
module_stop	vlc_modules.h	51;"	d
module_t	vlc_common.h	/^typedef struct module_t module_t;$/;"	t	typeref:struct:module_t
module_unneed	vlc_modules.h	44;"	d
module_value_t	vlc_configuration.h	/^} module_value_t;$/;"	t	typeref:union:__anon80
msg_Dbg	vlc_messages.h	85;"	d
msg_Err	vlc_messages.h	81;"	d
msg_GenericVa	vlc_messages.h	77;"	d
msg_Info	vlc_messages.h	79;"	d
msg_Warn	vlc_messages.h	83;"	d
msg_callback_t	vlc_messages.h	/^typedef void (*msg_callback_t) (void *, int, const msg_item_t *,$/;"	t
msg_control	vlc_network.h	/^    void         *msg_control;$/;"	m	struct:msghdr
msg_controllen	vlc_network.h	/^    size_t        msg_controllen;$/;"	m	struct:msghdr
msg_flags	vlc_network.h	/^    int           msg_flags;$/;"	m	struct:msghdr
msg_iov	vlc_network.h	/^    struct iovec *msg_iov;$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec
msg_iovlen	vlc_network.h	/^    size_t        msg_iovlen;$/;"	m	struct:msghdr
msg_item_t	vlc_messages.h	/^} msg_item_t;$/;"	t	typeref:struct:__anon89
msg_item_type	vlc_messages.h	/^enum msg_item_type$/;"	g
msg_name	vlc_network.h	/^    void         *msg_name;$/;"	m	struct:msghdr
msg_namelen	vlc_network.h	/^    size_t        msg_namelen;$/;"	m	struct:msghdr
msg_subscription_t	vlc_messages.h	/^typedef struct msg_subscription_t msg_subscription_t;$/;"	t	typeref:struct:msg_subscription_t
msghdr	vlc_network.h	/^struct msghdr$/;"	s
msleep	vlc_threads.h	326;"	d
mtime_t	vlc_common.h	/^typedef int64_t mtime_t;$/;"	t
mutex	vlc_threads.h	/^        CRITICAL_SECTION mutex;$/;"	m	union:__anon19::__anon20
mutex	vlc_threads.h	/^    vlc_mutex_t   mutex;$/;"	m	struct:__anon23
mutex	vlc_threads.h	/^    vlc_mutex_t   mutex;$/;"	m	struct:__anon29
mutex_cleanup_push	vlc_threads.h	405;"	d
mwait	vlc_threads.h	327;"	d
nAvgBytesPerSec	vlc_codecs.h	/^    uint32_t   nAvgBytesPerSec;$/;"	m	struct:_WAVEFORMATEX
nBlockAlign	vlc_codecs.h	/^    uint16_t   nBlockAlign;$/;"	m	struct:_WAVEFORMATEX
nChannels	vlc_codecs.h	/^    uint16_t   nChannels;$/;"	m	struct:_WAVEFORMATEX
nSamplesPerSec	vlc_codecs.h	/^    uint32_t   nSamplesPerSec;$/;"	m	struct:_WAVEFORMATEX
name	vlc_httpd.h	/^    char    **name;$/;"	m	struct:httpd_message_t
nblocks	vlc_md5.h	/^    uint32_t nblocks;$/;"	m	struct:md5_s
net_Accept	vlc_network.h	114;"	d
net_Close	vlc_network.h	172;"	d
net_Close	vlc_network.h	179;"	d
net_Connect	vlc_network.h	98;"	d
net_ConnectDgram	vlc_network.h	118;"	d
net_ConnectTCP	vlc_network.h	/^static inline int net_ConnectTCP (vlc_object_t *obj, const char *host, int port)$/;"	f
net_ConnectTCP	vlc_network.h	109;"	d
net_ConnectUDP	vlc_network.h	/^static inline int net_ConnectUDP (vlc_object_t *obj, const char *host, int port, int hlim)$/;"	f
net_GetPeerAddress	vlc_network.h	/^static inline int net_GetPeerAddress( int fd, char *address, int *port )$/;"	f
net_GetPort	vlc_network.h	/^static inline uint16_t net_GetPort (const struct sockaddr *addr)$/;"	f
net_GetSockAddress	vlc_network.h	/^static inline int net_GetSockAddress( int fd, char *address, int *port )$/;"	f
net_Gets	vlc_network.h	155;"	d
net_ListenTCP	vlc_network.h	102;"	d
net_ListenUDP1	vlc_network.h	/^static inline int net_ListenUDP1 (vlc_object_t *obj, const char *host, int port)$/;"	f
net_OpenDgram	vlc_network.h	127;"	d
net_Printf	vlc_network.h	159;"	d
net_Read	vlc_network.h	151;"	d
net_SetPort	vlc_network.h	/^static inline void net_SetPort (struct sockaddr *addr, uint16_t port)$/;"	f
net_SockAddrIsMulticast	vlc_network.h	/^net_SockAddrIsMulticast (const struct sockaddr *addr, socklen_t len)$/;"	f
net_Write	vlc_network.h	153;"	d
net_errno	vlc_network.h	43;"	d
net_errno	vlc_network.h	72;"	d
net_vaPrintf	vlc_network.h	161;"	d
new_cache	vlc/libvlc_events.h	/^            float new_cache;$/;"	m	struct:libvlc_event_t::__anon41::__anon48
new_child	vlc/libvlc_events.h	/^            libvlc_media_t * new_child;$/;"	m	struct:libvlc_event_t::__anon41::__anon43
new_count	vlc/libvlc_events.h	/^            int new_count;$/;"	m	struct:libvlc_event_t::__anon41::__anon54
new_duration	vlc/libvlc_events.h	/^            int64_t new_duration;$/;"	m	struct:libvlc_event_t::__anon41::__anon44
new_duration	vlc_events.h	/^            mtime_t new_duration;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_duration_changed
new_length	vlc/libvlc_events.h	/^            libvlc_time_t   new_length;$/;"	m	struct:libvlc_event_t::__anon41::__anon61
new_media	vlc/libvlc_events.h	/^            libvlc_media_t * new_media;$/;"	m	struct:libvlc_event_t::__anon41::__anon63
new_name	vlc_events.h	/^            const char * new_name;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_name_changed
new_pausable	vlc/libvlc_events.h	/^            int new_pausable;$/;"	m	struct:libvlc_event_t::__anon41::__anon53
new_position	vlc/libvlc_events.h	/^            float new_position;$/;"	m	struct:libvlc_event_t::__anon41::__anon49
new_seekable	vlc/libvlc_events.h	/^            int new_seekable;$/;"	m	struct:libvlc_event_t::__anon41::__anon52
new_state	vlc/libvlc_events.h	/^            libvlc_state_t new_state;$/;"	m	struct:libvlc_event_t::__anon41::__anon47
new_state	vlc_events.h	/^            int new_state;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_input_state_changed
new_status	vlc/libvlc_events.h	/^            int new_status;$/;"	m	struct:libvlc_event_t::__anon41::__anon45
new_status	vlc_events.h	/^            int new_status;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_preparsed_changed
new_time	vlc/libvlc_events.h	/^            libvlc_time_t new_time;$/;"	m	struct:libvlc_event_t::__anon41::__anon50
new_title	vlc/libvlc_events.h	/^            int new_title;$/;"	m	struct:libvlc_event_t::__anon41::__anon51
new_value	vlc_events.h	/^            bool new_value;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::input_item_error_when_reading_changed
newlocale	vlc_fixups.h	/^static inline locale_t newlocale(int mask, const char * locale, locale_t base)$/;"	f
next	vlc_threads.h	/^    vlc_cleanup_t *next;$/;"	m	struct:vlc_cleanup_t
no	vlc_dialog.h	/^    const char *no;$/;"	m	struct:dialog_question_t
nsobject	vlc_vout_window.h	/^        void     *nsobject; \/* Mac OSX view object *\/$/;"	m	union:vout_window_t::__anon128
ntoh16	vlc_common.h	723;"	d
ntoh32	vlc_common.h	724;"	d
ntoh64	vlc_common.h	725;"	d
num	vlc_fourcc.h	/^            unsigned num;$/;"	m	struct:__anon96::__anon97::__anon98
num	vlc_fourcc.h	/^            unsigned num;$/;"	m	struct:__anon96::__anon97::__anon99
num	vlc_vout_display.h	/^            unsigned num;$/;"	m	struct:__anon66::__anon67::__anon68
num	vlc_vout_display.h	/^        int num;$/;"	m	struct:__anon66::__anon70
num	vlc_vout_wrapper.h	/^        int num;$/;"	m	struct:__anon81::__anon82
object_lock	vlc_events.h	/^    vlc_mutex_t object_lock;$/;"	m	struct:vlc_event_manager_t
off_t	vlc_common.h	/^            typedef __int64 off_t;$/;"	t
off_t	vlc_common.h	/^            typedef _off_t off_t;$/;"	t
off_t	vlc_common.h	872;"	d
off_t	vlc_common.h	874;"	d
off_t	vlc_common.h	884;"	d
off_t	vlc_common.h	889;"	d
off_t	vlc_common.h	890;"	d
op	vlc_media_library.h	/^    ml_op_e         op;         \/**< Operator. ML_OP_NONE means this is a leaf$/;"	m	struct:ml_ftree_t
open	vlc_tls.h	/^    vlc_tls_t *(*open) (struct vlc_tls_creds *, int fd);$/;"	m	struct:vlc_tls_creds
optflagc	vlc_input_item.h	/^    unsigned   optflagc;$/;"	m	struct:input_item_t
optflagv	vlc_input_item.h	/^    uint8_t    *optflagv;            \/**< Some flags of input options *\/$/;"	m	struct:input_item_t
orig	vlc_configuration.h	/^    module_value_t orig;$/;"	m	struct:module_config_t
osd_ButtonFind	vlc_osd.h	287;"	d
osd_ButtonSelect	vlc_osd.h	294;"	d
osd_GetKeyPressed	vlc_osd.h	/^static inline bool osd_GetKeyPressed( osd_menu_t *p_osd )$/;"	f
osd_GetMenuState	vlc_osd.h	/^static inline const osd_menu_state_t *osd_GetMenuState( osd_menu_t *p_osd )$/;"	f
osd_MenuActivate	vlc_osd.h	323;"	d
osd_MenuCreate	vlc_osd.h	278;"	d
osd_MenuDelete	vlc_osd.h	279;"	d
osd_MenuDown	vlc_osd.h	364;"	d
osd_MenuHide	vlc_osd.h	322;"	d
osd_MenuNext	vlc_osd.h	361;"	d
osd_MenuPrev	vlc_osd.h	362;"	d
osd_MenuShow	vlc_osd.h	321;"	d
osd_MenuUp	vlc_osd.h	363;"	d
osd_SetKeyPressed	vlc_osd.h	/^static inline void osd_SetKeyPressed( vlc_object_t *p_this, int i_value )$/;"	f
osd_SetMenuUpdate	vlc_osd.h	/^static inline void osd_SetMenuUpdate( osd_menu_t *p_osd, bool b_value )$/;"	f
osd_SetMenuVisible	vlc_osd.h	/^static inline void osd_SetMenuVisible( osd_menu_t *p_osd, bool b_value )$/;"	f
osd_Volume	vlc_osd.h	374;"	d
osd_button_t	vlc_common.h	/^typedef struct osd_button_t osd_button_t;$/;"	t	typeref:struct:osd_button_t
osd_button_t	vlc_osd.h	/^struct osd_button_t$/;"	s
osd_event_t	vlc_common.h	/^typedef struct osd_event_t  osd_event_t;$/;"	t	typeref:struct:osd_event_t
osd_menu_state_t	vlc_common.h	/^typedef struct osd_menu_state_t osd_menu_state_t;$/;"	t	typeref:struct:osd_menu_state_t
osd_menu_state_t	vlc_osd.h	/^struct osd_menu_state_t$/;"	s
osd_menu_t	vlc_common.h	/^typedef struct osd_menu_t   osd_menu_t;$/;"	t	typeref:struct:osd_menu_t
osd_menu_t	vlc_osd.h	/^struct osd_menu_t$/;"	s
osd_state_t	vlc_common.h	/^typedef struct osd_state_t  osd_state_t;$/;"	t	typeref:struct:osd_state_t
osd_state_t	vlc_osd.h	/^struct osd_state_t$/;"	s
out	vlc_demux.h	/^    es_out_t    *out;   \/* our p_es_out *\/$/;"	m	struct:demux_t
owner	vlc_vout_display.h	/^    vout_display_owner_t owner;$/;"	m	struct:vout_display_t
p	vlc_bits.h	/^    uint8_t *p;$/;"	m	struct:bs_s
p	vlc_fourcc.h	/^    } p[4];$/;"	m	struct:__anon96	typeref:struct:__anon96::__anon97
p	vlc_input.h	/^    input_thread_private_t *p;$/;"	m	struct:input_thread_t
p	vlc_picture.h	/^    plane_t         p[PICTURE_PLANE_MAX];     \/**< description of the planes *\/$/;"	m	struct:picture_t
p	vlc_picture.h	/^    } p[PICTURE_PLANE_MAX];$/;"	m	struct:__anon130	typeref:struct:__anon130::__anon131
p	vlc_spu.h	/^    spu_private_t *p;$/;"	m	struct:spu_t
p	vlc_vout.h	/^    vout_thread_sys_t *p;$/;"	m	struct:vout_thread_t
p_access	vlc_sout.h	/^    sout_access_out_t   *p_access;$/;"	m	struct:sout_mux_t
p_address	vlc_common.h	/^    void *          p_address;$/;"	m	union:__anon93
p_arg	vlc_interface.h	/^    void *p_arg;$/;"	m	struct:intf_dialog_args_t
p_block	vlc_block_helper.h	/^    block_t *p_block;  \/**< byte stream read pointer block *\/$/;"	m	struct:block_bytestream_t
p_body	vlc_httpd.h	/^    uint8_t *p_body;$/;"	m	struct:httpd_message_t
p_buffer	vlc_block.h	/^    uint8_t     *p_buffer;$/;"	m	struct:block_t
p_button	vlc_osd.h	/^    osd_button_t     *p_button;  \/*< doubly linked list of buttons *\/$/;"	m	struct:osd_menu_t
p_cfg	vlc_codec.h	/^    config_chain_t *p_cfg;$/;"	m	struct:encoder_t
p_cfg	vlc_filter.h	/^    config_chain_t *    p_cfg;$/;"	m	struct:filter_t
p_cfg	vlc_interface.h	/^    config_chain_t *p_cfg;$/;"	m	struct:intf_thread_t
p_cfg	vlc_services_discovery.h	/^    config_chain_t *p_cfg;                    \/**< Configuration for the SD *\/$/;"	m	struct:services_discovery_t
p_cfg	vlc_sout.h	/^    config_chain_t          *p_cfg;$/;"	m	struct:sout_access_out_t
p_cfg	vlc_sout.h	/^    config_chain_t          *p_cfg;$/;"	m	struct:sout_mux_t
p_cfg	vlc_sout.h	/^    config_chain_t        *p_cfg;$/;"	m	struct:sout_stream_t
p_cfg	vlc_video_splitter.h	/^    config_chain_t  *p_cfg;$/;"	m	struct:video_splitter_t
p_chain	vlc_block_helper.h	/^    block_t *p_chain;  \/**< byte stream head block *\/$/;"	m	struct:block_bytestream_t
p_current	vlc_epg.h	/^    vlc_epg_event_t *p_current; \/* Can be null or should be the same than one of pp_event entry *\/$/;"	m	struct:__anon115
p_current_state	vlc_osd.h	/^    osd_state_t *p_current_state; \/*< pointer to current state image *\/$/;"	m	struct:osd_button_t
p_data	vlc_extensions.h	/^    void *p_data;                   \/\/\/< Opaque data to send$/;"	m	struct:__anon6
p_data	vlc_input.h	/^    void *p_data;$/;"	m	struct:input_attachment_t
p_data	vlc_vod.h	/^    void *p_data;$/;"	m	struct:vod_t
p_data_orig	vlc_picture.h	/^    void           *p_data_orig;                \/**< pointer before memalign *\/$/;"	m	struct:picture_t
p_dec	vlc_image.h	/^    decoder_t *p_dec;$/;"	m	struct:image_handler_t
p_demux	vlc_demux.h	/^    demux_t *p_demux; \/** FIXME: use stream_t instead? *\/$/;"	m	struct:demux_meta_t
p_description	vlc_codec.h	/^    vlc_meta_t          *p_description;$/;"	m	struct:decoder_t
p_dialog	vlc_extensions.h	/^    extension_dialog_t *p_dialog; \/\/\/< Parent dialog$/;"	m	struct:extension_widget_t
p_dialog	vlc_interface.h	/^    struct interaction_dialog_t *p_dialog;$/;"	m	struct:intf_dialog_args_t	typeref:struct:intf_dialog_args_t::interaction_dialog_t
p_dlg	vlc_extensions.h	/^    extension_dialog_t *p_dlg;      \/\/\/< Destination dialog$/;"	m	struct:__anon6
p_down	vlc_osd.h	/^    osd_button_t *p_down;   \/*< pointer to down button *\/$/;"	m	struct:osd_button_t
p_enc	vlc_image.h	/^    encoder_t *p_enc;$/;"	m	struct:image_handler_t
p_end	vlc_bits.h	/^    uint8_t *p_end;$/;"	m	struct:bs_s
p_entries	vlc_arrays.h	/^    vlc_dictionary_entry_t ** p_entries;$/;"	m	struct:vlc_dictionary_t
p_extra	vlc_es.h	/^    void    *p_extra;       \/**< extra data needed by some decoders or muxers *\/$/;"	m	struct:es_format_t
p_extra_languages	vlc_es.h	/^    extra_languages_t *p_extra_languages; \/**< extra language data needed by some decoders *\/$/;"	m	struct:es_format_t
p_fifo	vlc_sout.h	/^    block_fifo_t    *p_fifo;$/;"	m	struct:sout_input_t
p_file	vlc_playlist.h	/^    FILE *p_file;$/;"	m	struct:playlist_export_t
p_filter	vlc_image.h	/^    filter_t  *p_filter;$/;"	m	struct:image_handler_t
p_first	vlc_aout.h	/^    aout_buffer_t *         p_first;$/;"	m	struct:aout_fifo_t
p_fmt	vlc_sout.h	/^    es_format_t     *p_fmt;$/;"	m	struct:sout_input_t
p_hotkeys	vlc_main.h	/^    const struct hotkey *p_hotkeys;$/;"	m	struct:libvlc_int_t	typeref:struct:libvlc_int_t::hotkey
p_icondata	vlc_extensions.h	/^    char *p_icondata;         \/**< Embedded data for the icon (ro) *\/$/;"	m	struct:extension_t
p_image	vlc_osd.h	/^    image_handler_t *p_image;   \/*< handler to image loading and conversion libraries *\/$/;"	m	struct:osd_menu_t
p_input	vlc_access.h	/^    input_thread_t *p_input;$/;"	m	struct:access_t
p_input	vlc_demux.h	/^    input_thread_t *p_input;$/;"	m	struct:demux_t
p_input	vlc_playlist.h	/^    input_item_t           *p_input;    \/**< Linked input item *\/$/;"	m	struct:playlist_item_t
p_input	vlc_stream.h	/^    input_thread_t *p_input;$/;"	m	struct:stream_t
p_interface	vlc_interface.h	/^    intf_thread_t  *p_interface;$/;"	m	struct:interaction_dialog_t
p_intf	vlc_interface.h	/^    intf_thread_t *p_intf;$/;"	m	struct:intf_dialog_args_t
p_item	vlc_art_finder.h	/^    input_item_t *p_item;$/;"	m	struct:art_finder_t
p_item	vlc_demux.h	/^    input_item_t *p_item; \/***< the input item that is being read *\/$/;"	m	struct:demux_meta_t
p_item	vlc_events.h	/^            input_item_t * p_item;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_services_discovery_item_removed
p_item	vlc_input_item.h	/^    input_item_t *         p_item;$/;"	m	struct:input_item_node_t
p_item	vlc_meta.h	/^    input_item_t *p_item;$/;"	m	struct:meta_export_t
p_last_button	vlc_osd.h	/^    osd_button_t  *p_last_button; \/*< pointer to last button in the list *\/$/;"	m	struct:osd_menu_t
p_list	vlc_common.h	/^    vlc_list_t *    p_list;$/;"	m	union:__anon93
p_local_category	vlc_playlist.h	/^    playlist_item_t *     p_local_category; \/** < "Playlist" in CATEGORY view *\/$/;"	m	struct:playlist_t
p_local_onelevel	vlc_playlist.h	/^    playlist_item_t *     p_local_onelevel; \/** < "Playlist" in ONELEVEL view *\/$/;"	m	struct:playlist_t
p_lock	vlc_interface.h	/^    vlc_mutex_t    *p_lock;$/;"	m	struct:interaction_dialog_t
p_md	vlc/libvlc_media.h	/^libvlc_media_subitems( libvlc_media_t *p_md );$/;"	v
p_media	vlc_media_library.h	/^        ml_media_t     *p_media;$/;"	m	union:ml_result_t::__anon107
p_media_library	vlc_playlist.h	/^    playlist_item_t *     p_media_library;$/;"	m	struct:playlist_t
p_meta	vlc_demux.h	/^    vlc_meta_t *p_meta;                 \/**< meta data *\/$/;"	m	struct:demux_meta_t
p_meta	vlc_input_item.h	/^    vlc_meta_t *p_meta;$/;"	m	struct:input_item_t
p_meta	vlc_sout.h	/^    vlc_meta_t          *p_meta;$/;"	m	struct:sout_instance_t
p_ml_category	vlc_playlist.h	/^    playlist_item_t *     p_ml_category; \/** < "Library" in CATEGORY view *\/$/;"	m	struct:playlist_t
p_ml_onelevel	vlc_playlist.h	/^    playlist_item_t *     p_ml_onelevel; \/** < "Library" in ONELEVEL view *\/$/;"	m	struct:playlist_t
p_module	vlc_access.h	/^    module_t    *p_module;$/;"	m	struct:access_t
p_module	vlc_codec.h	/^    module_t *          p_module;$/;"	m	struct:decoder_t
p_module	vlc_codec.h	/^    module_t *          p_module;$/;"	m	struct:encoder_t
p_module	vlc_demux.h	/^    module_t    *p_module;$/;"	m	struct:demux_t
p_module	vlc_extensions.h	/^    module_t *p_module;                \/**< Extensions manager module *\/$/;"	m	struct:extensions_manager_t
p_module	vlc_filter.h	/^    module_t *          p_module;$/;"	m	struct:filter_t
p_module	vlc_interface.h	/^    module_t *   p_module;$/;"	m	struct:intf_thread_t
p_module	vlc_media_library.h	/^    module_t             *p_module;  \/**< the media library module *\/$/;"	m	struct:media_library_t
p_module	vlc_services_discovery.h	/^    module_t *          p_module;             \/**< Loaded module *\/$/;"	m	struct:services_discovery_t
p_module	vlc_sout.h	/^    module_t                *p_module;$/;"	m	struct:sout_access_out_t
p_module	vlc_sout.h	/^    module_t            *p_module;$/;"	m	struct:sout_mux_t
p_module	vlc_sout.h	/^    module_t          *p_module;$/;"	m	struct:sout_stream_t
p_module	vlc_sql.h	/^    module_t  *p_module;$/;"	m	struct:sql_t
p_module	vlc_stream.h	/^    module_t    *p_module;$/;"	m	struct:stream_t
p_module	vlc_video_splitter.h	/^    module_t        *p_module;$/;"	m	struct:video_splitter_t
p_module	vlc_vod.h	/^    module_t  *p_module;$/;"	m	struct:vod_t
p_module	vlc_xml.h	/^    module_t  *p_module;$/;"	m	struct:xml_t
p_module	vlc_xml.h	/^    module_t *p_module;$/;"	m	struct:xml_reader_t
p_new_child	vlc_events.h	/^            input_item_t * p_new_child;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_subitem_added
p_new_item	vlc_events.h	/^            input_item_t * p_new_item;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_services_discovery_item_added
p_next	vlc/libvlc.h	/^    struct libvlc_module_description_t *p_next;$/;"	m	struct:libvlc_module_description_t	typeref:struct:libvlc_module_description_t::libvlc_module_description_t
p_next	vlc/libvlc_media_player.h	/^    struct libvlc_audio_output_t *p_next;$/;"	m	struct:libvlc_audio_output_t	typeref:struct:libvlc_audio_output_t::libvlc_audio_output_t
p_next	vlc/libvlc_media_player.h	/^    struct libvlc_track_description_t *p_next;$/;"	m	struct:libvlc_track_description_t	typeref:struct:libvlc_track_description_t::libvlc_track_description_t
p_next	vlc_arrays.h	/^    struct vlc_dictionary_entry_t * p_next;$/;"	m	struct:vlc_dictionary_entry_t	typeref:struct:vlc_dictionary_entry_t::vlc_dictionary_entry_t
p_next	vlc_block.h	/^    block_t     *p_next;$/;"	m	struct:block_t
p_next	vlc_configuration.h	/^    config_chain_t *p_next;     \/**< Pointer on the next config_chain_t element *\/$/;"	m	struct:config_chain_t
p_next	vlc_extensions.h	/^        struct extension_widget_value_t *p_next; \/\/\/< Next value or NULL$/;"	m	struct:extension_widget_t::extension_widget_value_t	typeref:struct:extension_widget_t::extension_widget_value_t::extension_widget_value_t
p_next	vlc_interface.h	/^    struct intf_thread_t *p_next; \/** LibVLC interfaces book keeping *\/$/;"	m	struct:intf_thread_t	typeref:struct:intf_thread_t::intf_thread_t
p_next	vlc_media_library.h	/^    ml_person_t        *p_next;     \/**< Next person in list *\/$/;"	m	struct:ml_person_t
p_next	vlc_osd.h	/^    osd_button_t *p_next;   \/*< pointer to next button *\/$/;"	m	struct:osd_button_t
p_next	vlc_osd.h	/^    osd_state_t *p_next;    \/*< pointer to next state *\/$/;"	m	struct:osd_state_t
p_next	vlc_picture.h	/^    struct picture_t *p_next;$/;"	m	struct:picture_t	typeref:struct:picture_t::picture_t
p_next	vlc_sout.h	/^    sout_stream_t     *p_next;$/;"	m	struct:sout_stream_t
p_next	vlc_subpicture.h	/^    subpicture_region_t *p_next;                \/**< next region in the list *\/$/;"	m	struct:subpicture_region_t
p_next	vlc_subpicture.h	/^    subpicture_t *  p_next;               \/**< next subtitle to be displayed *\/$/;"	m	struct:subpicture_t
p_obj	vlc/libvlc_events.h	/^    void *p_obj; \/**< Object emitting the event *\/$/;"	m	struct:libvlc_event_t
p_obj	vlc_events.h	/^    void * p_obj; \/* Sender object, automatically filled by vlc_event_send() *\/$/;"	m	struct:vlc_event_t
p_obj	vlc_events.h	/^    void * p_obj;$/;"	m	struct:vlc_event_manager_t
p_obj	vlc_messages.h	/^    void              * p_obj;$/;"	m	struct:counter_t
p_object	vlc_common.h	/^    vlc_object_t *  p_object;$/;"	m	union:__anon93
p_object	vlc_extensions.h	/^    vlc_object_t *p_object;      \/\/\/< Owner object (callback on "dialog-event")$/;"	m	struct:extension_dialog_t
p_output	vlc_video_splitter.h	/^    video_splitter_output_t *p_output;$/;"	m	struct:video_splitter_t
p_owner	vlc_codec.h	/^    decoder_owner_sys_t *p_owner;$/;"	m	struct:decoder_t
p_owner	vlc_filter.h	/^    filter_owner_sys_t *p_owner;$/;"	m	struct:filter_t
p_owner	vlc_video_splitter.h	/^    video_splitter_owner_t *p_owner;$/;"	m	struct:video_splitter_t
p_palette	vlc_es.h	/^    video_palette_t *p_palette;              \/**< video palette from demuxer *\/$/;"	m	struct:video_format_t
p_parent	vlc_image.h	/^    vlc_object_t *p_parent;$/;"	m	struct:image_handler_t
p_parent	vlc_input_item.h	/^    input_item_node_t      *p_parent;$/;"	m	struct:input_item_node_t
p_parent	vlc_interface.h	/^    vlc_object_t   *p_parent;           \/\/\/< The vlc object that asked$/;"	m	struct:interaction_dialog_t
p_parent	vlc_playlist.h	/^    playlist_item_t       *p_parent;    \/**< Item parent *\/$/;"	m	struct:playlist_item_t
p_parser	vlc_osd.h	/^    module_t        *p_parser;  \/*< pointer to parser module *\/$/;"	m	struct:osd_menu_t
p_people	vlc_media_library.h	/^    ml_person_t     *p_people;          \/**< Extra: People associated with this$/;"	m	struct:ml_media_t
p_pic	vlc_osd.h	/^    picture_t    *p_pic;  \/*< pointer to picture to display *\/$/;"	m	struct:osd_menu_state_t
p_pic	vlc_osd.h	/^    picture_t   *p_pic;     \/*< picture of state *\/$/;"	m	struct:osd_state_t
p_picture	vlc_subpicture.h	/^    picture_t       *p_picture;          \/**< picture comprising this region *\/$/;"	m	struct:subpicture_region_t
p_pixels	vlc_picture.h	/^        uint8_t *p_pixels;  \/**< Start of the plane's data *\/$/;"	m	struct:__anon130::__anon131
p_pixels	vlc_picture.h	/^    uint8_t *p_pixels;                        \/**< Start of the plane's data *\/$/;"	m	struct:plane_t
p_playing	vlc_playlist.h	/^    playlist_item_t *     p_playing;$/;"	m	struct:playlist_t
p_playlist	vlc_playlist.h	/^    playlist_t            *p_playlist;  \/**< Parent playlist *\/$/;"	m	struct:playlist_item_t
p_prev	vlc_osd.h	/^    osd_button_t *p_prev;   \/*< pointer to previous button *\/$/;"	m	struct:osd_button_t
p_prev	vlc_osd.h	/^    osd_state_t *p_prev;    \/*< pointer to previous state *\/$/;"	m	struct:osd_state_t
p_private	vlc_interface.h	/^    void *          p_private;          \/\/\/< Private interface data$/;"	m	struct:interaction_dialog_t
p_private	vlc_subpicture.h	/^    subpicture_private_t *p_private;    \/* Reserved to the core *\/$/;"	m	struct:subpicture_t
p_private	vlc_subpicture.h	/^    subpicture_region_private_t *p_private;  \/**< Private data for spu_t *only* *\/$/;"	m	struct:subpicture_region_t
p_q	vlc_picture.h	/^    int8_t         *p_q;                           \/**< quantification table *\/$/;"	m	struct:picture_t
p_region	vlc_subpicture.h	/^    subpicture_region_t *p_region;  \/**< region list composing this subtitle *\/$/;"	m	struct:subpicture_t
p_release_sys	vlc_picture.h	/^    picture_release_sys_t *p_release_sys;$/;"	m	struct:picture_t
p_root	vlc_events.h	/^            input_item_node_t * p_root;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_subitem_tree_added
p_root	vlc_playlist.h	/^    playlist_item_t *     p_root;$/;"	m	struct:playlist_t
p_root	vlc_playlist.h	/^    playlist_item_t *p_root;$/;"	m	struct:playlist_export_t
p_root_category	vlc_playlist.h	/^    playlist_item_t *     p_root_category; \/**< Root of category tree *\/$/;"	m	struct:playlist_t
p_root_onelevel	vlc_playlist.h	/^    playlist_item_t *     p_root_onelevel; \/**< Root of onelevel tree *\/$/;"	m	struct:playlist_t
p_source	vlc_stream.h	/^    stream_t *p_source;$/;"	m	struct:stream_t
p_sout	vlc_sout.h	/^    sout_instance_t     *p_sout;$/;"	m	struct:sout_mux_t
p_sout	vlc_sout.h	/^    sout_instance_t   *p_sout;$/;"	m	struct:sout_stream_t
p_sout	vlc_sout.h	/^    sout_instance_t *p_sout;$/;"	m	struct:sout_input_t
p_spu	vlc_sout.h	/^    spu_t             *p_spu;$/;"	m	struct:sout_stream_t
p_start	vlc_bits.h	/^    uint8_t *p_start;$/;"	m	struct:bs_s
p_state	vlc_osd.h	/^    osd_menu_state_t *p_state;   \/*< current state of OSD menu *\/$/;"	m	struct:osd_menu_t
p_states	vlc_osd.h	/^    osd_state_t *p_states; \/*< doubly linked list of states *\/$/;"	m	struct:osd_button_t
p_stats	vlc_input_item.h	/^    input_stats_t *p_stats;          \/**< Statistics *\/$/;"	m	struct:input_item_t
p_stream	vlc_sout.h	/^    sout_stream_t       *p_stream;$/;"	m	struct:sout_instance_t
p_stream	vlc_xml.h	/^    stream_t *p_stream;$/;"	m	struct:xml_reader_t
p_style	vlc_subpicture.h	/^    text_style_t    *p_style;        \/**< a description of the text style formatting *\/$/;"	m	struct:subpicture_region_t
p_sys	vlc_access.h	/^    access_sys_t *p_sys;$/;"	m	struct:access_t
p_sys	vlc_codec.h	/^    decoder_sys_t *     p_sys;$/;"	m	struct:decoder_t
p_sys	vlc_codec.h	/^    encoder_sys_t *     p_sys;$/;"	m	struct:encoder_t
p_sys	vlc_demux.h	/^    demux_sys_t *p_sys;$/;"	m	struct:demux_t
p_sys	vlc_dialog.h	/^    void *p_sys;$/;"	m	struct:dialog_progress_bar_t
p_sys	vlc_es_out.h	/^    es_out_sys_t    *p_sys;$/;"	m	struct:es_out_t
p_sys	vlc_extensions.h	/^    extension_sys_t *p_sys;   \/**< Reserved for the manager module *\/$/;"	m	struct:extension_t
p_sys	vlc_extensions.h	/^    extensions_manager_sys_t *p_sys;   \/**< Reserved for the module *\/$/;"	m	struct:extensions_manager_t
p_sys	vlc_extensions.h	/^    void *p_sys;                  \/\/\/< Reserved for the extension manager$/;"	m	struct:extension_widget_t
p_sys	vlc_extensions.h	/^    void *p_sys;                 \/\/\/< Dialog private pointer$/;"	m	struct:extension_dialog_t
p_sys	vlc_filter.h	/^    filter_sys_t *      p_sys;$/;"	m	struct:filter_t
p_sys	vlc_inhibit.h	/^    vlc_inhibit_sys_t *p_sys;$/;"	m	struct:vlc_inhibit
p_sys	vlc_interface.h	/^    intf_sys_t *        p_sys;                          \/** system interface *\/$/;"	m	struct:intf_thread_t
p_sys	vlc_media_library.h	/^    media_library_sys_t  *p_sys;     \/**< internal struture *\/$/;"	m	struct:media_library_t
p_sys	vlc_network.h	/^    void *p_sys;$/;"	m	struct:virtual_socket_t
p_sys	vlc_picture.h	/^    picture_sys_t * p_sys;$/;"	m	struct:picture_t
p_sys	vlc_picture.h	/^    picture_sys_t *p_sys;$/;"	m	struct:__anon130
p_sys	vlc_services_discovery.h	/^    services_discovery_sys_t *p_sys;          \/**< Custom private data *\/$/;"	m	struct:services_discovery_t
p_sys	vlc_sout.h	/^    sout_access_out_sys_t   *p_sys;$/;"	m	struct:sout_access_out_t
p_sys	vlc_sout.h	/^    sout_instance_sys_t *p_sys;$/;"	m	struct:sout_instance_t
p_sys	vlc_sout.h	/^    sout_mux_sys_t      *p_sys;$/;"	m	struct:sout_mux_t
p_sys	vlc_sout.h	/^    sout_stream_sys_t *p_sys;$/;"	m	struct:sout_stream_t
p_sys	vlc_sout.h	/^    void            *p_sys;$/;"	m	struct:sout_input_t
p_sys	vlc_sql.h	/^    sql_sys_t *p_sys;$/;"	m	struct:sql_t
p_sys	vlc_stream.h	/^    stream_sys_t *p_sys;$/;"	m	struct:stream_t
p_sys	vlc_subpicture.h	/^    subpicture_updater_sys_t *p_sys;$/;"	m	struct:__anon36
p_sys	vlc_video_splitter.h	/^    video_splitter_sys_t *p_sys;$/;"	m	struct:video_splitter_t
p_sys	vlc_vod.h	/^    vod_sys_t *p_sys;$/;"	m	struct:vod_t
p_sys	vlc_xml.h	/^    xml_reader_sys_t *p_sys;$/;"	m	struct:xml_reader_t
p_sys	vlc_xml.h	/^    xml_sys_t *p_sys;$/;"	m	struct:xml_t
p_sys_intf	vlc_extensions.h	/^    void *p_sys_intf;             \/\/\/< Reserved for the UI, but:$/;"	m	struct:extension_widget_t
p_sys_intf	vlc_extensions.h	/^    void *p_sys_intf;            \/\/\/< GUI private pointer$/;"	m	struct:extension_dialog_t
p_text	vlc_stream.h	/^    stream_text_t *p_text;$/;"	m	struct:stream_t
p_up	vlc_osd.h	/^    osd_button_t *p_up;     \/*< pointer to up button *\/$/;"	m	struct:osd_button_t
p_value	vlc_arrays.h	/^    void *   p_value;$/;"	m	struct:vlc_dictionary_entry_t
p_values	vlc_common.h	/^    vlc_value_t *   p_values;$/;"	m	struct:vlc_list_t
p_values	vlc_extensions.h	/^    } *p_values;                  \/\/\/< Chained list of values (Drop-down\/List)$/;"	m	struct:extension_widget_t	typeref:struct:extension_widget_t::extension_widget_value_t
p_visible	vlc_osd.h	/^    osd_button_t *p_visible; \/*< shortcut to visible button *\/$/;"	m	struct:osd_menu_state_t
p_volume	vlc_osd.h	/^    osd_button_t *p_volume; \/*< pointer to volume range object. *\/$/;"	m	struct:osd_menu_state_t
palette	vlc_es.h	/^        uint32_t palette[16+1];$/;"	m	struct:subs_format_t::__anon33
palette	vlc_es.h	/^    uint8_t palette[256][4];                   \/**< 4-byte RGBA\/YUVA palette *\/$/;"	m	struct:video_palette_t
partial	vlc_aout.h	/^    aout_fifo_t partial; \/**< Audio blocks before packetization *\/$/;"	m	struct:__anon136
password	vlc_dialog.h	/^    char **password;$/;"	m	struct:dialog_login_t
pause_date	vlc_aout.h	/^    mtime_t pause_date; \/**< Date when paused or VLC_TS_INVALID *\/$/;"	m	struct:__anon136
pb_gain	vlc_es.h	/^    bool pb_gain[AUDIO_REPLAY_GAIN_MAX];$/;"	m	struct:__anon32
pb_peak	vlc_es.h	/^    bool pb_peak[AUDIO_REPLAY_GAIN_MAX];$/;"	m	struct:__anon32
pf_Control	vlc_media_library.h	/^        int ( * pf_Control ) ( media_library_t *p_media_library,$/;"	m	struct:media_library_t::__anon106
pf_Delete	vlc_media_library.h	/^        int ( * pf_Delete )    ( media_library_t *p_media_library,$/;"	m	struct:media_library_t::__anon106
pf_Find	vlc_media_library.h	/^        int ( * pf_Find )            ( media_library_t *p_media_library,$/;"	m	struct:media_library_t::__anon106
pf_FindAdv	vlc_media_library.h	/^        int ( * pf_FindAdv )         ( media_library_t *p_media_library,$/;"	m	struct:media_library_t::__anon106
pf_GetMedia	vlc_media_library.h	/^        ml_media_t* ( * pf_GetMedia ) ($/;"	m	struct:media_library_t::__anon106
pf_InputItemFromMedia	vlc_media_library.h	/^        input_item_t* ( * pf_InputItemFromMedia ) ($/;"	m	struct:media_library_t::__anon106
pf_Update	vlc_media_library.h	/^        int ( * pf_Update )          ( media_library_t *p_media_library,$/;"	m	struct:media_library_t::__anon106
pf_add	vlc_es_out.h	/^    es_out_id_t *(*pf_add)    ( es_out_t *, const es_format_t * );$/;"	m	struct:es_out_t
pf_add	vlc_sout.h	/^    sout_stream_id_t *(*pf_add)( sout_stream_t *, es_format_t * );$/;"	m	struct:sout_stream_t
pf_addstream	vlc_sout.h	/^    int                 (*pf_addstream)( sout_mux_t *, sout_input_t * );$/;"	m	struct:sout_mux_t
pf_aout_buffer_new	vlc_codec.h	/^    aout_buffer_t  *(*pf_aout_buffer_new)( decoder_t *, int );$/;"	m	struct:decoder_t
pf_audio_filter	vlc_filter.h	93;"	d
pf_begin	vlc_sql.h	/^    int (*pf_begin) ( sql_t* );$/;"	m	struct:sql_t
pf_bind	vlc_sql.h	/^    int (*pf_bind) ( sql_t* p_sql, sql_stmt_t* p_stmt, int i_pos,$/;"	m	struct:sql_t
pf_blend	vlc_filter.h	/^            void        (*pf_blend) ( filter_t *,  picture_t *,$/;"	m	struct:filter_t::__anon12::__anon15
pf_block	vlc_access.h	/^    block_t    *(*pf_block)( access_t * );                  \/* return a block of data in his 'natural' size, NULL if not yet data or eof *\/$/;"	m	struct:access_t
pf_buffer_del	vlc_filter.h	/^            void           (*pf_buffer_del)( filter_t *, subpicture_t * );$/;"	m	struct:filter_t::__anon12::__anon16
pf_buffer_del	vlc_filter.h	/^            void        (*pf_buffer_del) ( filter_t *, picture_t * );$/;"	m	struct:filter_t::__anon12::__anon13
pf_buffer_new	vlc_filter.h	/^            picture_t * (*pf_buffer_new) ( filter_t * );$/;"	m	struct:filter_t::__anon12::__anon13
pf_buffer_new	vlc_filter.h	/^            subpicture_t * (*pf_buffer_new)( filter_t * );$/;"	m	struct:filter_t::__anon12::__anon16
pf_callback	vlc_interface.h	/^    void (*pf_callback) ( intf_dialog_args_t * );$/;"	m	struct:intf_dialog_args_t
pf_catalog_add	vlc_xml.h	/^    void (*pf_catalog_add) ( xml_t *, const char *, const char *,$/;"	m	struct:xml_t
pf_catalog_load	vlc_xml.h	/^    void (*pf_catalog_load) ( xml_t *, const char * );$/;"	m	struct:xml_t
pf_check	vlc_dialog.h	/^    bool (*pf_check) (void *);$/;"	m	struct:dialog_progress_bar_t
pf_commit	vlc_sql.h	/^    int (*pf_commit) ( sql_t* );$/;"	m	struct:sql_t
pf_control	vlc_access.h	/^    int         (*pf_control)( access_t *, int i_query, va_list args);$/;"	m	struct:access_t
pf_control	vlc_demux.h	/^    int (*pf_control)( demux_t *, int i_query, va_list args);$/;"	m	struct:demux_t
pf_control	vlc_es_out.h	/^    int          (*pf_control)( es_out_t *, int i_query, va_list );$/;"	m	struct:es_out_t
pf_control	vlc_extensions.h	/^    int ( *pf_control ) ( extensions_manager_t*, int, va_list );$/;"	m	struct:extensions_manager_t
pf_control	vlc_services_discovery.h	/^    int ( *pf_control ) ( services_discovery_t *, int, va_list );$/;"	m	struct:services_discovery_t
pf_control	vlc_sout.h	/^    int                     (*pf_control)( sout_access_out_t *, int, va_list );$/;"	m	struct:sout_access_out_t
pf_control	vlc_sout.h	/^    int                 (*pf_control)  ( sout_mux_t *, int, va_list );$/;"	m	struct:sout_mux_t
pf_control	vlc_stream.h	/^    int      (*pf_control)( stream_t *, int i_query, va_list );$/;"	m	struct:stream_t
pf_convert	vlc_image.h	/^    picture_t * (*pf_convert)   ( image_handler_t *, picture_t *,$/;"	m	struct:image_handler_t
pf_decode_audio	vlc_codec.h	/^    aout_buffer_t *     ( * pf_decode_audio )( decoder_t *, block_t ** );$/;"	m	struct:decoder_t
pf_decode_sub	vlc_codec.h	/^    subpicture_t *      ( * pf_decode_sub)   ( decoder_t *, block_t ** );$/;"	m	struct:decoder_t
pf_decode_video	vlc_codec.h	/^    picture_t *         ( * pf_decode_video )( decoder_t *, block_t ** );$/;"	m	struct:decoder_t
pf_del	vlc_es_out.h	/^    void         (*pf_del)    ( es_out_t *, es_out_id_t * );$/;"	m	struct:es_out_t
pf_del	vlc_sout.h	/^    int               (*pf_del)( sout_stream_t *, sout_stream_id_t * );$/;"	m	struct:sout_stream_t
pf_delstream	vlc_sout.h	/^    int                 (*pf_delstream)( sout_mux_t *, sout_input_t * );$/;"	m	struct:sout_mux_t
pf_demux	vlc_demux.h	/^    int (*pf_demux)  ( demux_t * );   \/* demux one frame only *\/$/;"	m	struct:demux_t
pf_destroy	vlc_dialog.h	/^    void (*pf_destroy) (void *);$/;"	m	struct:dialog_progress_bar_t
pf_destroy	vlc_es_out.h	/^    void         (*pf_destroy)( es_out_t * );$/;"	m	struct:es_out_t
pf_destroy	vlc_stream.h	/^    void     (*pf_destroy)( stream_t *);$/;"	m	struct:stream_t
pf_destroy	vlc_subpicture.h	/^    void (*pf_destroy) ( subpicture_t * );$/;"	m	struct:__anon36
pf_destructor	vlc_common.h	/^    void          (*pf_destructor) (struct gc_object_t *);$/;"	m	struct:gc_object_t
pf_destructor	vlc_media_library.h	/^    void          (*pf_destructor) (struct ml_gc_object_t *);$/;"	m	struct:ml_gc_object_t
pf_encode_audio	vlc_codec.h	/^    block_t *           ( * pf_encode_audio )( encoder_t *, aout_buffer_t * );$/;"	m	struct:encoder_t
pf_encode_sub	vlc_codec.h	/^    block_t *           ( * pf_encode_sub )( encoder_t *, subpicture_t * );$/;"	m	struct:encoder_t
pf_encode_video	vlc_codec.h	/^    block_t *           ( * pf_encode_video )( encoder_t *, picture_t * );$/;"	m	struct:encoder_t
pf_filter	vlc_filter.h	/^            block_t *   (*pf_filter) ( filter_t *, block_t * );$/;"	m	struct:filter_t::__anon12::__anon14
pf_filter	vlc_filter.h	/^            picture_t * (*pf_filter) ( filter_t *, picture_t * );$/;"	m	struct:filter_t::__anon12::__anon13
pf_filter	vlc_filter.h	/^            subpicture_t * (*pf_filter) ( filter_t *, subpicture_t * );$/;"	m	struct:filter_t::__anon12::__anon17
pf_filter	vlc_image.h	/^    picture_t * (*pf_filter)    ( image_handler_t *, picture_t *,$/;"	m	struct:image_handler_t
pf_filter	vlc_video_splitter.h	/^    int             (*pf_filter)( video_splitter_t *, picture_t *pp_dst[],$/;"	m	struct:video_splitter_t
pf_finalize	vlc_sql.h	/^    int (*pf_finalize) ( sql_t* p_sql, sql_stmt_t* p_stmt );$/;"	m	struct:sql_t
pf_flush	vlc_aout.h	/^    void (* pf_flush)( audio_output_t *, bool ); \/**< Flush\/drain callback$/;"	m	struct:audio_output
pf_flush	vlc_filter.h	/^            void        (*pf_flush)( filter_t * );$/;"	m	struct:filter_t::__anon12::__anon13
pf_free	vlc_sql.h	/^    void (*pf_free) ( sql_t *, char ** );$/;"	m	struct:sql_t
pf_gain	vlc_es.h	/^    float      pf_gain[AUDIO_REPLAY_GAIN_MAX];$/;"	m	struct:__anon32
pf_get_attachments	vlc_codec.h	/^    int             (*pf_get_attachments)( decoder_t *p_dec, input_attachment_t ***ppp_attachment, int *pi_attachment );$/;"	m	struct:decoder_t
pf_get_attachments	vlc_filter.h	/^    int (*pf_get_attachments)( filter_t *, input_attachment_t ***, int * );$/;"	m	struct:filter_t
pf_get_cc	vlc_codec.h	/^    block_t *           ( * pf_get_cc )      ( decoder_t *, bool pb_present[4] );$/;"	m	struct:decoder_t
pf_get_display_date	vlc_codec.h	/^    mtime_t         (*pf_get_display_date)( decoder_t *, mtime_t );$/;"	m	struct:decoder_t
pf_get_display_rate	vlc_codec.h	/^    int             (*pf_get_display_rate)( decoder_t * );$/;"	m	struct:decoder_t
pf_get_tables	vlc_sql.h	/^    int (*pf_get_tables) ( sql_t *, char *** );$/;"	m	struct:sql_t
pf_getcolumn	vlc_sql.h	/^    int (*pf_getcolumn) ( sql_t* p_sql, sql_stmt_t* p_stmt, int i_col,$/;"	m	struct:sql_t
pf_getcolumnsize	vlc_sql.h	/^    int (*pf_getcolumnsize) ( sql_t* p_sql, sql_stmt_t* p_stmt, int i_col );$/;"	m	struct:sql_t
pf_gettype	vlc_sql.h	/^    int (*pf_gettype) ( sql_t* p_sql, sql_stmt_t* p_stmt, int i_col,$/;"	m	struct:sql_t
pf_html	vlc_filter.h	/^            int         (*pf_html) ( filter_t *, subpicture_region_t *,$/;"	m	struct:filter_t::__anon12::__anon18
pf_is_empty	vlc_xml.h	/^    int (*pf_is_empty) ( xml_reader_t * );$/;"	m	struct:xml_reader_t
pf_media_control	vlc_vod.h	/^    int (*pf_media_control) ( void *, vod_media_t *, const char *, int, va_list );$/;"	m	struct:vod_t
pf_media_del	vlc_vod.h	/^    void          (*pf_media_del)   ( vod_t *, vod_media_t * );$/;"	m	struct:vod_t
pf_media_new	vlc_vod.h	/^    vod_media_t * (*pf_media_new)   ( vod_t *, const char *, input_item_t * );$/;"	m	struct:vod_t
pf_mouse	vlc_filter.h	/^            int            (*pf_mouse)     ( filter_t *,$/;"	m	struct:filter_t::__anon12::__anon16
pf_mouse	vlc_filter.h	/^            int         (*pf_mouse)( filter_t *, vlc_mouse_t *,$/;"	m	struct:filter_t::__anon12::__anon13
pf_mouse	vlc_video_splitter.h	/^    int             (*pf_mouse) ( video_splitter_t *, vlc_mouse_t *,$/;"	m	struct:video_splitter_t
pf_mux	vlc_sout.h	/^    int                 (*pf_mux)      ( sout_mux_t * );$/;"	m	struct:sout_mux_t
pf_next_attr	vlc_xml.h	/^    const char *(*pf_next_attr) ( xml_reader_t *, const char ** );$/;"	m	struct:xml_reader_t
pf_next_node	vlc_xml.h	/^    int (*pf_next_node) ( xml_reader_t *, const char ** );$/;"	m	struct:xml_reader_t
pf_packetize	vlc_codec.h	/^    block_t *           ( * pf_packetize )   ( decoder_t *, block_t ** );$/;"	m	struct:decoder_t
pf_pause	vlc_aout.h	/^    void (* pf_pause)( audio_output_t *, bool, mtime_t ); \/**< Pause\/resume$/;"	m	struct:audio_output
pf_peak	vlc_es.h	/^    float      pf_peak[AUDIO_REPLAY_GAIN_MAX];$/;"	m	struct:__anon32
pf_peek	vlc_stream.h	/^    int      (*pf_peek)   ( stream_t *, const uint8_t **pp_peek, unsigned int i_peek );$/;"	m	struct:stream_t
pf_picture_del	vlc_video_splitter.h	/^    void (*pf_picture_del) ( video_splitter_t *, picture_t *pp_picture[] );$/;"	m	struct:video_splitter_t
pf_picture_link	vlc_codec.h	/^    void            (*pf_picture_link)   ( decoder_t *, picture_t * );$/;"	m	struct:decoder_t
pf_picture_new	vlc_video_splitter.h	/^    int  (*pf_picture_new) ( video_splitter_t *, picture_t *pp_picture[] );$/;"	m	struct:video_splitter_t
pf_picture_unlink	vlc_codec.h	/^    void            (*pf_picture_unlink) ( decoder_t *, picture_t * );$/;"	m	struct:decoder_t
pf_play	vlc_aout.h	/^    void (*pf_play)(audio_output_t *, block_t *); \/**< Audio buffer callback *\/$/;"	m	struct:audio_output
pf_prepare	vlc_sql.h	/^    sql_stmt_t* (*pf_prepare) ( sql_t* p_sql, const char* p_fmt,$/;"	m	struct:sql_t
pf_query	vlc_sql.h	/^    int (*pf_query) ( sql_t *, const char *, char ***, int *, int * );$/;"	m	struct:sql_t
pf_query_callback	vlc_sql.h	/^    int (*pf_query_callback) ( sql_t *, const char *, sql_query_callback_t, void * );$/;"	m	struct:sql_t
pf_read	vlc_access.h	/^    ssize_t     (*pf_read) ( access_t *, uint8_t *, size_t );  \/* Return -1 if no data yet, 0 if no more data, else real data read *\/$/;"	m	struct:access_t
pf_read	vlc_image.h	/^    picture_t * (*pf_read)      ( image_handler_t *, block_t *,$/;"	m	struct:image_handler_t
pf_read	vlc_sout.h	/^    ssize_t                 (*pf_read)( sout_access_out_t *, block_t * );$/;"	m	struct:sout_access_out_t
pf_read	vlc_stream.h	/^    int      (*pf_read)   ( stream_t *, void *p_read, unsigned int i_read );$/;"	m	struct:stream_t
pf_read_url	vlc_image.h	/^    picture_t * (*pf_read_url)  ( image_handler_t *, const char *,$/;"	m	struct:image_handler_t
pf_recv	vlc_network.h	/^    int (*pf_recv) ( void *, void *, size_t );$/;"	m	struct:virtual_socket_t
pf_release	vlc_block.h	/^    block_free_t pf_release;$/;"	m	struct:block_t
pf_release	vlc_picture.h	/^    void (*pf_release)( picture_t * );$/;"	m	struct:picture_t
pf_render_html	vlc_filter.h	133;"	d
pf_render_text	vlc_filter.h	132;"	d
pf_reset	vlc_sql.h	/^    int (*pf_reset) ( sql_t* p_sql, sql_stmt_t* p_stmt );$/;"	m	struct:sql_t
pf_rollback	vlc_sql.h	/^    void (*pf_rollback) ( sql_t* );$/;"	m	struct:sql_t
pf_run	vlc_interface.h	/^    void      ( *pf_run )    ( struct intf_thread_t * ); \/** Run function *\/$/;"	m	struct:intf_thread_t
pf_run	vlc_sql.h	/^    int (*pf_run) ( sql_t* p_sql, sql_stmt_t* p_stmt );$/;"	m	struct:sql_t
pf_seek	vlc_access.h	/^    int         (*pf_seek) ( access_t *, uint64_t );         \/* can be null if can't seek *\/$/;"	m	struct:access_t
pf_seek	vlc_sout.h	/^    int                     (*pf_seek)( sout_access_out_t *, off_t );$/;"	m	struct:sout_access_out_t
pf_send	vlc_es_out.h	/^    int          (*pf_send)   ( es_out_t *, es_out_id_t *, block_t * );$/;"	m	struct:es_out_t
pf_send	vlc_network.h	/^    int (*pf_send) ( void *, const void *, size_t );$/;"	m	struct:virtual_socket_t
pf_send	vlc_sout.h	/^    int               (*pf_send)( sout_stream_t *, sout_stream_id_t *, block_t* );$/;"	m	struct:sout_stream_t
pf_show_dialog	vlc_interface.h	/^    void ( *pf_show_dialog ) ( struct intf_thread_t *, int, int,$/;"	m	struct:intf_thread_t
pf_source	vlc_filter.h	/^            subpicture_t * (*pf_source)    ( filter_t *, mtime_t );$/;"	m	struct:filter_t::__anon12::__anon16
pf_spu_buffer_del	vlc_codec.h	/^    void            (*pf_spu_buffer_del)( decoder_t *, subpicture_t * );$/;"	m	struct:decoder_t
pf_spu_buffer_new	vlc_codec.h	/^    subpicture_t   *(*pf_spu_buffer_new)( decoder_t *, const subpicture_updater_t * );$/;"	m	struct:decoder_t
pf_sub_buffer_del	vlc_filter.h	114;"	d
pf_sub_buffer_new	vlc_filter.h	113;"	d
pf_sub_filter	vlc_filter.h	121;"	d
pf_sub_mouse	vlc_filter.h	115;"	d
pf_sub_source	vlc_filter.h	112;"	d
pf_text	vlc_filter.h	/^            int         (*pf_text) ( filter_t *, subpicture_region_t *,$/;"	m	struct:filter_t::__anon12::__anon18
pf_update	vlc_dialog.h	/^    void (*pf_update) (void *, const char *, float);$/;"	m	struct:dialog_progress_bar_t
pf_update	vlc_subpicture.h	/^    void (*pf_update)  ( subpicture_t *,$/;"	m	struct:__anon36
pf_update_list	vlc_configuration.h	/^    vlc_callback_t pf_update_list; \/* Callback to initialize dropdown lists *\/$/;"	m	struct:module_config_t
pf_use_dtd	vlc_xml.h	/^    int (*pf_use_dtd) ( xml_reader_t * );$/;"	m	struct:xml_reader_t
pf_validate	vlc_subpicture.h	/^    int  (*pf_validate)( subpicture_t *,$/;"	m	struct:__anon36
pf_video_blend	vlc_filter.h	100;"	d
pf_video_buffer_del	vlc_filter.h	87;"	d
pf_video_buffer_new	vlc_filter.h	86;"	d
pf_video_filter	vlc_filter.h	83;"	d
pf_video_flush	vlc_filter.h	84;"	d
pf_video_mouse	vlc_filter.h	85;"	d
pf_vmprintf	vlc_sql.h	/^    char* (*pf_vmprintf) ( const char*, va_list args );$/;"	m	struct:sql_t
pf_volume_set	vlc_aout.h	/^    aout_volume_cb          pf_volume_set; \/**< Volume setter (or NULL) *\/$/;"	m	struct:audio_output
pf_vout_buffer_del	vlc_codec.h	/^    void            (*pf_vout_buffer_del)( decoder_t *, picture_t * );$/;"	m	struct:decoder_t
pf_vout_buffer_new	vlc_codec.h	/^    picture_t      *(*pf_vout_buffer_new)( decoder_t * );$/;"	m	struct:decoder_t
pf_write	vlc_image.h	/^    block_t * (*pf_write)       ( image_handler_t *, picture_t *,$/;"	m	struct:image_handler_t
pf_write	vlc_sout.h	/^    ssize_t                 (*pf_write)( sout_access_out_t *, block_t * );$/;"	m	struct:sout_access_out_t
pf_write_url	vlc_image.h	/^    int (*pf_write_url)         ( image_handler_t *, picture_t *,$/;"	m	struct:image_handler_t
pi_list	vlc_configuration.h	/^    int         *pi_list;                              \/* Idem for integers *\/$/;"	m	struct:module_config_t
pi_types	vlc_common.h	/^    int *           pi_types;$/;"	m	struct:vlc_list_t
pi_vlc_chan_order_wg4	vlc_aout.h	/^static const uint32_t pi_vlc_chan_order_wg4[] =$/;"	v
picture	vlc_picture_pool.h	/^    picture_t **picture;$/;"	m	struct:__anon1
picture_CleanupQuant	vlc_picture.h	/^static inline void picture_CleanupQuant( picture_t *p_pic )$/;"	f
picture_Copy	vlc_picture.h	/^static inline void picture_Copy( picture_t *p_dst, const picture_t *p_src )$/;"	f
picture_CopyProperties	vlc_picture.h	/^static inline void picture_CopyProperties( picture_t *p_dst, const picture_t *p_src )$/;"	f
picture_Hold	vlc_picture.h	/^static inline picture_t *picture_Hold( picture_t *p_picture )$/;"	f
picture_IsReferenced	vlc_picture.h	/^static inline bool picture_IsReferenced( picture_t *p_picture )$/;"	f
picture_Release	vlc_picture.h	/^static inline void picture_Release( picture_t *p_picture )$/;"	f
picture_count	vlc_picture_pool.h	/^    int       picture_count;$/;"	m	struct:__anon1
picture_fifo_t	vlc_picture_fifo.h	/^typedef struct picture_fifo_t picture_fifo_t;$/;"	t	typeref:struct:picture_fifo_t
picture_pool_configuration_t	vlc_picture_pool.h	/^} picture_pool_configuration_t;$/;"	t	typeref:struct:__anon1
picture_pool_t	vlc_picture_pool.h	/^typedef struct picture_pool_t picture_pool_t;$/;"	t	typeref:struct:picture_pool_t
picture_release_sys_t	vlc_picture.h	/^typedef struct picture_release_sys_t picture_release_sys_t;$/;"	t	typeref:struct:picture_release_sys_t
picture_resource_t	vlc_picture.h	/^} picture_resource_t;$/;"	t	typeref:struct:__anon130
picture_sys_t	vlc_common.h	/^typedef struct picture_sys_t picture_sys_t;$/;"	t	typeref:struct:picture_sys_t
picture_t	vlc_common.h	/^typedef struct picture_t picture_t;$/;"	t	typeref:struct:picture_t
picture_t	vlc_picture.h	/^struct picture_t$/;"	s
pixel_bits	vlc_fourcc.h	/^    unsigned pixel_bits;        \/* Number of bits actually used bits per pixel for a plane *\/$/;"	m	struct:__anon96
pixel_size	vlc_fourcc.h	/^    unsigned pixel_size;        \/* Number of bytes per pixel for a plane *\/$/;"	m	struct:__anon96
pl_CurrentInput	vlc_playlist.h	371;"	d
pl_Get	vlc_playlist.h	256;"	d
pl_Locked	vlc_playlist.h	/^    pl_Locked = true,$/;"	e	enum:pl_locked_state
pl_Unlocked	vlc_playlist.h	/^    pl_Unlocked = false$/;"	e	enum:pl_locked_state
pl_locked_state	vlc_playlist.h	/^enum pl_locked_state$/;"	g
plane_count	vlc_fourcc.h	/^    unsigned plane_count;$/;"	m	struct:__anon96
plane_t	vlc_picture.h	/^typedef struct plane_t$/;"	s
plane_t	vlc_picture.h	/^} plane_t;$/;"	t	typeref:struct:plane_t
playlist_CurrentSize	vlc_playlist.h	/^static inline int playlist_CurrentSize( playlist_t *p_playlist )$/;"	f
playlist_IsEmpty	vlc_playlist.h	/^static inline bool playlist_IsEmpty( playlist_t *p_playlist )$/;"	f
playlist_Next	vlc_playlist.h	262;"	d
playlist_Pause	vlc_playlist.h	260;"	d
playlist_Play	vlc_playlist.h	259;"	d
playlist_Prev	vlc_playlist.h	263;"	d
playlist_Skip	vlc_playlist.h	264;"	d
playlist_Stop	vlc_playlist.h	261;"	d
playlist_add_t	vlc_common.h	/^typedef struct playlist_add_t playlist_add_t;$/;"	t	typeref:struct:playlist_add_t
playlist_add_t	vlc_playlist.h	/^struct playlist_add_t$/;"	s
playlist_command_t	vlc_common.h	/^} playlist_command_t;$/;"	t	typeref:enum:__anon92
playlist_export_t	vlc_playlist.h	/^typedef struct playlist_export_t$/;"	s
playlist_export_t	vlc_playlist.h	/^} playlist_export_t;$/;"	t	typeref:struct:playlist_export_t
playlist_item_flags_e	vlc_playlist.h	/^} playlist_item_flags_e;$/;"	t	typeref:enum:__anon119
playlist_item_t	vlc_common.h	/^typedef struct playlist_item_t playlist_item_t;$/;"	t	typeref:struct:playlist_item_t
playlist_item_t	vlc_playlist.h	/^struct playlist_item_t$/;"	s
playlist_status_t	vlc_playlist.h	/^{ PLAYLIST_STOPPED,PLAYLIST_RUNNING,PLAYLIST_PAUSED } playlist_status_t;$/;"	t	typeref:enum:__anon120
playlist_t	vlc_common.h	/^typedef struct playlist_t playlist_t;$/;"	t	typeref:struct:playlist_t
playlist_t	vlc_playlist.h	/^struct playlist_t$/;"	s
playlist_view_t	vlc_common.h	/^typedef struct playlist_view_t playlist_view_t;$/;"	t	typeref:struct:playlist_view_t
poll	vlc_fixups.h	273;"	d
poll	vlc_fixups.h	276;"	d
pollfd	vlc_fixups.h	/^struct pollfd$/;"	s
pool	vlc_media_library.h	/^    bool           pool;$/;"	m	struct:ml_gc_object_t
pool	vlc_vout_display.h	/^    picture_pool_t *(*pool)(vout_display_t *, unsigned count);$/;"	m	struct:vout_display_t
popcount	vlc_common.h	/^static inline unsigned popcount (unsigned x)$/;"	f
postorder	vlc_fixups.h	/^    postorder,$/;"	e	enum:__anon87
pp_categories	vlc_input_item.h	/^    info_category_t **pp_categories; \/**< Pointer to the first info category *\/$/;"	m	struct:input_item_t
pp_children	vlc_input_item.h	/^    input_item_node_t      **pp_children;$/;"	m	struct:input_item_node_t
pp_children	vlc_playlist.h	/^    playlist_item_t      **pp_children; \/**< Children nodes\/items *\/$/;"	m	struct:playlist_item_t
pp_elems	vlc_arrays.h	/^    void ** pp_elems;$/;"	m	struct:vlc_array_t
pp_epg	vlc_input_item.h	/^    vlc_epg_t   **pp_epg;            \/**< EPG entries *\/$/;"	m	struct:input_item_t
pp_event	vlc_epg.h	/^    vlc_epg_event_t **pp_event;$/;"	m	struct:__anon115
pp_infos	vlc_input_item.h	/^    struct info_t **pp_infos;     \/**< Pointer to an array of infos *\/$/;"	m	struct:info_category_t	typeref:struct:info_category_t::info_t
pp_inputs	vlc_sout.h	/^    sout_input_t        **pp_inputs;$/;"	m	struct:sout_mux_t
pp_last	vlc_aout.h	/^    aout_buffer_t **        pp_last;$/;"	m	struct:aout_fifo_t
pp_samples	vlc_messages.h	/^    counter_sample_t ** pp_samples;$/;"	m	struct:counter_t
ppf_action	vlc_configuration.h	/^    vlc_callback_t *ppf_action;    \/* List of possible actions for a config *\/$/;"	m	struct:module_config_t
ppsz_action_text	vlc_configuration.h	/^    char          **ppsz_action_text;         \/* Friendly names for actions *\/$/;"	m	struct:module_config_t
ppsz_input	vlc_vlm.h	/^    char **ppsz_input;  \/*< array of input options *\/$/;"	m	struct:__anon139
ppsz_list	vlc_configuration.h	/^    char **      ppsz_list;       \/* List of possible values for the option *\/$/;"	m	struct:module_config_t
ppsz_list_text	vlc_configuration.h	/^    char       **ppsz_list_text;          \/* Friendly names for list values *\/$/;"	m	struct:module_config_t
ppsz_option	vlc_vlm.h	/^    char **ppsz_option; \/*< array of output options *\/$/;"	m	struct:__anon139
ppsz_options	vlc_input_item.h	/^    char       **ppsz_options;       \/**< Array of input options *\/$/;"	m	struct:input_item_t
preorder	vlc_fixups.h	/^    preorder,$/;"	e	enum:__anon87
prepare	vlc_vout_display.h	/^    void       (*prepare)(vout_display_t *, picture_t *, subpicture_t *);$/;"	m	struct:vout_display_t
proc	vlc_threads.h	/^    void         (*proc) (void *);$/;"	m	struct:vlc_cleanup_t
psz	vlc_configuration.h	/^    char       *psz;$/;"	m	union:__anon80
psz	vlc_media_library.h	/^        char           *psz;$/;"	m	union:ml_result_t::__anon107
psz	vlc_sql.h	/^        char* psz;$/;"	m	union:__anon78::__anon79
pszTip	vlc_windows_interfaces.h	/^    wchar_t pszTip[ 260 ];$/;"	m	struct:tagTHUMBBUTTON
psz_HA1	vlc_http.h	/^    char *psz_HA1; \/* stored H(A1) value if algorithm = "MD5-sess" *\/$/;"	m	struct:http_auth_t
psz_access	vlc_access.h	/^    char        *psz_access;$/;"	m	struct:access_t
psz_access	vlc_demux.h	/^    char        *psz_access;$/;"	m	struct:demux_t
psz_access	vlc_sout.h	/^    char                    *psz_access;$/;"	m	struct:sout_access_out_t
psz_access	vlc_stream.h	/^    char        *psz_access;$/;"	m	struct:stream_t
psz_action	vlc_keys.h	/^    const char *psz_action;$/;"	m	struct:hotkey
psz_action	vlc_osd.h	/^    char    *psz_action;      \/*< hotkey action name on button*\/$/;"	m	struct:osd_button_t
psz_action_down	vlc_osd.h	/^    char    *psz_action_down; \/*< hotkey action name on range buttons$/;"	m	struct:osd_button_t
psz_album	vlc_media_library.h	/^    char            *psz_album;         \/**< Name of the album *\/$/;"	m	struct:ml_media_t
psz_algorithm	vlc_http.h	/^    char *psz_algorithm;$/;"	m	struct:http_auth_t
psz_alternate_button	vlc_interface.h	/^    char           *psz_alternate_button;\/\/\/< alternate button title (~NO)$/;"	m	struct:interaction_dialog_t
psz_args	vlc_httpd.h	/^    uint8_t *psz_args;$/;"	m	struct:httpd_message_t
psz_author	vlc_extensions.h	/^    char *psz_author;         \/**< Author of the extension (ro) *\/$/;"	m	struct:extension_t
psz_authors	vlc_about.h	/^static const char psz_authors[] =$/;"	v
psz_buffer	vlc_url.h	/^    char *psz_buffer; \/* to be freed *\/$/;"	m	struct:vlc_url_t
psz_category	vlc_events.h	/^            const char * psz_category;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_services_discovery_item_added
psz_cnonce	vlc_http.h	/^    char *psz_cnonce;$/;"	m	struct:http_auth_t
psz_comment	vlc_media_library.h	/^    char            *psz_comment;       \/**< Comment or description about media *\/$/;"	m	struct:ml_media_t
psz_cover	vlc_media_library.h	/^    char            *psz_cover;         \/**< URI of the cover *\/$/;"	m	struct:ml_media_t
psz_default_button	vlc_interface.h	/^    char           *psz_default_button;  \/\/\/< default button title (~OK)$/;"	m	struct:interaction_dialog_t
psz_demux	vlc_access.h	/^    char        *psz_demux;$/;"	m	struct:access_t
psz_demux	vlc_demux.h	/^    char        *psz_demux;$/;"	m	struct:demux_t
psz_desc	vlc_update.h	/^    char* psz_desc;     \/\/\/< Release description$/;"	m	struct:update_release_t
psz_description	vlc/libvlc_media_player.h	/^    char *psz_description;$/;"	m	struct:libvlc_audio_output_t
psz_description	vlc_epg.h	/^    char    *psz_description;$/;"	m	struct:__anon114
psz_description	vlc_es.h	/^        char *psz_description;$/;"	m	struct:extra_languages_t
psz_description	vlc_es.h	/^    char            *psz_description;     \/**< human readible description of language *\/$/;"	m	struct:es_format_t
psz_description	vlc_extensions.h	/^    char *psz_description;    \/**< Full description (ro) *\/$/;"	m	struct:extension_t
psz_description	vlc_input.h	/^    char *psz_description;$/;"	m	struct:input_attachment_t
psz_description	vlc_interface.h	/^    char           *psz_description;    \/\/\/< Descriptor string$/;"	m	struct:interaction_dialog_t
psz_domain	vlc_http.h	/^    char *psz_domain;$/;"	m	struct:http_auth_t
psz_encoding	vlc_es.h	/^    char *psz_encoding;$/;"	m	struct:subs_format_t
psz_eng_name	vlc_iso_lang.h	/^    const char *psz_eng_name;    \/* Description in English *\/$/;"	m	struct:iso639_lang_t
psz_extensions	vlc_interface.h	/^    char *psz_extensions;$/;"	m	struct:intf_dialog_args_t
psz_extra	vlc_media_library.h	/^    char            *psz_extra;         \/**< Extra: Some extra datas like lyrics *\/$/;"	m	struct:ml_media_t
psz_file	vlc_demux.h	/^    char        *psz_file;$/;"	m	struct:demux_t
psz_file	vlc_meta.h	/^    const char *psz_file;$/;"	m	struct:meta_export_t
psz_file	vlc_osd.h	/^    char            *psz_file;  \/*< Config file name *\/$/;"	m	struct:osd_menu_t
psz_filename	vlc/libvlc_events.h	/^             char* psz_filename ;$/;"	m	struct:libvlc_event_t::__anon41::__anon60
psz_filename	vlc_playlist.h	/^    const char *psz_filename;$/;"	m	struct:playlist_export_t
psz_filepath	vlc_access.h	/^    char        *psz_filepath; \/**< Local file path (if applicable) *\/$/;"	m	struct:access_t
psz_fontname	vlc_text_style.h	/^    char *     psz_fontname;      \/**< The name of the font *\/$/;"	m	struct:__anon3
psz_genre	vlc_media_library.h	/^    char            *psz_genre;         \/**< Genre of the media *\/$/;"	m	struct:ml_media_t
psz_header	vlc/libvlc_structures.h	/^    const char *psz_header;   \/* optional header *\/$/;"	m	struct:libvlc_log_message_t
psz_header	vlc_messages.h	/^    const char *psz_header; \/**< Additional header (used by VLM media) *\/$/;"	m	struct:__anon89
psz_help	vlc/libvlc.h	/^    char *psz_help;$/;"	m	struct:libvlc_module_description_t
psz_help	vlc_configuration.h	/^    const char *psz_help;$/;"	m	struct:config_category_t
psz_host	vlc_sql.h	/^    char *psz_host;         \/**< Location or host of the database *\/$/;"	m	struct:sql_t
psz_host	vlc_url.h	/^    char *psz_host;$/;"	m	struct:vlc_url_t
psz_html	vlc_subpicture.h	/^    char            *psz_html;       \/**< HTML version of subtitle (NULL = use psz_text) *\/$/;"	m	struct:subpicture_region_t
psz_icon_url	vlc_services_discovery.h	/^    char *psz_icon_url;         \/**< URL to the icon that represents it *\/$/;"	m	struct:__anon2
psz_instance_name	vlc/libvlc_events.h	/^            const char * psz_instance_name;$/;"	m	struct:libvlc_event_t::__anon41::__anon62
psz_instance_name	vlc_vlm.h	/^    const char    *psz_instance_name; \/* Instance name or NULL *\/$/;"	m	struct:__anon143
psz_intf	vlc_interface.h	/^    char *              psz_intf;                    \/** intf name specified *\/$/;"	m	struct:intf_thread_t
psz_iso639_1	vlc_iso_lang.h	/^    const char psz_iso639_1[3];  \/* ISO-639-1 (2 characters) code *\/$/;"	m	struct:iso639_lang_t
psz_iso639_2B	vlc_iso_lang.h	/^    const char psz_iso639_2B[4]; \/* ISO-639-2\/B (3 characters) native code *\/$/;"	m	struct:iso639_lang_t
psz_iso639_2T	vlc_iso_lang.h	/^    const char psz_iso639_2T[4]; \/* ISO-639-2\/T (3 characters) English code *\/$/;"	m	struct:iso639_lang_t
psz_key	vlc_arrays.h	/^    char *   psz_key;$/;"	m	struct:vlc_dictionary_entry_t
psz_language	vlc_es.h	/^        char *psz_language;$/;"	m	struct:extra_languages_t
psz_language	vlc_es.h	/^    char            *psz_language;        \/**< human readible language name *\/$/;"	m	struct:es_format_t
psz_language	vlc_media_library.h	/^    char            *psz_language;      \/**< Extra: Language *\/$/;"	m	struct:ml_media_t
psz_license	vlc_about.h	/^static const char psz_license[] =$/;"	v
psz_location	vlc_access.h	/^    char        *psz_location; \/**< Location (URL with the scheme stripped) *\/$/;"	m	struct:access_t
psz_location	vlc_demux.h	/^    char        *psz_location;$/;"	m	struct:demux_t
psz_longname	vlc/libvlc.h	/^    char *psz_longname;$/;"	m	struct:libvlc_module_description_t
psz_longtext	vlc_configuration.h	/^    char        *psz_longtext;   \/* Long comment on the configuration option *\/$/;"	m	struct:module_config_t
psz_md5_hash	vlc_md5.h	/^static inline char * psz_md5_hash( struct md5_s *md5_s )$/;"	f
psz_media_name	vlc/libvlc_events.h	/^            const char * psz_media_name;$/;"	m	struct:libvlc_event_t::__anon41::__anon62
psz_message	vlc/libvlc_structures.h	/^    const char *psz_message;  \/* message *\/$/;"	m	struct:libvlc_log_message_t
psz_mime	vlc_input.h	/^    char *psz_mime;$/;"	m	struct:input_attachment_t
psz_module	vlc_messages.h	/^    const char *psz_module; \/**< Emitter module (source code) *\/$/;"	m	struct:__anon89
psz_module	vlc_video_splitter.h	/^    char *psz_module;$/;"	m	struct:__anon75
psz_mux	vlc_sout.h	/^    char                *psz_mux;$/;"	m	struct:sout_mux_t
psz_mux	vlc_vlm.h	/^        char *psz_mux;  \/*< name of muxer to use *\/$/;"	m	struct:__anon139::__anon141
psz_name	vlc/libvlc.h	/^    char *psz_name;$/;"	m	struct:libvlc_module_description_t
psz_name	vlc/libvlc_media_player.h	/^    char *psz_name;$/;"	m	struct:libvlc_audio_output_t
psz_name	vlc/libvlc_media_player.h	/^    char *psz_name;$/;"	m	struct:libvlc_track_description_t
psz_name	vlc/libvlc_structures.h	/^    const char *psz_name;     \/* module name *\/$/;"	m	struct:libvlc_log_message_t
psz_name	vlc_codecs.h	/^    const char  *psz_name;$/;"	m	struct:__anon10
psz_name	vlc_codecs.h	/^    const char  *psz_name;$/;"	m	struct:__anon11
psz_name	vlc_configuration.h	/^    char        *psz_name;                                    \/* Option name *\/$/;"	m	struct:module_config_t
psz_name	vlc_configuration.h	/^    char        *psz_name;      \/**< Option name *\/$/;"	m	struct:config_chain_t
psz_name	vlc_configuration.h	/^    const char *psz_name;$/;"	m	struct:config_category_t
psz_name	vlc_epg.h	/^    char            *psz_name;$/;"	m	struct:__anon115
psz_name	vlc_epg.h	/^    char    *psz_name;$/;"	m	struct:__anon114
psz_name	vlc_extensions.h	/^    char *psz_name;           \/**< Real name of the extension (ro) *\/$/;"	m	struct:extension_t
psz_name	vlc_input.h	/^    char        *psz_name;$/;"	m	struct:__anon144
psz_name	vlc_input.h	/^    char    *psz_name;$/;"	m	struct:seekpoint_t
psz_name	vlc_input.h	/^    char *psz_name;$/;"	m	struct:input_attachment_t
psz_name	vlc_input_item.h	/^    char       *psz_name;            \/**< text describing this item *\/$/;"	m	struct:input_item_t
psz_name	vlc_input_item.h	/^    char   *psz_name;      \/**< Name of this category *\/$/;"	m	struct:info_category_t
psz_name	vlc_input_item.h	/^    char *psz_name;            \/**< Name of this info *\/$/;"	m	struct:info_t
psz_name	vlc_media_library.h	/^    char               *psz_name;   \/**< Name of the person *\/$/;"	m	struct:ml_person_t
psz_name	vlc_messages.h	/^    char              * psz_name;$/;"	m	struct:counter_t
psz_name	vlc_osd.h	/^    char    *psz_name;     \/*< name of button *\/$/;"	m	struct:osd_button_t
psz_name	vlc_services_discovery.h	/^    char *psz_name;                           \/**< Main name of the SD *\/$/;"	m	struct:services_discovery_t
psz_name	vlc_sout.h	/^    char              *psz_name;$/;"	m	struct:sout_stream_t
psz_name	vlc_vlm.h	/^    char *psz_name;         \/*< message name *\/$/;"	m	struct:vlm_message_t
psz_name	vlc_vlm.h	/^    char *psz_name;         \/*< vlm media instance descriptive name *\/$/;"	m	struct:__anon142
psz_name	vlc_vlm.h	/^    char *psz_name;     \/*< descriptive name of vlm_media_t item *\/$/;"	m	struct:__anon139
psz_name	vlc_vlm.h	/^    const char    *psz_name;          \/* Media name *\/$/;"	m	struct:__anon143
psz_native_name	vlc_iso_lang.h	/^    const char *psz_native_name; \/* Description in native language *\/$/;"	m	struct:iso639_lang_t
psz_nonce	vlc_http.h	/^    char *psz_nonce;$/;"	m	struct:http_auth_t
psz_object_type	vlc_messages.h	/^    const char *psz_object_type; \/**< Emitter object type name *\/$/;"	m	struct:__anon89
psz_opaque	vlc_http.h	/^    char *psz_opaque;$/;"	m	struct:http_auth_t
psz_option	vlc_url.h	/^    char *psz_option;$/;"	m	struct:vlc_url_t
psz_orig_title	vlc_media_library.h	/^    char            *psz_orig_title;    \/**< Original title (mainly for movies) *\/$/;"	m	struct:ml_media_t
psz_other_button	vlc_interface.h	/^    char           *psz_other_button;$/;"	m	struct:interaction_dialog_t
psz_output	vlc_vlm.h	/^    char *psz_output;   \/*< *\/$/;"	m	struct:__anon139
psz_pass	vlc_sql.h	/^    char *psz_pass;         \/**< Password used to connect to database *\/$/;"	m	struct:sql_t
psz_password	vlc_url.h	/^    char *psz_password;$/;"	m	struct:vlc_url_t
psz_path	vlc_osd.h	/^    char             *psz_path;  \/*< directory where OSD menu images are stored *\/$/;"	m	struct:osd_menu_t
psz_path	vlc_sout.h	/^    char                    *psz_path;$/;"	m	struct:sout_access_out_t
psz_path	vlc_stream.h	/^    char        *psz_path;$/;"	m	struct:stream_t
psz_path	vlc_url.h	/^    char *psz_path;$/;"	m	struct:vlc_url_t
psz_preview	vlc_media_library.h	/^    char            *psz_preview;       \/**< Preview thumbnail for video, if any *\/$/;"	m	struct:ml_media_t
psz_protocol	vlc_url.h	/^    char *psz_protocol;$/;"	m	struct:vlc_url_t
psz_qop	vlc_http.h	/^    char *psz_qop;$/;"	m	struct:http_auth_t
psz_realm	vlc_http.h	/^    char *psz_realm;$/;"	m	struct:http_auth_t
psz_results	vlc_interface.h	/^    char **psz_results;$/;"	m	struct:intf_dialog_args_t
psz_returned	vlc_interface.h	/^    char           *psz_returned[1];    \/\/\/< returned responses from the user$/;"	m	struct:interaction_dialog_t
psz_role	vlc_media_library.h	/^    char               *psz_role;   \/**< Type of person *\/$/;"	m	struct:ml_person_t
psz_short_desc	vlc_services_discovery.h	/^    char *psz_short_desc;       \/**< The short description, human-readable *\/$/;"	m	struct:__anon2
psz_short_description	vlc_epg.h	/^    char    *psz_short_description;$/;"	m	struct:__anon114
psz_shortdescription	vlc_extensions.h	/^    char *psz_shortdescription; \/**< Short description (eg. 1 line)  (ro) *\/$/;"	m	struct:extension_t
psz_shortname	vlc/libvlc.h	/^    char *psz_shortname;$/;"	m	struct:libvlc_module_description_t
psz_sout	vlc_sout.h	/^    char *psz_sout;$/;"	m	struct:sout_instance_t
psz_stale	vlc_http.h	/^    char *psz_stale;$/;"	m	struct:http_auth_t
psz_state	vlc_osd.h	/^    char        *psz_state; \/*< state name *\/$/;"	m	struct:osd_state_t
psz_string	vlc_common.h	/^    char *          psz_string;$/;"	m	union:__anon93
psz_text	vlc_configuration.h	/^    char        *psz_text;      \/* Short comment on the configuration option *\/$/;"	m	struct:module_config_t
psz_text	vlc_extensions.h	/^        char *psz_text;    \/\/\/< String value$/;"	m	struct:extension_widget_t::extension_widget_value_t
psz_text	vlc_extensions.h	/^    char *psz_text;               \/\/\/< Text. May be NULL or modified by the UI$/;"	m	struct:extension_widget_t
psz_text	vlc_subpicture.h	/^    char            *psz_text;       \/**< text string comprising this region *\/$/;"	m	struct:subpicture_region_t
psz_thanks	vlc_about.h	/^static const char psz_thanks[] =$/;"	v
psz_title	vlc_extensions.h	/^    char *psz_title;             \/\/\/< Title for the Dialog (in TitleBar)$/;"	m	struct:extension_dialog_t
psz_title	vlc_extensions.h	/^    char *psz_title;          \/**< Display title (ro) *\/$/;"	m	struct:extension_t
psz_title	vlc_interface.h	/^    char           *psz_title;          \/\/\/< Title$/;"	m	struct:interaction_dialog_t
psz_title	vlc_interface.h	/^    char *psz_title;$/;"	m	struct:intf_dialog_args_t
psz_title	vlc_media_library.h	/^    char            *psz_title;         \/**< Title of the media *\/$/;"	m	struct:ml_media_t
psz_type	vlc/libvlc_structures.h	/^    const char *psz_type;     \/* module type *\/$/;"	m	struct:libvlc_log_message_t
psz_type	vlc_configuration.h	/^    char        *psz_type;                          \/* Configuration subtype *\/$/;"	m	struct:module_config_t
psz_uri	vlc_input_item.h	/^    char       *psz_uri;             \/**< mrl of this item *\/$/;"	m	struct:input_item_t
psz_uri	vlc_media_library.h	/^    char            *psz_uri;           \/**< URI to find the media *\/$/;"	m	struct:ml_media_t
psz_url	vlc_extensions.h	/^    char *psz_url;            \/**< A URL to the official page (ro) *\/$/;"	m	struct:extension_t
psz_url	vlc_httpd.h	/^    char    *psz_url;$/;"	m	struct:httpd_message_t
psz_url	vlc_services_discovery.h	/^    char *psz_url;              \/**< URL for the service *\/$/;"	m	struct:__anon2
psz_url	vlc_update.h	/^    char* psz_url;      \/\/\/< Download URL$/;"	m	struct:update_release_t
psz_user	vlc_sql.h	/^    char *psz_user;         \/**< Username used to connect to database *\/$/;"	m	struct:sql_t
psz_username	vlc_url.h	/^    char *psz_username;$/;"	m	struct:vlc_url_t
psz_value	vlc_configuration.h	/^    char        *psz_value;     \/**< Option value *\/$/;"	m	struct:config_chain_t
psz_value	vlc_input_item.h	/^    char *psz_value;           \/**< Value of the info *\/$/;"	m	struct:info_t
psz_value	vlc_vlm.h	/^    char *psz_value;        \/*< message value *\/$/;"	m	struct:vlm_message_t
psz_version	vlc_extensions.h	/^    char *psz_version;        \/**< Version (ro) *\/$/;"	m	struct:extension_t
pthread_sigmask	vlc_threads.h	44;"	d
ptr	vlc_sql.h	/^        void* ptr;$/;"	m	union:__anon78::__anon79
quot	vlc_fixups.h	/^    long long quot; \/* Quotient. *\/$/;"	m	struct:__anon84
rcSource	vlc_codecs.h	/^    RECT32                  rcSource;$/;"	m	struct:ATTR_PACKED
rcTarget	vlc_codecs.h	/^    RECT32                  rcTarget;$/;"	m	struct:ATTR_PACKED
readers	vlc_threads.h	/^    unsigned long readers;$/;"	m	struct:__anon23
readers	vlc_threads.h	/^    unsigned long readers;$/;"	m	struct:__anon29
realloc_down	vlc_arrays.h	/^static inline void *realloc_down( void *ptr, size_t size )$/;"	f
realloc_or_free	vlc_memory.h	/^static inline void *realloc_or_free( void *p, size_t sz )$/;"	f
refs	vlc_common.h	/^    vlc_atomic_t    refs;$/;"	m	struct:gc_object_t
refs	vlc_media_library.h	/^    uintptr_t      refs;$/;"	m	struct:ml_gc_object_t
rem	vlc_fixups.h	/^    long long rem;  \/* Remainder. *\/$/;"	m	struct:__anon84
render	vlc_filter.h	/^        } render;$/;"	m	union:filter_t::__anon12	typeref:struct:filter_t::__anon12::__anon18
revents	vlc_fixups.h	/^    unsigned revents;$/;"	m	struct:pollfd
rewinddir	vlc_fs.h	67;"	d
rewinddir	vlc_fs.h	68;"	d
rgbBlue	vlc_codecs.h	/^    uint8_t rgbBlue;$/;"	m	struct:ATTR_PACKED
rgbGreen	vlc_codecs.h	/^    uint8_t rgbGreen;$/;"	m	struct:ATTR_PACKED
rgbRed	vlc_codecs.h	/^    uint8_t rgbRed;$/;"	m	struct:ATTR_PACKED
rgbReserved	vlc_codecs.h	/^    uint8_t rgbReserved;$/;"	m	struct:ATTR_PACKED
right	vlc/libvlc_media_player.h	/^    int bottom, right;$/;"	m	struct:libvlc_rectangle_t
right	vlc_codecs.h	/^    int left, top, right, bottom;$/;"	m	struct:ATTR_PACKED
right	vlc_media_library.h	/^    ml_ftree_t      *right;     \/**< Right child of Bin tree *\/$/;"	m	struct:ml_ftree_t
s	vlc_common.h	/^    volatile intptr_t  s;$/;"	m	union:__anon95
s	vlc_demux.h	/^    stream_t    *s;     \/* NULL in case of a access+demux in one *\/$/;"	m	struct:demux_t
s6_addr	vlc_network.h	/^    uint8_t s6_addr[16];$/;"	m	struct:in6_addr
samples	vlc_aout.h	/^    unsigned samples; \/**< Samples per packet *\/$/;"	m	struct:__anon136
sar	vlc_vout_display.h	/^        } sar;$/;"	m	struct:__anon66::__anon67	typeref:struct:__anon66::__anon67::__anon68
sar	vlc_vout_wrapper.h	/^    } sar;$/;"	m	struct:__anon81	typeref:struct:__anon81::__anon82
seekpoint	vlc_input.h	/^    seekpoint_t **seekpoint;$/;"	m	struct:__anon144
seekpoint_t	vlc_common.h	/^typedef struct seekpoint_t seekpoint_t;$/;"	t	typeref:struct:seekpoint_t
seekpoint_t	vlc_input.h	/^struct seekpoint_t$/;"	s
sem	vlc_sout.h	/^    vlc_sem_t *sem;$/;"	m	struct:sout_description_data_t
services_discovery_capability_e	vlc_services_discovery.h	/^enum services_discovery_capability_e$/;"	g
services_discovery_category_e	vlc_services_discovery.h	/^enum services_discovery_category_e$/;"	g
services_discovery_command_e	vlc_services_discovery.h	/^enum services_discovery_command_e$/;"	g
services_discovery_descriptor_t	vlc_services_discovery.h	/^} services_discovery_descriptor_t;$/;"	t	typeref:struct:__anon2
services_discovery_ended	vlc_events.h	/^        } services_discovery_ended;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_services_discovery_ended
services_discovery_item_added	vlc_events.h	/^        } services_discovery_item_added;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_services_discovery_item_added
services_discovery_item_removed	vlc_events.h	/^        } services_discovery_item_removed;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_services_discovery_item_removed
services_discovery_started	vlc_events.h	/^        } services_discovery_started;$/;"	m	union:vlc_event_t::vlc_event_type_specific	typeref:struct:vlc_event_t::vlc_event_type_specific::vlc_services_discovery_started
services_discovery_sys_t	vlc_common.h	/^typedef struct services_discovery_sys_t services_discovery_sys_t;$/;"	t	typeref:struct:services_discovery_sys_t
services_discovery_t	vlc_common.h	/^typedef struct services_discovery_t services_discovery_t;$/;"	t	typeref:struct:services_discovery_t
services_discovery_t	vlc_services_discovery.h	/^struct services_discovery_t$/;"	s
session_descriptor_t	vlc_common.h	/^typedef struct session_descriptor_t session_descriptor_t;$/;"	t	typeref:struct:session_descriptor_t
set_callbacks	vlc_plugin.h	220;"	d
set_capability	vlc_plugin.h	215;"	d
set_category	vlc_plugin.h	271;"	d
set_description	vlc_plugin.h	207;"	d
set_help	vlc_plugin.h	211;"	d
set_section	vlc_plugin.h	279;"	d
set_shortname	vlc_plugin.h	203;"	d
set_subcategory	vlc_plugin.h	275;"	d
set_text_domain	vlc_plugin.h	229;"	d
sf_tag_to_fourcc	vlc_codecs.h	/^static inline void sf_tag_to_fourcc( GUID *guid_tag,$/;"	f
sin6_addr	vlc_network.h	/^    struct in6_addr sin6_addr;$/;"	m	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr
sin6_family	vlc_network.h	/^    uint8_t         sin6_family;$/;"	m	struct:sockaddr_in6
sin6_flowinfo	vlc_network.h	/^    uint32_t        sin6_flowinfo;$/;"	m	struct:sockaddr_in6
sin6_len	vlc_network.h	/^    uint8_t         sin6_len;$/;"	m	struct:sockaddr_in6
sin6_port	vlc_network.h	/^    uint16_t        sin6_port;$/;"	m	struct:sockaddr_in6
sin6_scope_id	vlc_network.h	/^    uint32_t        sin6_scope_id;$/;"	m	struct:sockaddr_in6
small	vlc_windows_interfaces.h	38;"	d
snprintf	vlc_common.h	79;"	d
sock	vlc_tls.h	/^    struct virtual_socket_t sock;$/;"	m	struct:vlc_tls	typeref:struct:vlc_tls::virtual_socket_t
sockaddr_in6	vlc_network.h	/^struct sockaddr_in6$/;"	s
source	vlc_vout_display.h	/^    video_format_t source;$/;"	m	struct:vout_display_t
sout_AccessOutCanControlPace	vlc_sout.h	/^static inline bool sout_AccessOutCanControlPace( sout_access_out_t *p_ao )$/;"	f
sout_AccessOutNew	vlc_sout.h	96;"	d
sout_AnnounceRegisterSDP	vlc_sout.h	240;"	d
sout_AnnounceUnRegister	vlc_sout.h	242;"	d
sout_EncoderCreate	vlc_sout.h	233;"	d
sout_MuxControl	vlc_sout.h	/^static inline int sout_MuxControl( sout_mux_t *p_mux, int i_query, ... )$/;"	f
sout_StreamIdAdd	vlc_sout.h	/^static inline sout_stream_id_t *sout_StreamIdAdd( sout_stream_t *s, es_format_t *fmt )$/;"	f
sout_StreamIdDel	vlc_sout.h	/^static inline int sout_StreamIdDel( sout_stream_t *s, sout_stream_id_t *id )$/;"	f
sout_StreamIdSend	vlc_sout.h	/^static inline int sout_StreamIdSend( sout_stream_t *s, sout_stream_id_t *id, block_t *b )$/;"	f
sout_access_out_sys_t	vlc_common.h	/^typedef struct sout_access_out_sys_t   sout_access_out_sys_t;$/;"	t	typeref:struct:sout_access_out_sys_t
sout_access_out_t	vlc_common.h	/^typedef struct sout_access_out_t sout_access_out_t;$/;"	t	typeref:struct:sout_access_out_t
sout_access_out_t	vlc_sout.h	/^struct sout_access_out_t$/;"	s
sout_description_data_t	vlc_sout.h	/^typedef struct sout_description_data_t$/;"	s
sout_description_data_t	vlc_sout.h	/^} sout_description_data_t;$/;"	t	typeref:struct:sout_description_data_t
sout_input_t	vlc_common.h	/^typedef struct sout_input_t sout_input_t;$/;"	t	typeref:struct:sout_input_t
sout_input_t	vlc_sout.h	/^struct sout_input_t$/;"	s
sout_instance_sys_t	vlc_common.h	/^typedef struct sout_instance_sys_t sout_instance_sys_t;$/;"	t	typeref:struct:sout_instance_sys_t
sout_instance_t	vlc_common.h	/^typedef struct sout_instance_t sout_instance_t;$/;"	t	typeref:struct:sout_instance_t
sout_instance_t	vlc_sout.h	/^struct sout_instance_t$/;"	s
sout_mux_query_e	vlc_sout.h	/^enum sout_mux_query_e$/;"	g
sout_mux_sys_t	vlc_common.h	/^typedef struct sout_mux_sys_t sout_mux_sys_t;$/;"	t	typeref:struct:sout_mux_sys_t
sout_mux_t	vlc_common.h	/^typedef struct sout_mux_t sout_mux_t;$/;"	t	typeref:struct:sout_mux_t
sout_mux_t	vlc_sout.h	/^struct  sout_mux_t$/;"	s
sout_packetizer_input_t	vlc_common.h	/^typedef struct sout_packetizer_input_t sout_packetizer_input_t;$/;"	t	typeref:struct:sout_packetizer_input_t
sout_stream_id_t	vlc_sout.h	/^typedef struct sout_stream_id_t  sout_stream_id_t;$/;"	t	typeref:struct:sout_stream_id_t
sout_stream_sys_t	vlc_common.h	/^typedef struct sout_stream_sys_t sout_stream_sys_t;$/;"	t	typeref:struct:sout_stream_sys_t
sout_stream_t	vlc_common.h	/^typedef struct sout_stream_t    sout_stream_t;$/;"	t	typeref:struct:sout_stream_t
sout_stream_t	vlc_sout.h	/^struct sout_stream_t$/;"	s
spin	vlc_media_library.h	/^    vlc_spinlock_t spin;$/;"	m	struct:ml_gc_object_t
spu	vlc_es.h	/^    } spu;$/;"	m	struct:subs_format_t	typeref:struct:subs_format_t::__anon33
spu_Create	vlc_spu.h	62;"	d
spu_private_t	vlc_spu.h	/^typedef struct spu_private_t spu_private_t;$/;"	t	typeref:struct:spu_private_t
spu_t	vlc_common.h	/^typedef struct spu_t spu_t;$/;"	t	typeref:struct:spu_t
spu_t	vlc_spu.h	/^struct spu_t$/;"	s
sql_BeginTransaction	vlc_sql.h	/^static inline int sql_BeginTransaction( sql_t *p_sql )$/;"	f
sql_BindBlob	vlc_sql.h	/^static inline int sql_BindBlob( sql_t *p_sql, sql_stmt_t* p_stmt, int i_pos,$/;"	f
sql_BindDouble	vlc_sql.h	/^static inline int sql_BindDouble( sql_t *p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_BindGeneric	vlc_sql.h	/^static inline int sql_BindGeneric( sql_t* p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_BindInteger	vlc_sql.h	/^static inline int sql_BindInteger( sql_t *p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_BindNull	vlc_sql.h	/^static inline int sql_BindNull( sql_t *p_sql, sql_stmt_t* p_stmt, int i_pos )$/;"	f
sql_BindText	vlc_sql.h	/^static inline int sql_BindText( sql_t *p_sql, sql_stmt_t* p_stmt, int i_pos,$/;"	f
sql_CommitTransaction	vlc_sql.h	/^static inline int sql_CommitTransaction( sql_t *p_sql )$/;"	f
sql_Create	vlc_sql.h	156;"	d
sql_Destroy	vlc_sql.h	165;"	d
sql_Finalize	vlc_sql.h	/^static inline int sql_Finalize( sql_t* p_sql, sql_stmt_t* p_stmt )$/;"	f
sql_Free	vlc_sql.h	/^static inline void sql_Free( sql_t *p_sql, char **ppsz_result )$/;"	f
sql_GetColumn	vlc_sql.h	/^static inline int sql_GetColumn( sql_t* p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_GetColumnBlob	vlc_sql.h	/^static inline int sql_GetColumnBlob( sql_t* p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_GetColumnDouble	vlc_sql.h	/^static inline int sql_GetColumnDouble( sql_t* p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_GetColumnInteger	vlc_sql.h	/^static inline int sql_GetColumnInteger( sql_t* p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_GetColumnSize	vlc_sql.h	/^static inline int sql_GetColumnSize( sql_t* p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_GetColumnText	vlc_sql.h	/^static inline int sql_GetColumnText( sql_t* p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_GetColumnType	vlc_sql.h	/^static inline int sql_GetColumnType( sql_t* p_sql, sql_stmt_t* p_stmt,$/;"	f
sql_GetTables	vlc_sql.h	/^static inline int sql_GetTables( sql_t *p_sql, char ***pppsz_tables )$/;"	f
sql_Prepare	vlc_sql.h	/^static inline sql_stmt_t* sql_Prepare( sql_t* p_sql, const char* p_fmt,$/;"	f
sql_Printf	vlc_sql.h	/^static inline char* sql_Printf( sql_t *p_sql, const char *psz_fmt, ... )$/;"	f
sql_Query	vlc_sql.h	/^static inline int sql_Query( sql_t *p_sql, const char *psz_query,$/;"	f
sql_QueryCallback	vlc_sql.h	/^static inline int sql_QueryCallback( sql_t *p_sql, const char *psz_query,$/;"	f
sql_Reset	vlc_sql.h	/^static inline int sql_Reset( sql_t* p_sql, sql_stmt_t* p_stmt )$/;"	f
sql_RollbackTransaction	vlc_sql.h	/^static inline void sql_RollbackTransaction( sql_t *p_sql )$/;"	f
sql_Run	vlc_sql.h	/^static inline int sql_Run( sql_t* p_sql, sql_stmt_t* p_stmt )$/;"	f
sql_VPrintf	vlc_sql.h	/^static inline char* sql_VPrintf( sql_t *p_sql, const char *psz_fmt,$/;"	f
sql_query_callback_t	vlc_sql.h	/^typedef int ( *sql_query_callback_t ) ( void*, int, char**, char** );$/;"	t
sql_stmt_t	vlc_sql.h	/^typedef struct sql_stmt_t sql_stmt_t;$/;"	t	typeref:struct:sql_stmt_t
sql_sys_t	vlc_sql.h	/^typedef struct sql_sys_t sql_sys_t;$/;"	t	typeref:struct:sql_sys_t
sql_t	vlc_sql.h	/^struct sql_t$/;"	s
sql_t	vlc_sql.h	/^typedef struct sql_t sql_t;$/;"	t	typeref:struct:sql_t
sql_type_e	vlc_sql.h	/^} sql_type_e;$/;"	t	typeref:enum:__anon77
sql_value_t	vlc_sql.h	/^} sql_value_t;$/;"	t	typeref:struct:__anon78
starving	vlc_aout.h	/^    bool starving; \/**< Whether currently starving (to limit error messages) *\/$/;"	m	struct:__anon136
stat	vlc_common.h	405;"	d
stat	vlc_common.h	407;"	d
stat	vlc_fs.h	50;"	d
stats_TimerClean	vlc_messages.h	192;"	d
stats_TimerDump	vlc_messages.h	185;"	d
stats_TimerStart	vlc_messages.h	183;"	d
stats_TimerStop	vlc_messages.h	184;"	d
stats_TimersCleanAll	vlc_messages.h	189;"	d
stats_TimersDumpAll	vlc_messages.h	186;"	d
stats_handler_t	vlc_common.h	/^typedef struct stats_handler_t stats_handler_t;$/;"	t	typeref:struct:stats_handler_t
str	vlc_media_library.h	/^        char    *str;$/;"	m	union:ml_ftree_t::__anon110
str	vlc_media_library.h	/^        char    *str;$/;"	m	union:ml_ftree_t::__anon111
str	vlc_media_library.h	/^        char*   str;$/;"	m	union:ml_element_t::__anon108
str	vlc_media_library.h	/^        char*   str;$/;"	m	union:ml_element_t::__anon109
str_format	vlc_strings.h	51;"	d
str_format_meta	vlc_strings.h	49;"	d
stream_ContentType	vlc_stream.h	/^static inline char *stream_ContentType( stream_t *s )$/;"	f
stream_MemoryNew	vlc_stream.h	182;"	d
stream_Seek	vlc_stream.h	/^static inline int stream_Seek( stream_t *s, uint64_t i_pos )$/;"	f
stream_Size	vlc_stream.h	/^static inline int64_t stream_Size( stream_t *s )$/;"	f
stream_Tell	vlc_stream.h	/^static inline int64_t stream_Tell( stream_t *s )$/;"	f
stream_UrlNew	vlc_stream.h	189;"	d
stream_query_e	vlc_stream.h	/^enum stream_query_e$/;"	g
stream_sys_t	vlc_common.h	/^typedef struct stream_sys_t stream_sys_t;$/;"	t	typeref:struct:stream_sys_t
stream_t	vlc_common.h	/^typedef struct stream_t     stream_t;$/;"	t	typeref:struct:stream_t
stream_t	vlc_stream.h	/^struct stream_t$/;"	s
stream_text_t	vlc_stream.h	/^typedef struct stream_text_t stream_text_t;$/;"	t	typeref:struct:stream_text_t
sub	vlc_filter.h	/^        } sub;$/;"	m	union:filter_t::__anon12	typeref:struct:filter_t::__anon12::__anon16
sub_format_tag_to_fourcc	vlc_codecs.h	/^sub_format_tag_to_fourcc[] =$/;"	v	typeref:struct:__anon11
subf	vlc_filter.h	/^        } subf;$/;"	m	union:filter_t::__anon12	typeref:struct:filter_t::__anon12::__anon17
subpicture_chromas	vlc_vout_display.h	/^    const vlc_fourcc_t *subpicture_chromas; \/* List of supported chromas for subpicture rendering. *\/$/;"	m	struct:__anon71
subpicture_private_t	vlc_subpicture.h	/^typedef struct subpicture_private_t subpicture_private_t;$/;"	t	typeref:struct:subpicture_private_t
subpicture_region_private_t	vlc_subpicture.h	/^typedef struct subpicture_region_private_t subpicture_region_private_t;$/;"	t	typeref:struct:subpicture_region_private_t
subpicture_region_t	vlc_common.h	/^typedef struct subpicture_region_t subpicture_region_t;$/;"	t	typeref:struct:subpicture_region_t
subpicture_region_t	vlc_subpicture.h	/^struct subpicture_region_t$/;"	s
subpicture_sys_t	vlc_common.h	/^typedef struct subpicture_sys_t subpicture_sys_t;$/;"	t	typeref:struct:subpicture_sys_t
subpicture_t	vlc_common.h	/^typedef struct subpicture_t subpicture_t;$/;"	t	typeref:struct:subpicture_t
subpicture_t	vlc_subpicture.h	/^struct subpicture_t$/;"	s
subpicture_updater_sys_t	vlc_subpicture.h	/^typedef struct subpicture_updater_sys_t subpicture_updater_sys_t;$/;"	t	typeref:struct:subpicture_updater_sys_t
subpicture_updater_t	vlc_subpicture.h	/^} subpicture_updater_t;$/;"	t	typeref:struct:__anon36
subs	vlc_es.h	/^    subs_format_t  subs;      \/**< description of subtitle format *\/$/;"	m	struct:es_format_t
subs_format_t	vlc_common.h	/^typedef struct subs_format_t subs_format_t;$/;"	t	typeref:struct:subs_format_t
subs_format_t	vlc_es.h	/^struct subs_format_t$/;"	s
surface	vlc_opengl.h	/^    struct vout_window_t *surface;$/;"	m	struct:vlc_gl_t	typeref:struct:vlc_gl_t::vout_window_t
swap	vlc_opengl.h	/^    void (*swap)(vlc_gl_t *);$/;"	m	struct:vlc_gl_t
sys	vlc_aout.h	/^    struct aout_sys_t *sys; \/**< Output plugin private data *\/$/;"	m	struct:audio_output	typeref:struct:audio_output::aout_sys_t
sys	vlc_opengl.h	/^    void *sys;$/;"	m	struct:vlc_gl_t
sys	vlc_tls.h	/^    vlc_tls_creds_sys_t *sys;$/;"	m	struct:vlc_tls_creds
sys	vlc_tls.h	/^    vlc_tls_sys_t *sys;$/;"	m	struct:vlc_tls
sys	vlc_vout_display.h	/^    vout_display_owner_sys_t *sys;$/;"	m	struct:vout_display_owner_t
sys	vlc_vout_display.h	/^    vout_display_sys_t *sys;$/;"	m	struct:vout_display_t
sys	vlc_vout_window.h	/^    vout_window_sys_t *sys;$/;"	m	struct:vout_window_t
tagTHUMBBUTTON	vlc_windows_interfaces.h	/^typedef struct tagTHUMBBUTTON$/;"	s
tdestroy	vlc_fixups.h	318;"	d
teletext	vlc_es.h	/^    } teletext;$/;"	m	struct:subs_format_t	typeref:struct:subs_format_t::__anon35
text_style_t	vlc_text_style.h	/^} text_style_t;$/;"	t	typeref:struct:__anon3
thread	vlc_interface.h	/^    vlc_thread_t thread; \/** LibVLC thread *\/$/;"	m	struct:intf_thread_t
time	vlc_media_library.h	/^        mtime_t         time;$/;"	m	union:ml_result_t::__anon107
time_report	vlc_aout.h	/^    mtime_t time_report; \/**< Desynchronization estimate or VLC_TS_INVALID *\/$/;"	m	struct:__anon136
title	vlc_dialog.h	/^    const char *title;$/;"	m	struct:dialog_fatal_t
title	vlc_dialog.h	/^    const char *title;$/;"	m	struct:dialog_login_t
title	vlc_dialog.h	/^    const char *title;$/;"	m	struct:dialog_progress_bar_t
title	vlc_dialog.h	/^    const char *title;$/;"	m	struct:dialog_question_t
title	vlc_vout_display.h	/^        const char *title;$/;"	m	struct:__anon66::__anon67
tls_Recv	vlc_tls.h	55;"	d
tls_Send	vlc_tls.h	53;"	d
top	vlc/libvlc_media_player.h	/^    int top, left;$/;"	m	struct:libvlc_rectangle_t
top	vlc_codecs.h	/^    int left, top, right, bottom;$/;"	m	struct:ATTR_PACKED
type	vlc/libvlc_events.h	/^    int   type; \/**< Event type (see @ref libvlc_event_e) *\/$/;"	m	struct:libvlc_event_t
type	vlc_events.h	/^    vlc_event_type_t type;$/;"	m	struct:vlc_event_t
type	vlc_extensions.h	/^    extension_widget_type_e type; \/\/\/< Type of the widget$/;"	m	struct:extension_widget_t
type	vlc_media_library.h	/^    ml_result_type_e type;      \/**< Type of value *\/$/;"	m	struct:ml_result_t
type	vlc_vout_window.h	/^    int type;$/;"	m	struct:__anon127
u	vlc/libvlc_events.h	/^    } u; \/**< Type-dependent event description *\/$/;"	m	struct:libvlc_event_t	typeref:union:libvlc_event_t::__anon41
u	vlc/libvlc_media.h	/^    } u;$/;"	m	struct:libvlc_media_track_info_t	typeref:union:libvlc_media_track_info_t::__anon38
u	vlc_common.h	/^    volatile uintptr_t u;$/;"	m	union:__anon95
u	vlc_events.h	/^    } u;$/;"	m	struct:vlc_event_t	typeref:union:vlc_event_t::vlc_event_type_specific
u	vlc_filter.h	/^    } u;$/;"	m	struct:filter_t	typeref:union:filter_t::__anon12
u	vlc_tls.h	/^    } u;$/;"	m	struct:vlc_tls	typeref:union:vlc_tls::__anon146
unlikely	vlc_common.h	116;"	d
unlikely	vlc_common.h	119;"	d
unlock	vlc_opengl.h	/^    void (*unlock)(vlc_gl_t *);$/;"	m	struct:vlc_gl_t
unlock	vlc_picture_pool.h	/^    void      (*unlock)(picture_t *);$/;"	m	struct:__anon1
unused	vlc_events.h	/^            void * unused;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_input_item_info_changed
unused	vlc_events.h	/^            void * unused;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_input_selected_stream_changed
unused	vlc_events.h	/^            void * unused;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_services_discovery_ended
unused	vlc_events.h	/^            void * unused;$/;"	m	struct:vlc_event_t::vlc_event_type_specific::vlc_services_discovery_started
update_New	vlc_update.h	59;"	d
update_interval	vlc_messages.h	/^    mtime_t             update_interval;$/;"	m	struct:counter_t
update_iterator_t	vlc_common.h	/^typedef struct update_iterator_t update_iterator_t;$/;"	t	typeref:struct:update_iterator_t
update_release_t	vlc_update.h	/^struct update_release_t$/;"	s
update_release_t	vlc_update.h	/^typedef struct update_release_t update_release_t;$/;"	t	typeref:struct:update_release_t
update_t	vlc_common.h	/^typedef struct update_t update_t;$/;"	t	typeref:struct:update_t
updater	vlc_subpicture.h	/^    subpicture_updater_t updater;$/;"	m	struct:subpicture_t
uselocale	vlc_fixups.h	/^static inline locale_t uselocale(locale_t loc)$/;"	f
username	vlc_dialog.h	/^    char **username;$/;"	m	struct:dialog_login_t
v_socket_t	vlc_common.h	/^typedef struct virtual_socket_t v_socket_t;$/;"	t	typeref:struct:virtual_socket_t
val	vlc_interface.h	/^    vlc_value_t     val;                \/\/\/< value coming from core for dialogue$/;"	m	struct:interaction_dialog_t
value	vlc_configuration.h	/^    module_value_t value;                                    \/* Option value *\/$/;"	m	struct:module_config_t
value	vlc_httpd.h	/^    char    **value;$/;"	m	struct:httpd_message_t
value	vlc_media_library.h	/^    } value;                    \/**< SELECT criteria value ( string or int ) *\/$/;"	m	struct:ml_ftree_t	typeref:union:ml_ftree_t::__anon110
value	vlc_media_library.h	/^    } value;                    \/**< SELECT criteria value (string or int) *\/$/;"	m	struct:ml_element_t	typeref:union:ml_element_t::__anon108
value	vlc_media_library.h	/^    } value;                    \/**< Value of the result obtained *\/$/;"	m	struct:ml_result_t	typeref:union:ml_result_t::__anon107
value	vlc_messages.h	/^    vlc_value_t value;$/;"	m	struct:counter_sample_t
value	vlc_sql.h	/^    } value;$/;"	m	struct:__anon78	typeref:union:__anon78::__anon79
var_AddCallback	vlc_variables.h	190;"	d
var_Change	vlc_variables.h	152;"	d
var_Command	vlc_variables.h	172;"	d
var_CountChoices	vlc_variables.h	/^static inline int var_CountChoices( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_CountChoices	vlc_variables.h	659;"	d
var_Create	vlc_variables.h	146;"	d
var_CreateGetAddress	vlc_variables.h	/^static inline void *var_CreateGetAddress( vlc_object_t *p_obj,$/;"	f
var_CreateGetAddress	vlc_variables.h	562;"	d
var_CreateGetBool	vlc_variables.h	/^static inline bool var_CreateGetBool( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_CreateGetBool	vlc_variables.h	557;"	d
var_CreateGetBoolCommand	vlc_variables.h	/^static inline bool var_CreateGetBoolCommand( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_CreateGetBoolCommand	vlc_variables.h	645;"	d
var_CreateGetFloat	vlc_variables.h	/^static inline float var_CreateGetFloat( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_CreateGetFloat	vlc_variables.h	559;"	d
var_CreateGetFloatCommand	vlc_variables.h	/^static inline float var_CreateGetFloatCommand( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_CreateGetFloatCommand	vlc_variables.h	647;"	d
var_CreateGetInteger	vlc_variables.h	/^static inline int64_t var_CreateGetInteger( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_CreateGetInteger	vlc_variables.h	556;"	d
var_CreateGetIntegerCommand	vlc_variables.h	/^static inline int64_t var_CreateGetIntegerCommand( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_CreateGetIntegerCommand	vlc_variables.h	644;"	d
var_CreateGetNonEmptyString	vlc_variables.h	/^static inline char *var_CreateGetNonEmptyString( vlc_object_t *p_obj,$/;"	f
var_CreateGetNonEmptyString	vlc_variables.h	561;"	d
var_CreateGetNonEmptyStringCommand	vlc_variables.h	/^static inline char *var_CreateGetNonEmptyStringCommand( vlc_object_t *p_obj,$/;"	f
var_CreateGetNonEmptyStringCommand	vlc_variables.h	649;"	d
var_CreateGetString	vlc_variables.h	/^static inline char *var_CreateGetString( vlc_object_t *p_obj,$/;"	f
var_CreateGetString	vlc_variables.h	560;"	d
var_CreateGetStringCommand	vlc_variables.h	/^static inline char *var_CreateGetStringCommand( vlc_object_t *p_obj,$/;"	f
var_CreateGetStringCommand	vlc_variables.h	648;"	d
var_CreateGetTime	vlc_variables.h	/^static inline int64_t var_CreateGetTime( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_CreateGetTime	vlc_variables.h	558;"	d
var_CreateGetTimeCommand	vlc_variables.h	/^static inline int64_t var_CreateGetTimeCommand( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_CreateGetTimeCommand	vlc_variables.h	646;"	d
var_DecInteger	vlc_variables.h	/^static inline int64_t var_DecInteger( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_DecInteger	vlc_variables.h	446;"	d
var_DelCallback	vlc_variables.h	191;"	d
var_Destroy	vlc_variables.h	149;"	d
var_Get	vlc_variables.h	161;"	d
var_GetAddress	vlc_variables.h	/^static inline void *var_GetAddress( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_GetAddress	vlc_variables.h	751;"	d
var_GetBool	vlc_variables.h	/^static inline bool var_GetBool( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_GetBool	vlc_variables.h	746;"	d
var_GetChecked	vlc_variables.h	166;"	d
var_GetCoords	vlc_variables.h	/^static inline void var_GetCoords( vlc_object_t *obj, const char *name,$/;"	f
var_GetCoords	vlc_variables.h	364;"	d
var_GetFloat	vlc_variables.h	/^static inline float var_GetFloat( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_GetFloat	vlc_variables.h	748;"	d
var_GetInteger	vlc_variables.h	/^static inline int64_t var_GetInteger( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_GetInteger	vlc_variables.h	745;"	d
var_GetNonEmptyString	vlc_variables.h	/^static inline char *var_GetNonEmptyString( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_GetNonEmptyString	vlc_variables.h	750;"	d
var_GetString	vlc_variables.h	/^static inline char *var_GetString( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_GetString	vlc_variables.h	749;"	d
var_GetTime	vlc_variables.h	/^static inline int64_t var_GetTime( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_GetTime	vlc_variables.h	747;"	d
var_IncInteger	vlc_variables.h	/^static inline int64_t var_IncInteger( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_IncInteger	vlc_variables.h	432;"	d
var_InheritAddress	vlc_variables.h	/^static inline void *var_InheritAddress( vlc_object_t *obj, const char *name )$/;"	f
var_InheritAddress	vlc_variables.h	740;"	d
var_InheritBool	vlc_variables.h	/^static inline bool var_InheritBool( vlc_object_t *obj, const char *name )$/;"	f
var_InheritBool	vlc_variables.h	680;"	d
var_InheritFloat	vlc_variables.h	/^static inline float var_InheritFloat( vlc_object_t *obj, const char *name )$/;"	f
var_InheritFloat	vlc_variables.h	702;"	d
var_InheritInteger	vlc_variables.h	/^static inline int64_t var_InheritInteger( vlc_object_t *obj, const char *name )$/;"	f
var_InheritInteger	vlc_variables.h	691;"	d
var_InheritString	vlc_variables.h	/^static inline char *var_InheritString( vlc_object_t *obj, const char *name )$/;"	f
var_InheritString	vlc_variables.h	718;"	d
var_InheritTime	vlc_variables.h	/^static inline mtime_t var_InheritTime( vlc_object_t *obj, const char *name )$/;"	f
var_InheritTime	vlc_variables.h	729;"	d
var_InheritURational	vlc_variables.h	743;"	d
var_LocationParse	vlc_variables.h	754;"	d
var_NAndInteger	vlc_variables.h	/^static inline uint64_t var_NAndInteger( vlc_object_t *obj, const char *name,$/;"	f
var_NAndInteger	vlc_variables.h	466;"	d
var_OrInteger	vlc_variables.h	/^static inline uint64_t var_OrInteger( vlc_object_t *obj, const char *name,$/;"	f
var_OrInteger	vlc_variables.h	456;"	d
var_Set	vlc_variables.h	158;"	d
var_SetAddress	vlc_variables.h	/^int var_SetAddress( vlc_object_t *p_obj, const char *psz_name, void *ptr )$/;"	f
var_SetAddress	vlc_variables.h	299;"	d
var_SetBool	vlc_variables.h	/^static inline int var_SetBool( vlc_object_t *p_obj, const char *psz_name, bool b )$/;"	f
var_SetBool	vlc_variables.h	295;"	d
var_SetChecked	vlc_variables.h	164;"	d
var_SetCoords	vlc_variables.h	/^static inline int var_SetCoords( vlc_object_t *obj, const char *name,$/;"	f
var_SetCoords	vlc_variables.h	249;"	d
var_SetFloat	vlc_variables.h	/^static inline int var_SetFloat( vlc_object_t *p_obj, const char *psz_name, float f )$/;"	f
var_SetFloat	vlc_variables.h	297;"	d
var_SetInteger	vlc_variables.h	/^static inline int var_SetInteger( vlc_object_t *p_obj, const char *psz_name,$/;"	f
var_SetInteger	vlc_variables.h	294;"	d
var_SetString	vlc_variables.h	/^static inline int var_SetString( vlc_object_t *p_obj, const char *psz_name, const char *psz_string )$/;"	f
var_SetString	vlc_variables.h	298;"	d
var_SetTime	vlc_variables.h	/^static inline int var_SetTime( vlc_object_t *p_obj, const char *psz_name, int64_t i )$/;"	f
var_SetTime	vlc_variables.h	296;"	d
var_ToggleBool	vlc_variables.h	/^static inline bool var_ToggleBool( vlc_object_t *p_obj, const char *psz_name )$/;"	f
var_ToggleBool	vlc_variables.h	668;"	d
var_TriggerCallback	vlc_variables.h	192;"	d
var_Type	vlc_variables.h	155;"	d
vertical	vlc_vout_display.h	/^        int vertical;$/;"	m	struct:__anon66::__anon69
video	vlc/libvlc_media.h	/^        } video;$/;"	m	union:libvlc_media_track_info_t::__anon38	typeref:struct:libvlc_media_track_info_t::__anon38::__anon40
video	vlc_es.h	/^    video_format_t video;     \/**< description of video format *\/$/;"	m	struct:es_format_t
video	vlc_filter.h	/^        } video;$/;"	m	union:filter_t::__anon12	typeref:struct:filter_t::__anon12::__anon13
video_format_Clean	vlc_es.h	/^static inline void video_format_Clean( video_format_t *p_src )$/;"	f
video_format_Copy	vlc_es.h	/^static inline int video_format_Copy( video_format_t *p_dst, const video_format_t *p_src )$/;"	f
video_format_Init	vlc_es.h	/^static inline void video_format_Init( video_format_t *p_src, vlc_fourcc_t i_chroma )$/;"	f
video_format_t	vlc_common.h	/^typedef struct video_format_t video_format_t;$/;"	t	typeref:struct:video_format_t
video_format_t	vlc_es.h	/^struct video_format_t$/;"	s
video_frame_format_t	vlc_common.h	/^typedef video_format_t video_frame_format_t;$/;"	t
video_palette_t	vlc_common.h	/^typedef struct video_palette_t video_palette_t;$/;"	t	typeref:struct:video_palette_t
video_palette_t	vlc_es.h	/^struct video_palette_t$/;"	s
video_splitter_DeletePicture	vlc_video_splitter.h	/^static inline void video_splitter_DeletePicture( video_splitter_t *p_splitter,$/;"	f
video_splitter_Filter	vlc_video_splitter.h	/^static inline int video_splitter_Filter( video_splitter_t *p_splitter,$/;"	f
video_splitter_Mouse	vlc_video_splitter.h	/^static inline int video_splitter_Mouse( video_splitter_t *p_splitter,$/;"	f
video_splitter_NewPicture	vlc_video_splitter.h	/^static inline int video_splitter_NewPicture( video_splitter_t *p_splitter,$/;"	f
video_splitter_output_t	vlc_video_splitter.h	/^} video_splitter_output_t;$/;"	t	typeref:struct:__anon75
video_splitter_owner_t	vlc_video_splitter.h	/^typedef struct video_splitter_owner_t video_splitter_owner_t;$/;"	t	typeref:struct:video_splitter_owner_t
video_splitter_sys_t	vlc_video_splitter.h	/^typedef struct video_splitter_sys_t video_splitter_sys_t;$/;"	t	typeref:struct:video_splitter_sys_t
video_splitter_t	vlc_video_splitter.h	/^struct video_splitter_t$/;"	s
video_splitter_t	vlc_video_splitter.h	/^typedef struct video_splitter_t video_splitter_t;$/;"	t	typeref:struct:video_splitter_t
videolan_public_key	vlc_pgpkey.h	/^static const uint8_t videolan_public_key[] = {$/;"	v
videolan_public_key_longid	vlc_pgpkey.h	/^static const uint8_t videolan_public_key_longid[8] = {$/;"	v
virtual_socket_t	vlc_network.h	/^struct virtual_socket_t$/;"	s
vlc_InputItemDurationChanged	vlc_events.h	/^    vlc_InputItemDurationChanged,$/;"	e	enum:vlc_event_type_t
vlc_InputItemErrorWhenReadingChanged	vlc_events.h	/^    vlc_InputItemErrorWhenReadingChanged,$/;"	e	enum:vlc_event_type_t
vlc_InputItemInfoChanged	vlc_events.h	/^    vlc_InputItemInfoChanged,$/;"	e	enum:vlc_event_type_t
vlc_InputItemMetaChanged	vlc_events.h	/^    vlc_InputItemMetaChanged,$/;"	e	enum:vlc_event_type_t
vlc_InputItemNameChanged	vlc_events.h	/^    vlc_InputItemNameChanged,$/;"	e	enum:vlc_event_type_t
vlc_InputItemPreparsedChanged	vlc_events.h	/^    vlc_InputItemPreparsedChanged,$/;"	e	enum:vlc_event_type_t
vlc_InputItemSubItemAdded	vlc_events.h	/^    vlc_InputItemSubItemAdded,$/;"	e	enum:vlc_event_type_t
vlc_InputItemSubItemTreeAdded	vlc_events.h	/^    vlc_InputItemSubItemTreeAdded,$/;"	e	enum:vlc_event_type_t
vlc_InputSelectedStreamChanged	vlc_events.h	/^    vlc_InputSelectedStreamChanged,$/;"	e	enum:vlc_event_type_t
vlc_InputStateChanged	vlc_events.h	/^    vlc_InputStateChanged,$/;"	e	enum:vlc_event_type_t
vlc_ServicesDiscoveryEnded	vlc_events.h	/^    vlc_ServicesDiscoveryEnded$/;"	e	enum:vlc_event_type_t
vlc_ServicesDiscoveryItemAdded	vlc_events.h	/^    vlc_ServicesDiscoveryItemAdded,$/;"	e	enum:vlc_event_type_t
vlc_ServicesDiscoveryItemRemoved	vlc_events.h	/^    vlc_ServicesDiscoveryItemRemoved,$/;"	e	enum:vlc_event_type_t
vlc_ServicesDiscoveryStarted	vlc_events.h	/^    vlc_ServicesDiscoveryStarted,$/;"	e	enum:vlc_event_type_t
vlc_UrlClean	vlc_url.h	/^static inline void vlc_UrlClean( vlc_url_t *url )$/;"	f
vlc_UrlIsNotEncoded	vlc_url.h	/^static inline int vlc_UrlIsNotEncoded( const char *psz_url )$/;"	f
vlc_UrlParse	vlc_url.h	/^static inline void vlc_UrlParse( vlc_url_t *url, const char *psz_url,$/;"	f
vlc_acl_t	vlc_common.h	/^typedef struct vlc_acl_t vlc_acl_t;$/;"	t	typeref:struct:vlc_acl_t
vlc_action	vlc_keys.h	/^typedef enum vlc_action {$/;"	g
vlc_action_t	vlc_keys.h	/^} vlc_action_t;$/;"	t	typeref:enum:vlc_action
vlc_activate_t	vlc_modules.h	/^typedef int (*vlc_activate_t)(void *func, va_list args);$/;"	t
vlc_array_append	vlc_arrays.h	/^vlc_array_append( vlc_array_t * p_array, void * p_elem )$/;"	f
vlc_array_clear	vlc_arrays.h	/^static inline void vlc_array_clear( vlc_array_t * p_array )$/;"	f
vlc_array_count	vlc_arrays.h	/^vlc_array_count( vlc_array_t * p_array )$/;"	f
vlc_array_destroy	vlc_arrays.h	/^static inline void vlc_array_destroy( vlc_array_t * p_array )$/;"	f
vlc_array_index_of_item	vlc_arrays.h	/^vlc_array_index_of_item( vlc_array_t * p_array, void * item )$/;"	f
vlc_array_init	vlc_arrays.h	/^static inline void vlc_array_init( vlc_array_t * p_array )$/;"	f
vlc_array_insert	vlc_arrays.h	/^vlc_array_insert( vlc_array_t * p_array, void * p_elem, int i_index )$/;"	f
vlc_array_item_at_index	vlc_arrays.h	/^vlc_array_item_at_index( vlc_array_t * p_array, int i_index )$/;"	f
vlc_array_new	vlc_arrays.h	/^static inline vlc_array_t * vlc_array_new( void )$/;"	f
vlc_array_remove	vlc_arrays.h	/^vlc_array_remove( vlc_array_t * p_array, int i_index )$/;"	f
vlc_array_t	vlc_arrays.h	/^typedef struct vlc_array_t$/;"	s
vlc_array_t	vlc_arrays.h	/^} vlc_array_t;$/;"	t	typeref:struct:vlc_array_t
vlc_atomic_dec	vlc_atomic.h	/^static inline uintptr_t vlc_atomic_dec (vlc_atomic_t *atom)$/;"	f
vlc_atomic_getf	vlc_atomic.h	/^static inline float vlc_atomic_getf(const vlc_atomic_t *atom)$/;"	f
vlc_atomic_inc	vlc_atomic.h	/^static inline uintptr_t vlc_atomic_inc (vlc_atomic_t *atom)$/;"	f
vlc_atomic_setf	vlc_atomic.h	/^static inline float vlc_atomic_setf(vlc_atomic_t *atom, float f)$/;"	f
vlc_atomic_sub	vlc_atomic.h	/^static inline uintptr_t vlc_atomic_sub (vlc_atomic_t *atom, uintptr_t v)$/;"	f
vlc_atomic_t	vlc_common.h	/^} vlc_atomic_t;$/;"	t	typeref:union:__anon95
vlc_audio_replay_gain_MergeFromMeta	vlc_input.h	/^static inline void vlc_audio_replay_gain_MergeFromMeta( audio_replay_gain_t *p_dst,$/;"	f
vlc_avcodec_lock	vlc_avcodec.h	/^static inline void vlc_avcodec_lock (void)$/;"	f
vlc_avcodec_unlock	vlc_avcodec.h	/^static inline void vlc_avcodec_unlock (void)$/;"	f
vlc_callback_t	vlc_common.h	/^typedef int ( * vlc_callback_t ) ( vlc_object_t *,      \/* variable's object *\/$/;"	t
vlc_chroma_description_t	vlc_fourcc.h	/^} vlc_chroma_description_t;$/;"	t	typeref:struct:__anon96
vlc_cleanup_lock	vlc_threads.h	/^static inline void vlc_cleanup_lock (void *lock)$/;"	f
vlc_cleanup_pop	vlc_threads.h	365;"	d
vlc_cleanup_pop	vlc_threads.h	390;"	d
vlc_cleanup_push	vlc_threads.h	359;"	d
vlc_cleanup_push	vlc_threads.h	385;"	d
vlc_cleanup_run	vlc_threads.h	371;"	d
vlc_cleanup_run	vlc_threads.h	394;"	d
vlc_cleanup_t	vlc_threads.h	/^struct vlc_cleanup_t$/;"	s
vlc_cleanup_t	vlc_threads.h	/^typedef struct vlc_cleanup_t vlc_cleanup_t;$/;"	t	typeref:struct:vlc_cleanup_t
vlc_closedir	vlc_fs.h	/^static inline int vlc_closedir( DIR *dir )$/;"	f
vlc_cond_t	vlc_threads.h	/^typedef pthread_cond_t  vlc_cond_t;$/;"	t
vlc_cond_t	vlc_threads.h	/^} vlc_cond_t;$/;"	t	typeref:struct:__anon22
vlc_cond_t	vlc_threads.h	/^} vlc_cond_t;$/;"	t	typeref:struct:__anon27
vlc_config_set	vlc_plugin.h	160;"	d
vlc_deactivate_t	vlc_modules.h	/^typedef void (*vlc_deactivate_t)(void *func, va_list args);$/;"	t
vlc_delete_all	vlc_arrays.h	/^void vlc_delete_all( T &container )$/;"	f
vlc_dialog	vlc_interface.h	/^typedef enum vlc_dialog {$/;"	g
vlc_dialog_t	vlc_interface.h	/^} vlc_dialog_t;$/;"	t	typeref:enum:vlc_dialog
vlc_dictionary_all_keys	vlc_arrays.h	/^vlc_dictionary_all_keys( const vlc_dictionary_t * p_dict )$/;"	f
vlc_dictionary_clear	vlc_arrays.h	/^static inline void vlc_dictionary_clear( vlc_dictionary_t * p_dict,$/;"	f
vlc_dictionary_entry_t	vlc_arrays.h	/^typedef struct vlc_dictionary_entry_t$/;"	s
vlc_dictionary_entry_t	vlc_arrays.h	/^} vlc_dictionary_entry_t;$/;"	t	typeref:struct:vlc_dictionary_entry_t
vlc_dictionary_has_key	vlc_arrays.h	/^vlc_dictionary_has_key( const vlc_dictionary_t * p_dict, const char * psz_key )$/;"	f
vlc_dictionary_init	vlc_arrays.h	/^static inline void vlc_dictionary_init( vlc_dictionary_t * p_dict, int i_size )$/;"	f
vlc_dictionary_insert	vlc_arrays.h	/^vlc_dictionary_insert( vlc_dictionary_t * p_dict, const char * psz_key, void * p_value )$/;"	f
vlc_dictionary_keys_count	vlc_arrays.h	/^vlc_dictionary_keys_count( const vlc_dictionary_t * p_dict )$/;"	f
vlc_dictionary_remove_value_for_key	vlc_arrays.h	/^vlc_dictionary_remove_value_for_key( const vlc_dictionary_t * p_dict, const char * psz_key,$/;"	f
vlc_dictionary_t	vlc_arrays.h	/^typedef struct vlc_dictionary_t$/;"	s
vlc_dictionary_t	vlc_arrays.h	/^} vlc_dictionary_t;$/;"	t	typeref:struct:vlc_dictionary_t
vlc_dictionary_value_for_key	vlc_arrays.h	/^vlc_dictionary_value_for_key( const vlc_dictionary_t * p_dict, const char * psz_key )$/;"	f
vlc_epg_event_t	vlc_epg.h	/^} vlc_epg_event_t;$/;"	t	typeref:struct:__anon114
vlc_epg_t	vlc_epg.h	/^} vlc_epg_t;$/;"	t	typeref:struct:__anon115
vlc_event_callback_t	vlc_events.h	/^typedef void ( *vlc_event_callback_t )( const vlc_event_t *, void * );$/;"	t
vlc_event_manager_t	vlc_events.h	/^typedef struct vlc_event_manager_t$/;"	s
vlc_event_manager_t	vlc_events.h	/^} vlc_event_manager_t;$/;"	t	typeref:struct:vlc_event_manager_t
vlc_event_t	vlc_events.h	/^typedef struct vlc_event_t$/;"	s
vlc_event_t	vlc_events.h	/^} vlc_event_t;$/;"	t	typeref:struct:vlc_event_t
vlc_event_type_specific	vlc_events.h	/^    union vlc_event_type_specific$/;"	u	struct:vlc_event_t
vlc_event_type_t	vlc_events.h	/^typedef enum vlc_event_type_t {$/;"	g
vlc_event_type_t	vlc_events.h	/^} vlc_event_type_t;$/;"	t	typeref:enum:vlc_event_type_t
vlc_fixed_t	vlc_aout.h	/^typedef int32_t vlc_fixed_t;$/;"	t
vlc_fourcc_t	vlc_common.h	/^typedef uint32_t vlc_fourcc_t;$/;"	t
vlc_fourcc_to_char	vlc_common.h	/^static inline void vlc_fourcc_to_char( vlc_fourcc_t fcc, char *psz_fourcc )$/;"	f
vlc_fourcc_to_char	vlc_common.h	207;"	d
vlc_free	vlc_common.h	/^static void vlc_free(void *ptr)$/;"	f
vlc_free	vlc_common.h	914;"	d
vlc_free	vlc_common.h	937;"	d
vlc_free	vlc_common.h	946;"	d
vlc_gc_decref	vlc_common.h	563;"	d
vlc_gc_incref	vlc_common.h	562;"	d
vlc_gc_init	vlc_common.h	561;"	d
vlc_gcrypt_init	vlc_gcrypt.h	/^static inline void vlc_gcrypt_init (void)$/;"	f
vlc_gl_GetProcAddress	vlc_opengl.h	/^static inline void *vlc_gl_GetProcAddress(vlc_gl_t *gl, const char *name)$/;"	f
vlc_gl_Lock	vlc_opengl.h	/^static inline int vlc_gl_Lock(vlc_gl_t *gl)$/;"	f
vlc_gl_MakeCurrent	vlc_opengl.h	/^static inline int vlc_gl_MakeCurrent(vlc_gl_t *gl)$/;"	f
vlc_gl_Swap	vlc_opengl.h	/^static inline void vlc_gl_Swap(vlc_gl_t *gl)$/;"	f
vlc_gl_Unlock	vlc_opengl.h	/^static inline void vlc_gl_Unlock(vlc_gl_t *gl)$/;"	f
vlc_gl_t	vlc_opengl.h	/^struct vlc_gl_t$/;"	s
vlc_gl_t	vlc_opengl.h	/^typedef struct vlc_gl_t vlc_gl_t;$/;"	t	typeref:struct:vlc_gl_t
vlc_global_lock	vlc_threads.h	555;"	d
vlc_global_unlock	vlc_threads.h	556;"	d
vlc_iconv_t	vlc_charset.h	/^typedef void *vlc_iconv_t;$/;"	t
vlc_inhibit	vlc_inhibit.h	/^struct vlc_inhibit$/;"	s
vlc_inhibit_sys_t	vlc_inhibit.h	/^typedef struct vlc_inhibit_sys vlc_inhibit_sys_t;$/;"	t	typeref:struct:vlc_inhibit_sys
vlc_inhibit_t	vlc_inhibit.h	/^typedef struct vlc_inhibit vlc_inhibit_t;$/;"	t	typeref:struct:vlc_inhibit
vlc_input_attachment_Delete	vlc_input.h	/^static inline void vlc_input_attachment_Delete( input_attachment_t *a )$/;"	f
vlc_input_attachment_Duplicate	vlc_input.h	/^static inline input_attachment_t *vlc_input_attachment_Duplicate( const input_attachment_t *a )$/;"	f
vlc_input_attachment_New	vlc_input.h	/^static inline input_attachment_t *vlc_input_attachment_New( const char *psz_name,$/;"	f
vlc_input_item_duration_changed	vlc_events.h	/^        struct vlc_input_item_duration_changed$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_input_item_info_changed	vlc_events.h	/^        struct vlc_input_item_info_changed$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_input_item_meta_changed	vlc_events.h	/^        struct vlc_input_item_meta_changed$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_input_item_name_changed	vlc_events.h	/^        struct vlc_input_item_name_changed$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_input_item_preparsed_changed	vlc_events.h	/^        struct vlc_input_item_preparsed_changed$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_input_item_subitem_added	vlc_events.h	/^        struct vlc_input_item_subitem_added$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_input_item_subitem_tree_added	vlc_events.h	/^        struct vlc_input_item_subitem_tree_added$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_input_selected_stream_changed	vlc_events.h	/^        struct vlc_input_selected_stream_changed$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_input_state_changed	vlc_events.h	/^        struct vlc_input_state_changed$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_input_title_Delete	vlc_input.h	/^static inline void vlc_input_title_Delete( input_title_t *t )$/;"	f
vlc_input_title_Duplicate	vlc_input.h	/^static inline input_title_t *vlc_input_title_Duplicate( const input_title_t *t )$/;"	f
vlc_input_title_New	vlc_input.h	/^static inline input_title_t *vlc_input_title_New(void)$/;"	f
vlc_list_children	vlc_objects.h	72;"	d
vlc_list_t	vlc_common.h	/^struct vlc_list_t$/;"	s
vlc_list_t	vlc_common.h	/^typedef struct vlc_list_t vlc_list_t;$/;"	t	typeref:struct:vlc_list_t
vlc_memalign	vlc_common.h	/^static inline void *vlc_memalign(size_t align, size_t size)$/;"	f
vlc_memalign	vlc_common.h	913;"	d
vlc_memalign	vlc_common.h	936;"	d
vlc_memcpy_t	vlc_cpu.h	/^typedef void *(*vlc_memcpy_t) (void *tgt, const void *src, size_t n);$/;"	t
vlc_memset	vlc_common.h	953;"	d
vlc_meta_Album	vlc_meta.h	/^    vlc_meta_Album,$/;"	e	enum:vlc_meta_type_t
vlc_meta_Artist	vlc_meta.h	/^    vlc_meta_Artist,$/;"	e	enum:vlc_meta_type_t
vlc_meta_ArtworkURL	vlc_meta.h	/^    vlc_meta_ArtworkURL,$/;"	e	enum:vlc_meta_type_t
vlc_meta_Copyright	vlc_meta.h	/^    vlc_meta_Copyright,$/;"	e	enum:vlc_meta_type_t
vlc_meta_Date	vlc_meta.h	/^    vlc_meta_Date,$/;"	e	enum:vlc_meta_type_t
vlc_meta_Description	vlc_meta.h	/^    vlc_meta_Description,$/;"	e	enum:vlc_meta_type_t
vlc_meta_EncodedBy	vlc_meta.h	/^    vlc_meta_EncodedBy,$/;"	e	enum:vlc_meta_type_t
vlc_meta_Genre	vlc_meta.h	/^    vlc_meta_Genre,$/;"	e	enum:vlc_meta_type_t
vlc_meta_Language	vlc_meta.h	/^    vlc_meta_Language,$/;"	e	enum:vlc_meta_type_t
vlc_meta_NowPlaying	vlc_meta.h	/^    vlc_meta_NowPlaying,$/;"	e	enum:vlc_meta_type_t
vlc_meta_Publisher	vlc_meta.h	/^    vlc_meta_Publisher,$/;"	e	enum:vlc_meta_type_t
vlc_meta_Rating	vlc_meta.h	/^    vlc_meta_Rating,$/;"	e	enum:vlc_meta_type_t
vlc_meta_SetAlbum	vlc_meta.h	114;"	d
vlc_meta_SetArtURL	vlc_meta.h	125;"	d
vlc_meta_SetArtist	vlc_meta.h	111;"	d
vlc_meta_SetCopyright	vlc_meta.h	113;"	d
vlc_meta_SetDate	vlc_meta.h	118;"	d
vlc_meta_SetDescription	vlc_meta.h	116;"	d
vlc_meta_SetEncodedBy	vlc_meta.h	124;"	d
vlc_meta_SetGenre	vlc_meta.h	112;"	d
vlc_meta_SetLanguage	vlc_meta.h	121;"	d
vlc_meta_SetNowPlaying	vlc_meta.h	122;"	d
vlc_meta_SetPublisher	vlc_meta.h	123;"	d
vlc_meta_SetRating	vlc_meta.h	117;"	d
vlc_meta_SetSetting	vlc_meta.h	119;"	d
vlc_meta_SetTitle	vlc_meta.h	110;"	d
vlc_meta_SetTrackID	vlc_meta.h	126;"	d
vlc_meta_SetTrackNum	vlc_meta.h	115;"	d
vlc_meta_SetURL	vlc_meta.h	120;"	d
vlc_meta_Setting	vlc_meta.h	/^    vlc_meta_Setting,$/;"	e	enum:vlc_meta_type_t
vlc_meta_Title	vlc_meta.h	/^    vlc_meta_Title,$/;"	e	enum:vlc_meta_type_t
vlc_meta_TrackID	vlc_meta.h	/^    vlc_meta_TrackID$/;"	e	enum:vlc_meta_type_t
vlc_meta_TrackNumber	vlc_meta.h	/^    vlc_meta_TrackNumber,$/;"	e	enum:vlc_meta_type_t
vlc_meta_URL	vlc_meta.h	/^    vlc_meta_URL,$/;"	e	enum:vlc_meta_type_t
vlc_meta_t	vlc_common.h	/^typedef struct vlc_meta_t    vlc_meta_t;$/;"	t	typeref:struct:vlc_meta_t
vlc_meta_type_t	vlc_meta.h	/^typedef enum vlc_meta_type_t$/;"	g
vlc_meta_type_t	vlc_meta.h	/^} vlc_meta_type_t;$/;"	t	typeref:enum:vlc_meta_type_t
vlc_module_begin	vlc_plugin.h	169;"	d
vlc_module_end	vlc_plugin.h	182;"	d
vlc_module_load	vlc_modules.h	37;"	d
vlc_module_properties	vlc_plugin.h	/^enum vlc_module_properties$/;"	g
vlc_module_set	vlc_plugin.h	159;"	d
vlc_mouse_GetMotion	vlc_mouse.h	/^static inline void vlc_mouse_GetMotion( int *pi_x, int *pi_y,$/;"	f
vlc_mouse_HasButton	vlc_mouse.h	/^static inline bool vlc_mouse_HasButton( const vlc_mouse_t *p_old,$/;"	f
vlc_mouse_HasChanged	vlc_mouse.h	/^static inline bool vlc_mouse_HasChanged( const vlc_mouse_t *p_old,$/;"	f
vlc_mouse_HasMoved	vlc_mouse.h	/^static inline bool vlc_mouse_HasMoved( const vlc_mouse_t *p_old,$/;"	f
vlc_mouse_HasPressed	vlc_mouse.h	/^static inline bool vlc_mouse_HasPressed( const vlc_mouse_t *p_old,$/;"	f
vlc_mouse_HasReleased	vlc_mouse.h	/^static inline bool vlc_mouse_HasReleased( const vlc_mouse_t *p_old,$/;"	f
vlc_mouse_Init	vlc_mouse.h	/^static inline void vlc_mouse_Init( vlc_mouse_t *p_mouse )$/;"	f
vlc_mouse_IsCenterPressed	vlc_mouse.h	/^static inline bool vlc_mouse_IsCenterPressed( const vlc_mouse_t *p_mouse )$/;"	f
vlc_mouse_IsLeftPressed	vlc_mouse.h	/^static inline bool vlc_mouse_IsLeftPressed( const vlc_mouse_t *p_mouse )$/;"	f
vlc_mouse_IsPressed	vlc_mouse.h	/^static inline bool vlc_mouse_IsPressed( const vlc_mouse_t *p_mouse,$/;"	f
vlc_mouse_IsRightPressed	vlc_mouse.h	/^static inline bool vlc_mouse_IsRightPressed( const vlc_mouse_t *p_mouse )$/;"	f
vlc_mouse_IsWheelDownPressed	vlc_mouse.h	/^static inline bool vlc_mouse_IsWheelDownPressed( const vlc_mouse_t *p_mouse )$/;"	f
vlc_mouse_IsWheelUpPressed	vlc_mouse.h	/^static inline bool vlc_mouse_IsWheelUpPressed( const vlc_mouse_t *p_mouse )$/;"	f
vlc_mouse_SetPosition	vlc_mouse.h	/^static inline void vlc_mouse_SetPosition( vlc_mouse_t *p_mouse,$/;"	f
vlc_mouse_SetPressed	vlc_mouse.h	/^static inline void vlc_mouse_SetPressed( vlc_mouse_t *p_mouse,$/;"	f
vlc_mouse_SetReleased	vlc_mouse.h	/^static inline void vlc_mouse_SetReleased( vlc_mouse_t *p_mouse,$/;"	f
vlc_mouse_t	vlc_mouse.h	/^} vlc_mouse_t;$/;"	t	typeref:struct:__anon135
vlc_mutex_locker	vlc_threads.h	/^        vlc_mutex_locker (vlc_mutex_t *m) : lock (m)$/;"	f	class:vlc_mutex_locker
vlc_mutex_locker	vlc_threads.h	/^class vlc_mutex_locker$/;"	c
vlc_mutex_t	vlc_threads.h	/^typedef pthread_mutex_t vlc_mutex_t;$/;"	t
vlc_mutex_t	vlc_threads.h	/^} vlc_mutex_t;$/;"	t	typeref:struct:__anon19
vlc_mutex_t	vlc_threads.h	/^} vlc_mutex_t;$/;"	t	typeref:struct:__anon24
vlc_object_alive	vlc_objects.h	/^static inline bool vlc_object_alive (const vlc_object_t *obj)$/;"	f
vlc_object_alive	vlc_objects.h	87;"	d
vlc_object_create	vlc_objects.h	61;"	d
vlc_object_find_name	vlc_objects.h	63;"	d
vlc_object_get_name	vlc_objects.h	57;"	d
vlc_object_hold	vlc_objects.h	66;"	d
vlc_object_kill	vlc_objects.h	77;"	d
vlc_object_release	vlc_objects.h	69;"	d
vlc_object_t	vlc_common.h	/^typedef struct vlc_object_t vlc_object_t;$/;"	t	typeref:struct:vlc_object_t
vlc_object_t	vlc_objects.h	/^struct vlc_object_t$/;"	s
vlc_pgettext	vlc_common.h	960;"	d
vlc_pgettext_aux	vlc_common.h	/^static inline const char *vlc_pgettext_aux( const char *ctx, const char *id )$/;"	f
vlc_plugin_set	vlc_plugin.h	158;"	d
vlc_priv	vlc_common.h	564;"	d
vlc_probe	vlc_probe.h	36;"	d
vlc_probe_add	vlc_probe.h	/^static inline int vlc_probe_add(vlc_probe_t *obj, const void *data,$/;"	f
vlc_probe_t	vlc_probe.h	/^struct vlc_probe_t$/;"	s
vlc_probe_t	vlc_probe.h	/^typedef struct vlc_probe_t vlc_probe_t;$/;"	t	typeref:struct:vlc_probe_t
vlc_rewinddir	vlc_fs.h	/^static inline void vlc_rewinddir( DIR *dir )$/;"	f
vlc_rwlock_t	vlc_threads.h	/^typedef pthread_rwlock_t vlc_rwlock_t;$/;"	t
vlc_rwlock_t	vlc_threads.h	/^} vlc_rwlock_t;$/;"	t	typeref:struct:__anon23
vlc_rwlock_t	vlc_threads.h	/^} vlc_rwlock_t;$/;"	t	typeref:struct:__anon29
vlc_sd_GetNames	vlc_services_discovery.h	131;"	d
vlc_sd_StopAndDestroy	vlc_services_discovery.h	/^static inline void vlc_sd_StopAndDestroy( services_discovery_t * p_this )$/;"	f
vlc_sd_control	vlc_services_discovery.h	/^static inline int vlc_sd_control( services_discovery_t *p_sd, int i_control, va_list args )$/;"	f
vlc_seekpoint_Delete	vlc_input.h	/^static inline void vlc_seekpoint_Delete( seekpoint_t *point )$/;"	f
vlc_seekpoint_Duplicate	vlc_input.h	/^static inline seekpoint_t *vlc_seekpoint_Duplicate( const seekpoint_t *src )$/;"	f
vlc_seekpoint_New	vlc_input.h	/^static inline seekpoint_t *vlc_seekpoint_New( void )$/;"	f
vlc_sem_t	vlc_threads.h	/^typedef HANDLE  vlc_sem_t;$/;"	t
vlc_sem_t	vlc_threads.h	/^typedef sem_t           vlc_sem_t;$/;"	t
vlc_sem_t	vlc_threads.h	/^typedef semaphore_t     vlc_sem_t;$/;"	t
vlc_sem_t	vlc_threads.h	/^} vlc_sem_t;$/;"	t	typeref:struct:__anon28
vlc_services_discovery_ended	vlc_events.h	/^        struct vlc_services_discovery_ended$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_services_discovery_item_added	vlc_events.h	/^        struct vlc_services_discovery_item_added$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_services_discovery_item_removed	vlc_events.h	/^        struct vlc_services_discovery_item_removed$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_services_discovery_started	vlc_events.h	/^        struct vlc_services_discovery_started$/;"	s	union:vlc_event_t::vlc_event_type_specific
vlc_set_cb	vlc_plugin.h	/^typedef int (*vlc_set_cb) (void *, void *, int, ...);$/;"	t
vlc_spin_destroy	vlc_threads.h	/^static inline void vlc_spin_destroy (vlc_spinlock_t *spin)$/;"	f
vlc_spin_destroy	vlc_threads.h	492;"	d
vlc_spin_init	vlc_threads.h	/^static inline void vlc_spin_init (vlc_spinlock_t *spin)$/;"	f
vlc_spin_lock	vlc_threads.h	/^static inline void vlc_spin_lock (vlc_spinlock_t *spin)$/;"	f
vlc_spin_lock	vlc_threads.h	490;"	d
vlc_spin_unlock	vlc_threads.h	/^static inline void vlc_spin_unlock (vlc_spinlock_t *spin)$/;"	f
vlc_spin_unlock	vlc_threads.h	491;"	d
vlc_spinlock_t	vlc_threads.h	/^typedef CRITICAL_SECTION vlc_spinlock_t;$/;"	t
vlc_spinlock_t	vlc_threads.h	/^typedef pthread_spinlock_t vlc_spinlock_t;$/;"	t
vlc_spinlock_t	vlc_threads.h	/^typedef vlc_mutex_t vlc_spinlock_t;$/;"	t
vlc_thread_t	vlc_threads.h	/^typedef pthread_t       vlc_thread_t;$/;"	t
vlc_thread_t	vlc_threads.h	/^typedef struct vlc_thread *vlc_thread_t;$/;"	t	typeref:struct:vlc_thread
vlc_threadvar_t	vlc_threads.h	/^typedef pthread_key_t   vlc_threadvar_t;$/;"	t
vlc_threadvar_t	vlc_threads.h	/^typedef struct vlc_threadvar *vlc_threadvar_t;$/;"	t	typeref:struct:vlc_threadvar
vlc_timer_t	vlc_threads.h	/^typedef struct vlc_timer *vlc_timer_t;$/;"	t	typeref:struct:vlc_timer
vlc_tls	vlc_tls.h	/^typedef struct vlc_tls$/;"	s
vlc_tls_creds	vlc_tls.h	/^typedef struct vlc_tls_creds$/;"	s
vlc_tls_creds_sys_t	vlc_tls.h	/^typedef struct vlc_tls_creds_sys vlc_tls_creds_sys_t;$/;"	t	typeref:struct:vlc_tls_creds_sys
vlc_tls_creds_t	vlc_tls.h	/^} vlc_tls_creds_t;$/;"	t	typeref:struct:vlc_tls_creds
vlc_tls_sys_t	vlc_tls.h	/^typedef struct vlc_tls_sys vlc_tls_sys_t;$/;"	t	typeref:struct:vlc_tls_sys
vlc_tls_t	vlc_tls.h	/^} vlc_tls_t;$/;"	t	typeref:struct:vlc_tls
vlc_url_t	vlc_common.h	/^typedef struct vlc_url_t vlc_url_t;$/;"	t	typeref:struct:vlc_url_t
vlc_url_t	vlc_url.h	/^struct vlc_url_t$/;"	s
vlc_userdir	vlc_configuration.h	/^typedef enum vlc_userdir$/;"	g
vlc_userdir_t	vlc_configuration.h	/^} vlc_userdir_t;$/;"	t	typeref:enum:vlc_userdir
vlc_value_t	vlc_common.h	/^} vlc_value_t;$/;"	t	typeref:union:__anon93
vlc_xlib_init	vlc_xlib.h	/^static inline bool vlc_xlib_init (vlc_object_t *obj)$/;"	f
vlm_New	vlc_vlm.h	188;"	d
vlm_event_t	vlc_vlm.h	/^} vlm_event_t;$/;"	t	typeref:struct:__anon143
vlm_event_type_e	vlc_vlm.h	/^enum vlm_event_type_e$/;"	g
vlm_media_Clean	vlc_vlm.h	/^static inline void vlm_media_Clean( vlm_media_t *p_media )$/;"	f
vlm_media_Copy	vlc_vlm.h	/^vlm_media_Copy( vlm_media_t *restrict p_dst, const vlm_media_t *restrict p_src )$/;"	f
vlm_media_Delete	vlc_vlm.h	/^static inline void vlm_media_Delete( vlm_media_t *p_media )$/;"	f
vlm_media_Duplicate	vlc_vlm.h	/^static inline vlm_media_t *vlm_media_Duplicate( vlm_media_t *p_src )$/;"	f
vlm_media_Init	vlc_vlm.h	/^static inline void vlm_media_Init( vlm_media_t *p_media )$/;"	f
vlm_media_New	vlc_vlm.h	/^static inline vlm_media_t *vlm_media_New(void)$/;"	f
vlm_media_event	vlc/libvlc_events.h	/^        } vlm_media_event;$/;"	m	union:libvlc_event_t::__anon41	typeref:struct:libvlc_event_t::__anon41::__anon62
vlm_media_instance_Clean	vlc_vlm.h	/^static inline void vlm_media_instance_Clean( vlm_media_instance_t *p_instance )$/;"	f
vlm_media_instance_Delete	vlc_vlm.h	/^static inline void vlm_media_instance_Delete( vlm_media_instance_t *p_instance )$/;"	f
vlm_media_instance_Init	vlc_vlm.h	/^static inline void vlm_media_instance_Init( vlm_media_instance_t *p_instance )$/;"	f
vlm_media_instance_New	vlc_vlm.h	/^static inline vlm_media_instance_t *vlm_media_instance_New(void)$/;"	f
vlm_media_instance_t	vlc_vlm.h	/^} vlm_media_instance_t;$/;"	t	typeref:struct:__anon142
vlm_media_t	vlc_vlm.h	/^} vlm_media_t;$/;"	t	typeref:struct:__anon139
vlm_message_t	vlc_common.h	/^typedef struct vlm_message_t vlm_message_t;$/;"	t	typeref:struct:vlm_message_t
vlm_message_t	vlc_vlm.h	/^struct vlm_message_t$/;"	s
vlm_query_e	vlc_vlm.h	/^enum vlm_query_e$/;"	g
vlm_t	vlc_common.h	/^typedef struct vlm_t         vlm_t;$/;"	t	typeref:struct:vlm_t
vod	vlc_vlm.h	/^    } vod;              \/*< VOD specific information *\/$/;"	m	struct:__anon139	typeref:struct:__anon139::__anon141
vod_MediaControl	vlc_vod.h	/^static inline int vod_MediaControl( vod_t *p_vod, vod_media_t *p_media,$/;"	f
vod_media_t	vlc_common.h	/^typedef struct vod_media_t vod_media_t;$/;"	t	typeref:struct:vod_media_t
vod_query_e	vlc_vod.h	/^enum vod_query_e$/;"	g
vod_sys_t	vlc_common.h	/^typedef struct vod_sys_t vod_sys_t;$/;"	t	typeref:struct:vod_sys_t
vod_t	vlc_common.h	/^typedef struct vod_t     vod_t;$/;"	t	typeref:struct:vod_t
vod_t	vlc_vod.h	/^struct vod_t$/;"	s
vout	vlc_vout.h	/^    vout_thread_t        *vout;$/;"	m	struct:__anon83
vout_CloseAndRelease	vlc_vout.h	/^static inline void vout_CloseAndRelease( vout_thread_t *p_vout )$/;"	f
vout_Request	vlc_vout.h	107;"	d
vout_configuration_t	vlc_vout.h	/^} vout_configuration_t;$/;"	t	typeref:struct:__anon83
vout_display_DeleteWindow	vlc_vout_display.h	/^static inline void vout_display_DeleteWindow(vout_display_t *vd,$/;"	f
vout_display_Display	vlc_vout_wrapper.h	/^static inline void vout_display_Display(vout_display_t *vd,$/;"	f
vout_display_NewWindow	vlc_vout_display.h	/^static inline vout_window_t *vout_display_NewWindow(vout_display_t *vd, const vout_window_cfg_t *cfg)$/;"	f
vout_display_Pool	vlc_vout_wrapper.h	/^static inline picture_pool_t *vout_display_Pool(vout_display_t *vd, unsigned count)$/;"	f
vout_display_Prepare	vlc_vout_wrapper.h	/^static inline void vout_display_Prepare(vout_display_t *vd,$/;"	f
vout_display_SendEvent	vlc_vout_display.h	/^static inline void vout_display_SendEvent(vout_display_t *vd, int query, ...)$/;"	f
vout_display_SendEventClose	vlc_vout_display.h	/^static inline void vout_display_SendEventClose(vout_display_t *vd)$/;"	f
vout_display_SendEventDisplaySize	vlc_vout_display.h	/^static inline void vout_display_SendEventDisplaySize(vout_display_t *vd, int width, int height, bool is_fullscreen)$/;"	f
vout_display_SendEventFullscreen	vlc_vout_display.h	/^static inline void vout_display_SendEventFullscreen(vout_display_t *vd, bool is_fullscreen)$/;"	f
vout_display_SendEventKey	vlc_vout_display.h	/^static inline void vout_display_SendEventKey(vout_display_t *vd, int key)$/;"	f
vout_display_SendEventMouseDoubleClick	vlc_vout_display.h	/^static inline void vout_display_SendEventMouseDoubleClick(vout_display_t *vd)$/;"	f
vout_display_SendEventMouseMoved	vlc_vout_display.h	/^static inline void vout_display_SendEventMouseMoved(vout_display_t *vd, int x, int y)$/;"	f
vout_display_SendEventMousePressed	vlc_vout_display.h	/^static inline void vout_display_SendEventMousePressed(vout_display_t *vd, int button)$/;"	f
vout_display_SendEventMouseReleased	vlc_vout_display.h	/^static inline void vout_display_SendEventMouseReleased(vout_display_t *vd, int button)$/;"	f
vout_display_SendEventMouseState	vlc_vout_display.h	/^static inline void vout_display_SendEventMouseState(vout_display_t *vd, int x, int y, int button_mask)$/;"	f
vout_display_SendEventPicturesInvalid	vlc_vout_display.h	/^static inline void vout_display_SendEventPicturesInvalid(vout_display_t *vd)$/;"	f
vout_display_SendWindowState	vlc_vout_display.h	/^static inline void vout_display_SendWindowState(vout_display_t *vd, unsigned state)$/;"	f
vout_display_align_t	vlc_vout_display.h	/^} vout_display_align_t;$/;"	t	typeref:enum:__anon64
vout_display_cfg_t	vlc_vout_display.h	/^} vout_display_cfg_t;$/;"	t	typeref:struct:__anon66
vout_display_info_t	vlc_vout_display.h	/^} vout_display_info_t;$/;"	t	typeref:struct:__anon71
vout_display_owner_sys_t	vlc_vout_display.h	/^typedef struct vout_display_owner_sys_t vout_display_owner_sys_t;$/;"	t	typeref:struct:vout_display_owner_sys_t
vout_display_owner_t	vlc_vout_display.h	/^struct vout_display_owner_t {$/;"	s
vout_display_owner_t	vlc_vout_display.h	/^typedef struct vout_display_owner_t vout_display_owner_t;$/;"	t	typeref:struct:vout_display_owner_t
vout_display_place_t	vlc_vout_display.h	/^} vout_display_place_t;$/;"	t	typeref:struct:__anon74
vout_display_state_t	vlc_vout_wrapper.h	/^} vout_display_state_t;$/;"	t	typeref:struct:__anon81
vout_display_sys_t	vlc_vout_display.h	/^typedef struct vout_display_sys_t vout_display_sys_t;$/;"	t	typeref:struct:vout_display_sys_t
vout_display_t	vlc_vout_display.h	/^struct vout_display_t {$/;"	s
vout_display_t	vlc_vout_display.h	/^typedef struct vout_display_t vout_display_t;$/;"	t	typeref:struct:vout_display_t
vout_thread_sys_t	vlc_vout.h	/^typedef struct vout_thread_sys_t vout_thread_sys_t;$/;"	t	typeref:struct:vout_thread_sys_t
vout_thread_t	vlc_common.h	/^typedef struct vout_thread_t vout_thread_t;$/;"	t	typeref:struct:vout_thread_t
vout_thread_t	vlc_vout.h	/^struct vout_thread_t {$/;"	s
vout_window_SetFullScreen	vlc_vout_window.h	/^static inline int vout_window_SetFullScreen(vout_window_t *window, bool full)$/;"	f
vout_window_SetSize	vlc_vout_window.h	/^static inline int vout_window_SetSize(vout_window_t *window,$/;"	f
vout_window_SetState	vlc_vout_window.h	/^static inline int vout_window_SetState(vout_window_t *window, unsigned state)$/;"	f
vout_window_cfg_t	vlc_vout_window.h	/^} vout_window_cfg_t;$/;"	t	typeref:struct:__anon127
vout_window_sys_t	vlc_vout_window.h	/^typedef struct vout_window_sys_t vout_window_sys_t;$/;"	t	typeref:struct:vout_window_sys_t
vout_window_t	vlc_vout_window.h	/^struct vout_window_t {$/;"	s
vout_window_t	vlc_vout_window.h	/^typedef struct vout_window_t vout_window_t;$/;"	t	typeref:struct:vout_window_t
vsnprintf	vlc_common.h	80;"	d
w	vlc_fourcc.h	/^        } w;$/;"	m	struct:__anon96::__anon97	typeref:struct:__anon96::__anon97::__anon98
wBitsPerSample	vlc_codecs.h	/^    uint16_t   wBitsPerSample;$/;"	m	struct:_WAVEFORMATEX
wFormatTag	vlc_codecs.h	/^    uint16_t   wFormatTag;$/;"	m	struct:_WAVEFORMATEX
wReserved	vlc_codecs.h	/^        uint16_t wReserved;$/;"	m	union:_WAVEFORMATEXTENSIBLE::__anon8
wSamplesPerBlock	vlc_codecs.h	/^        uint16_t wSamplesPerBlock;$/;"	m	union:_WAVEFORMATEXTENSIBLE::__anon8
wValidBitsPerSample	vlc_codecs.h	/^        uint16_t wValidBitsPerSample;$/;"	m	union:_WAVEFORMATEXTENSIBLE::__anon8
wait	vlc_threads.h	/^    vlc_cond_t    wait;$/;"	m	struct:__anon23
wait	vlc_threads.h	/^    vlc_cond_t    wait;$/;"	m	struct:__anon29
wait_mutex	vlc_threads.h	/^    HMTX wait_mutex;$/;"	m	struct:__anon28
wave_format_tag_to_fourcc	vlc_codecs.h	/^wave_format_tag_to_fourcc[] =$/;"	v	typeref:struct:__anon10
wf_tag_to_fourcc	vlc_codecs.h	/^static inline void wf_tag_to_fourcc( uint16_t i_tag, vlc_fourcc_t *fcc,$/;"	f
widgets	vlc_extensions.h	/^    DECL_ARRAY(extension_widget_t*) widgets; \/\/\/< Widgets owned by the dialog$/;"	m	struct:extension_dialog_t
width	vlc_vout_display.h	/^        unsigned  width;$/;"	m	struct:__anon66::__anon67
width	vlc_vout_display.h	/^    unsigned width;$/;"	m	struct:__anon74
width	vlc_vout_window.h	/^    unsigned width;$/;"	m	struct:__anon127
window	vlc_video_splitter.h	/^    } window;$/;"	m	struct:__anon75	typeref:struct:__anon75::__anon76
window_del	vlc_vout_display.h	/^    void           (*window_del)(vout_display_t *, vout_window_t *);$/;"	m	struct:vout_display_owner_t
window_id	vlc_inhibit.h	/^    uint32_t           window_id;$/;"	m	struct:vlc_inhibit
window_new	vlc_vout_display.h	/^    vout_window_t *(*window_new)(vout_display_t *, const vout_window_cfg_t *);$/;"	m	struct:vout_display_owner_t
wm_state	vlc_vout_wrapper.h	/^    unsigned wm_state;$/;"	m	struct:__anon81
writer	vlc_threads.h	/^    DWORD         writer;$/;"	m	struct:__anon23
writer	vlc_threads.h	/^    int           writer;$/;"	m	struct:__anon29
writers	vlc_threads.h	/^    unsigned long writers;$/;"	m	struct:__anon23
writers	vlc_threads.h	/^    unsigned long writers;$/;"	m	struct:__anon29
x	vlc_common.h	/^    struct { int32_t x; int32_t y; } coords;$/;"	m	struct:__anon93::__anon94
x	vlc_vout_display.h	/^    int x;$/;"	m	struct:__anon74
x	vlc_vout_window.h	/^    int x;$/;"	m	struct:__anon127
x11	vlc_vout_window.h	/^        char     *x11; \/* X11 display (NULL = use default) *\/$/;"	m	union:vout_window_t::__anon129
xcalloc	vlc_common.h	/^static inline void *xcalloc (size_t n, size_t size)$/;"	f
xid	vlc_vout_window.h	/^        uint32_t xid;       \/* X11 windows ID *\/$/;"	m	union:vout_window_t::__anon128
xmalloc	vlc_common.h	/^static inline void *xmalloc (size_t len)$/;"	f
xml_CatalogAdd	vlc_xml.h	/^static inline void xml_CatalogAdd( xml_t *xml, const char *type,$/;"	f
xml_CatalogLoad	vlc_xml.h	/^static inline void xml_CatalogLoad( xml_t *xml, const char *catalog )$/;"	f
xml_Create	vlc_xml.h	50;"	d
xml_ReaderCreate	vlc_xml.h	81;"	d
xml_ReaderIsEmptyElement	vlc_xml.h	/^static inline int xml_ReaderIsEmptyElement( xml_reader_t *reader )$/;"	f
xml_ReaderNextAttr	vlc_xml.h	/^static inline const char *xml_ReaderNextAttr( xml_reader_t *reader,$/;"	f
xml_ReaderNextNode	vlc_xml.h	/^static inline int xml_ReaderNextNode( xml_reader_t *reader, const char **pval )$/;"	f
xml_ReaderUseDTD	vlc_xml.h	/^static inline int xml_ReaderUseDTD( xml_reader_t *reader )$/;"	f
xml_reader_sys_t	vlc_common.h	/^typedef struct xml_reader_sys_t xml_reader_sys_t;$/;"	t	typeref:struct:xml_reader_sys_t
xml_reader_t	vlc_common.h	/^typedef struct xml_reader_t xml_reader_t;$/;"	t	typeref:struct:xml_reader_t
xml_reader_t	vlc_xml.h	/^struct xml_reader_t$/;"	s
xml_sys_t	vlc_common.h	/^typedef struct xml_sys_t xml_sys_t;$/;"	t	typeref:struct:xml_sys_t
xml_t	vlc_common.h	/^typedef struct xml_t xml_t;$/;"	t	typeref:struct:xml_t
xml_t	vlc_xml.h	/^struct xml_t$/;"	s
xrealloc	vlc_common.h	/^static inline void *xrealloc (void *ptr, size_t len)$/;"	f
y	vlc_common.h	/^    struct { int32_t x; int32_t y; } coords;$/;"	m	struct:__anon93::__anon94
y	vlc_vout_display.h	/^    int y;$/;"	m	struct:__anon74
y	vlc_vout_window.h	/^    int y;$/;"	m	struct:__anon127
yes	vlc_dialog.h	/^    const char *yes;$/;"	m	struct:dialog_question_t
zoom	vlc_vout_display.h	/^    } zoom;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon70
~vlc_mutex_locker	vlc_threads.h	/^        ~vlc_mutex_locker (void)$/;"	f	class:vlc_mutex_locker
